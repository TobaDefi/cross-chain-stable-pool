{"id":"ca9e8f4e71cea68735b595801772c168","_format":"hh-sol-build-info-1","solcVersion":"0.8.26","solcLongVersion":"0.8.26+commit.8a97fa7a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer is IEIP712 {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allowance\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address user, address token, address spender)\n        external\n        view\n        returns (uint160 amount, uint48 expiration, uint48 nonce);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"},"@uniswap/permit2/src/interfaces/IEIP712.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IEIP712 {\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"contracts/_Router.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\nimport { SafeCast } from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\n// import { IPermit2 } from \"@uniswap/permit2/src/interfaces/IPermit2.sol\"; // @todo: delete\n\nimport { IWETH } from \"./IWETH.sol\";\nimport { IRouter } from \"./IRouter.sol\";\nimport { IVault } from \"./IVault.sol\";\nimport \"./VaultTypes.sol\";\n\nimport { RouterWethLib } from \"./RouterWethLib.sol\";\nimport { RouterCommon } from \"./RouterCommon.sol\";\n\n/**\n * @notice Entrypoint for swaps, liquidity operations, and corresponding queries.\n * @dev The external API functions unlock the Vault, which calls back into the corresponding hook functions.\n * These interact with the Vault, transfer tokens, settle accounting, and handle wrapping and unwrapping ETH.\n */\ncontract Router is IRouter, RouterCommon {\n    using Address for address payable;\n    using RouterWethLib for IWETH;\n    using SafeCast for *;\n\n    constructor(\n        IVault vault,\n        IWETH weth,\n        // IPermit2 permit2, // @todo: delete\n        string memory routerVersion\n    // ) RouterCommon(vault, weth, permit2, routerVersion) { // @todo: delete\n    ) RouterCommon(vault, weth, routerVersion) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /*******************************************************************************\n                                Pool Initialization\n    *******************************************************************************/\n\n    /// @inheritdoc IRouter\n    function initialize(\n        address pool,\n        IERC20[] memory tokens,\n        uint256[] memory exactAmountsIn,\n        uint256 minBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256 bptAmountOut) {\n        return\n            abi.decode(\n                _vault.unlock(\n                    abi.encodeCall(\n                        Router.initializeHook,\n                        InitializeHookParams({\n                            sender: msg.sender,\n                            pool: pool,\n                            tokens: tokens,\n                            exactAmountsIn: exactAmountsIn,\n                            minBptAmountOut: minBptAmountOut,\n                            wethIsEth: wethIsEth,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256)\n            );\n    }\n\n    /**\n     * @notice Hook for initialization.\n     * @dev Can only be called by the Vault.\n     * @param params Initialization parameters (see IRouter for struct definition)\n     * @return bptAmountOut BPT amount minted in exchange for the input tokens\n     */\n    function initializeHook(\n        InitializeHookParams calldata params\n    ) external nonReentrant onlyVault returns (uint256 bptAmountOut) {\n        bptAmountOut = _vault.initialize(\n            params.pool,\n            params.sender,\n            params.tokens,\n            params.exactAmountsIn,\n            params.minBptAmountOut,\n            params.userData\n        );\n\n        for (uint256 i = 0; i < params.tokens.length; ++i) {\n            IERC20 token = params.tokens[i];\n            uint256 amountIn = params.exactAmountsIn[i];\n\n            if (amountIn == 0) {\n                continue;\n            }\n\n            // There can be only one WETH token in the pool.\n            if (params.wethIsEth && address(token) == address(_weth)) {\n                _weth.wrapEthAndSettle(_vault, amountIn);\n            } else {\n                // Transfer tokens from the user to the Vault.\n                // Any value over MAX_UINT128 would revert above in `initialize`, so this SafeCast shouldn't be\n                // necessary. Done out of an abundance of caution.\n                // _permit2.transferFrom(params.sender, address(_vault), amountIn.toUint160(), address(token)); // @todo: delete\n                IERC20(token).transferFrom(params.sender, address(_vault), amountIn.toUint160());\n                _vault.settle(token, amountIn);\n            }\n        }\n\n        // Return ETH dust.\n        _returnEth(params.sender);\n    }\n\n    /***************************************************************************\n                                   Add Liquidity\n    ***************************************************************************/\n\n    /// @inheritdoc IRouter\n    function addLiquidityProportional(\n        address pool,\n        uint256[] memory maxAmountsIn,\n        uint256 exactBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256[] memory amountsIn) {\n        (amountsIn, , ) = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(\n                    Router.addLiquidityHook,\n                    AddLiquidityHookParams({\n                        sender: msg.sender,\n                        pool: pool,\n                        maxAmountsIn: maxAmountsIn,\n                        minBptAmountOut: exactBptAmountOut,\n                        kind: AddLiquidityKind.PROPORTIONAL,\n                        wethIsEth: wethIsEth,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256[], uint256, bytes)\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function addLiquidityUnbalanced(\n        address pool,\n        uint256[] memory exactAmountsIn,\n        uint256 minBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256 bptAmountOut) {\n        (, bptAmountOut, ) = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(\n                    Router.addLiquidityHook,\n                    AddLiquidityHookParams({\n                        sender: msg.sender,\n                        pool: pool,\n                        maxAmountsIn: exactAmountsIn,\n                        minBptAmountOut: minBptAmountOut,\n                        kind: AddLiquidityKind.UNBALANCED,\n                        wethIsEth: wethIsEth,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256[], uint256, bytes)\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function addLiquiditySingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        uint256 maxAmountIn,\n        uint256 exactBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256 amountIn) {\n        (uint256[] memory maxAmountsIn, uint256 tokenIndex) = _getSingleInputArrayAndTokenIndex(\n            pool,\n            tokenIn,\n            maxAmountIn\n        );\n\n        (uint256[] memory amountsIn, , ) = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(\n                    Router.addLiquidityHook,\n                    AddLiquidityHookParams({\n                        sender: msg.sender,\n                        pool: pool,\n                        maxAmountsIn: maxAmountsIn,\n                        minBptAmountOut: exactBptAmountOut,\n                        kind: AddLiquidityKind.SINGLE_TOKEN_EXACT_OUT,\n                        wethIsEth: wethIsEth,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256[], uint256, bytes)\n        );\n\n        return amountsIn[tokenIndex];\n    }\n\n    /// @inheritdoc IRouter\n    function donate(\n        address pool,\n        uint256[] memory amountsIn,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) {\n        _vault.unlock(\n            abi.encodeCall(\n                Router.addLiquidityHook,\n                AddLiquidityHookParams({\n                    sender: msg.sender,\n                    pool: pool,\n                    maxAmountsIn: amountsIn,\n                    minBptAmountOut: 0,\n                    kind: AddLiquidityKind.DONATION,\n                    wethIsEth: wethIsEth,\n                    userData: userData\n                })\n            )\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function addLiquidityCustom(\n        address pool,\n        uint256[] memory maxAmountsIn,\n        uint256 minBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    )\n        external\n        payable\n        saveSender(msg.sender)\n        returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData)\n    {\n        return\n            abi.decode(\n                _vault.unlock(\n                    abi.encodeCall(\n                        Router.addLiquidityHook,\n                        AddLiquidityHookParams({\n                            sender: msg.sender,\n                            pool: pool,\n                            maxAmountsIn: maxAmountsIn,\n                            minBptAmountOut: minBptAmountOut,\n                            kind: AddLiquidityKind.CUSTOM,\n                            wethIsEth: wethIsEth,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256[], uint256, bytes)\n            );\n    }\n\n    /**\n     * @notice Hook for adding liquidity.\n     * @dev Can only be called by the Vault.\n     * @param params Add liquidity parameters (see IRouter for struct definition)\n     * @return amountsIn Actual amounts in required for the join\n     * @return bptAmountOut BPT amount minted in exchange for the input tokens\n     * @return returnData Arbitrary data with encoded response from the pool\n     */\n    function addLiquidityHook(\n        AddLiquidityHookParams calldata params\n    )\n        external\n        nonReentrant\n        onlyVault\n        returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData)\n    {\n        (amountsIn, bptAmountOut, returnData) = _vault.addLiquidity(\n            AddLiquidityParams({\n                pool: params.pool,\n                to: params.sender,\n                maxAmountsIn: params.maxAmountsIn,\n                minBptAmountOut: params.minBptAmountOut,\n                kind: params.kind,\n                userData: params.userData\n            })\n        );\n\n        // maxAmountsIn length is checked against tokens length at the Vault.\n        IERC20[] memory tokens = _vault.getPoolTokens(params.pool);\n\n        for (uint256 i = 0; i < tokens.length; ++i) {\n            IERC20 token = tokens[i];\n            uint256 amountIn = amountsIn[i];\n\n            if (amountIn == 0) {\n                continue;\n            }\n\n            // There can be only one WETH token in the pool.\n            if (params.wethIsEth && address(token) == address(_weth)) {\n                _weth.wrapEthAndSettle(_vault, amountIn);\n            } else {\n                // Any value over MAX_UINT128 would revert above in `addLiquidity`, so this SafeCast shouldn't be\n                // necessary. Done out of an abundance of caution.\n                // _permit2.transferFrom(params.sender, address(_vault), amountIn.toUint160(), address(token)); // @todo: delete\n                IERC20(token).transferFrom(params.sender, address(_vault), amountIn.toUint160());\n                _vault.settle(token, amountIn);\n            }\n        }\n\n        // Send remaining ETH to the user.\n        _returnEth(params.sender);\n    }\n\n    /***************************************************************************\n                                 Remove Liquidity\n    ***************************************************************************/\n\n    /// @inheritdoc IRouter\n    function removeLiquidityProportional(\n        address pool,\n        uint256 exactBptAmountIn,\n        uint256[] memory minAmountsOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256[] memory amountsOut) {\n        (, amountsOut, ) = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(\n                    Router.removeLiquidityHook,\n                    RemoveLiquidityHookParams({\n                        sender: msg.sender,\n                        pool: pool,\n                        minAmountsOut: minAmountsOut,\n                        maxBptAmountIn: exactBptAmountIn,\n                        kind: RemoveLiquidityKind.PROPORTIONAL,\n                        wethIsEth: wethIsEth,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256, uint256[], bytes)\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function removeLiquiditySingleTokenExactIn(\n        address pool,\n        uint256 exactBptAmountIn,\n        IERC20 tokenOut,\n        uint256 minAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256 amountOut) {\n        (uint256[] memory minAmountsOut, uint256 tokenIndex) = _getSingleInputArrayAndTokenIndex(\n            pool,\n            tokenOut,\n            minAmountOut\n        );\n\n        (, uint256[] memory amountsOut, ) = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(\n                    Router.removeLiquidityHook,\n                    RemoveLiquidityHookParams({\n                        sender: msg.sender,\n                        pool: pool,\n                        minAmountsOut: minAmountsOut,\n                        maxBptAmountIn: exactBptAmountIn,\n                        kind: RemoveLiquidityKind.SINGLE_TOKEN_EXACT_IN,\n                        wethIsEth: wethIsEth,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256, uint256[], bytes)\n        );\n\n        return amountsOut[tokenIndex];\n    }\n\n    /// @inheritdoc IRouter\n    function removeLiquiditySingleTokenExactOut(\n        address pool,\n        uint256 maxBptAmountIn,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable saveSender(msg.sender) returns (uint256 bptAmountIn) {\n        (uint256[] memory minAmountsOut, ) = _getSingleInputArrayAndTokenIndex(pool, tokenOut, exactAmountOut);\n\n        (bptAmountIn, , ) = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(\n                    Router.removeLiquidityHook,\n                    RemoveLiquidityHookParams({\n                        sender: msg.sender,\n                        pool: pool,\n                        minAmountsOut: minAmountsOut,\n                        maxBptAmountIn: maxBptAmountIn,\n                        kind: RemoveLiquidityKind.SINGLE_TOKEN_EXACT_OUT,\n                        wethIsEth: wethIsEth,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256, uint256[], bytes)\n        );\n\n        return bptAmountIn;\n    }\n\n    /// @inheritdoc IRouter\n    function removeLiquidityCustom(\n        address pool,\n        uint256 maxBptAmountIn,\n        uint256[] memory minAmountsOut,\n        bool wethIsEth,\n        bytes memory userData\n    )\n        external\n        payable\n        saveSender(msg.sender)\n        returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData)\n    {\n        return\n            abi.decode(\n                _vault.unlock(\n                    abi.encodeCall(\n                        Router.removeLiquidityHook,\n                        RemoveLiquidityHookParams({\n                            sender: msg.sender,\n                            pool: pool,\n                            minAmountsOut: minAmountsOut,\n                            maxBptAmountIn: maxBptAmountIn,\n                            kind: RemoveLiquidityKind.CUSTOM,\n                            wethIsEth: wethIsEth,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256, uint256[], bytes)\n            );\n    }\n\n    /// @inheritdoc IRouter\n    function removeLiquidityRecovery(\n        address pool,\n        uint256 exactBptAmountIn,\n        uint256[] memory minAmountsOut\n    ) external payable returns (uint256[] memory amountsOut) {\n        amountsOut = abi.decode(\n            _vault.unlock(\n                abi.encodeCall(Router.removeLiquidityRecoveryHook, (pool, msg.sender, exactBptAmountIn, minAmountsOut))\n            ),\n            (uint256[])\n        );\n    }\n\n    /**\n     * @notice Hook for removing liquidity.\n     * @dev Can only be called by the Vault.\n     * @param params Remove liquidity parameters (see IRouter for struct definition)\n     * @return bptAmountIn BPT amount burned for the output tokens\n     * @return amountsOut Actual token amounts transferred in exchange for the BPT\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function removeLiquidityHook(\n        RemoveLiquidityHookParams calldata params\n    )\n        external\n        nonReentrant\n        onlyVault\n        returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData)\n    {\n        (bptAmountIn, amountsOut, returnData) = _vault.removeLiquidity(\n            RemoveLiquidityParams({\n                pool: params.pool,\n                from: params.sender,\n                maxBptAmountIn: params.maxBptAmountIn,\n                minAmountsOut: params.minAmountsOut,\n                kind: params.kind,\n                userData: params.userData\n            })\n        );\n\n        // minAmountsOut length is checked against tokens length at the Vault.\n        IERC20[] memory tokens = _vault.getPoolTokens(params.pool);\n\n        for (uint256 i = 0; i < tokens.length; ++i) {\n            uint256 amountOut = amountsOut[i];\n            if (amountOut == 0) {\n                continue;\n            }\n\n            IERC20 token = tokens[i];\n\n            // There can be only one WETH token in the pool.\n            if (params.wethIsEth && address(token) == address(_weth)) {\n                _weth.unwrapWethAndTransferToSender(_vault, params.sender, amountOut);\n            } else {\n                // Transfer the token to the sender (amountOut).\n                _vault.sendTo(token, params.sender, amountOut);\n            }\n        }\n\n        _returnEth(params.sender);\n    }\n\n    /**\n     * @notice Hook for removing liquidity in Recovery Mode.\n     * @dev Can only be called by the Vault, when the pool is in Recovery Mode.\n     * @param pool Address of the liquidity pool\n     * @param sender Account originating the remove liquidity operation\n     * @param exactBptAmountIn BPT amount burned for the output tokens\n     * @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n     * @return amountsOut Actual token amounts transferred in exchange for the BPT\n     */\n    function removeLiquidityRecoveryHook(\n        address pool,\n        address sender,\n        uint256 exactBptAmountIn,\n        uint256[] memory minAmountsOut\n    ) external nonReentrant onlyVault returns (uint256[] memory amountsOut) {\n        amountsOut = _vault.removeLiquidityRecovery(pool, sender, exactBptAmountIn, minAmountsOut);\n\n        IERC20[] memory tokens = _vault.getPoolTokens(pool);\n\n        for (uint256 i = 0; i < tokens.length; ++i) {\n            uint256 amountOut = amountsOut[i];\n            if (amountOut > 0) {\n                // Transfer the token to the sender (amountOut).\n                _vault.sendTo(tokens[i], sender, amountOut);\n            }\n        }\n\n        _returnEth(sender);\n    }\n\n    /***************************************************************************\n                                       Swaps\n    ***************************************************************************/\n\n    /// @inheritdoc IRouter\n    function swapSingleTokenExactIn(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountIn,\n        uint256 minAmountOut,\n        uint256 deadline,\n        bool wethIsEth,\n        bytes calldata userData\n    ) external payable saveSender(msg.sender) returns (uint256) {\n        return\n            abi.decode(\n                _vault.unlock(\n                    abi.encodeCall(\n                        Router.swapSingleTokenHook,\n                        SwapSingleTokenHookParams({\n                            sender: msg.sender,\n                            kind: SwapKind.EXACT_IN,\n                            pool: pool,\n                            tokenIn: tokenIn,\n                            tokenOut: tokenOut,\n                            amountGiven: exactAmountIn,\n                            limit: minAmountOut,\n                            deadline: deadline,\n                            wethIsEth: wethIsEth,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256)\n            );\n    }\n\n    /// @inheritdoc IRouter\n    function swapSingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        uint256 maxAmountIn,\n        uint256 deadline,\n        bool wethIsEth,\n        bytes calldata userData\n    ) external payable saveSender(msg.sender) returns (uint256) {\n        return\n            abi.decode(\n                _vault.unlock(\n                    abi.encodeCall(\n                        Router.swapSingleTokenHook,\n                        SwapSingleTokenHookParams({\n                            sender: msg.sender,\n                            kind: SwapKind.EXACT_OUT,\n                            pool: pool,\n                            tokenIn: tokenIn,\n                            tokenOut: tokenOut,\n                            amountGiven: exactAmountOut,\n                            limit: maxAmountIn,\n                            deadline: deadline,\n                            wethIsEth: wethIsEth,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256)\n            );\n    }\n\n    /**\n     * @notice Hook for swaps.\n     * @dev Can only be called by the Vault. Also handles native ETH.\n     * @param params Swap parameters (see IRouter for struct definition)\n     * @return amountCalculated Token amount calculated by the pool math (e.g., amountOut for an exact in swap)\n     */\n    function swapSingleTokenHook(\n        SwapSingleTokenHookParams calldata params\n    ) external nonReentrant onlyVault returns (uint256) {\n        (uint256 amountCalculated, uint256 amountIn, uint256 amountOut) = _swapHook(params);\n\n        IERC20 tokenIn = params.tokenIn;\n\n        _takeTokenIn(params.sender, tokenIn, amountIn, params.wethIsEth);\n        _sendTokenOut(params.sender, params.tokenOut, amountOut, params.wethIsEth);\n\n        if (tokenIn == _weth) {\n            // Return the rest of ETH to sender\n            _returnEth(params.sender);\n        }\n\n        return amountCalculated;\n    }\n\n    function _swapHook(\n        SwapSingleTokenHookParams calldata params\n    ) internal returns (uint256 amountCalculated, uint256 amountIn, uint256 amountOut) {\n        // The deadline is timestamp-based: it should not be relied upon for sub-minute accuracy.\n        // solhint-disable-next-line not-rely-on-time\n        if (block.timestamp > params.deadline) {\n            revert SwapDeadline();\n        }\n\n        (amountCalculated, amountIn, amountOut) = _vault.swap(\n            VaultSwapParams({\n                kind: params.kind,\n                pool: params.pool,\n                tokenIn: params.tokenIn,\n                tokenOut: params.tokenOut,\n                amountGivenRaw: params.amountGiven,\n                limitRaw: params.limit,\n                userData: params.userData\n            })\n        );\n    }\n\n    /*******************************************************************************\n                                      Queries\n    *******************************************************************************/\n\n    /// @inheritdoc IRouter\n    function queryAddLiquidityProportional(\n        address pool,\n        uint256 exactBptAmountOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256[] memory amountsIn) {\n        (amountsIn, , ) = abi.decode(\n            _vault.quote(\n                abi.encodeCall(\n                    Router.queryAddLiquidityHook,\n                    AddLiquidityHookParams({\n                        // We use the Router as a sender to simplify basic query functions,\n                        // but it is possible to add liquidity to any recipient.\n                        sender: address(this),\n                        pool: pool,\n                        maxAmountsIn: _maxTokenLimits(pool),\n                        minBptAmountOut: exactBptAmountOut,\n                        kind: AddLiquidityKind.PROPORTIONAL,\n                        wethIsEth: false,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256[], uint256, bytes)\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function queryAddLiquidityUnbalanced(\n        address pool,\n        uint256[] memory exactAmountsIn,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 bptAmountOut) {\n        (, bptAmountOut, ) = abi.decode(\n            _vault.quote(\n                abi.encodeCall(\n                    Router.queryAddLiquidityHook,\n                    AddLiquidityHookParams({\n                        // We use the Router as a sender to simplify basic query functions,\n                        // but it is possible to add liquidity to any recipient.\n                        sender: address(this),\n                        pool: pool,\n                        maxAmountsIn: exactAmountsIn,\n                        minBptAmountOut: 0,\n                        kind: AddLiquidityKind.UNBALANCED,\n                        wethIsEth: false,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256[], uint256, bytes)\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function queryAddLiquiditySingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        uint256 exactBptAmountOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 amountIn) {\n        (uint256[] memory maxAmountsIn, uint256 tokenIndex) = _getSingleInputArrayAndTokenIndex(\n            pool,\n            tokenIn,\n            _MAX_AMOUNT\n        );\n\n        (uint256[] memory amountsIn, , ) = abi.decode(\n            _vault.quote(\n                abi.encodeCall(\n                    Router.queryAddLiquidityHook,\n                    AddLiquidityHookParams({\n                        // We use the Router as a sender to simplify basic query functions,\n                        // but it is possible to add liquidity to any recipient.\n                        sender: address(this),\n                        pool: pool,\n                        maxAmountsIn: maxAmountsIn,\n                        minBptAmountOut: exactBptAmountOut,\n                        kind: AddLiquidityKind.SINGLE_TOKEN_EXACT_OUT,\n                        wethIsEth: false,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256[], uint256, bytes)\n        );\n\n        return amountsIn[tokenIndex];\n    }\n\n    /// @inheritdoc IRouter\n    function queryAddLiquidityCustom(\n        address pool,\n        uint256[] memory maxAmountsIn,\n        uint256 minBptAmountOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData) {\n        return\n            abi.decode(\n                _vault.quote(\n                    abi.encodeCall(\n                        Router.queryAddLiquidityHook,\n                        AddLiquidityHookParams({\n                            // We use the Router as a sender to simplify basic query functions,\n                            // but it is possible to add liquidity to any recipient.\n                            sender: address(this),\n                            pool: pool,\n                            maxAmountsIn: maxAmountsIn,\n                            minBptAmountOut: minBptAmountOut,\n                            kind: AddLiquidityKind.CUSTOM,\n                            wethIsEth: false,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256[], uint256, bytes)\n            );\n    }\n\n    /**\n     * @notice Hook for add liquidity queries.\n     * @dev Can only be called by the Vault.\n     * @param params Add liquidity parameters (see IRouter for struct definition)\n     * @return amountsIn Actual token amounts in required as inputs\n     * @return bptAmountOut Expected pool tokens to be minted\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function queryAddLiquidityHook(\n        AddLiquidityHookParams calldata params\n    ) external onlyVault returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData) {\n        (amountsIn, bptAmountOut, returnData) = _vault.addLiquidity(\n            AddLiquidityParams({\n                pool: params.pool,\n                to: params.sender,\n                maxAmountsIn: params.maxAmountsIn,\n                minBptAmountOut: params.minBptAmountOut,\n                kind: params.kind,\n                userData: params.userData\n            })\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function queryRemoveLiquidityProportional(\n        address pool,\n        uint256 exactBptAmountIn,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256[] memory amountsOut) {\n        uint256[] memory minAmountsOut = new uint256[](_vault.getPoolTokens(pool).length);\n        (, amountsOut, ) = abi.decode(\n            _vault.quote(\n                abi.encodeCall(\n                    Router.queryRemoveLiquidityHook,\n                    RemoveLiquidityHookParams({\n                        // We use the Router as a sender to simplify basic query functions,\n                        // but it is possible to remove liquidity from any sender.\n                        sender: address(this),\n                        pool: pool,\n                        minAmountsOut: minAmountsOut,\n                        maxBptAmountIn: exactBptAmountIn,\n                        kind: RemoveLiquidityKind.PROPORTIONAL,\n                        wethIsEth: false,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256, uint256[], bytes)\n        );\n    }\n\n    /// @inheritdoc IRouter\n    function queryRemoveLiquiditySingleTokenExactIn(\n        address pool,\n        uint256 exactBptAmountIn,\n        IERC20 tokenOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 amountOut) {\n        // We cannot use 0 as min amount out, as this value is used to figure out the token index.\n        (uint256[] memory minAmountsOut, uint256 tokenIndex) = _getSingleInputArrayAndTokenIndex(pool, tokenOut, 1);\n\n        (, uint256[] memory amountsOut, ) = abi.decode(\n            _vault.quote(\n                abi.encodeCall(\n                    Router.queryRemoveLiquidityHook,\n                    RemoveLiquidityHookParams({\n                        // We use the Router as a sender to simplify basic query functions,\n                        // but it is possible to remove liquidity from any sender.\n                        sender: address(this),\n                        pool: pool,\n                        minAmountsOut: minAmountsOut,\n                        maxBptAmountIn: exactBptAmountIn,\n                        kind: RemoveLiquidityKind.SINGLE_TOKEN_EXACT_IN,\n                        wethIsEth: false,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256, uint256[], bytes)\n        );\n\n        return amountsOut[tokenIndex];\n    }\n\n    /// @inheritdoc IRouter\n    function queryRemoveLiquiditySingleTokenExactOut(\n        address pool,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 bptAmountIn) {\n        (uint256[] memory minAmountsOut, ) = _getSingleInputArrayAndTokenIndex(pool, tokenOut, exactAmountOut);\n\n        (bptAmountIn, , ) = abi.decode(\n            _vault.quote(\n                abi.encodeCall(\n                    Router.queryRemoveLiquidityHook,\n                    RemoveLiquidityHookParams({\n                        // We use the Router as a sender to simplify basic query functions,\n                        // but it is possible to remove liquidity from any sender.\n                        sender: address(this),\n                        pool: pool,\n                        minAmountsOut: minAmountsOut,\n                        maxBptAmountIn: _MAX_AMOUNT,\n                        kind: RemoveLiquidityKind.SINGLE_TOKEN_EXACT_OUT,\n                        wethIsEth: false,\n                        userData: userData\n                    })\n                )\n            ),\n            (uint256, uint256[], bytes)\n        );\n\n        return bptAmountIn;\n    }\n\n    /// @inheritdoc IRouter\n    function queryRemoveLiquidityCustom(\n        address pool,\n        uint256 maxBptAmountIn,\n        uint256[] memory minAmountsOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData) {\n        return\n            abi.decode(\n                _vault.quote(\n                    abi.encodeCall(\n                        Router.queryRemoveLiquidityHook,\n                        RemoveLiquidityHookParams({\n                            // We use the Router as a sender to simplify basic query functions,\n                            // but it is possible to remove liquidity from any sender.\n                            sender: address(this),\n                            pool: pool,\n                            minAmountsOut: minAmountsOut,\n                            maxBptAmountIn: maxBptAmountIn,\n                            kind: RemoveLiquidityKind.CUSTOM,\n                            wethIsEth: false,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256, uint256[], bytes)\n            );\n    }\n\n    /// @inheritdoc IRouter\n    function queryRemoveLiquidityRecovery(\n        address pool,\n        uint256 exactBptAmountIn\n    ) external returns (uint256[] memory amountsOut) {\n        return\n            abi.decode(\n                _vault.quote(\n                    abi.encodeCall(Router.queryRemoveLiquidityRecoveryHook, (pool, address(this), exactBptAmountIn))\n                ),\n                (uint256[])\n            );\n    }\n\n    /**\n     * @notice Hook for remove liquidity queries.\n     * @dev Can only be called by the Vault.\n     * @param params Remove liquidity parameters (see IRouter for struct definition)\n     * @return bptAmountIn Pool token amount to be burned for the output tokens\n     * @return amountsOut Expected token amounts to be transferred to the sender\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function queryRemoveLiquidityHook(\n        RemoveLiquidityHookParams calldata params\n    ) external onlyVault returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData) {\n        return\n            _vault.removeLiquidity(\n                RemoveLiquidityParams({\n                    pool: params.pool,\n                    from: params.sender,\n                    maxBptAmountIn: params.maxBptAmountIn,\n                    minAmountsOut: params.minAmountsOut,\n                    kind: params.kind,\n                    userData: params.userData\n                })\n            );\n    }\n\n    /**\n     * @notice Hook for remove liquidity queries.\n     * @dev Can only be called by the Vault.\n     * @param pool The liquidity pool\n     * @param sender Account originating the remove liquidity operation\n     * @param exactBptAmountIn Pool token amount to be burned for the output tokens\n     * @return amountsOut Expected token amounts to be transferred to the sender\n     */\n    function queryRemoveLiquidityRecoveryHook(\n        address pool,\n        address sender,\n        uint256 exactBptAmountIn\n    ) external onlyVault returns (uint256[] memory amountsOut) {\n        uint256[] memory minAmountsOut = new uint256[](_vault.getPoolTokens(pool).length);\n        return _vault.removeLiquidityRecovery(pool, sender, exactBptAmountIn, minAmountsOut);\n    }\n\n    /// @inheritdoc IRouter\n    function querySwapSingleTokenExactIn(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountIn,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 amountCalculated) {\n        return\n            abi.decode(\n                _vault.quote(\n                    abi.encodeCall(\n                        Router.querySwapHook,\n                        SwapSingleTokenHookParams({\n                            sender: msg.sender,\n                            kind: SwapKind.EXACT_IN,\n                            pool: pool,\n                            tokenIn: tokenIn,\n                            tokenOut: tokenOut,\n                            amountGiven: exactAmountIn,\n                            limit: 0,\n                            deadline: _MAX_AMOUNT,\n                            wethIsEth: false,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256)\n            );\n    }\n\n    /// @inheritdoc IRouter\n    function querySwapSingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        address sender,\n        bytes memory userData\n    ) external saveSender(sender) returns (uint256 amountCalculated) {\n        return\n            abi.decode(\n                _vault.quote(\n                    abi.encodeCall(\n                        Router.querySwapHook,\n                        SwapSingleTokenHookParams({\n                            sender: msg.sender,\n                            kind: SwapKind.EXACT_OUT,\n                            pool: pool,\n                            tokenIn: tokenIn,\n                            tokenOut: tokenOut,\n                            amountGiven: exactAmountOut,\n                            limit: _MAX_AMOUNT,\n                            deadline: type(uint256).max,\n                            wethIsEth: false,\n                            userData: userData\n                        })\n                    )\n                ),\n                (uint256)\n            );\n    }\n\n    /**\n     * @notice Hook for swap queries.\n     * @dev Can only be called by the Vault. Also handles native ETH.\n     * @param params Swap parameters (see IRouter for struct definition)\n     * @return amountCalculated Token amount calculated by the pool math (e.g., amountOut for an exact in swap)\n     */\n    function querySwapHook(\n        SwapSingleTokenHookParams calldata params\n    ) external nonReentrant onlyVault returns (uint256) {\n        (uint256 amountCalculated, , ) = _swapHook(params);\n\n        return amountCalculated;\n    }\n}\n"},"contracts/CastingHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice Library of helper functions related to typecasting arrays.\nlibrary CastingHelpers {\n    /// @dev Returns a native array of addresses as an IERC20[] array.\n    function asIERC20(address[] memory addresses) internal pure returns (IERC20[] memory tokens) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly (\"memory-safe\") {\n            tokens := addresses\n        }\n    }\n\n    /// @dev Returns an IERC20[] array as an address[] array.\n    function asAddress(IERC20[] memory tokens) internal pure returns (address[] memory addresses) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly (\"memory-safe\") {\n            addresses := tokens\n        }\n    }\n}\n"},"contracts/IAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n/// @notice Simple interface for permissioned calling of external functions.\ninterface IAuthentication {\n    /// @notice The sender does not have permission to call a function.\n    error SenderNotAllowed();\n\n    /**\n     * @notice Returns the action identifier associated with the external function described by `selector`.\n     * @param selector The 4-byte selector of the permissioned function\n     * @return actionId The computed actionId\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32 actionId);\n}\n"},"contracts/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n/// @notice Interface to the Vault's permission system.\ninterface IAuthorizer {\n    /**\n     * @notice Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     * @param actionId Identifier for the action to be performed\n     * @param account Account trying to perform the action\n     * @param where Target contract for the action\n     * @return success True if the action is permitted\n     */\n    function canPerform(bytes32 actionId, address account, address where) external view returns (bool success);\n}\n"},"contracts/IHooks.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n// Explicitly import VaultTypes structs because we expect this interface to be heavily used by external developers.\n// Internally, when this list gets too long, we usually just do a simple import to keep things tidy.\nimport {\n    TokenConfig,\n    LiquidityManagement,\n    PoolSwapParams,\n    AfterSwapParams,\n    HookFlags,\n    AddLiquidityKind,\n    RemoveLiquidityKind,\n    SwapKind\n} from \"./VaultTypes.sol\";\n\n/**\n * @notice Interface for pool hooks.\n * @dev Hooks are functions invoked by the Vault at specific points in the flow of each operation. This guarantees that\n * they are called in the correct order, and with the correct arguments. To maintain this security, these functions\n * should only be called by the Vault. The recommended way to do this is to derive the hook contract from `BaseHooks`,\n * then use the `onlyVault` modifier from `VaultGuard`. (See the examples in /pool-hooks.)\n */\ninterface IHooks {\n    /***************************************************************************\n                                   Register\n    ***************************************************************************/\n\n    /**\n     * @notice Hook executed when a pool is registered with a non-zero hooks contract.\n     * @dev Returns true if registration was successful, and false to revert the pool registration.\n     * Make sure this function is properly implemented (e.g. check the factory, and check that the\n     * given pool is from the factory). The Vault address will be msg.sender.\n     *\n     * @param factory Address of the pool factory (contract deploying the pool)\n     * @param pool Address of the pool\n     * @param tokenConfig An array of descriptors for the tokens the pool will manage\n     * @param liquidityManagement Liquidity management flags indicating which functions are enabled\n     * @return success True if the hook allowed the registration, false otherwise\n     */\n    function onRegister(\n        address factory,\n        address pool,\n        TokenConfig[] memory tokenConfig,\n        LiquidityManagement calldata liquidityManagement\n    ) external returns (bool success);\n\n    /**\n     * @notice Return the set of hooks implemented by the contract.\n     * @dev The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined\n     * (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero).\n     * `onRegister` is the only \"mandatory\" hook.\n     *\n     * @return hookFlags Flags indicating which hooks the contract supports\n     */\n    function getHookFlags() external view returns (HookFlags memory hookFlags);\n\n    /***************************************************************************\n                                   Initialize\n    ***************************************************************************/\n\n    /**\n     * @notice Hook executed before pool initialization.\n     * @dev Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use\n     * the `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param exactAmountsIn Exact amounts of input tokens\n     * @param userData Optional, arbitrary data sent with the encoded request\n     * @return success True if the pool wishes to proceed with initialization\n     */\n    function onBeforeInitialize(uint256[] memory exactAmountsIn, bytes memory userData) external returns (bool success);\n\n    /**\n     * @notice Hook to be executed after pool initialization.\n     * @dev Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use\n     * the `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param exactAmountsIn Exact amounts of input tokens\n     * @param bptAmountOut Amount of pool tokens minted during initialization\n     * @param userData Optional, arbitrary data sent with the encoded request\n     * @return success True if the pool accepts the initialization results\n     */\n    function onAfterInitialize(\n        uint256[] memory exactAmountsIn,\n        uint256 bptAmountOut,\n        bytes memory userData\n    ) external returns (bool success);\n\n    /***************************************************************************\n                                   Add Liquidity\n    ***************************************************************************/\n\n    /**\n     * @notice Hook to be executed before adding liquidity.\n     * @dev Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use\n     * the `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param router The address (usually a router contract) that initiated an add liquidity operation on the Vault\n     * @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n     * @param kind The add liquidity operation type (e.g., proportional, custom)\n     * @param maxAmountsInScaled18 Maximum amounts of input tokens\n     * @param minBptAmountOut Minimum amount of output pool tokens\n     * @param balancesScaled18 Current pool balances, sorted in token registration order\n     * @param userData Optional, arbitrary data sent with the encoded request\n     * @return success True if the pool wishes to proceed with settlement\n     */\n    function onBeforeAddLiquidity(\n        address router,\n        address pool,\n        AddLiquidityKind kind,\n        uint256[] memory maxAmountsInScaled18,\n        uint256 minBptAmountOut,\n        uint256[] memory balancesScaled18,\n        bytes memory userData\n    ) external returns (bool success);\n\n    /**\n     * @notice Hook to be executed after adding liquidity.\n     * @dev Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore\n     * `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the\n     * `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param router The address (usually a router contract) that initiated an add liquidity operation on the Vault\n     * @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n     * @param kind The add liquidity operation type (e.g., proportional, custom)\n     * @param amountsInScaled18 Actual amounts of tokens added, sorted in token registration order\n     * @param amountsInRaw Actual amounts of tokens added, sorted in token registration order\n     * @param bptAmountOut Amount of pool tokens minted\n     * @param balancesScaled18 Current pool balances, sorted in token registration order\n     * @param userData Additional (optional) data provided by the user\n     * @return success True if the pool wishes to proceed with settlement\n     * @return hookAdjustedAmountsInRaw New amountsInRaw, potentially modified by the hook\n     */\n    function onAfterAddLiquidity(\n        address router,\n        address pool,\n        AddLiquidityKind kind,\n        uint256[] memory amountsInScaled18,\n        uint256[] memory amountsInRaw,\n        uint256 bptAmountOut,\n        uint256[] memory balancesScaled18,\n        bytes memory userData\n    ) external returns (bool success, uint256[] memory hookAdjustedAmountsInRaw);\n\n    /***************************************************************************\n                                 Remove Liquidity\n    ***************************************************************************/\n\n    /**\n     * @notice Hook to be executed before removing liquidity.\n     * @dev Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use\n     * the `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param router The address (usually a router contract) that initiated a remove liquidity operation on the Vault\n     * @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n     * @param kind The type of remove liquidity operation (e.g., proportional, custom)\n     * @param maxBptAmountIn Maximum amount of input pool tokens\n     * @param minAmountsOutScaled18 Minimum output amounts, sorted in token registration order\n     * @param balancesScaled18 Current pool balances, sorted in token registration order\n     * @param userData Optional, arbitrary data sent with the encoded request\n     * @return success True if the pool wishes to proceed with settlement\n     */\n    function onBeforeRemoveLiquidity(\n        address router,\n        address pool,\n        RemoveLiquidityKind kind,\n        uint256 maxBptAmountIn,\n        uint256[] memory minAmountsOutScaled18,\n        uint256[] memory balancesScaled18,\n        bytes memory userData\n    ) external returns (bool success);\n\n    /**\n     * @notice Hook to be executed after removing liquidity.\n     * @dev Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore\n     * `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the\n     * `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param router The address (usually a router contract) that initiated a remove liquidity operation on the Vault\n     * @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n     * @param kind The type of remove liquidity operation (e.g., proportional, custom)\n     * @param bptAmountIn Amount of pool tokens to burn\n     * @param amountsOutScaled18 Scaled amount of tokens to receive, sorted in token registration order\n     * @param amountsOutRaw Actual amount of tokens to receive, sorted in token registration order\n     * @param balancesScaled18 Current pool balances, sorted in token registration order\n     * @param userData Additional (optional) data provided by the user\n     * @return success True if the pool wishes to proceed with settlement\n     * @return hookAdjustedAmountsOutRaw New amountsOutRaw, potentially modified by the hook\n     */\n    function onAfterRemoveLiquidity(\n        address router,\n        address pool,\n        RemoveLiquidityKind kind,\n        uint256 bptAmountIn,\n        uint256[] memory amountsOutScaled18,\n        uint256[] memory amountsOutRaw,\n        uint256[] memory balancesScaled18,\n        bytes memory userData\n    ) external returns (bool success, uint256[] memory hookAdjustedAmountsOutRaw);\n\n    /***************************************************************************\n                                    Swap\n    ***************************************************************************/\n\n    /**\n     * @notice Called before a swap to give the Pool an opportunity to perform actions.\n     * @dev Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the\n     * `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param params Swap parameters (see PoolSwapParams for struct definition)\n     * @param pool Pool address, used to get pool information from the Vault (poolData, token config, etc.)\n     * @return success True if the pool wishes to proceed with settlement\n     */\n    function onBeforeSwap(PoolSwapParams calldata params, address pool) external returns (bool success);\n\n    /**\n     * @notice Called after a swap to perform further actions once the balances have been updated by the swap.\n     * @dev Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore\n     * `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should\n     * use the `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param params Swap parameters (see above for struct definition)\n     * @return success True if the pool wishes to proceed with settlement\n     * @return hookAdjustedAmountCalculatedRaw New amount calculated, potentially modified by the hook\n     */\n    function onAfterSwap(\n        AfterSwapParams calldata params\n    ) external returns (bool success, uint256 hookAdjustedAmountCalculatedRaw);\n\n    /**\n     * @notice Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\n     * @dev Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use\n     * the `onlyVault` modifier to guarantee this is only called by the Vault.\n     *\n     * @param params Swap parameters (see PoolSwapParams for struct definition)\n     * @param pool Pool address, used to get pool information from the Vault (poolData, token config, etc.)\n     * @param staticSwapFeePercentage 18-decimal FP value of the static swap fee percentage, for reference\n     * @return success True if the pool wishes to proceed with settlement\n     * @return dynamicSwapFeePercentage Value of the swap fee percentage, as an 18-decimal FP value\n     */\n    function onComputeDynamicSwapFeePercentage(\n        PoolSwapParams calldata params,\n        address pool,\n        uint256 staticSwapFeePercentage\n    ) external view returns (bool success, uint256 dynamicSwapFeePercentage);\n}\n"},"contracts/InputHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { CastingHelpers } from \"./CastingHelpers.sol\";\n\nlibrary InputHelpers {\n    /// @notice Arrays passed to a function and intended to be parallel have different lengths.\n    error InputLengthMismatch();\n\n    /**\n     * @notice More than one non-zero value was given for a single token operation.\n     * @dev Input arrays for single token add/remove liquidity operations are expected to have only one non-zero value,\n     * corresponding to the token being added or removed. This error results if there are multiple non-zero entries.\n     */\n    error MultipleNonZeroInputs();\n\n    /**\n     * @notice No valid input was given for a single token operation.\n     * @dev Input arrays for single token add/remove liquidity operations are expected to have one non-zero value,\n     * corresponding to the token being added or removed. This error results if all entries are zero.\n     */\n    error AllZeroInputs();\n\n    /**\n     * @notice The tokens supplied to an array argument were not sorted in numerical order.\n     * @dev Tokens are not sorted by address on registration. This is an optimization so that off-chain processes can\n     * predict the token order without having to query the Vault. (It is also legacy v2 behavior.)\n     */\n    error TokensNotSorted();\n\n    function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\n        if (a != b) {\n            revert InputLengthMismatch();\n        }\n    }\n\n    function ensureInputLengthMatch(uint256 a, uint256 b, uint256 c) internal pure {\n        if (a != b || b != c) {\n            revert InputLengthMismatch();\n        }\n    }\n\n    // Find the single non-zero input; revert if there is not exactly one such value.\n    function getSingleInputIndex(uint256[] memory maxAmountsIn) internal pure returns (uint256 inputIndex) {\n        uint256 length = maxAmountsIn.length;\n        inputIndex = length;\n\n        for (uint256 i = 0; i < length; ++i) {\n            if (maxAmountsIn[i] != 0) {\n                if (inputIndex != length) {\n                    revert MultipleNonZeroInputs();\n                }\n                inputIndex = i;\n            }\n        }\n\n        if (inputIndex >= length) {\n            revert AllZeroInputs();\n        }\n\n        return inputIndex;\n    }\n\n    /**\n     * @dev Sort an array of tokens, mutating in place (and also returning them).\n     * This assumes the tokens have been (or will be) validated elsewhere for length\n     * and non-duplication. All this does is the sorting.\n     *\n     * A bubble sort should be gas- and bytecode-efficient enough for such small arrays.\n     * Could have also done \"manual\" comparisons for each of the cases, but this is\n     * about the same number of operations, and more concise.\n     *\n     * This is less efficient for larger token count (i.e., above 4), but such pools should\n     * be rare. And in any case, sorting is only done on-chain in test code.\n     */\n    function sortTokens(IERC20[] memory tokens) internal pure returns (IERC20[] memory) {\n        for (uint256 i = 0; i < tokens.length - 1; ++i) {\n            for (uint256 j = 0; j < tokens.length - i - 1; ++j) {\n                if (tokens[j] > tokens[j + 1]) {\n                    // Swap if they're out of order.\n                    (tokens[j], tokens[j + 1]) = (tokens[j + 1], tokens[j]);\n                }\n            }\n        }\n\n        return tokens;\n    }\n\n    /// @dev Ensure an array of tokens is sorted. As above, does not validate length or uniqueness.\n    function ensureSortedTokens(IERC20[] memory tokens) internal pure {\n        if (tokens.length < 2) {\n            return;\n        }\n\n        IERC20 previous = tokens[0];\n\n        for (uint256 i = 1; i < tokens.length; ++i) {\n            IERC20 current = tokens[i];\n\n            if (previous > current) {\n                revert TokensNotSorted();\n            }\n\n            previous = current;\n        }\n    }\n\n    /// @dev Ensure an array of amounts is sorted. As above, does not validate length or uniqueness.\n    function ensureSortedAmounts(uint256[] memory amounts) internal pure {\n        if (amounts.length < 2) {\n            return;\n        }\n\n        uint256 previous = amounts[0];\n\n        for (uint256 i = 1; i < amounts.length; ++i) {\n            uint256 current = amounts[i];\n\n            if (previous > current) {\n                revert TokensNotSorted();\n            }\n\n            previous = current;\n        }\n    }\n}\n"},"contracts/IProtocolFeeController.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { IVault } from \"./IVault.sol\";\n\n/// @notice Contract that handles protocol and pool creator fees for the Vault.\ninterface IProtocolFeeController {\n    /**\n     * @notice Emitted when the protocol swap fee percentage is updated.\n     * @param swapFeePercentage The updated protocol swap fee percentage\n     */\n    event GlobalProtocolSwapFeePercentageChanged(uint256 swapFeePercentage);\n\n    /**\n     * @notice Emitted when the protocol yield fee percentage is updated.\n     * @param yieldFeePercentage The updated protocol yield fee percentage\n     */\n    event GlobalProtocolYieldFeePercentageChanged(uint256 yieldFeePercentage);\n\n    /**\n     * @notice Emitted when the protocol swap fee percentage is updated for a specific pool.\n     * @param pool The pool whose protocol swap fee will be changed\n     * @param swapFeePercentage The updated protocol swap fee percentage\n     */\n    event ProtocolSwapFeePercentageChanged(address indexed pool, uint256 swapFeePercentage);\n\n    /**\n     * @notice Emitted when the protocol yield fee percentage is updated for a specific pool.\n     * @param pool The pool whose protocol yield fee will be changed\n     * @param yieldFeePercentage The updated protocol yield fee percentage\n     */\n    event ProtocolYieldFeePercentageChanged(address indexed pool, uint256 yieldFeePercentage);\n\n    /**\n     * @notice Emitted when the pool creator swap fee percentage of a pool is updated.\n     * @param pool The pool whose pool creator swap fee will be changed\n     * @param poolCreatorSwapFeePercentage The new pool creator swap fee percentage for the pool\n     */\n    event PoolCreatorSwapFeePercentageChanged(address indexed pool, uint256 poolCreatorSwapFeePercentage);\n\n    /**\n     * @notice Emitted when the pool creator yield fee percentage of a pool is updated.\n     * @param pool The pool whose pool creator yield fee will be changed\n     * @param poolCreatorYieldFeePercentage The new pool creator yield fee percentage for the pool\n     */\n    event PoolCreatorYieldFeePercentageChanged(address indexed pool, uint256 poolCreatorYieldFeePercentage);\n\n    /**\n     * @notice Logs the collection of protocol swap fees in a specific token and amount.\n     * @dev Note that since charging protocol fees (i.e., distributing tokens between pool and fee balances) occurs\n     * in the Vault, but fee collection happens in the ProtocolFeeController, the swap fees reported here may encompass\n     * multiple operations.\n     *\n     * @param pool The pool on which the swap fee was charged\n     * @param token The token in which the swap fee was charged\n     * @param amount The amount of the token collected in fees\n     */\n    event ProtocolSwapFeeCollected(address indexed pool, IERC20 indexed token, uint256 amount);\n\n    /**\n     * @notice Logs the collection of protocol yield fees in a specific token and amount.\n     * @dev Note that since charging protocol fees (i.e., distributing tokens between pool and fee balances) occurs\n     * in the Vault, but fee collection happens in the ProtocolFeeController, the yield fees reported here may encompass\n     * multiple operations.\n     *\n     * @param pool The pool on which the yield fee was charged\n     * @param token The token in which the yield fee was charged\n     * @param amount The amount of the token collected in fees\n     */\n    event ProtocolYieldFeeCollected(address indexed pool, IERC20 indexed token, uint256 amount);\n\n    /**\n     * @notice Logs the withdrawal of protocol fees in a specific token and amount.\n     * @param pool The pool from which protocol fees are being withdrawn\n     * @param token The token being withdrawn\n     * @param recipient The recipient of the funds\n     * @param amount The amount of the fee token that was withdrawn\n     */\n    event ProtocolFeesWithdrawn(address indexed pool, IERC20 indexed token, address indexed recipient, uint256 amount);\n\n    /**\n     * @notice Logs the withdrawal of pool creator fees in a specific token and amount.\n     * @param pool The pool from which pool creator fees are being withdrawn\n     * @param token The token being withdrawn\n     * @param recipient The recipient of the funds (the pool creator if permissionless, or another account)\n     * @param amount The amount of the fee token that was withdrawn\n     */\n    event PoolCreatorFeesWithdrawn(\n        address indexed pool,\n        IERC20 indexed token,\n        address indexed recipient,\n        uint256 amount\n    );\n\n    /**\n     * @notice Emitted on pool registration with the initial aggregate swap fee percentage, for off-chain processes.\n     * @dev If the pool is registered as protocol fee exempt, this will be zero (until changed). Otherwise, it will\n     * equal the current global swap fee percentage.\n     *\n     * @param pool The pool being registered\n     * @param aggregateSwapFeePercentage The initial aggregate swap fee percentage\n     * @param isProtocolFeeExempt True if the pool is exempt from taking protocol fees initially\n     */\n    event InitialPoolAggregateSwapFeePercentage(\n        address indexed pool,\n        uint256 aggregateSwapFeePercentage,\n        bool isProtocolFeeExempt\n    );\n\n    /**\n     * @notice Emitted on pool registration with the initial aggregate yield fee percentage, for off-chain processes.\n     * @dev If the pool is registered as protocol fee exempt, this will be zero (until changed). Otherwise, it will\n     * equal the current global yield fee percentage.\n     *\n     * @param pool The pool being registered\n     * @param aggregateYieldFeePercentage The initial aggregate yield fee percentage\n     * @param isProtocolFeeExempt True if the pool is exempt from taking protocol fees initially\n     */\n    event InitialPoolAggregateYieldFeePercentage(\n        address indexed pool,\n        uint256 aggregateYieldFeePercentage,\n        bool isProtocolFeeExempt\n    );\n\n    /**\n     * @notice Emitted as a convenience during pool registration, more focused than the Vault's `PoolRegistered` event.\n     * @dev The `PoolRegistered` event includes the `roleAccounts` field, which also records the pool creator, but this\n     * simpler event is also provided for convenience. Though `InitialPoolAggregateSwapFeePercentage` and its yield fee\n     * counterpart also include the protocol fee exemption flag, we might as well include it here as well.\n     *\n     * @param pool The address of the pool being registered\n     * @param poolCreator The address of the pool creator (non-zero, or the event would not be emitted)\n     * @param  protocolFeeExempt True if the pool is initially exempt from protocol fees\n     */\n    event PoolRegisteredWithFeeController(address indexed pool, address indexed poolCreator, bool protocolFeeExempt);\n\n    /**\n     * @notice Error raised when the protocol swap fee percentage exceeds the maximum allowed value.\n     * @dev Note that this is checked for both the global and pool-specific protocol swap fee percentages.\n     */\n    error ProtocolSwapFeePercentageTooHigh();\n\n    /**\n     * @notice Error raised when the protocol yield fee percentage exceeds the maximum allowed value.\n     * @dev Note that this is checked for both the global and pool-specific protocol yield fee percentages.\n     */\n    error ProtocolYieldFeePercentageTooHigh();\n\n    /**\n     * @notice Error raised if there is no pool creator on a withdrawal attempt from the given pool.\n     * @param pool The pool with no creator\n     */\n    error PoolCreatorNotRegistered(address pool);\n\n    /**\n     * @notice Error raised if the wrong account attempts to withdraw pool creator fees.\n     * @param caller The account attempting to withdraw pool creator fees\n     * @param pool The pool the caller tried to withdraw from\n     */\n    error CallerIsNotPoolCreator(address caller, address pool);\n\n    /// @notice Error raised when the pool creator swap or yield fee percentage exceeds the maximum allowed value.\n    error PoolCreatorFeePercentageTooHigh();\n\n    /**\n     * @notice Get the address of the main Vault contract.\n     * @return vault The Vault address\n     */\n    function vault() external view returns (IVault);\n\n    /**\n     * @notice Collects aggregate fees from the Vault for a given pool.\n     * @param pool The pool with aggregate fees\n     */\n    function collectAggregateFees(address pool) external;\n\n    /**\n     * @notice Getter for the current global protocol swap fee.\n     * @return protocolSwapFeePercentage The global protocol swap fee percentage\n     */\n    function getGlobalProtocolSwapFeePercentage() external view returns (uint256 protocolSwapFeePercentage);\n\n    /**\n     * @notice Getter for the current global protocol yield fee.\n     * @return protocolYieldFeePercentage The global protocol yield fee percentage\n     */\n    function getGlobalProtocolYieldFeePercentage() external view returns (uint256 protocolYieldFeePercentage);\n\n    /**\n     * @notice Getter for pool registration flag.\n     * @param pool The address of the pool\n     * @return isRegistered True if the pool configuration has been set (e.g., through `registerPool`)\n     */\n    function isPoolRegistered(address pool) external view returns (bool);\n\n    /**\n     * @notice Getter for the current protocol swap fee for a given pool.\n     * @param pool The address of the pool\n     * @return protocolSwapFeePercentage The protocol swap fee percentage for the given pool\n     * @return isOverride True if the protocol fee has been overridden\n     */\n    function getPoolProtocolSwapFeeInfo(\n        address pool\n    ) external view returns (uint256 protocolSwapFeePercentage, bool isOverride);\n\n    /**\n     * @notice Getter for the current protocol yield fee for a given pool.\n     * @param pool The address of the pool\n     * @return protocolYieldFeePercentage The protocol yield fee percentage for the given pool\n     * @return isOverride True if the protocol fee has been overridden\n     */\n    function getPoolProtocolYieldFeeInfo(\n        address pool\n    ) external view returns (uint256 protocolYieldFeePercentage, bool isOverride);\n\n    /**\n     * @notice Getter for the current pool creator swap fee percentage for a given pool.\n     * @param pool The address of the pool\n     * @return poolCreatorSwapFeePercentage The pool creator swap fee component of the aggregate swap fee\n     */\n    function getPoolCreatorSwapFeePercentage(address pool) external view returns (uint256);\n\n    /**\n     * @notice Getter for the current pool creator yield fee percentage for a given pool.\n     * @param pool The address of the pool\n     * @return poolCreatorSwapFeePercentage The pool creator yield fee component of the aggregate yield fee\n     */\n    function getPoolCreatorYieldFeePercentage(address pool) external view returns (uint256);\n\n    /**\n     * @notice Returns the amount of each pool token allocated to the protocol for withdrawal.\n     * @dev Includes both swap and yield fees.\n     * @param pool The address of the pool on which fees were collected\n     * @return feeAmounts The total amounts of each token available for withdrawal, sorted in token registration order\n     */\n    function getProtocolFeeAmounts(address pool) external view returns (uint256[] memory feeAmounts);\n\n    /**\n     * @notice Returns the amount of each pool token allocated to the pool creator for withdrawal.\n     * @dev Includes both swap and yield fees.\n     * @param pool The address of the pool on which fees were collected\n     * @return feeAmounts The total amounts of each token available for withdrawal, sorted in token registration order\n     */\n    function getPoolCreatorFeeAmounts(address pool) external view returns (uint256[] memory feeAmounts);\n\n    /**\n     * @notice Returns a calculated aggregate percentage from protocol and pool creator fee percentages.\n     * @dev Not tied to any particular pool; this just performs the low-level \"additive fee\" calculation. Note that\n     * pool creator fees are calculated based on creatorAndLpFees, and not in totalFees. Since aggregate fees are\n     * stored in the Vault with 24-bit precision, this will truncate any values that require greater precision.\n     * It is expected that pool creators will negotiate with the DAO and agree on reasonable values for these fee\n     * components, but the truncation ensures it will not revert for any valid set of fee percentages.\n     *\n     * See example below:\n     *\n     * tokenOutAmount = 10000; poolSwapFeePct = 10%; protocolFeePct = 40%; creatorFeePct = 60%\n     * totalFees = tokenOutAmount * poolSwapFeePct = 10000 * 10% = 1000\n     * protocolFees = totalFees * protocolFeePct = 1000 * 40% = 400\n     * creatorAndLpFees = totalFees - protocolFees = 1000 - 400 = 600\n     * creatorFees = creatorAndLpFees * creatorFeePct = 600 * 60% = 360\n     * lpFees (will stay in the pool) = creatorAndLpFees - creatorFees = 600 - 360 = 240\n     *\n     * @param protocolFeePercentage The protocol portion of the aggregate fee percentage\n     * @param poolCreatorFeePercentage The pool creator portion of the aggregate fee percentage\n     * @return aggregateFeePercentage The computed aggregate percentage\n     */\n    function computeAggregateFeePercentage(\n        uint256 protocolFeePercentage,\n        uint256 poolCreatorFeePercentage\n    ) external pure returns (uint256 aggregateFeePercentage);\n\n    /**\n     * @notice Override the protocol swap fee percentage for a specific pool.\n     * @dev This is a permissionless call, and will set the pool's fee to the current global fee, if it is different\n     * from the current value, and the fee is not controlled by governance (i.e., has never been overridden).\n     *\n     * @param pool The pool for which we are setting the protocol swap fee\n     */\n    function updateProtocolSwapFeePercentage(address pool) external;\n\n    /**\n     * @notice Override the protocol yield fee percentage for a specific pool.\n     * @dev This is a permissionless call, and will set the pool's fee to the current global fee, if it is different\n     * from the current value, and the fee is not controlled by governance (i.e., has never been overridden).\n     *\n     * @param pool The pool for which we are setting the protocol yield fee\n     */\n    function updateProtocolYieldFeePercentage(address pool) external;\n\n    /***************************************************************************\n                                Permissioned Functions\n    ***************************************************************************/\n\n    /**\n     * @notice Add pool-specific entries to the protocol swap and yield percentages.\n     * @dev This must be called from the Vault during pool registration. It will initialize the pool to the global\n     * protocol fee percentage values (or 0, if the `protocolFeeExempt` flags is set), and return the initial aggregate\n     * fee percentages, based on an initial pool creator fee of 0.\n     *\n     * @param pool The address of the pool being registered\n     * @param poolCreator The address of the pool creator (or 0 if there won't be a pool creator fee)\n     * @param protocolFeeExempt If true, the pool is initially exempt from protocol fees\n     * @return aggregateSwapFeePercentage The initial aggregate swap fee percentage\n     * @return aggregateYieldFeePercentage The initial aggregate yield fee percentage\n     */\n    function registerPool(\n        address pool,\n        address poolCreator,\n        bool protocolFeeExempt\n    ) external returns (uint256 aggregateSwapFeePercentage, uint256 aggregateYieldFeePercentage);\n\n    /**\n     * @notice Set the global protocol swap fee percentage, used by standard pools.\n     * @param newProtocolSwapFeePercentage The new protocol swap fee percentage\n     */\n    function setGlobalProtocolSwapFeePercentage(uint256 newProtocolSwapFeePercentage) external;\n\n    /**\n     * @notice Set the global protocol yield fee percentage, used by standard pools.\n     * @param newProtocolYieldFeePercentage The new protocol yield fee percentage\n     */\n    function setGlobalProtocolYieldFeePercentage(uint256 newProtocolYieldFeePercentage) external;\n\n    /**\n     * @notice Override the protocol swap fee percentage for a specific pool.\n     * @param pool The address of the pool for which we are setting the protocol swap fee\n     * @param newProtocolSwapFeePercentage The new protocol swap fee percentage for the pool\n     */\n    function setProtocolSwapFeePercentage(address pool, uint256 newProtocolSwapFeePercentage) external;\n\n    /**\n     * @notice Override the protocol yield fee percentage for a specific pool.\n     * @param pool The address of the pool for which we are setting the protocol yield fee\n     * @param newProtocolYieldFeePercentage The new protocol yield fee percentage for the pool\n     */\n    function setProtocolYieldFeePercentage(address pool, uint256 newProtocolYieldFeePercentage) external;\n\n    /**\n     * @notice Assigns a new pool creator swap fee percentage to the specified pool.\n     * @dev Fees are divided between the protocol, pool creator, and LPs. The pool creator percentage is applied to\n     * the \"net\" amount after protocol fees, and divides the remainder between the pool creator and LPs. If the\n     * pool creator fee is near 100%, almost none of the fee amount remains in the pool for LPs.\n     *\n     * @param pool The address of the pool for which the pool creator fee will be changed\n     * @param poolCreatorSwapFeePercentage The new pool creator swap fee percentage to apply to the pool\n     */\n    function setPoolCreatorSwapFeePercentage(address pool, uint256 poolCreatorSwapFeePercentage) external;\n\n    /**\n     * @notice Assigns a new pool creator yield fee percentage to the specified pool.\n     * @dev Fees are divided between the protocol, pool creator, and LPs. The pool creator percentage is applied to\n     * the \"net\" amount after protocol fees, and divides the remainder between the pool creator and LPs. If the\n     * pool creator fee is near 100%, almost none of the fee amount remains in the pool for LPs.\n     *\n     * @param pool The address of the pool for which the pool creator fee will be changed\n     * @param poolCreatorYieldFeePercentage The new pool creator yield fee percentage to apply to the pool\n     */\n    function setPoolCreatorYieldFeePercentage(address pool, uint256 poolCreatorYieldFeePercentage) external;\n\n    /**\n     * @notice Withdraw collected protocol fees for a given pool (all tokens). This is a permissioned function.\n     * @dev Sends swap and yield protocol fees to the recipient.\n     * @param pool The pool on which fees were collected\n     * @param recipient Address to send the tokens\n     */\n    function withdrawProtocolFees(address pool, address recipient) external;\n\n    /**\n     * @notice Withdraw collected protocol fees for a given pool and a given token. This is a permissioned function.\n     * @dev Sends swap and yield protocol fees to the recipient.\n     * @param pool The pool on which fees were collected\n     * @param recipient Address to send the tokens\n     * @param token Token to withdraw\n     */\n    function withdrawProtocolFeesForToken(address pool, address recipient, IERC20 token) external;\n\n    /**\n     * @notice Withdraw collected pool creator fees for a given pool. This is a permissioned function.\n     * @dev Sends swap and yield pool creator fees to the recipient.\n     * @param pool The pool on which fees were collected\n     * @param recipient Address to send the tokens\n     */\n    function withdrawPoolCreatorFees(address pool, address recipient) external;\n\n    /**\n     * @notice Withdraw collected pool creator fees for a given pool.\n     * @dev Sends swap and yield pool creator fees to the registered poolCreator. Since this is a known and immutable\n     * value, this function is permissionless.\n     *\n     * @param pool The pool on which fees were collected\n     */\n    function withdrawPoolCreatorFees(address pool) external;\n}\n"},"contracts/IRateProvider.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n/// @notice General interface for token exchange rates.\ninterface IRateProvider {\n    /**\n     * @notice An 18 decimal fixed point number representing the exchange rate of one token to another related token.\n     * @dev The meaning of this rate depends on the context. Note that there may be an error associated with a token\n     * rate, and the caller might require a certain rounding direction to ensure correctness. This (legacy) interface\n     * does not take a rounding direction or return an error, so great care must be taken when interpreting and using\n     * rates in downstream computations.\n     *\n     * @return rate The current token rate\n     */\n    function getRate() external view returns (uint256 rate);\n}\n"},"contracts/IRouter.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { AddLiquidityKind, RemoveLiquidityKind, SwapKind } from \"./VaultTypes.sol\";\n\n/// @notice User-friendly interface to basic Vault operations: swap, add/remove liquidity, and associated queries.\ninterface IRouter {\n    /***************************************************************************\n                                Pool Initialization\n    ***************************************************************************/\n\n    /**\n     * @notice Data for the pool initialization hook.\n     * @param sender Account originating the pool initialization operation\n     * @param pool Address of the liquidity pool\n     * @param tokens Pool tokens, in token registration order\n     * @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n     * @param minBptAmountOut Minimum amount of pool tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add initial liquidity\n     */\n    struct InitializeHookParams {\n        address sender;\n        address pool;\n        IERC20[] tokens;\n        uint256[] exactAmountsIn;\n        uint256 minBptAmountOut;\n        bool wethIsEth;\n        bytes userData;\n    }\n\n    /**\n     * @notice Initialize a liquidity pool.\n     * @param pool Address of the liquidity pool\n     * @param tokens Pool tokens, in token registration order\n     * @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n     * @param minBptAmountOut Minimum amount of pool tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add initial liquidity\n     * @return bptAmountOut Actual amount of pool tokens minted in exchange for initial liquidity\n     */\n    function initialize(\n        address pool,\n        IERC20[] memory tokens,\n        uint256[] memory exactAmountsIn,\n        uint256 minBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256 bptAmountOut);\n\n    /***************************************************************************\n                                   Add Liquidity\n    ***************************************************************************/\n\n    /**\n     * @notice Adds liquidity to a pool with proportional token amounts, receiving an exact amount of pool tokens.\n     * @param pool Address of the liquidity pool\n     * @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n     * @param exactBptAmountOut Exact amount of pool tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add liquidity\n     * @return amountsIn Actual amounts of tokens added, sorted in token registration order\n     */\n    function addLiquidityProportional(\n        address pool,\n        uint256[] memory maxAmountsIn,\n        uint256 exactBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256[] memory amountsIn);\n\n    /**\n     * @notice Adds liquidity to a pool with arbitrary token amounts.\n     * @param pool Address of the liquidity pool\n     * @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n     * @param minBptAmountOut Minimum amount of pool tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add liquidity\n     * @return bptAmountOut Actual amount of pool tokens received\n     */\n    function addLiquidityUnbalanced(\n        address pool,\n        uint256[] memory exactAmountsIn,\n        uint256 minBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256 bptAmountOut);\n\n    /**\n     * @notice Adds liquidity to a pool in a single token, receiving an exact amount of pool tokens.\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token used to add liquidity\n     * @param maxAmountIn Maximum amount of tokens to be added\n     * @param exactBptAmountOut Exact amount of pool tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add liquidity\n     * @return amountIn Actual amount of tokens added\n     */\n    function addLiquiditySingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        uint256 maxAmountIn,\n        uint256 exactBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256 amountIn);\n\n    /**\n     * @notice Adds liquidity to a pool by donating the amounts in (no BPT out).\n     * @dev To support donation, the pool config `enableDonation` flag must be set to true.\n     * @param pool Address of the liquidity pool\n     * @param amountsIn Amounts of tokens to be donated, sorted in token registration order\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to donate liquidity\n     */\n    function donate(address pool, uint256[] memory amountsIn, bool wethIsEth, bytes memory userData) external payable;\n\n    /**\n     * @notice Adds liquidity to a pool with a custom request.\n     * @dev The given maximum and minimum amounts given may be interpreted as exact depending on the pool type.\n     * In any case the caller can expect them to be hard boundaries for the request.\n     *\n     * @param pool Address of the liquidity pool\n     * @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n     * @param minBptAmountOut Minimum amount of pool tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add liquidity\n     * @return amountsIn Actual amounts of tokens added, sorted in token registration order\n     * @return bptAmountOut Actual amount of pool tokens received\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function addLiquidityCustom(\n        address pool,\n        uint256[] memory maxAmountsIn,\n        uint256 minBptAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData);\n\n    /***************************************************************************\n                                 Remove Liquidity\n    ***************************************************************************/\n\n    /**\n     * @notice Removes liquidity with proportional token amounts from a pool, burning an exact pool token amount.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountIn Exact amount of pool tokens provided\n     * @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to remove liquidity\n     * @return amountsOut Actual amounts of tokens received, sorted in token registration order\n     */\n    function removeLiquidityProportional(\n        address pool,\n        uint256 exactBptAmountIn,\n        uint256[] memory minAmountsOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256[] memory amountsOut);\n\n    /**\n     * @notice Removes liquidity from a pool via a single token, burning an exact pool token amount.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountIn Exact amount of pool tokens provided\n     * @param tokenOut Token used to remove liquidity\n     * @param minAmountOut Minimum amount of tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to remove liquidity\n     * @return amountOut Actual amount of tokens received\n     */\n    function removeLiquiditySingleTokenExactIn(\n        address pool,\n        uint256 exactBptAmountIn,\n        IERC20 tokenOut,\n        uint256 minAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256 amountOut);\n\n    /**\n     * @notice Removes liquidity from a pool via a single token, specifying the exact amount of tokens to receive.\n     * @param pool Address of the liquidity pool\n     * @param maxBptAmountIn Maximum amount of pool tokens provided\n     * @param tokenOut Token used to remove liquidity\n     * @param exactAmountOut Exact amount of tokens to be received\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to remove liquidity\n     * @return bptAmountIn Actual amount of pool tokens burned\n     */\n    function removeLiquiditySingleTokenExactOut(\n        address pool,\n        uint256 maxBptAmountIn,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256 bptAmountIn);\n\n    /**\n     * @notice Removes liquidity from a pool with a custom request.\n     * @dev The given maximum and minimum amounts given may be interpreted as exact depending on the pool type.\n     * In any case the caller can expect them to be hard boundaries for the request.\n     *\n     * @param pool Address of the liquidity pool\n     * @param maxBptAmountIn Maximum amount of pool tokens provided\n     * @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to remove liquidity\n     * @return bptAmountIn Actual amount of pool tokens burned\n     * @return amountsOut Actual amounts of tokens received, sorted in token registration order\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function removeLiquidityCustom(\n        address pool,\n        uint256 maxBptAmountIn,\n        uint256[] memory minAmountsOut,\n        bool wethIsEth,\n        bytes memory userData\n    ) external payable returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData);\n\n    /**\n     * @notice Removes liquidity proportionally, burning an exact pool token amount. Only available in Recovery Mode.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountIn Exact amount of pool tokens provided\n     * @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n     * @return amountsOut Actual amounts of tokens received, sorted in token registration order\n     */\n    function removeLiquidityRecovery(\n        address pool,\n        uint256 exactBptAmountIn,\n        uint256[] memory minAmountsOut\n    ) external payable returns (uint256[] memory amountsOut);\n\n    /***************************************************************************\n                                       Swaps\n    ***************************************************************************/\n\n    /**\n     * @notice Data for the swap hook.\n     * @param sender Account initiating the swap operation\n     * @param kind Type of swap (exact in or exact out)\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token to be swapped from\n     * @param tokenOut Token to be swapped to\n     * @param amountGiven Amount given based on kind of the swap (e.g., tokenIn for exact in)\n     * @param limit Maximum or minimum amount based on the kind of swap (e.g., maxAmountIn for exact out)\n     * @param deadline Deadline for the swap, after which it will revert\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the swap request\n     */\n    struct SwapSingleTokenHookParams {\n        address sender;\n        SwapKind kind;\n        address pool;\n        IERC20 tokenIn;\n        IERC20 tokenOut;\n        uint256 amountGiven;\n        uint256 limit;\n        uint256 deadline;\n        bool wethIsEth;\n        bytes userData;\n    }\n\n    /**\n     * @notice Executes a swap operation specifying an exact input token amount.\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token to be swapped from\n     * @param tokenOut Token to be swapped to\n     * @param exactAmountIn Exact amounts of input tokens to send\n     * @param minAmountOut Minimum amount of tokens to be received\n     * @param deadline Deadline for the swap, after which it will revert\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the swap request\n     * @return amountOut Calculated amount of output tokens to be received in exchange for the given input tokens\n     */\n    function swapSingleTokenExactIn(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountIn,\n        uint256 minAmountOut,\n        uint256 deadline,\n        bool wethIsEth,\n        bytes calldata userData\n    ) external payable returns (uint256 amountOut);\n\n    /**\n     * @notice Executes a swap operation specifying an exact output token amount.\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token to be swapped from\n     * @param tokenOut Token to be swapped to\n     * @param exactAmountOut Exact amounts of input tokens to receive\n     * @param maxAmountIn Maximum amount of tokens to be sent\n     * @param deadline Deadline for the swap, after which it will revert\n     * @param userData Additional (optional) data sent with the swap request\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @return amountIn Calculated amount of input tokens to be sent in exchange for the requested output tokens\n     */\n    function swapSingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        uint256 maxAmountIn,\n        uint256 deadline,\n        bool wethIsEth,\n        bytes calldata userData\n    ) external payable returns (uint256 amountIn);\n\n    /***************************************************************************\n                                      Queries\n    ***************************************************************************/\n\n    /**\n     * @notice Queries an `addLiquidityProportional` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountOut Exact amount of pool tokens to be received\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountsIn Expected amounts of tokens to add, sorted in token registration order\n     */\n    function queryAddLiquidityProportional(\n        address pool,\n        uint256 exactBptAmountOut,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256[] memory amountsIn);\n\n    /**\n     * @notice Queries an `addLiquidityUnbalanced` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return bptAmountOut Expected amount of pool tokens to receive\n     */\n    function queryAddLiquidityUnbalanced(\n        address pool,\n        uint256[] memory exactAmountsIn,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256 bptAmountOut);\n\n    /**\n     * @notice Queries an `addLiquiditySingleTokenExactOut` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token used to add liquidity\n     * @param exactBptAmountOut Expected exact amount of pool tokens to receive\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountIn Expected amount of tokens to add\n     */\n    function queryAddLiquiditySingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        uint256 exactBptAmountOut,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256 amountIn);\n\n    /**\n     * @notice Queries an `addLiquidityCustom` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n     * @param minBptAmountOut Expected minimum amount of pool tokens to receive\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountsIn Expected amounts of tokens to add, sorted in token registration order\n     * @return bptAmountOut Expected amount of pool tokens to receive\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function queryAddLiquidityCustom(\n        address pool,\n        uint256[] memory maxAmountsIn,\n        uint256 minBptAmountOut,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData);\n\n    /**\n     * @notice Queries a `removeLiquidityProportional` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountIn Exact amount of pool tokens provided for the query\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountsOut Expected amounts of tokens to receive, sorted in token registration order\n     */\n    function queryRemoveLiquidityProportional(\n        address pool,\n        uint256 exactBptAmountIn,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256[] memory amountsOut);\n\n    /**\n     * @notice Queries a `removeLiquiditySingleTokenExactIn` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountIn Exact amount of pool tokens provided for the query\n     * @param tokenOut Token used to remove liquidity\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountOut Expected amount of tokens to receive\n     */\n    function queryRemoveLiquiditySingleTokenExactIn(\n        address pool,\n        uint256 exactBptAmountIn,\n        IERC20 tokenOut,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256 amountOut);\n\n    /**\n     * @notice Queries a `removeLiquiditySingleTokenExactOut` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param tokenOut Token used to remove liquidity\n     * @param exactAmountOut Expected exact amount of tokens to receive\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return bptAmountIn Expected amount of pool tokens to burn\n     */\n    function queryRemoveLiquiditySingleTokenExactOut(\n        address pool,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256 bptAmountIn);\n\n    /**\n     * @notice Queries a `removeLiquidityCustom` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param maxBptAmountIn Maximum amount of pool tokens provided\n     * @param minAmountsOut Expected minimum amounts of tokens to receive, sorted in token registration order\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return bptAmountIn Expected amount of pool tokens to burn\n     * @return amountsOut Expected amounts of tokens to receive, sorted in token registration order\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function queryRemoveLiquidityCustom(\n        address pool,\n        uint256 maxBptAmountIn,\n        uint256[] memory minAmountsOut,\n        address sender,\n        bytes memory userData\n    ) external returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData);\n\n    /**\n     * @notice Queries a `removeLiquidityRecovery` operation without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param exactBptAmountIn Exact amount of pool tokens provided for the query\n     * @return amountsOut Expected amounts of tokens to receive, sorted in token registration order\n     */\n    function queryRemoveLiquidityRecovery(\n        address pool,\n        uint256 exactBptAmountIn\n    ) external returns (uint256[] memory amountsOut);\n\n    /**\n     * @notice Queries a swap operation specifying an exact input token amount without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token to be swapped from\n     * @param tokenOut Token to be swapped to\n     * @param exactAmountIn Exact amounts of input tokens to send\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountOut Calculated amount of output tokens to be received in exchange for the given input tokens\n     */\n    function querySwapSingleTokenExactIn(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountIn,\n        address sender,\n        bytes calldata userData\n    ) external returns (uint256 amountOut);\n\n    /**\n     * @notice Queries a swap operation specifying an exact output token amount without actually executing it.\n     * @param pool Address of the liquidity pool\n     * @param tokenIn Token to be swapped from\n     * @param tokenOut Token to be swapped to\n     * @param exactAmountOut Exact amounts of input tokens to receive\n     * @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n     * @param userData Additional (optional) data sent with the query request\n     * @return amountIn Calculated amount of input tokens to be sent in exchange for the requested output tokens\n     */\n    function querySwapSingleTokenExactOut(\n        address pool,\n        IERC20 tokenIn,\n        IERC20 tokenOut,\n        uint256 exactAmountOut,\n        address sender,\n        bytes calldata userData\n    ) external returns (uint256 amountIn);\n}\n"},"contracts/IRouterCommon.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IAllowanceTransfer } from \"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\";\n// import { IPermit2 } from \"@uniswap/permit2/src/interfaces/IPermit2.sol\"; // @todo: delete\nimport { AddLiquidityKind, RemoveLiquidityKind } from \"./VaultTypes.sol\";\n\nimport { IWETH } from \"./IWETH.sol\";\n\n/// @notice Interface for functions shared between the `Router` and `BatchRouter`.\ninterface IRouterCommon {\n    /**\n     * @notice Data for the add liquidity hook.\n     * @param sender Account originating the add liquidity operation\n     * @param pool Address of the liquidity pool\n     * @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n     * @param minBptAmountOut Minimum amount of pool tokens to be received\n     * @param kind Type of join (e.g., single or multi-token)\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to add liquidity\n     */\n    struct AddLiquidityHookParams {\n        address sender;\n        address pool;\n        uint256[] maxAmountsIn;\n        uint256 minBptAmountOut;\n        AddLiquidityKind kind;\n        bool wethIsEth;\n        bytes userData;\n    }\n\n    /**\n     * @notice Data for the remove liquidity hook.\n     * @param sender Account originating the remove liquidity operation\n     * @param pool Address of the liquidity pool\n     * @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n     * @param maxBptAmountIn Maximum amount of pool tokens provided\n     * @param kind Type of exit (e.g., single or multi-token)\n     * @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n     * @param userData Additional (optional) data sent with the request to remove liquidity\n     */\n    struct RemoveLiquidityHookParams {\n        address sender;\n        address pool;\n        uint256[] minAmountsOut;\n        uint256 maxBptAmountIn;\n        RemoveLiquidityKind kind;\n        bool wethIsEth;\n        bytes userData;\n    }\n\n    /*******************************************************************************\n                                         Utils\n    *******************************************************************************/\n\n    /// @notice Returns WETH contract address.\n    function getWeth() external view returns (IWETH);\n\n    /// @notice Returns Permit2 contract address.\n    // function getPermit2() external view returns (IPermit2); // @todo: delete\n    function getPermit2() external view returns (address);\n\n    struct PermitApproval {\n        address token;\n        address owner;\n        address spender;\n        uint256 amount;\n        uint256 nonce;\n        uint256 deadline;\n    }\n\n    /**\n     * @notice Permits multiple allowances and executes a batch of function calls on this contract.\n     * @param permitBatch An array of `PermitApproval` structs, each representing an ERC20 permit request\n     * @param permitSignatures An array of bytes, corresponding to the permit request signature in `permitBatch`\n     * @param permit2Batch A batch of permit2 approvals\n     * @param permit2Signature A permit2 signature for the batch approval\n     * @param multicallData An array of bytes arrays, each representing an encoded function call on this contract\n     * @return results Array of bytes arrays, each representing the return data from each function call executed\n     */\n    function permitBatchAndCall(\n        PermitApproval[] calldata permitBatch,\n        bytes[] calldata permitSignatures,\n        IAllowanceTransfer.PermitBatch calldata permit2Batch,\n        bytes calldata permit2Signature,\n        bytes[] calldata multicallData\n    ) external payable returns (bytes[] memory results);\n\n    /**\n     * @notice Executes a batch of function calls on this contract.\n     * @param data Encoded function calls to be executed in the batch.\n     * @return results Array of bytes arrays, each representing the return data from each function call executed.\n     */\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\n}\n"},"contracts/ISenderGuard.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n/// @notice Interface for functions shared across all trusted routers.\ninterface ISenderGuard {\n    /// @notice Incoming ETH transfer from an address that is not WETH.\n    error EthTransfer();\n\n    /// @notice The swap transaction was not validated before the specified deadline timestamp.\n    error SwapDeadline();\n\n    /**\n     * @notice Get the first sender which initialized the call to Router.\n     * @return sender The address of the sender\n     */\n    function getSender() external view returns (address sender);\n}\n"},"contracts/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IAuthentication } from \"./IAuthentication.sol\";\nimport { IVaultExtension } from \"./IVaultExtension.sol\";\nimport { IVaultErrors } from \"./IVaultErrors.sol\";\nimport { IVaultEvents } from \"./IVaultEvents.sol\";\nimport { IVaultAdmin } from \"./IVaultAdmin.sol\";\nimport { IVaultMain } from \"./IVaultMain.sol\";\n\n/// @notice Composite interface for all Vault operations: swap, add/remove liquidity, and associated queries.\ninterface IVault is IVaultMain, IVaultExtension, IVaultAdmin, IVaultErrors, IVaultEvents, IAuthentication {\n    /// @return vault The main Vault address.\n    function vault() external view override(IVaultAdmin, IVaultExtension) returns (IVault);\n}\n"},"contracts/IVaultAdmin.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\n\nimport { IProtocolFeeController } from \"./IProtocolFeeController.sol\";\nimport { IAuthorizer } from \"./IAuthorizer.sol\";\nimport { IVault } from \"./IVault.sol\";\n\n/**\n * @notice Interface for functions defined on the `VaultAdmin` contract.\n * @dev `VaultAdmin` is the Proxy extension of `VaultExtension`, and handles the least critical operations,\n * as two delegate calls add gas to each call. Most of the permissioned calls are here.\n */\ninterface IVaultAdmin {\n    /*******************************************************************************\n                               Constants and immutables\n    *******************************************************************************/\n\n    /**\n     * @notice Returns the main Vault address.\n     * @dev The main Vault contains the entrypoint and main liquidity operation implementations.\n     * @return vault The address of the main Vault\n     */\n    function vault() external view returns (IVault);\n\n    /**\n     * @notice Returns the Vault's pause window end time.\n     * @dev This value is immutable, and represents the timestamp after which the Vault can no longer be paused\n     * by governance. Balancer timestamps are 32 bits.\n     *\n     * @return pauseWindowEndTime The timestamp when the Vault's pause window ends\n     */\n    function getPauseWindowEndTime() external view returns (uint32 pauseWindowEndTime);\n\n    /**\n     * @notice Returns the Vault's buffer period duration.\n     * @dev This value is immutable. It represents the period during which, if paused, the Vault will remain paused.\n     * This ensures there is time available to address whatever issue caused the Vault to be paused. Balancer\n     * timestamps are 32 bits.\n     *\n     * @return bufferPeriodDuration The length of the buffer period in seconds\n     */\n    function getBufferPeriodDuration() external view returns (uint32 bufferPeriodDuration);\n\n    /**\n     * @notice Returns the Vault's buffer period end time.\n     * @dev This value is immutable. If already paused, the Vault can be unpaused until this timestamp. Balancer\n     * timestamps are 32 bits.\n     *\n     * @return bufferPeriodEndTime The timestamp after which the Vault remains permanently unpaused\n     */\n    function getBufferPeriodEndTime() external view returns (uint32 bufferPeriodEndTime);\n\n    /**\n     * @notice Get the minimum number of tokens in a pool.\n     * @dev We expect the vast majority of pools to be 2-token.\n     * @return minTokens The minimum token count of a pool\n     */\n    function getMinimumPoolTokens() external pure returns (uint256 minTokens);\n\n    /**\n     * @notice Get the maximum number of tokens in a pool.\n     * @return maxTokens The maximum token count of a pool\n     */\n    function getMaximumPoolTokens() external pure returns (uint256 maxTokens);\n\n    /**\n     * @notice Get the minimum total supply of pool tokens (BPT) for an initialized pool.\n     * @dev This prevents pools from being completely drained. When the pool is initialized, this minimum amount of BPT\n     * is minted to the zero address. This is an 18-decimal floating point number; BPT are always 18 decimals.\n     *\n     * @return poolMinimumTotalSupply The minimum total supply a pool can have after initialization\n     */\n    function getPoolMinimumTotalSupply() external pure returns (uint256 poolMinimumTotalSupply);\n\n    /**\n     * @notice Get the minimum total supply of an ERC4626 wrapped token buffer in the Vault.\n     * @dev This prevents buffers from being completely drained. When the buffer is initialized, this minimum number\n     * of shares is added to the shares resulting from the initial deposit. Buffer total supply accounting is internal\n     * to the Vault, as buffers are not tokenized.\n     *\n     * @return bufferMinimumTotalSupply The minimum total supply a buffer can have after initialization\n     */\n    function getBufferMinimumTotalSupply() external pure returns (uint256 bufferMinimumTotalSupply);\n\n    /**\n     * @notice Get the minimum trade amount in a pool operation.\n     * @dev This limit is applied to the 18-decimal \"upscaled\" amount in any operation (swap, add/remove liquidity).\n     * @return minimumTradeAmount The minimum trade amount as an 18-decimal floating point number\n     */\n    function getMinimumTradeAmount() external view returns (uint256 minimumTradeAmount);\n\n    /**\n     * @notice Get the minimum wrap amount in a buffer operation.\n     * @dev This limit is applied to the wrap operation amount, in native underlying token decimals.\n     * @return minimumWrapAmount The minimum wrap amount in native underlying token decimals\n     */\n    function getMinimumWrapAmount() external view returns (uint256 minimumWrapAmount);\n\n    /*******************************************************************************\n                                    Vault Pausing\n    *******************************************************************************/\n\n    /**\n     * @notice Indicates whether the Vault is paused.\n     * @dev If the Vault is paused, all non-Recovery Mode state-changing operations on pools will revert. Note that\n     * ERC4626 buffers and the Vault have separate and independent pausing mechanisms. Pausing the Vault does not\n     * also pause buffers (though we anticipate they would likely be paused and unpaused together). Call\n     * `areBuffersPaused` to check the pause state of the buffers.\n     *\n     * @return vaultPaused True if the Vault is paused\n     */\n    function isVaultPaused() external view returns (bool vaultPaused);\n\n    /**\n     * @notice Returns the paused status, and end times of the Vault's pause window and buffer period.\n     * @dev Balancer timestamps are 32 bits.\n     * @return vaultPaused True if the Vault is paused\n     * @return vaultPauseWindowEndTime The timestamp of the end of the Vault's pause window\n     * @return vaultBufferPeriodEndTime The timestamp of the end of the Vault's buffer period\n     */\n    function getVaultPausedState()\n        external\n        view\n        returns (bool vaultPaused, uint32 vaultPauseWindowEndTime, uint32 vaultBufferPeriodEndTime);\n\n    /**\n     * @notice Pause the Vault: an emergency action which disables all operational state-changing functions on pools.\n     * @dev This is a permissioned function that will only work during the Pause Window set during deployment.\n     * Note that ERC4626 buffer operations have an independent pause mechanism, which is not affected by pausing\n     * the Vault. Custom routers could still wrap/unwrap using buffers while the Vault is paused, unless buffers\n     * are also paused (with `pauseVaultBuffers`).\n     */\n    function pauseVault() external;\n\n    /**\n     * @notice Reverse a `pause` operation, and restore Vault pool operations to normal functionality.\n     * @dev This is a permissioned function that will only work on a paused Vault within the Buffer Period set during\n     * deployment. Note that the Vault will automatically unpause after the Buffer Period expires. As noted above,\n     * ERC4626 buffers and Vault operations on pools are independent. Unpausing the Vault does not reverse\n     * `pauseVaultBuffers`. If buffers were also paused, they will remain in that state until explicitly unpaused.\n     */\n    function unpauseVault() external;\n\n    /*******************************************************************************\n                                    Pool Pausing\n    *******************************************************************************/\n\n    /**\n     * @notice Pause the Pool: an emergency action which disables all pool functions.\n     * @dev This is a permissioned function that will only work during the Pause Window set during pool factory\n     * deployment.\n     *\n     * @param pool The pool being paused\n     */\n    function pausePool(address pool) external;\n\n    /**\n     * @notice Reverse a `pause` operation, and restore the Pool to normal functionality.\n     * @dev This is a permissioned function that will only work on a paused Pool within the Buffer Period set during\n     * deployment. Note that the Pool will automatically unpause after the Buffer Period expires.\n     *\n     * @param pool The pool being unpaused\n     */\n    function unpausePool(address pool) external;\n\n    /*******************************************************************************\n                                         Fees\n    *******************************************************************************/\n\n    /**\n     * @notice Assigns a new static swap fee percentage to the specified pool.\n     * @dev This is a permissioned function, disabled if the pool is paused. The swap fee percentage must be within\n     * the bounds specified by the pool's implementation of `ISwapFeePercentageBounds`.\n     * Emits the SwapFeePercentageChanged event.\n     *\n     * @param pool The address of the pool for which the static swap fee will be changed\n     * @param swapFeePercentage The new swap fee percentage to apply to the pool\n     */\n    function setStaticSwapFeePercentage(address pool, uint256 swapFeePercentage) external;\n\n    /**\n     * @notice Collects accumulated aggregate swap and yield fees for the specified pool.\n     * @dev Fees are sent to the ProtocolFeeController address.\n     * @param pool The pool on which all aggregate fees should be collected\n     * @return swapFeeAmounts An array with the total swap fees collected, sorted in token registration order\n     * @return yieldFeeAmounts An array with the total yield fees collected, sorted in token registration order\n     */\n    function collectAggregateFees(\n        address pool\n    ) external returns (uint256[] memory swapFeeAmounts, uint256[] memory yieldFeeAmounts);\n\n    /**\n     * @notice Update an aggregate swap fee percentage.\n     * @dev Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee\n     * for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's\n     * fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also\n     * that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol).\n     * Emits an `AggregateSwapFeePercentageChanged` event.\n     *\n     * @param pool The pool whose swap fee percentage will be updated\n     * @param newAggregateSwapFeePercentage The new aggregate swap fee percentage\n     */\n    function updateAggregateSwapFeePercentage(address pool, uint256 newAggregateSwapFeePercentage) external;\n\n    /**\n     * @notice Update an aggregate yield fee percentage.\n     * @dev Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee\n     * for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's\n     * fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also\n     * that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol).\n     * Emits an `AggregateYieldFeePercentageChanged` event.\n     *\n     * @param pool The pool whose yield fee percentage will be updated\n     * @param newAggregateYieldFeePercentage The new aggregate yield fee percentage\n     */\n    function updateAggregateYieldFeePercentage(address pool, uint256 newAggregateYieldFeePercentage) external;\n\n    /**\n     * @notice Sets a new Protocol Fee Controller for the Vault.\n     * @dev This is a permissioned call. Emits a `ProtocolFeeControllerChanged` event.\n     * @param newProtocolFeeController The address of the new Protocol Fee Controller\n     */\n    function setProtocolFeeController(IProtocolFeeController newProtocolFeeController) external;\n\n    /*******************************************************************************\n                                    Recovery Mode\n    *******************************************************************************/\n\n    /**\n     * @notice Enable recovery mode for a pool.\n     * @dev This is a permissioned function. It enables a safe proportional withdrawal, with no external calls.\n     * Since there are no external calls, ensuring that entering Recovery Mode cannot fail, we cannot compute and so\n     * must forfeit any yield fees between the last operation and enabling Recovery Mode. For the same reason, live\n     * balances cannot be updated while in Recovery Mode, as doing so might cause withdrawals to fail.\n     *\n     * @param pool The address of the pool\n     */\n    function enableRecoveryMode(address pool) external;\n\n    /**\n     * @notice Disable recovery mode for a pool.\n     * @dev This is a permissioned function. It re-syncs live balances (which could not be updated during\n     * Recovery Mode), forfeiting any yield fees that accrued while enabled. It makes external calls, and could\n     * potentially fail if there is an issue with any associated Rate Providers.\n     *\n     * @param pool The address of the pool\n     */\n    function disableRecoveryMode(address pool) external;\n\n    /*******************************************************************************\n                                  Query Functionality\n    *******************************************************************************/\n\n    /**\n     * @notice Disables query functionality on the Vault. Can only be called by governance.\n     * @dev The query functions rely on a specific EVM feature to detect static calls. Query operations are exempt from\n     * settlement constraints, so it's critical that no state changes can occur. We retain the ability to disable\n     * queries in the unlikely event that EVM changes violate its assumptions (perhaps on an L2).\n     * This function can be acted upon as an emergency measure in ambiguous contexts where it's not 100% clear whether\n     * disabling queries is completely necessary; queries can still be re-enabled after this call.\n     */\n    function disableQuery() external;\n\n    /**\n     * @notice Disables query functionality permanently on the Vault. Can only be called by governance.\n     * @dev Shall only be used when there is no doubt that queries pose a fundamental threat to the system.\n     */\n    function disableQueryPermanently() external;\n\n    /**\n     * @notice Enables query functionality on the Vault. Can only be called by governance.\n     * @dev Only works if queries are not permanently disabled.\n     */\n    function enableQuery() external;\n\n    /*******************************************************************************\n                                  ERC4626 Buffers\n    *******************************************************************************/\n\n    /**\n     * @notice Indicates whether the Vault buffers are paused.\n     * @dev When buffers are paused, all buffer operations (i.e., calls on the Router with `isBuffer` true)\n     * will revert. Pausing buffers is reversible. Note that ERC4626 buffers and the Vault have separate and\n     * independent pausing mechanisms. Pausing the Vault does not also pause buffers (though we anticipate they\n     * would likely be paused and unpaused together). Call `isVaultPaused` to check the pause state of the Vault.\n     *\n     * @return buffersPaused True if the Vault buffers are paused\n     */\n    function areBuffersPaused() external view returns (bool buffersPaused);\n\n    /**\n     * @notice Pauses native vault buffers globally.\n     * @dev When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's\n     * `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. Currently it's not\n     * possible to pause vault buffers individually.\n     *\n     * This is a permissioned call, and is reversible (see `unpauseVaultBuffers`). Note that the Vault has a separate\n     * and independent pausing mechanism. It is possible to pause the Vault (i.e. pool operations), without affecting\n     * buffers, and vice versa.\n     */\n    function pauseVaultBuffers() external;\n\n    /**\n     * @notice Unpauses native vault buffers globally.\n     * @dev When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's\n     * `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. As noted above,\n     * ERC4626 buffers and Vault operations on pools are independent. Unpausing buffers does not reverse `pauseVault`.\n     * If the Vault was also paused, it will remain in that state until explicitly unpaused.\n     *\n     * This is a permissioned call.\n     */\n    function unpauseVaultBuffers() external;\n\n    /**\n     * @notice Initializes buffer for the given wrapped token.\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @param amountUnderlyingRaw Amount of underlying tokens that will be deposited into the buffer\n     * @param amountWrappedRaw Amount of wrapped tokens that will be deposited into the buffer\n     * @param minIssuedShares Minimum amount of shares to receive from the buffer, expressed in underlying token\n     * native decimals\n     * @param sharesOwner Address that will own the deposited liquidity. Only this address will be able to remove\n     * liquidity from the buffer\n     * @return issuedShares the amount of tokens sharesOwner has in the buffer, expressed in underlying token amounts.\n     * (it is the BPT of an internal ERC4626 buffer). It is expressed in underlying token native decimals.\n     */\n    function initializeBuffer(\n        IERC4626 wrappedToken,\n        uint256 amountUnderlyingRaw,\n        uint256 amountWrappedRaw,\n        uint256 minIssuedShares,\n        address sharesOwner\n    ) external returns (uint256 issuedShares);\n\n    /**\n     * @notice Adds liquidity to an internal ERC4626 buffer in the Vault, proportionally.\n     * @dev The buffer needs to be initialized beforehand.\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @param maxAmountUnderlyingInRaw Maximum amount of underlying tokens to add to the buffer. It is expressed in\n     * underlying token native decimals\n     * @param maxAmountWrappedInRaw Maximum amount of wrapped tokens to add to the buffer. It is expressed in wrapped\n     * token native decimals\n     * @param exactSharesToIssue The value in underlying tokens that `sharesOwner` wants to add to the buffer,\n     * in underlying token decimals\n     * @param sharesOwner Address that will own the deposited liquidity. Only this address will be able to remove\n     * liquidity from the buffer\n     * @return amountUnderlyingRaw Amount of underlying tokens deposited into the buffer\n     * @return amountWrappedRaw Amount of wrapped tokens deposited into the buffer\n     */\n    function addLiquidityToBuffer(\n        IERC4626 wrappedToken,\n        uint256 maxAmountUnderlyingInRaw,\n        uint256 maxAmountWrappedInRaw,\n        uint256 exactSharesToIssue,\n        address sharesOwner\n    ) external returns (uint256 amountUnderlyingRaw, uint256 amountWrappedRaw);\n\n    /**\n     * @notice Removes liquidity from an internal ERC4626 buffer in the Vault.\n     * @dev Only proportional exits are supported, and the sender has to be the owner of the shares.\n     * This function unlocks the Vault just for this operation; it does not work with a Router as an entrypoint.\n     *\n     * Pre-conditions:\n     * - The buffer needs to be initialized.\n     * - sharesOwner is the original msg.sender, it needs to be checked in the Router. That's why\n     *   this call is authenticated; only routers approved by the DAO can remove the liquidity of a buffer.\n     * - The buffer needs to have some liquidity and have its asset registered in `_bufferAssets` storage.\n     *\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @param sharesToRemove Amount of shares to remove from the buffer. Cannot be greater than sharesOwner's\n     * total shares. It is expressed in underlying token native decimals\n     * @param minAmountUnderlyingOutRaw Minimum amount of underlying tokens to receive from the buffer. It is expressed\n     * in underlying token native decimals\n     * @param minAmountWrappedOutRaw Minimum amount of wrapped tokens to receive from the buffer. It is expressed in\n     * wrapped token native decimals\n     * @return removedUnderlyingBalanceRaw Amount of underlying tokens returned to the user\n     * @return removedWrappedBalanceRaw Amount of wrapped tokens returned to the user\n     */\n    function removeLiquidityFromBuffer(\n        IERC4626 wrappedToken,\n        uint256 sharesToRemove,\n        uint256 minAmountUnderlyingOutRaw,\n        uint256 minAmountWrappedOutRaw\n    ) external returns (uint256 removedUnderlyingBalanceRaw, uint256 removedWrappedBalanceRaw);\n\n    /**\n     * @notice Returns the asset registered for a given wrapped token.\n     * @dev The asset can never change after buffer initialization.\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @return underlyingToken Address of the underlying token registered for the wrapper; `address(0)` if the buffer\n     * has not been initialized.\n     */\n    function getBufferAsset(IERC4626 wrappedToken) external view returns (address underlyingToken);\n\n    /**\n     * @notice Returns the shares (internal buffer BPT) of a liquidity owner: a user that deposited assets\n     * in the buffer.\n     *\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @param liquidityOwner Address of the user that owns liquidity in the wrapped token's buffer\n     * @return ownerShares Amount of shares allocated to the liquidity owner, in native underlying token decimals\n     */\n    function getBufferOwnerShares(\n        IERC4626 wrappedToken,\n        address liquidityOwner\n    ) external view returns (uint256 ownerShares);\n\n    /**\n     * @notice Returns the supply shares (internal buffer BPT) of the ERC4626 buffer.\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @return bufferShares Amount of supply shares of the buffer, in native underlying token decimals\n     */\n    function getBufferTotalShares(IERC4626 wrappedToken) external view returns (uint256 bufferShares);\n\n    /**\n     * @notice Returns the amount of underlying and wrapped tokens deposited in the internal buffer of the Vault.\n     * @dev All values are in native token decimals of the wrapped or underlying tokens.\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @return underlyingBalanceRaw Amount of underlying tokens deposited into the buffer, in native token decimals\n     * @return wrappedBalanceRaw Amount of wrapped tokens deposited into the buffer, in native token decimals\n     */\n    function getBufferBalance(\n        IERC4626 wrappedToken\n    ) external view returns (uint256 underlyingBalanceRaw, uint256 wrappedBalanceRaw);\n\n    /*******************************************************************************\n                                Authentication\n    *******************************************************************************/\n\n    /**\n     * @notice Sets a new Authorizer for the Vault.\n     * @dev This is a permissioned call. Emits an `AuthorizerChanged` event.\n     * @param newAuthorizer The address of the new authorizer\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n}\n"},"contracts/IVaultErrors.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice Errors are declared inside an interface (namespace) to improve DX with Typechain.\ninterface IVaultErrors {\n    /*******************************************************************************\n                            Registration and Initialization\n    *******************************************************************************/\n\n    /**\n     * @notice A pool has already been registered. `registerPool` may only be called once.\n     * @param pool The already registered pool\n     */\n    error PoolAlreadyRegistered(address pool);\n\n    /**\n     * @notice A pool has already been initialized. `initialize` may only be called once.\n     * @param pool The already initialized pool\n     */\n    error PoolAlreadyInitialized(address pool);\n\n    /**\n     * @notice A pool has not been registered.\n     * @param pool The unregistered pool\n     */\n    error PoolNotRegistered(address pool);\n\n    /**\n     * @notice A referenced pool has not been initialized.\n     * @param pool The uninitialized pool\n     */\n    error PoolNotInitialized(address pool);\n\n    /**\n     * @notice A hook contract rejected a pool on registration.\n     * @param poolHooksContract Address of the hook contract that rejected the pool registration\n     * @param pool Address of the rejected pool\n     * @param poolFactory Address of the pool factory\n     */\n    error HookRegistrationFailed(address poolHooksContract, address pool, address poolFactory);\n\n    /**\n     * @notice A token was already registered (i.e., it is a duplicate in the pool).\n     * @param token The duplicate token\n     */\n    error TokenAlreadyRegistered(IERC20 token);\n\n    /// @notice The token count is below the minimum allowed.\n    error MinTokens();\n\n    /// @notice The token count is above the maximum allowed.\n    error MaxTokens();\n\n    /// @notice Invalid tokens (e.g., zero) cannot be registered.\n    error InvalidToken();\n\n    /// @notice The token type given in a TokenConfig during pool registration is invalid.\n    error InvalidTokenType();\n\n    /// @notice The data in a TokenConfig struct is inconsistent or unsupported.\n    error InvalidTokenConfiguration();\n\n    /// @notice Tokens with more than 18 decimals are not supported.\n    error InvalidTokenDecimals();\n\n    /**\n     * @notice The token list passed into an operation does not match the pool tokens in the pool.\n     * @param pool Address of the pool\n     * @param expectedToken The correct token at a given index in the pool\n     * @param actualToken The actual token found at that index\n     */\n    error TokensMismatch(address pool, address expectedToken, address actualToken);\n\n    /*******************************************************************************\n                                 Transient Accounting\n    *******************************************************************************/\n\n    /// @notice A transient accounting operation completed with outstanding token deltas.\n    error BalanceNotSettled();\n\n    /// @notice A user called a Vault function (swap, add/remove liquidity) outside the lock context.\n    error VaultIsNotUnlocked();\n\n    /// @notice The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\n    error DynamicSwapFeeHookFailed();\n\n    /// @notice The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\n    error BeforeSwapHookFailed();\n\n    /// @notice The pool has returned false to the afterSwap hook, indicating the transaction should revert.\n    error AfterSwapHookFailed();\n\n    /// @notice The pool has returned false to the beforeInitialize hook, indicating the transaction should revert.\n    error BeforeInitializeHookFailed();\n\n    /// @notice The pool has returned false to the afterInitialize hook, indicating the transaction should revert.\n    error AfterInitializeHookFailed();\n\n    /// @notice The pool has returned false to the beforeAddLiquidity hook, indicating the transaction should revert.\n    error BeforeAddLiquidityHookFailed();\n\n    /// @notice The pool has returned false to the afterAddLiquidity hook, indicating the transaction should revert.\n    error AfterAddLiquidityHookFailed();\n\n    /// @notice The pool has returned false to the beforeRemoveLiquidity hook, indicating the transaction should revert.\n    error BeforeRemoveLiquidityHookFailed();\n\n    /// @notice The pool has returned false to the afterRemoveLiquidity hook, indicating the transaction should revert.\n    error AfterRemoveLiquidityHookFailed();\n\n    /// @notice An unauthorized Router tried to call a permissioned function (i.e., using the Vault's token allowance).\n    error RouterNotTrusted();\n\n    /*******************************************************************************\n                                        Swaps\n    *******************************************************************************/\n\n    /// @notice The user tried to swap zero tokens.\n    error AmountGivenZero();\n\n    /// @notice The user attempted to swap a token for itself.\n    error CannotSwapSameToken();\n\n    /**\n     * @notice The user attempted to operate with a token that is not in the pool.\n     * @param token The unregistered token\n     */\n    error TokenNotRegistered(IERC20 token);\n\n    /**\n     * @notice An amount in or out has exceeded the limit specified in the swap request.\n     * @param amount The total amount in or out\n     * @param limit The amount of the limit that has been exceeded\n     */\n    error SwapLimit(uint256 amount, uint256 limit);\n\n    /**\n     * @notice A hook adjusted amount in or out has exceeded the limit specified in the swap request.\n     * @param amount The total amount in or out\n     * @param limit The amount of the limit that has been exceeded\n     */\n    error HookAdjustedSwapLimit(uint256 amount, uint256 limit);\n\n    /// @notice The amount given or calculated for an operation is below the minimum limit.\n    error TradeAmountTooSmall();\n\n    /*******************************************************************************\n                                    Add Liquidity\n    *******************************************************************************/\n\n    /// @notice Add liquidity kind not supported.\n    error InvalidAddLiquidityKind();\n\n    /**\n     * @notice A required amountIn exceeds the maximum limit specified for the operation.\n     * @param tokenIn The incoming token\n     * @param amountIn The total token amount in\n     * @param maxAmountIn The amount of the limit that has been exceeded\n     */\n    error AmountInAboveMax(IERC20 tokenIn, uint256 amountIn, uint256 maxAmountIn);\n\n    /**\n     * @notice A hook adjusted amountIn exceeds the maximum limit specified for the operation.\n     * @param tokenIn The incoming token\n     * @param amountIn The total token amount in\n     * @param maxAmountIn The amount of the limit that has been exceeded\n     */\n    error HookAdjustedAmountInAboveMax(IERC20 tokenIn, uint256 amountIn, uint256 maxAmountIn);\n\n    /**\n     * @notice The BPT amount received from adding liquidity is below the minimum specified for the operation.\n     * @param amountOut The total BPT amount out\n     * @param minAmountOut The amount of the limit that has been exceeded\n     */\n    error BptAmountOutBelowMin(uint256 amountOut, uint256 minAmountOut);\n\n    /// @notice Pool does not support adding liquidity with a customized input.\n    error DoesNotSupportAddLiquidityCustom();\n\n    /// @notice Pool does not support adding liquidity through donation.\n    error DoesNotSupportDonation();\n\n    /*******************************************************************************\n                                    Remove Liquidity\n    *******************************************************************************/\n\n    /// @notice Remove liquidity kind not supported.\n    error InvalidRemoveLiquidityKind();\n\n    /**\n     * @notice The actual amount out is below the minimum limit specified for the operation.\n     * @param tokenOut The outgoing token\n     * @param amountOut The total BPT amount out\n     * @param minAmountOut The amount of the limit that has been exceeded\n     */\n    error AmountOutBelowMin(IERC20 tokenOut, uint256 amountOut, uint256 minAmountOut);\n\n    /**\n     * @notice The hook adjusted amount out is below the minimum limit specified for the operation.\n     * @param tokenOut The outgoing token\n     * @param amountOut The total BPT amount out\n     * @param minAmountOut The amount of the limit that has been exceeded\n     */\n    error HookAdjustedAmountOutBelowMin(IERC20 tokenOut, uint256 amountOut, uint256 minAmountOut);\n\n    /**\n     * @notice The required BPT amount in exceeds the maximum limit specified for the operation.\n     * @param amountIn The total BPT amount in\n     * @param maxAmountIn The amount of the limit that has been exceeded\n     */\n    error BptAmountInAboveMax(uint256 amountIn, uint256 maxAmountIn);\n\n    /// @notice Pool does not support removing liquidity with a customized input.\n    error DoesNotSupportRemoveLiquidityCustom();\n\n    /*******************************************************************************\n                                     Fees\n    *******************************************************************************/\n\n    /**\n     * @notice Error raised when there is an overflow in the fee calculation.\n     * @dev This occurs when the sum of the parts (aggregate swap or yield fee) is greater than the whole\n     * (total swap or yield fee). Also validated when the protocol fee controller updates aggregate fee\n     * percentages in the Vault.\n     */\n    error ProtocolFeesExceedTotalCollected();\n\n    /**\n     * @notice Error raised when the swap fee percentage is less than the minimum allowed value.\n     * @dev The Vault itself does not impose a universal minimum. Rather, it validates against the\n     * range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error\n     * if it is below the minimum value returned by the pool.\n     *\n     * Pools with dynamic fees do not check these limits.\n     */\n    error SwapFeePercentageTooLow();\n\n    /**\n     * @notice Error raised when the swap fee percentage is greater than the maximum allowed value.\n     * @dev The Vault itself does not impose a universal minimum. Rather, it validates against the\n     * range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error\n     * if it is above the maximum value returned by the pool.\n     *\n     * Pools with dynamic fees do not check these limits.\n     */\n    error SwapFeePercentageTooHigh();\n\n    /**\n     * @notice Primary fee percentages result in an aggregate fee that cannot be stored with the required precision.\n     * @dev Primary fee percentages are 18-decimal values, stored here in 64 bits, and calculated with full 256-bit\n     * precision. However, the resulting aggregate fees are stored in the Vault with 24-bit precision, which\n     * corresponds to 0.00001% resolution (i.e., a fee can be 1%, 1.00001%, 1.00002%, but not 1.000005%).\n     * Disallow setting fees such that there would be precision loss in the Vault, leading to a discrepancy between\n     * the aggregate fee calculated here and that stored in the Vault.\n     */\n    error FeePrecisionTooHigh();\n\n    /// @notice A given percentage is above the maximum (usually a value close to FixedPoint.ONE, or 1e18 wei).\n    error PercentageAboveMax();\n\n    /*******************************************************************************\n                                    Queries\n    *******************************************************************************/\n\n    /// @notice A user tried to execute a query operation when they were disabled.\n    error QueriesDisabled();\n\n    /// @notice An admin tried to re-enable queries, but they were disabled permanently.\n    error QueriesDisabledPermanently();\n\n    /*******************************************************************************\n                                Recovery Mode\n    *******************************************************************************/\n\n    /**\n     * @notice Cannot enable recovery mode when already enabled.\n     * @param pool The pool\n     */\n    error PoolInRecoveryMode(address pool);\n\n    /**\n     * @notice Cannot disable recovery mode when not enabled.\n     * @param pool The pool\n     */\n    error PoolNotInRecoveryMode(address pool);\n\n    /*******************************************************************************\n                                Authentication\n    *******************************************************************************/\n\n    /**\n     * @notice Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\n     * @param sender The account attempting to call a permissioned function\n     */\n    error SenderIsNotVault(address sender);\n\n    /*******************************************************************************\n                                        Pausing\n    *******************************************************************************/\n\n    /// @notice The caller specified a pause window period longer than the maximum.\n    error VaultPauseWindowDurationTooLarge();\n\n    /// @notice The caller specified a buffer period longer than the maximum.\n    error PauseBufferPeriodDurationTooLarge();\n\n    /// @notice A user tried to perform an operation while the Vault was paused.\n    error VaultPaused();\n\n    /// @notice Governance tried to unpause the Vault when it was not paused.\n    error VaultNotPaused();\n\n    /// @notice Governance tried to pause the Vault after the pause period expired.\n    error VaultPauseWindowExpired();\n\n    /**\n     * @notice A user tried to perform an operation involving a paused Pool.\n     * @param pool The paused pool\n     */\n    error PoolPaused(address pool);\n\n    /**\n     * @notice Governance tried to unpause the Pool when it was not paused.\n     * @param pool The unpaused pool\n     */\n    error PoolNotPaused(address pool);\n\n    /**\n     * @notice Governance tried to pause a Pool after the pause period expired.\n     * @param pool The pool\n     */\n    error PoolPauseWindowExpired(address pool);\n\n    /*******************************************************************************\n                                ERC4626 token buffers\n    *******************************************************************************/\n\n    /**\n     * @notice The buffer for the given wrapped token was already initialized.\n     * @param wrappedToken The wrapped token corresponding to the buffer\n     */\n    error BufferAlreadyInitialized(IERC4626 wrappedToken);\n\n    /**\n     * @notice The buffer for the given wrapped token was not initialized.\n     * @param wrappedToken The wrapped token corresponding to the buffer\n     */\n    error BufferNotInitialized(IERC4626 wrappedToken);\n\n    /// @notice The user is trying to remove more than their allocated shares from the buffer.\n    error NotEnoughBufferShares();\n\n    /**\n     * @notice The wrapped token asset does not match the underlying token.\n     * @dev This should never happen, but a malicious wrapper contract might not return the correct address.\n     * Legitimate wrapper contracts should make the asset a constant or immutable value.\n     *\n     * @param wrappedToken The wrapped token corresponding to the buffer\n     * @param underlyingToken The underlying token returned by `asset`\n     */\n    error WrongUnderlyingToken(IERC4626 wrappedToken, address underlyingToken);\n\n    /**\n     * @notice A wrapped token reported the zero address as its underlying token asset.\n     * @dev This should never happen, but a malicious wrapper contract might do this (e.g., in an attempt to\n     * re-initialize the buffer).\n     *\n     * @param wrappedToken The wrapped token corresponding to the buffer\n     */\n    error InvalidUnderlyingToken(IERC4626 wrappedToken);\n\n    /**\n     * @notice The amount given to wrap/unwrap was too small, which can introduce rounding issues.\n     * @param wrappedToken The wrapped token corresponding to the buffer\n     */\n    error WrapAmountTooSmall(IERC4626 wrappedToken);\n\n    /// @notice Buffer operation attempted while vault buffers are paused.\n    error VaultBuffersArePaused();\n\n    /// @notice Buffer shares were minted to the zero address.\n    error BufferSharesInvalidReceiver();\n\n    /// @notice Buffer shares were burned from the zero address.\n    error BufferSharesInvalidOwner();\n\n    /**\n     * @notice The total supply of a buffer can't be lower than the absolute minimum.\n     * @param totalSupply The total supply value that was below the minimum\n     */\n    error BufferTotalSupplyTooLow(uint256 totalSupply);\n\n    /// @dev A wrap/unwrap operation consumed more or returned less underlying tokens than it should.\n    error NotEnoughUnderlying(IERC4626 wrappedToken, uint256 expectedUnderlyingAmount, uint256 actualUnderlyingAmount);\n\n    /// @dev A wrap/unwrap operation consumed more or returned less wrapped tokens than it should.\n    error NotEnoughWrapped(IERC4626 wrappedToken, uint256 expectedWrappedAmount, uint256 actualWrappedAmount);\n\n    /// @dev Shares issued during initialization are below the requested amount.\n    error IssuedSharesBelowMin(uint256 issuedShares, uint256 minIssuedShares);\n\n    /*******************************************************************************\n                                    Miscellaneous\n    *******************************************************************************/\n\n    /// @notice Pool does not support adding / removing liquidity with an unbalanced input.\n    error DoesNotSupportUnbalancedLiquidity();\n\n    /// @notice The contract should not receive ETH.\n    error CannotReceiveEth();\n\n    /**\n     * @notice The `VaultExtension` contract was called by an account directly.\n     * @dev It can only be called by the Vault via delegatecall.\n     */\n    error NotVaultDelegateCall();\n\n    /// @notice The `VaultExtension` contract was configured with an incorrect Vault address.\n    error WrongVaultExtensionDeployment();\n\n    /// @notice The `ProtocolFeeController` contract was configured with an incorrect Vault address.\n    error WrongProtocolFeeControllerDeployment();\n\n    /// @notice The `VaultAdmin` contract was configured with an incorrect Vault address.\n    error WrongVaultAdminDeployment();\n\n    /// @notice Quote reverted with a reserved error code.\n    error QuoteResultSpoofed();\n}\n"},"contracts/IVaultEvents.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { IProtocolFeeController } from \"./IProtocolFeeController.sol\";\nimport { IAuthorizer } from \"./IAuthorizer.sol\";\nimport { IHooks } from \"./IHooks.sol\";\nimport \"./VaultTypes.sol\";\n\n/// @dev Events are declared inside an interface (namespace) to improve DX with Typechain.\ninterface IVaultEvents {\n    /**\n     * @notice A Pool was registered by calling `registerPool`.\n     * @param pool The pool being registered\n     * @param factory The factory creating the pool\n     * @param tokenConfig An array of descriptors for the tokens the pool will manage\n     * @param swapFeePercentage The static swap fee of the pool\n     * @param pauseWindowEndTime The pool's pause window end time\n     * @param roleAccounts Addresses the Vault will allow to change certain pool settings\n     * @param hooksConfig Flags indicating which hooks the pool supports and address of hooks contract\n     * @param liquidityManagement Supported liquidity management hook flags\n     */\n    event PoolRegistered(\n        address indexed pool,\n        address indexed factory,\n        TokenConfig[] tokenConfig,\n        uint256 swapFeePercentage,\n        uint32 pauseWindowEndTime,\n        PoolRoleAccounts roleAccounts,\n        HooksConfig hooksConfig,\n        LiquidityManagement liquidityManagement\n    );\n\n    /**\n     * @notice A Pool was initialized by calling `initialize`.\n     * @param pool The pool being initialized\n     */\n    event PoolInitialized(address indexed pool);\n\n    /**\n     * @notice A swap has occurred.\n     * @param pool The pool with the tokens being swapped\n     * @param tokenIn The token entering the Vault (balance increases)\n     * @param tokenOut The token leaving the Vault (balance decreases)\n     * @param amountIn Number of tokenIn tokens\n     * @param amountOut Number of tokenOut tokens\n     * @param swapFeePercentage Swap fee percentage applied (can differ if dynamic)\n     * @param swapFeeAmount Swap fee amount paid\n     */\n    event Swap(\n        address indexed pool,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut,\n        uint256 swapFeePercentage,\n        uint256 swapFeeAmount\n    );\n\n    /**\n     * @notice A wrap operation has occurred.\n     * @param wrappedToken The wrapped token address\n     * @param depositedUnderlying Number of underlying tokens deposited\n     * @param mintedShares Number of shares (wrapped tokens) minted\n     * @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)\n     */\n    event Wrap(\n        IERC4626 indexed wrappedToken,\n        uint256 depositedUnderlying,\n        uint256 mintedShares,\n        bytes32 bufferBalances\n    );\n\n    /**\n     * @notice An unwrap operation has occurred.\n     * @param wrappedToken The wrapped token address\n     * @param burnedShares Number of shares (wrapped tokens) burned\n     * @param withdrawnUnderlying Number of underlying tokens withdrawn\n     * @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)\n     */\n    event Unwrap(\n        IERC4626 indexed wrappedToken,\n        uint256 burnedShares,\n        uint256 withdrawnUnderlying,\n        bytes32 bufferBalances\n    );\n\n    /**\n     * @notice Liquidity has been added to a pool (including initialization).\n     * @param pool The pool with liquidity added\n     * @param liquidityProvider The user performing the operation\n     * @param kind The add liquidity operation type (e.g., proportional, custom)\n     * @param totalSupply The total supply of the pool after the operation\n     * @param amountsAddedRaw The amount of each token that was added, sorted in token registration order\n     * @param swapFeeAmountsRaw The total swap fees charged, sorted in token registration order\n     */\n    event LiquidityAdded(\n        address indexed pool,\n        address indexed liquidityProvider,\n        AddLiquidityKind indexed kind,\n        uint256 totalSupply,\n        uint256[] amountsAddedRaw,\n        uint256[] swapFeeAmountsRaw\n    );\n\n    /**\n     * @notice Liquidity has been removed from a pool.\n     * @param pool The pool with liquidity removed\n     * @param liquidityProvider The user performing the operation\n     * @param kind The remove liquidity operation type (e.g., proportional, custom)\n     * @param totalSupply The total supply of the pool after the operation\n     * @param amountsRemovedRaw The amount of each token that was removed, sorted in token registration order\n     * @param swapFeeAmountsRaw The total swap fees charged, sorted in token registration order\n     */\n    event LiquidityRemoved(\n        address indexed pool,\n        address indexed liquidityProvider,\n        RemoveLiquidityKind indexed kind,\n        uint256 totalSupply,\n        uint256[] amountsRemovedRaw,\n        uint256[] swapFeeAmountsRaw\n    );\n\n    /**\n     * @notice The Vault's pause status has changed.\n     * @param paused True if the Vault was paused\n     */\n    event VaultPausedStateChanged(bool paused);\n\n    /// @notice `disableQuery` has been called on the Vault, disabling query functionality.\n    event VaultQueriesDisabled();\n\n    /// @notice `enableQuery` has been called on the Vault, enabling query functionality.\n    event VaultQueriesEnabled();\n\n    /**\n     * @notice A Pool's pause status has changed.\n     * @param pool The pool that was just paused or unpaused\n     * @param paused True if the pool was paused\n     */\n    event PoolPausedStateChanged(address indexed pool, bool paused);\n\n    /**\n     * @notice Emitted when the swap fee percentage of a pool is updated.\n     * @param swapFeePercentage The new swap fee percentage for the pool\n     */\n    event SwapFeePercentageChanged(address indexed pool, uint256 swapFeePercentage);\n\n    /**\n     * @notice Recovery mode has been enabled or disabled for a pool.\n     * @param pool The pool\n     * @param recoveryMode True if recovery mode was enabled\n     */\n    event PoolRecoveryModeStateChanged(address indexed pool, bool recoveryMode);\n\n    /**\n     * @notice A protocol or pool creator fee has changed, causing an update to the aggregate swap fee.\n     * @dev The `ProtocolFeeController` will emit an event with the underlying change.\n     * @param pool The pool whose aggregate swap fee percentage changed\n     * @param aggregateSwapFeePercentage The new aggregate swap fee percentage\n     */\n    event AggregateSwapFeePercentageChanged(address indexed pool, uint256 aggregateSwapFeePercentage);\n\n    /**\n     * @notice A protocol or pool creator fee has changed, causing an update to the aggregate yield fee.\n     * @dev The `ProtocolFeeController` will emit an event with the underlying change.\n     * @param pool The pool whose aggregate yield fee percentage changed\n     * @param aggregateYieldFeePercentage The new aggregate yield fee percentage\n     */\n    event AggregateYieldFeePercentageChanged(address indexed pool, uint256 aggregateYieldFeePercentage);\n\n    /**\n     * @notice A new authorizer is set by `setAuthorizer`.\n     * @param newAuthorizer The address of the new authorizer\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    /**\n     * @notice A new protocol fee controller is set by `setProtocolFeeController`.\n     * @param newProtocolFeeController The address of the new protocol fee controller\n     */\n    event ProtocolFeeControllerChanged(IProtocolFeeController indexed newProtocolFeeController);\n\n    /**\n     * @notice Liquidity was added to an ERC4626 buffer corresponding to the given wrapped token.\n     * @dev The underlying token can be derived from the wrapped token, so it's not included here.\n     *\n     * @param wrappedToken The wrapped token that identifies the buffer\n     * @param amountUnderlying The amount of the underlying token that was deposited\n     * @param amountWrapped The amount of the wrapped token that was deposited\n     * @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)\n     */\n    event LiquidityAddedToBuffer(\n        IERC4626 indexed wrappedToken,\n        uint256 amountUnderlying,\n        uint256 amountWrapped,\n        bytes32 bufferBalances\n    );\n\n    /**\n     * @notice Buffer shares were minted for an ERC4626 buffer corresponding to a given wrapped token.\n     * @dev The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares`\n     * retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the\n     * \"totalSupply\" of a buffer.\n     *\n     * @param wrappedToken The wrapped token that identifies the buffer\n     * @param to The owner of the minted shares\n     * @param issuedShares The amount of \"internal BPT\" shares created\n     */\n    event BufferSharesMinted(IERC4626 indexed wrappedToken, address indexed to, uint256 issuedShares);\n\n    /**\n     * @notice Buffer shares were burned for an ERC4626 buffer corresponding to a given wrapped token.\n     * @dev The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares`\n     * retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the\n     * \"totalSupply\" of a buffer.\n     *\n     * @param wrappedToken The wrapped token that identifies the buffer\n     * @param from The owner of the burned shares\n     * @param burnedShares The amount of \"internal BPT\" shares burned\n     */\n    event BufferSharesBurned(IERC4626 indexed wrappedToken, address indexed from, uint256 burnedShares);\n\n    /**\n     * @notice Liquidity was removed from an ERC4626 buffer.\n     * @dev The underlying token can be derived from the wrapped token, so it's not included here.\n     * @param wrappedToken The wrapped token that identifies the buffer\n     * @param amountUnderlying The amount of the underlying token that was withdrawn\n     * @param amountWrapped The amount of the wrapped token that was withdrawn\n     * @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)\n     */\n    event LiquidityRemovedFromBuffer(\n        IERC4626 indexed wrappedToken,\n        uint256 amountUnderlying,\n        uint256 amountWrapped,\n        bytes32 bufferBalances\n    );\n\n    /**\n     * @notice The Vault buffers pause status has changed.\n     * @dev If buffers all paused, all buffer operations (i.e., all calls through the Router with `isBuffer`\n     * set to true) will revert.\n     *\n     * @param paused True if the Vault buffers were paused\n     */\n    event VaultBuffersPausedStateChanged(bool paused);\n\n    /**\n     * @notice Pools can use this event to emit event data from the Vault.\n     * @param pool Pool address\n     * @param eventKey Event key\n     * @param eventData Encoded event data\n     */\n    event VaultAuxiliary(address indexed pool, bytes32 indexed eventKey, bytes eventData);\n}\n"},"contracts/IVaultExtension.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { IAuthorizer } from \"./IAuthorizer.sol\";\nimport { IProtocolFeeController } from \"./IProtocolFeeController.sol\";\nimport { IVault } from \"./IVault.sol\";\nimport { IHooks } from \"./IHooks.sol\";\nimport \"./VaultTypes.sol\";\n\n/**\n * @notice Interface for functions defined on the `VaultExtension` contract.\n * @dev `VaultExtension` handles less critical or frequently used functions, since delegate calls through\n * the Vault are more expensive than direct calls. The main Vault contains the core code for swaps and\n * liquidity operations.\n */\ninterface IVaultExtension {\n    /*******************************************************************************\n                              Constants and immutables\n    *******************************************************************************/\n\n    /**\n     * @notice Returns the main Vault address.\n     * @dev The main Vault contains the entrypoint and main liquidity operation implementations.\n     * @return vault The address of the main Vault\n     */\n    function vault() external view returns (IVault);\n\n    /**\n     * @notice Returns the VaultAdmin contract address.\n     * @dev The VaultAdmin contract mostly implements permissioned functions.\n     * @return vaultAdmin The address of the Vault admin\n     */\n    function getVaultAdmin() external view returns (address vaultAdmin);\n\n    /*******************************************************************************\n                              Transient Accounting\n    *******************************************************************************/\n\n    /**\n     * @notice Returns whether the Vault is unlocked (i.e., executing an operation).\n     * @dev The Vault must be unlocked to perform state-changing liquidity operations.\n     * @return unlocked True if the Vault is unlocked, false otherwise\n     */\n    function isUnlocked() external view returns (bool unlocked);\n\n    /**\n     *  @notice Returns the count of non-zero deltas.\n     *  @return nonzeroDeltaCount The current value of `_nonzeroDeltaCount`\n     */\n    function getNonzeroDeltaCount() external view returns (uint256 nonzeroDeltaCount);\n\n    /**\n     * @notice Retrieves the token delta for a specific token.\n     * @dev This function allows reading the value from the `_tokenDeltas` mapping.\n     * @param token The token for which the delta is being fetched\n     * @return tokenDelta The delta of the specified token\n     */\n    function getTokenDelta(IERC20 token) external view returns (int256 tokenDelta);\n\n    /**\n     * @notice Retrieves the reserve (i.e., total Vault balance) of a given token.\n     * @param token The token for which to retrieve the reserve\n     * @return reserveAmount The amount of reserves for the given token\n     */\n    function getReservesOf(IERC20 token) external view returns (uint256 reserveAmount);\n\n    /**\n     * @notice This flag is used to detect and tax \"round-trip\" interactions (adding and removing liquidity in the\n     * same pool).\n     * @dev Taxing remove liquidity proportional whenever liquidity was added in the same `unlock` call adds an extra\n     * layer of security, discouraging operations that try to undo others for profit. Remove liquidity proportional\n     * is the only standard way to exit a position without fees, and this flag is used to enable fees in that case.\n     * It also discourages indirect swaps via unbalanced add and remove proportional, as they are expected to be worse\n     * than a simple swap for every pool type.\n     *\n     * @param pool Address of the pool to check\n     * @return liquidityAdded True if liquidity has been added to this pool in the current transaction\n     \n     * Note that there is no `sessionId` argument; it always returns the value for the current (i.e., latest) session.\n     */\n    function getAddLiquidityCalledFlag(address pool) external view returns (bool liquidityAdded);\n\n    /*******************************************************************************\n                                    Pool Registration\n    *******************************************************************************/\n\n    /**\n     * @notice Registers a pool, associating it with its factory and the tokens it manages.\n     * @dev A pool can opt-out of pausing by providing a zero value for the pause window, or allow pausing indefinitely\n     * by providing a large value. (Pool pause windows are not limited by the Vault maximums.) The vault defines an\n     * additional buffer period during which a paused pool will stay paused. After the buffer period passes, a paused\n     * pool will automatically unpause. Balancer timestamps are 32 bits.\n     *\n     * A pool can opt out of Balancer governance pausing by providing a custom `pauseManager`. This might be a\n     * multi-sig contract or an arbitrary smart contract with its own access controls, that forwards calls to\n     * the Vault.\n     *\n     * If the zero address is provided for the `pauseManager`, permissions for pausing the pool will default to the\n     * authorizer.\n     *\n     * @param pool The address of the pool being registered\n     * @param tokenConfig An array of descriptors for the tokens the pool will manage\n     * @param swapFeePercentage The initial static swap fee percentage of the pool\n     * @param pauseWindowEndTime The timestamp after which it is no longer possible to pause the pool\n     * @param protocolFeeExempt If true, the pool's initial aggregate fees will be set to 0\n     * @param roleAccounts Addresses the Vault will allow to change certain pool settings\n     * @param poolHooksContract Contract that implements the hooks for the pool\n     * @param liquidityManagement Liquidity management flags with implemented methods\n     */\n    function registerPool(\n        address pool,\n        TokenConfig[] memory tokenConfig,\n        uint256 swapFeePercentage,\n        uint32 pauseWindowEndTime,\n        bool protocolFeeExempt,\n        PoolRoleAccounts calldata roleAccounts,\n        address poolHooksContract,\n        LiquidityManagement calldata liquidityManagement\n    ) external;\n\n    /**\n     * @notice Checks whether a pool is registered.\n     * @param pool Address of the pool to check\n     * @return registered True if the pool is registered, false otherwise\n     */\n    function isPoolRegistered(address pool) external view returns (bool registered);\n\n    /**\n     * @notice Initializes a registered pool by adding liquidity; mints BPT tokens for the first time in exchange.\n     * @param pool Address of the pool to initialize\n     * @param to Address that will receive the output BPT\n     * @param tokens Tokens used to seed the pool (must match the registered tokens)\n     * @param exactAmountsIn Exact amounts of input tokens\n     * @param minBptAmountOut Minimum amount of output pool tokens\n     * @param userData Additional (optional) data required for adding initial liquidity\n     * @return bptAmountOut Output pool token amount\n     */\n    function initialize(\n        address pool,\n        address to,\n        IERC20[] memory tokens,\n        uint256[] memory exactAmountsIn,\n        uint256 minBptAmountOut,\n        bytes memory userData\n    ) external returns (uint256 bptAmountOut);\n\n    /*******************************************************************************\n                                    Pool Information\n    *******************************************************************************/\n\n    /**\n     * @notice Checks whether a pool is initialized.\n     * @dev An initialized pool can be considered registered as well.\n     * @param pool Address of the pool to check\n     * @return initialized True if the pool is initialized, false otherwise\n     */\n    function isPoolInitialized(address pool) external view returns (bool initialized);\n\n    /**\n     * @notice Gets the tokens registered to a pool.\n     * @param pool Address of the pool\n     * @return tokens List of tokens in the pool\n     */\n    function getPoolTokens(address pool) external view returns (IERC20[] memory tokens);\n\n    /**\n     * @notice Gets pool token rates.\n     * @dev This function performs external calls if tokens are yield-bearing. All returned arrays are in token\n     * registration order.\n     *\n     * @param pool Address of the pool\n     * @return decimalScalingFactors Conversion factor used to adjust for token decimals for uniform precision in\n     * calculations. FP(1) for 18-decimal tokens\n     * @return tokenRates 18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens\n     */\n    function getPoolTokenRates(\n        address pool\n    ) external view returns (uint256[] memory decimalScalingFactors, uint256[] memory tokenRates);\n\n    /**\n     * @notice Returns comprehensive pool data for the given pool.\n     * @dev This contains the pool configuration (flags), tokens and token types, rates, scaling factors, and balances.\n     * @param pool The address of the pool\n     * @return poolData The `PoolData` result\n     */\n    function getPoolData(address pool) external view returns (PoolData memory poolData);\n\n    /**\n     * @notice Gets the raw data for a pool: tokens, raw balances, scaling factors.\n     * @param pool Address of the pool\n     * @return tokens The pool tokens, sorted in registration order\n     * @return tokenInfo Token info structs (type, rate provider, yield flag), sorted in token registration order\n     * @return balancesRaw Current native decimal balances of the pool tokens, sorted in token registration order\n     * @return lastBalancesLiveScaled18 Last saved live balances, sorted in token registration order\n     */\n    function getPoolTokenInfo(\n        address pool\n    )\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            TokenInfo[] memory tokenInfo,\n            uint256[] memory balancesRaw,\n            uint256[] memory lastBalancesLiveScaled18\n        );\n\n    /**\n     * @notice Gets current live balances of a given pool (fixed-point, 18 decimals), corresponding to its tokens in\n     * registration order.\n     *\n     * @param pool Address of the pool\n     * @return balancesLiveScaled18 Token balances after paying yield fees, applying decimal scaling and rates\n     */\n    function getCurrentLiveBalances(address pool) external view returns (uint256[] memory balancesLiveScaled18);\n\n    /**\n     * @notice Gets the configuration parameters of a pool.\n     * @dev The `PoolConfig` contains liquidity management and other state flags, fee percentages, the pause window.\n     * @param pool Address of the pool\n     * @return poolConfig The pool configuration as a `PoolConfig` struct\n     */\n    function getPoolConfig(address pool) external view returns (PoolConfig memory poolConfig);\n\n    /**\n     * @notice Gets the hooks configuration parameters of a pool.\n     * @dev The `HooksConfig` contains flags indicating which pool hooks are implemented.\n     * @param pool Address of the pool\n     * @return hooksConfig The hooks configuration as a `HooksConfig` struct\n     */\n    function getHooksConfig(address pool) external view returns (HooksConfig memory hooksConfig);\n\n    /**\n     * @notice The current rate of a pool token (BPT) = invariant / totalSupply.\n     * @param pool Address of the pool\n     * @return rate BPT rate\n     */\n    function getBptRate(address pool) external view returns (uint256 rate);\n\n    /*******************************************************************************\n                                 Balancer Pool Tokens\n    *******************************************************************************/\n\n    /**\n     * @notice Gets the total supply of a given ERC20 token.\n     * @param token The token address\n     * @return tokenTotalSupply Total supply of the token\n     */\n    function totalSupply(address token) external view returns (uint256 tokenTotalSupply);\n\n    /**\n     * @notice Gets the balance of an account for a given ERC20 token.\n     * @param token Address of the token\n     * @param account Address of the account\n     * @return tokenBalance Token balance of the account\n     */\n    function balanceOf(address token, address account) external view returns (uint256 tokenBalance);\n\n    /**\n     * @notice Gets the allowance of a spender for a given ERC20 token and owner.\n     * @param token Address of the token\n     * @param owner Address of the owner\n     * @param spender Address of the spender\n     * @return tokenAllowance Amount of tokens the spender is allowed to spend\n     */\n    function allowance(address token, address owner, address spender) external view returns (uint256 tokenAllowance);\n\n    /**\n     * @notice Approves a spender to spend pool tokens on behalf of sender.\n     * @dev Notice that the pool token address is not included in the params. This function is exclusively called by\n     * the pool contract, so msg.sender is used as the token address.\n     *\n     * @param owner Address of the owner\n     * @param spender Address of the spender\n     * @param amount Amount of tokens to approve\n     * @return success True if successful, false otherwise\n     */\n    function approve(address owner, address spender, uint256 amount) external returns (bool success);\n\n    /*******************************************************************************\n                                     Pool Pausing\n    *******************************************************************************/\n\n    /**\n     * @notice Indicates whether a pool is paused.\n     * @dev If a pool is paused, all non-Recovery Mode state-changing operations will revert.\n     * @param pool The pool to be checked\n     * @return poolPaused True if the pool is paused\n     */\n    function isPoolPaused(address pool) external view returns (bool poolPaused);\n\n    /**\n     * @notice Returns the paused status, and end times of the Pool's pause window and buffer period.\n     * @dev Note that even when set to a paused state, the pool will automatically unpause at the end of\n     * the buffer period. Balancer timestamps are 32 bits.\n     *\n     * @param pool The pool whose data is requested\n     * @return poolPaused True if the Pool is paused\n     * @return poolPauseWindowEndTime The timestamp of the end of the Pool's pause window\n     * @return poolBufferPeriodEndTime The timestamp after which the Pool unpauses itself (if paused)\n     * @return pauseManager The pause manager, or the zero address\n     */\n    function getPoolPausedState(\n        address pool\n    )\n        external\n        view\n        returns (bool poolPaused, uint32 poolPauseWindowEndTime, uint32 poolBufferPeriodEndTime, address pauseManager);\n\n    /*******************************************************************************\n                                   ERC4626 Buffers\n    *******************************************************************************/\n\n    /**\n     * @notice Checks if the wrapped token has an initialized buffer in the Vault.\n     * @dev An initialized buffer should have an asset registered in the Vault.\n     * @param wrappedToken Address of the wrapped token that implements IERC4626\n     * @return isBufferInitialized True if the ERC4626 buffer is initialized\n     */\n    function isERC4626BufferInitialized(IERC4626 wrappedToken) external view returns (bool isBufferInitialized);\n\n    /**\n     * @notice Gets the registered asset for a given buffer.\n     * @dev To avoid malicious wrappers (e.g., that might potentially change their asset after deployment), routers\n     * should never call `wrapper.asset()` directly, at least without checking it against the asset registered with\n     * the Vault on initialization.\n     *\n     * @param wrappedToken The wrapped token specifying the buffer\n     * @return asset The underlying asset of the wrapped token\n     */\n    function getERC4626BufferAsset(IERC4626 wrappedToken) external view returns (address asset);\n\n    /*******************************************************************************\n                                          Fees\n    *******************************************************************************/\n\n    /**\n     * @notice Returns the accumulated swap fees (including aggregate fees) in `token` collected by the pool.\n     * @param pool The address of the pool for which aggregate fees have been collected\n     * @param token The address of the token in which fees have been accumulated\n     * @return swapFeeAmount The total amount of fees accumulated in the specified token\n     */\n    function getAggregateSwapFeeAmount(address pool, IERC20 token) external view returns (uint256 swapFeeAmount);\n\n    /**\n     * @notice Returns the accumulated yield fees (including aggregate fees) in `token` collected by the pool.\n     * @param pool The address of the pool for which aggregate fees have been collected\n     * @param token The address of the token in which fees have been accumulated\n     * @return yieldFeeAmount The total amount of fees accumulated in the specified token\n     */\n    function getAggregateYieldFeeAmount(address pool, IERC20 token) external view returns (uint256 yieldFeeAmount);\n\n    /**\n     * @notice Fetches the static swap fee percentage for a given pool.\n     * @param pool The address of the pool whose static swap fee percentage is being queried\n     * @return swapFeePercentage The current static swap fee percentage for the specified pool\n     */\n    function getStaticSwapFeePercentage(address pool) external view returns (uint256 swapFeePercentage);\n\n    /**\n     * @notice Fetches the role accounts for a given pool (pause manager, swap manager, pool creator)\n     * @param pool The address of the pool whose roles are being queried\n     * @return roleAccounts A struct containing the role accounts for the pool (or 0 if unassigned)\n     */\n    function getPoolRoleAccounts(address pool) external view returns (PoolRoleAccounts memory roleAccounts);\n\n    /**\n     * @notice Query the current dynamic swap fee percentage of a pool, given a set of swap parameters.\n     * @dev Reverts if the hook doesn't return the success flag set to `true`.\n     * @param pool The pool\n     * @param swapParams The swap parameters used to compute the fee\n     * @return dynamicSwapFeePercentage The dynamic swap fee percentage\n     */\n    function computeDynamicSwapFeePercentage(\n        address pool,\n        PoolSwapParams memory swapParams\n    ) external view returns (uint256 dynamicSwapFeePercentage);\n\n    /**\n     * @notice Returns the Protocol Fee Controller address.\n     * @return protocolFeeController Address of the ProtocolFeeController\n     */\n    function getProtocolFeeController() external view returns (IProtocolFeeController protocolFeeController);\n\n    /*******************************************************************************\n                                     Recovery Mode\n    *******************************************************************************/\n\n    /**\n     * @notice Checks whether a pool is in Recovery Mode.\n     * @dev Recovery Mode enables a safe proportional withdrawal path, with no external calls.\n     * @param pool Address of the pool to check\n     * @return inRecoveryMode True if the pool is in Recovery Mode, false otherwise\n     */\n    function isPoolInRecoveryMode(address pool) external view returns (bool inRecoveryMode);\n\n    /**\n     * @notice Remove liquidity from a pool specifying exact pool tokens in, with proportional token amounts out.\n     * The request is implemented by the Vault without any interaction with the pool, ensuring that\n     * it works the same for all pools, and cannot be disabled by a new pool type.\n     *\n     * @param pool Address of the pool\n     * @param from Address of user to burn pool tokens from\n     * @param exactBptAmountIn Input pool token amount\n     * @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n     * @return amountsOut Actual calculated amounts of output tokens, sorted in token registration order\n     */\n    function removeLiquidityRecovery(\n        address pool,\n        address from,\n        uint256 exactBptAmountIn,\n        uint256[] memory minAmountsOut\n    ) external returns (uint256[] memory amountsOut);\n\n    /*******************************************************************************\n                                    Queries\n    *******************************************************************************/\n\n    /**\n     * @notice Performs a callback on msg.sender with arguments provided in `data`.\n     * @dev Used to query a set of operations on the Vault. Only off-chain eth_call are allowed,\n     * anything else will revert.\n     *\n     * Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier.\n     *\n     * Allows the external calling of a function via the Vault contract to\n     * access Vault's functions guarded by `onlyWhenUnlocked`.\n     * `transient` modifier ensuring balances changes within the Vault are settled.\n     *\n     * @param data Contains function signature and args to be passed to the msg.sender\n     * @return result Resulting data from the call\n     */\n    function quote(bytes calldata data) external returns (bytes memory result);\n\n    /**\n     * @notice Performs a callback on msg.sender with arguments provided in `data`.\n     * @dev Used to query a set of operations on the Vault. Only off-chain eth_call are allowed,\n     * anything else will revert.\n     *\n     * Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier.\n     *\n     * Allows the external calling of a function via the Vault contract to\n     * access Vault's functions guarded by `onlyWhenUnlocked`.\n     * `transient` modifier ensuring balances changes within the Vault are settled.\n     *\n     * This call always reverts, returning the result in the revert reason.\n     *\n     * @param data Contains function signature and args to be passed to the msg.sender\n     */\n    function quoteAndRevert(bytes calldata data) external;\n\n    /**\n     * @notice Returns true if queries are disabled on the Vault.\n     * @dev If true, queries might either be disabled temporarily or permanently.\n     * @return queryDisabled True if query functionality is reversibly disabled\n     */\n    function isQueryDisabled() external view returns (bool queryDisabled);\n\n    /**\n     * @notice Returns true if queries are disabled permanently; false if they are enabled.\n     * @dev This is a one-way switch. Once queries are disabled permanently, they can never be re-enabled.\n     * @return queryDisabledPermanently True if query functionality is permanently disabled\n     */\n    function isQueryDisabledPermanently() external view returns (bool queryDisabledPermanently);\n\n    /**\n     * @notice Pools can use this event to emit event data from the Vault.\n     * @param eventKey Event key\n     * @param eventData Encoded event data\n     */\n    function emitAuxiliaryEvent(bytes32 eventKey, bytes calldata eventData) external;\n\n    /*******************************************************************************\n                                Authentication\n    *******************************************************************************/\n\n    /**\n     * @notice Returns the Authorizer address.\n     * @dev The authorizer holds the permissions granted by governance. It is set on Vault deployment,\n     * and can be changed through a permissioned call.\n     *\n     * @return authorizer Address of the authorizer contract\n     */\n    function getAuthorizer() external view returns (IAuthorizer authorizer);\n}\n"},"contracts/IVaultMain.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./VaultTypes.sol\";\n\n/**\n * @notice Interface for functions defined on the main Vault contract.\n * @dev These are generally \"critical path\" functions (swap, add/remove liquidity) that are in the main contract\n * for technical or performance reasons.\n */\ninterface IVaultMain {\n    /*******************************************************************************\n                              Transient Accounting\n    *******************************************************************************/\n\n    /**\n     * @notice Creates a context for a sequence of operations (i.e., \"unlocks\" the Vault).\n     * @dev Performs a callback on msg.sender with arguments provided in `data`. The Callback is `transient`,\n     * meaning all balances for the caller have to be settled at the end.\n     *\n     * @param data Contains function signature and args to be passed to the msg.sender\n     * @return result Resulting data from the call\n     */\n    function unlock(bytes calldata data) external returns (bytes memory result);\n\n    /**\n     * @notice Settles deltas for a token; must be successful for the current lock to be released.\n     * @dev Protects the caller against leftover dust in the Vault for the token being settled. The caller\n     * should know in advance how many tokens were paid to the Vault, so it can provide it as a hint to discard any\n     * excess in the Vault balance.\n     *\n     * If the given hint is equal to or higher than the difference in reserves, the difference in reserves is given as\n     * credit to the caller. If it's higher, the caller sent fewer tokens than expected, so settlement would fail.\n     *\n     * If the given hint is lower than the difference in reserves, the hint is given as credit to the caller.\n     * In this case, the excess would be absorbed by the Vault (and reflected correctly in the reserves), but would\n     * not affect settlement.\n     *\n     * The credit supplied by the Vault can be calculated as `min(reserveDifference, amountHint)`, where the reserve\n     * difference equals current balance of the token minus existing reserves of the token when the function is called.\n     *\n     * @param token Address of the token\n     * @param amountHint Amount paid as reported by the caller\n     * @return credit Credit received in return of the payment\n     */\n    function settle(IERC20 token, uint256 amountHint) external returns (uint256 credit);\n\n    /**\n     * @notice Sends tokens to a recipient.\n     * @dev There is no inverse operation for this function. Transfer funds to the Vault and call `settle` to cancel\n     * debts.\n     *\n     * @param token Address of the token\n     * @param to Recipient address\n     * @param amount Amount of tokens to send\n     */\n    function sendTo(IERC20 token, address to, uint256 amount) external;\n\n    /***************************************************************************\n                                       Swaps\n    ***************************************************************************/\n\n    /**\n     * @notice Swaps tokens based on provided parameters.\n     * @dev All parameters are given in raw token decimal encoding.\n     * @param vaultSwapParams Parameters for the swap (see above for struct definition)\n     * @return amountCalculatedRaw Calculated swap amount\n     * @return amountInRaw Amount of input tokens for the swap\n     * @return amountOutRaw Amount of output tokens from the swap\n     */\n    function swap(\n        VaultSwapParams memory vaultSwapParams\n    ) external returns (uint256 amountCalculatedRaw, uint256 amountInRaw, uint256 amountOutRaw);\n\n    /***************************************************************************\n                                   Add Liquidity\n    ***************************************************************************/\n\n    /**\n     * @notice Adds liquidity to a pool.\n     * @dev Caution should be exercised when adding liquidity because the Vault has the capability\n     * to transfer tokens from any user, given that it holds all allowances.\n     *\n     * @param params Parameters for the add liquidity (see above for struct definition)\n     * @return amountsIn Actual amounts of input tokens\n     * @return bptAmountOut Output pool token amount\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function addLiquidity(\n        AddLiquidityParams memory params\n    ) external returns (uint256[] memory amountsIn, uint256 bptAmountOut, bytes memory returnData);\n\n    /***************************************************************************\n                                 Remove Liquidity\n    ***************************************************************************/\n\n    /**\n     * @notice Removes liquidity from a pool.\n     * @dev Trusted routers can burn pool tokens belonging to any user and require no prior approval from the user.\n     * Untrusted routers require prior approval from the user. This is the only function allowed to call\n     * _queryModeBalanceIncrease (and only in a query context).\n     *\n     * @param params Parameters for the remove liquidity (see above for struct definition)\n     * @return bptAmountIn Actual amount of BPT burned\n     * @return amountsOut Actual amounts of output tokens\n     * @return returnData Arbitrary (optional) data with an encoded response from the pool\n     */\n    function removeLiquidity(\n        RemoveLiquidityParams memory params\n    ) external returns (uint256 bptAmountIn, uint256[] memory amountsOut, bytes memory returnData);\n\n    /*******************************************************************************\n                                    Pool Information\n    *******************************************************************************/\n\n    /**\n     * @notice Gets the index of a token in a given pool.\n     * @dev Reverts if the pool is not registered, or if the token does not belong to the pool.\n     * @param pool Address of the pool\n     * @param token Address of the token\n     * @return tokenCount Number of tokens in the pool\n     * @return index Index corresponding to the given token in the pool's token list\n     */\n    function getPoolTokenCountAndIndexOfToken(\n        address pool,\n        IERC20 token\n    ) external view returns (uint256 tokenCount, uint256 index);\n\n    /*******************************************************************************\n                                 Balancer Pool Tokens\n    *******************************************************************************/\n\n    /**\n     * @notice Transfers pool token from owner to a recipient.\n     * @dev Notice that the pool token address is not included in the params. This function is exclusively called by\n     * the pool contract, so msg.sender is used as the token address.\n     *\n     * @param owner Address of the owner\n     * @param to Address of the recipient\n     * @param amount Amount of tokens to transfer\n     * @return success True if successful, false otherwise\n     */\n    function transfer(address owner, address to, uint256 amount) external returns (bool);\n\n    /**\n     * @notice Transfers pool token from a sender to a recipient using an allowance.\n     * @dev Notice that the pool token address is not included in the params. This function is exclusively called by\n     * the pool contract, so msg.sender is used as the token address.\n     *\n     * @param spender Address allowed to perform the transfer\n     * @param from Address of the sender\n     * @param to Address of the recipient\n     * @param amount Amount of tokens to transfer\n     * @return success True if successful, false otherwise\n     */\n    function transferFrom(address spender, address from, address to, uint256 amount) external returns (bool success);\n\n    /*******************************************************************************\n                                  ERC4626 Buffers\n    *******************************************************************************/\n\n    /**\n     * @notice Wraps/unwraps tokens based on the parameters provided.\n     * @dev All parameters are given in raw token decimal encoding. It requires the buffer to be initialized,\n     * and uses the internal wrapped token buffer when it has enough liquidity to avoid external calls.\n     *\n     * @param params Parameters for the wrap/unwrap operation (see struct definition)\n     * @return amountCalculatedRaw Calculated swap amount\n     * @return amountInRaw Amount of input tokens for the swap\n     * @return amountOutRaw Amount of output tokens from the swap\n     */\n    function erc4626BufferWrapOrUnwrap(\n        BufferWrapOrUnwrapParams memory params\n    ) external returns (uint256 amountCalculatedRaw, uint256 amountInRaw, uint256 amountOutRaw);\n\n    /*******************************************************************************\n                                     Miscellaneous\n    *******************************************************************************/\n\n    /**\n     * @notice Returns the VaultExtension contract address.\n     * @dev Function is in the main Vault contract. The VaultExtension handles less critical or frequently used\n     * functions, since delegate calls through the Vault are more expensive than direct calls.\n     *\n     * @return vaultExtension Address of the VaultExtension\n     */\n    function getVaultExtension() external view returns (address vaultExtension);\n}\n"},"contracts/IVersion.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n/// @notice Simple interface to retrieve the version of a deployed contract.\ninterface IVersion {\n    /**\n     * @notice Return arbitrary text representing the version of a contract.\n     * @dev For standard Balancer contracts, returns a JSON representation of the contract version containing name,\n     * version number and task ID. See real examples in the deployment repo; local tests just use plain text strings.\n     *\n     * @return version The version string corresponding to the current deployed contract\n     */\n    function version() external view returns (string memory);\n}\n"},"contracts/IWETH.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @notice Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    /**\n     * @notice \"wrap\" native ETH to WETH.\n     * @dev The amount is msg.value.\n     */\n    function deposit() external payable;\n\n    /**\n     * @notice \"unwrap\" WETH to native ETH.\n     * @param amount The amount to withdraw\n     */\n    function withdraw(uint256 amount) external;\n}\n"},"contracts/ReentrancyGuardTransient.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.24;\n\nimport { StorageSlotExtension } from \"./StorageSlotExtension.sol\";\n\n/**\n * @notice Variant of {ReentrancyGuard} that uses transient storage.\n * @dev NOTE: This variant only works on networks where EIP-1153 is available.\n */\nabstract contract ReentrancyGuardTransient {\n    using StorageSlotExtension for *;\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant _REENTRANCY_GUARD_STORAGE =\n        0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    /// @notice Unauthorized reentrant call.\n    error ReentrancyGuardReentrantCall();\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED.\n        if (_reentrancyGuardEntered()) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail.\n        _REENTRANCY_GUARD_STORAGE.asBoolean().tstore(true);\n    }\n\n    function _nonReentrantAfter() private {\n        _REENTRANCY_GUARD_STORAGE.asBoolean().tstore(false);\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _REENTRANCY_GUARD_STORAGE.asBoolean().tload();\n    }\n}\n"},"contracts/RevertCodec.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\n// solhint-disable no-inline-assembly\n\n/// @notice Support `quoteAndRevert`: a v2-style query which always reverts, and returns the result in the return data.\nlibrary RevertCodec {\n    /**\n     * @notice On success of the primary operation in a `quoteAndRevert`, this error is thrown with the return data.\n     * @param result The result of the query operation\n     */\n    error Result(bytes result);\n\n    /// @notice Handle the \"reverted without a reason\" case (i.e., no return data).\n    error ErrorSelectorNotFound();\n\n    function catchEncodedResult(bytes memory resultRaw) internal pure returns (bytes memory) {\n        bytes4 errorSelector = RevertCodec.parseSelector(resultRaw);\n        if (errorSelector != Result.selector) {\n            // Bubble up error message if the revert reason is not the expected one.\n            RevertCodec.bubbleUpRevert(resultRaw);\n        }\n\n        uint256 resultRawLength = resultRaw.length;\n        assembly (\"memory-safe\") {\n            resultRaw := add(resultRaw, 0x04) // Slice the sighash\n            mstore(resultRaw, sub(resultRawLength, 4)) // Set proper length\n        }\n\n        return abi.decode(resultRaw, (bytes));\n    }\n\n    /// @dev Returns the first 4 bytes in an array, reverting if the length is < 4.\n    function parseSelector(bytes memory callResult) internal pure returns (bytes4 errorSelector) {\n        if (callResult.length < 4) {\n            revert ErrorSelectorNotFound();\n        }\n        assembly (\"memory-safe\") {\n            errorSelector := mload(add(callResult, 0x20)) // Load the first 4 bytes from data (skip length offset)\n        }\n    }\n\n    /// @dev Taken from Openzeppelin's Address.\n    function bubbleUpRevert(bytes memory returnData) internal pure {\n        // Look for revert reason and bubble it up if present.\n        if (returnData.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly.\n\n            assembly (\"memory-safe\") {\n                let return_data_size := mload(returnData)\n                revert(add(32, returnData), return_data_size)\n            }\n        } else {\n            revert ErrorSelectorNotFound();\n        }\n    }\n}\n"},"contracts/RouterCommon.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20Permit } from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { SafeCast } from \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\n// import { IPermit2 } from \"@uniswap/permit2/src/interfaces/IPermit2.sol\"; // @todo: delete\n\nimport { IRouterCommon } from \"./IRouterCommon.sol\";\nimport { IWETH } from \"./IWETH.sol\";\nimport { IAllowanceTransfer } from \"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\";\nimport { IVault } from \"./IVault.sol\";\n\nimport { InputHelpers } from \"./InputHelpers.sol\";\nimport { RevertCodec } from \"./RevertCodec.sol\";\nimport { Version } from \"./Version.sol\";\nimport {\n    ReentrancyGuardTransient\n} from \"./ReentrancyGuardTransient.sol\";\nimport { StorageSlotExtension } from \"./StorageSlotExtension.sol\";\nimport {\n    TransientStorageHelpers\n} from \"./TransientStorageHelpers.sol\";\n\nimport { SenderGuard } from \"./SenderGuard.sol\";\nimport { RouterWethLib } from \"./RouterWethLib.sol\";\nimport { VaultGuard } from \"./VaultGuard.sol\";\n\n/**\n * @notice Abstract base contract for functions shared among all Routers.\n * @dev Common functionality includes access to the sender (which would normally be obscured, since msg.sender in the\n * Vault is the Router contract itself, not the account that invoked the Router), versioning, and the external\n * invocation functions (`permitBatchAndCall` and `multicall`).\n */\nabstract contract RouterCommon is IRouterCommon, SenderGuard, VaultGuard, ReentrancyGuardTransient, Version {\n    using Address for address payable;\n    using StorageSlotExtension for *;\n    using RouterWethLib for IWETH;\n    using SafeCast for *;\n\n    // NOTE: If you use a constant, then it is simply replaced everywhere when this constant is used by what is written\n    // after =. If you use immutable, the value is first calculated and then replaced everywhere. That means that if a\n    // constant has executable variables, they will be executed every time the constant is used.\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private immutable _IS_RETURN_ETH_LOCKED_SLOT =\n        TransientStorageHelpers.calculateSlot(type(RouterCommon).name, \"isReturnEthLocked\");\n\n    // solhint-disable-next-line var-name-mixedcase\n    IWETH internal immutable _weth;\n\n    // IPermit2 internal immutable _permit2; // @todo: delete\n\n    /**\n     * @notice Locks the return of excess ETH to the sender until the end of the function.\n     * @dev This also encompasses the `saveSender` functionality.\n     */\n    modifier saveSenderAndManageEth() {\n        bool isExternalSender = _saveSender(msg.sender);\n\n        // Revert if a function with this modifier is called recursively (e.g., multicall).\n        if (_isReturnEthLockedSlot().tload()) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Lock the return of ETH during execution\n        _isReturnEthLockedSlot().tstore(true);\n        _;\n        _isReturnEthLockedSlot().tstore(false);\n\n        address sender = _getSenderSlot().tload();\n        _discardSenderIfRequired(isExternalSender);\n\n        _returnEth(sender);\n    }\n\n    constructor(\n        IVault vault,\n        IWETH weth,\n        // IPermit2 permit2, // @todo: delete\n        string memory routerVersion\n    ) SenderGuard() VaultGuard(vault) Version(routerVersion) {\n        _weth = weth;\n        //_permit2 = permit2; // @todo: delete\n    }\n\n    /// @inheritdoc IRouterCommon\n    function getWeth() external view returns (IWETH) {\n        return _weth;\n    }\n\n    /// @inheritdoc IRouterCommon\n    // function getPermit2() external view returns (IPermit2) { // @todo: delete\n    function getPermit2() external view returns (address) {\n        // return _permit2; // @todo: delete\n        return address(0); \n    }\n\n    /*******************************************************************************\n                                      Utilities\n    *******************************************************************************/\n\n    struct SignatureParts {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n    }\n\n    /// @inheritdoc IRouterCommon\n    function permitBatchAndCall(\n        PermitApproval[] calldata permitBatch,\n        bytes[] calldata permitSignatures,\n        IAllowanceTransfer.PermitBatch calldata permit2Batch,\n        bytes calldata permit2Signature,\n        bytes[] calldata multicallData\n    ) external payable virtual returns (bytes[] memory results) {\n        _permitBatch(permitBatch, permitSignatures, permit2Batch, permit2Signature);\n\n        // Execute all the required operations once permissions have been granted.\n        return multicall(multicallData);\n    }\n\n    function _permitBatch(\n        PermitApproval[] calldata permitBatch,\n        bytes[] calldata permitSignatures,\n        IAllowanceTransfer.PermitBatch calldata permit2Batch,\n        bytes calldata permit2Signature\n    ) internal nonReentrant {\n        InputHelpers.ensureInputLengthMatch(permitBatch.length, permitSignatures.length);\n\n        // Use Permit (ERC-2612) to grant allowances to Permit2 for tokens to swap,\n        // and grant allowances to Vault for BPT tokens.\n        for (uint256 i = 0; i < permitBatch.length; ++i) {\n            bytes memory signature = permitSignatures[i];\n\n            SignatureParts memory signatureParts = _getSignatureParts(signature);\n            PermitApproval memory permitApproval = permitBatch[i];\n\n            try\n                IERC20Permit(permitApproval.token).permit(\n                    permitApproval.owner,\n                    address(this),\n                    permitApproval.amount,\n                    permitApproval.deadline,\n                    signatureParts.v,\n                    signatureParts.r,\n                    signatureParts.s\n                )\n            {\n                // solhint-disable-previous-line no-empty-blocks\n                // OK; carry on.\n            } catch (bytes memory returnData) {\n                // Did it fail because the permit was executed (possible DoS attack to make the transaction revert),\n                // or was it something else (e.g., deadline, invalid signature)?\n                if (\n                    IERC20(permitApproval.token).allowance(permitApproval.owner, address(this)) != permitApproval.amount\n                ) {\n                    // It was something else, or allowance was used, so we should revert. Bubble up the revert reason.\n                    RevertCodec.bubbleUpRevert(returnData);\n                }\n            }\n        }\n\n        // Only call permit2 if there's something to do.\n        if (permit2Batch.details.length > 0) {\n            // Use Permit2 for tokens that are swapped and added into the Vault. Note that this call on Permit2 is\n            // theoretically also vulnerable to the same DoS attack as above. This edge case was not mitigated\n            // on-chain, mainly due to the increased complexity and cost of protecting the batch call.\n            //\n            // If this is a concern, we recommend submitting through a private node to avoid front-running the public\n            // mempool. In any case, best practice is to always use expiring, limited approvals, and only with known\n            // and trusted contracts.\n            //\n            // See https://www.immunebytes.com/blog/permit2-erc-20-token-approvals-and-associated-risks/.\n\n            // _permit2.permit(msg.sender, permit2Batch, permit2Signature); // @todo: delete\n        }\n    }\n\n    /// @inheritdoc IRouterCommon\n    function multicall(\n        bytes[] calldata data\n    ) public payable virtual saveSenderAndManageEth returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i = 0; i < data.length; ++i) {\n            results[i] = Address.functionDelegateCall(address(this), data[i]);\n        }\n        return results;\n    }\n\n    function _getSignatureParts(bytes memory signature) private pure returns (SignatureParts memory signatureParts) {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly (\"memory-safe\") {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        signatureParts.r = r;\n        signatureParts.s = s;\n        signatureParts.v = v;\n    }\n\n    /**\n     * @dev Returns excess ETH back to the contract caller. Checks for sufficient ETH balance are made right before\n     * each deposit, ensuring it will revert with a friendly custom error. If there is any balance remaining when\n     * `_returnEth` is called, return it to the sender.\n     *\n     * Because the caller might not know exactly how much ETH a Vault action will require, they may send extra.\n     * Note that this excess value is returned *to the contract caller* (msg.sender). If caller and e.g. swap sender\n     * are not the same (because the caller is a relayer for the sender), then it is up to the caller to manage this\n     * returned ETH.\n     */\n    function _returnEth(address sender) internal {\n        // It's cheaper to check the balance and return early than checking a transient variable.\n        // Moreover, most operations will not have ETH to return.\n        uint256 excess = address(this).balance;\n        if (excess == 0) {\n            return;\n        }\n\n        // If the return of ETH is locked, then don't return it,\n        // because _returnEth will be called again at the end of the call.\n        if (_isReturnEthLockedSlot().tload()) {\n            return;\n        }\n\n        payable(sender).sendValue(excess);\n    }\n\n    /**\n     * @dev Returns an array with `amountGiven` at `tokenIndex`, and 0 for every other index.\n     * The returned array length matches the number of tokens in the pool.\n     * Reverts if the given index is greater than or equal to the pool number of tokens.\n     */\n    function _getSingleInputArrayAndTokenIndex(\n        address pool,\n        IERC20 token,\n        uint256 amountGiven\n    ) internal view returns (uint256[] memory amountsGiven, uint256 tokenIndex) {\n        uint256 numTokens;\n        (numTokens, tokenIndex) = _vault.getPoolTokenCountAndIndexOfToken(pool, token);\n        amountsGiven = new uint256[](numTokens);\n        amountsGiven[tokenIndex] = amountGiven;\n    }\n\n    function _takeTokenIn(address sender, IERC20 tokenIn, uint256 amountIn, bool wethIsEth) internal {\n        // If the tokenIn is ETH, then wrap `amountIn` into WETH.\n        if (wethIsEth && tokenIn == _weth) {\n            _weth.wrapEthAndSettle(_vault, amountIn);\n        } else {\n            if (amountIn > 0) {\n                // Send the tokenIn amount to the Vault.\n                // _permit2.transferFrom(sender, address(_vault), amountIn.toUint160(), address(tokenIn)); // @todo: delete\n                IERC20(tokenIn).transferFrom(sender, address(_vault), amountIn.toUint160());\n                _vault.settle(tokenIn, amountIn);\n            }\n        }\n    }\n\n    function _sendTokenOut(address sender, IERC20 tokenOut, uint256 amountOut, bool wethIsEth) internal {\n        if (amountOut == 0) {\n            return;\n        }\n\n        // If the tokenOut is ETH, then unwrap `amountOut` into ETH.\n        if (wethIsEth && tokenOut == _weth) {\n            _weth.unwrapWethAndTransferToSender(_vault, sender, amountOut);\n        } else {\n            // Receive the tokenOut amountOut.\n            _vault.sendTo(tokenOut, sender, amountOut);\n        }\n    }\n\n    function _maxTokenLimits(address pool) internal view returns (uint256[] memory maxLimits) {\n        uint256 numTokens = _vault.getPoolTokens(pool).length;\n        maxLimits = new uint256[](numTokens);\n        for (uint256 i = 0; i < numTokens; ++i) {\n            maxLimits[i] = _MAX_AMOUNT;\n        }\n    }\n\n    function _isReturnEthLockedSlot() internal view returns (StorageSlotExtension.BooleanSlotType) {\n        return _IS_RETURN_ETH_LOCKED_SLOT.asBoolean();\n    }\n\n    /**\n     * @dev Enables the Router to receive ETH. This is required for it to be able to unwrap WETH, which sends ETH to the\n     * caller.\n     *\n     * Any ETH sent to the Router outside of the WETH unwrapping mechanism would be forever locked inside the Router, so\n     * we prevent that from happening. Other mechanisms used to send ETH to the Router (such as being the recipient of\n     * an ETH swap, Pool exit or withdrawal, contract self-destruction, or receiving the block mining reward) will\n     * result in locked funds, but are not otherwise a security or soundness issue. This check only exists as an attempt\n     * to prevent user error.\n     */\n    receive() external payable {\n        if (msg.sender != address(_weth)) {\n            revert EthTransfer();\n        }\n    }\n}\n"},"contracts/RouterWethLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport { IWETH } from \"./IWETH.sol\";\nimport { IVault } from \"./IVault.sol\";\n\nimport { StorageSlotExtension } from \"./StorageSlotExtension.sol\";\nimport {\n    TransientStorageHelpers\n} from \"./TransientStorageHelpers.sol\";\n\nlibrary RouterWethLib {\n    using Address for address payable;\n    using StorageSlotExtension for *;\n    using SafeERC20 for IWETH;\n\n    /// @notice The amount of ETH paid is insufficient to complete this operation.\n    error InsufficientEth();\n\n    function wrapEthAndSettle(IWETH weth, IVault vault, uint256 amountToSettle) internal {\n        if (address(this).balance < amountToSettle) {\n            revert InsufficientEth();\n        }\n\n        // wrap amountIn to WETH.\n        weth.deposit{ value: amountToSettle }();\n        // send WETH to Vault.\n        weth.safeTransfer(address(vault), amountToSettle);\n        // update Vault accounting.\n        vault.settle(weth, amountToSettle);\n    }\n\n    function unwrapWethAndTransferToSender(IWETH weth, IVault vault, address sender, uint256 amountToSend) internal {\n        // Receive the WETH amountOut.\n        vault.sendTo(weth, address(this), amountToSend);\n        // Withdraw WETH to ETH.\n        weth.withdraw(amountToSend);\n        // Send ETH to sender.\n        payable(sender).sendValue(amountToSend);\n    }\n}\n"},"contracts/SenderGuard.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IWETH } from \"./IWETH.sol\";\nimport { ISenderGuard } from \"./ISenderGuard.sol\";\nimport { IVault } from \"./IVault.sol\";\n\nimport { StorageSlotExtension } from \"./StorageSlotExtension.sol\";\nimport {\n    TransientStorageHelpers\n} from \"./TransientStorageHelpers.sol\";\n\n/**\n * @notice Abstract base contract for functions shared among all Routers.\n * @dev Common functionality includes access to the sender (which would normally be obscured, since msg.sender in the\n * Vault is the Router contract itself, not the account that invoked the Router), versioning, and the external\n * invocation functions (`permitBatchAndCall` and `multicall`).\n */\nabstract contract SenderGuard is ISenderGuard {\n    using StorageSlotExtension for *;\n\n    // NOTE: If you use a constant, then it is simply replaced everywhere when this constant is used by what is written\n    // after =. If you use immutable, the value is first calculated and then replaced everywhere. That means that if a\n    // constant has executable variables, they will be executed every time the constant is used.\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private immutable _SENDER_SLOT = TransientStorageHelpers.calculateSlot(type(SenderGuard).name, \"sender\");\n\n    // Raw token balances are stored in half a slot, so the max is uint128. Moreover, given that amounts are usually\n    // scaled inside the Vault, sending type(uint256).max would result in an overflow and revert.\n    uint256 internal constant _MAX_AMOUNT = type(uint128).max;\n\n    /**\n     * @notice Saves the user or contract that initiated the current operation.\n     * @dev It is possible to nest router calls (e.g., with reentrant hooks), but the sender returned by the Router's\n     * `getSender` function will always be the \"outermost\" caller. Some transactions require the Router to identify\n     * multiple senders. Consider the following example:\n     *\n     * - ContractA has a function that calls the Router, then calls ContractB with the output. ContractB in turn\n     * calls back into the Router.\n     * - Imagine further that ContractA is a pool with a \"before\" hook that also calls the Router.\n     *\n     * When the user calls the function on ContractA, there are three calls to the Router in the same transaction:\n     * - 1st call: When ContractA calls the Router directly, to initiate an operation on the pool (say, a swap).\n     *             (Sender is contractA, initiator of the operation.)\n     *\n     * - 2nd call: When the pool operation invokes a hook (say onBeforeSwap), which calls back into the Router.\n     *             This is a \"nested\" call within the original pool operation. The nested call returns, then the\n     *             before hook returns, the Router completes the operation, and finally returns back to ContractA\n     *             with the result (e.g., a calculated amount of tokens).\n     *             (Nested call; sender is still ContractA through all of this.)\n     *\n     * - 3rd call: When the first operation is complete, ContractA calls ContractB, which in turn calls the Router.\n     *             (Not nested, as the original router call from contractA has returned. Sender is now ContractB.)\n     */\n    modifier saveSender(address sender) {\n        bool isExternalSender = _saveSender(sender);\n        _;\n        _discardSenderIfRequired(isExternalSender);\n    }\n\n    function _saveSender(address sender) internal returns (bool isExternalSender) {\n        address savedSender = _getSenderSlot().tload();\n\n        // NOTE: Only the most external sender will be saved by the Router.\n        if (savedSender == address(0)) {\n            _getSenderSlot().tstore(sender);\n            isExternalSender = true;\n        }\n    }\n\n    function _discardSenderIfRequired(bool isExternalSender) internal {\n        // Only the external sender shall be cleaned up; if it's not an external sender it means that\n        // the value was not saved in this modifier.\n        if (isExternalSender) {\n            _getSenderSlot().tstore(address(0));\n        }\n    }\n\n    constructor() {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /// @inheritdoc ISenderGuard\n    function getSender() external view returns (address) {\n        return _getSenderSlot().tload();\n    }\n\n    function _getSenderSlot() internal view returns (StorageSlotExtension.AddressSlotType) {\n        return _SENDER_SLOT.asAddress();\n    }\n}\n"},"contracts/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\n// Taken from https://raw.githubusercontent.com/Amxx/openzeppelin-contracts/ce497cb05ca05bb9aa2b86ec1d99e6454e7ab2e9/contracts/utils/SlotDerivation.sol\n\npragma solidity ^0.8.20;\n\n/**\n * @notice Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns.\n * @dev The derivation method for array and mapping matches the storage layout used by the solidity language/compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n */\nlibrary SlotDerivation {\n    /// @dev Derive an ERC-7201 slot from a string (namespace).\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /// @dev Add an offset to a slot to get the n-th element of a structure or an array.\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /// @dev Derive the location of the first element in an array from the slot where the length is stored.\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /// @dev Derive the location of a mapping element from the key.\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}"},"contracts/StorageSlotExtension.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.24;\n\n/**\n * @notice Library for reading and writing primitive types to specific storage slots. Based on OpenZeppelin; just adding support for int256.\n * @dev TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlotExtension {\n    struct Int256Slot {\n        int256 value;\n    }\n\n    /// @dev Returns an `Int256Slot` with member `value` located at `slot`.\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /// @dev Custom type that represents a slot holding an address.\n    type AddressSlotType is bytes32;\n\n    /// @dev Cast an arbitrary slot to a AddressSlotType.\n    function asAddress(bytes32 slot) internal pure returns (AddressSlotType) {\n        return AddressSlotType.wrap(slot);\n    }\n\n    /// @dev Custom type that represents a slot holding a boolean.\n    type BooleanSlotType is bytes32;\n\n    /// @dev Cast an arbitrary slot to a BooleanSlotType.\n    function asBoolean(bytes32 slot) internal pure returns (BooleanSlotType) {\n        return BooleanSlotType.wrap(slot);\n    }\n\n    /// @dev Custom type that represents a slot holding a bytes32.\n    type Bytes32SlotType is bytes32;\n\n    /// @dev Cast an arbitrary slot to a Bytes32SlotType.\n    function asBytes32(bytes32 slot) internal pure returns (Bytes32SlotType) {\n        return Bytes32SlotType.wrap(slot);\n    }\n\n    /// @dev Custom type that represents a slot holding a uint256.\n    type Uint256SlotType is bytes32;\n\n    /// @dev Cast an arbitrary slot to a Uint256SlotType.\n    function asUint256(bytes32 slot) internal pure returns (Uint256SlotType) {\n        return Uint256SlotType.wrap(slot);\n    }\n\n    /// @dev Custom type that represents a slot holding an int256.\n    type Int256SlotType is bytes32;\n\n    /// @dev Cast an arbitrary slot to an Int256SlotType.\n    function asInt256(bytes32 slot) internal pure returns (Int256SlotType) {\n        return Int256SlotType.wrap(slot);\n    }\n\n    /// @dev Load the value held at location `slot` in transient storage.\n    function tload(AddressSlotType slot) internal view returns (address value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload( slot) // @todo\n            // value := sload(mload(slot))\n        }\n    }\n\n    /// @dev Store `value` at location `slot` in transient storage.\n    function tstore(AddressSlotType slot, address value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value) // @todo\n            // sstore(mload(slot), value)\n        }\n    }\n\n    /// @dev Load the value held at location `slot` in transient storage.\n    function tload(BooleanSlotType slot) internal view returns (bool value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot) // @todo\n            // value := sload(mload(slot))\n        }\n    }\n\n    /// @dev Store `value` at location `slot` in transient storage.\n    function tstore(BooleanSlotType slot, bool value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value) // @todo\n            // sstore(mload(slot), value)\n        }\n    }\n\n    /// @dev Load the value held at location `slot` in transient storage.\n    function tload(Bytes32SlotType slot) internal view returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot) // @todo\n            // value := sload(mload(slot))\n        }\n    }\n\n    /// @dev Store `value` at location `slot` in transient storage.\n    function tstore(Bytes32SlotType slot, bytes32 value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value) // @todo\n            // sstore(mload(slot), value)\n        }\n    }\n\n    /// @dev Load the value held at location `slot` in transient storage.\n    function tload(Uint256SlotType slot) internal view returns (uint256 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot) // @todo\n            // value := sload(mload(slot))\n        }\n    }\n\n    /// @dev Store `value` at location `slot` in transient storage.\n    function tstore(Uint256SlotType slot, uint256 value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value) // @todo\n            // sstore(mload(slot), value)\n        }\n    }\n\n    /// @dev Load the value held at location `slot` in transient storage.\n    function tload(Int256SlotType slot) internal view returns (int256 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot) // @todo\n            // value := sload(mload(slot))\n        }\n    }\n\n    /// @dev Store `value` at location `slot` in transient storage.\n    function tstore(Int256SlotType slot, int256 value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value) // @todo\n            // sstore(mload(slot), value)\n        }\n    }\n}\n"},"contracts/TransientStorageHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport { StorageSlotExtension } from \"./StorageSlotExtension.sol\";\nimport { SlotDerivation } from \"./SlotDerivation.sol\";\n\ntype TokenDeltaMappingSlotType is bytes32;\ntype AddressToUintMappingSlot is bytes32;\ntype UintToAddressToBooleanMappingSlot is bytes32;\ntype AddressArraySlotType is bytes32;\n\n/**\n * @notice Helper functions to read and write values from transient storage, including support for arrays and mappings.\n * @dev This is temporary, based on Open Zeppelin's partially released library. When the final version is published, we\n * should be able to remove our copies and import directly from OZ. When Solidity catches up and puts direct support\n * for transient storage in the language, we should be able to get rid of this altogether.\n *\n * This only works on networks where EIP-1153 is supported.\n */\nlibrary TransientStorageHelpers {\n    using SlotDerivation for *;\n    using StorageSlotExtension for *;\n\n    /// @notice An index is out of bounds on an array operation (e.g., at).\n    error TransientIndexOutOfBounds();\n\n    // Calculate the slot for a transient storage variable.\n    function calculateSlot(string memory domain, string memory varName) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(uint256(keccak256(abi.encodePacked(\"balancer-labs.v3.storage.\", domain, \".\", varName))) - 1)\n            ) & ~bytes32(uint256(0xff));\n    }\n\n    /***************************************************************************\n                                    Mappings\n    ***************************************************************************/\n\n    function tGet(TokenDeltaMappingSlotType slot, IERC20 k1) internal view returns (int256) {\n        return TokenDeltaMappingSlotType.unwrap(slot).deriveMapping(address(k1)).asInt256().tload();\n    }\n\n    function tSet(TokenDeltaMappingSlotType slot, IERC20 k1, int256 value) internal {\n        TokenDeltaMappingSlotType.unwrap(slot).deriveMapping(address(k1)).asInt256().tstore(value);\n    }\n\n    function tGet(AddressToUintMappingSlot slot, address key) internal view returns (uint256) {\n        return AddressToUintMappingSlot.unwrap(slot).deriveMapping(key).asUint256().tload();\n    }\n\n    function tSet(AddressToUintMappingSlot slot, address key, uint256 value) internal {\n        AddressToUintMappingSlot.unwrap(slot).deriveMapping(key).asUint256().tstore(value);\n    }\n\n    function tGet(\n        UintToAddressToBooleanMappingSlot slot,\n        uint256 uintKey,\n        address addressKey\n    ) internal view returns (bool) {\n        return\n            UintToAddressToBooleanMappingSlot\n                .unwrap(slot)\n                .deriveMapping(uintKey)\n                .deriveMapping(addressKey)\n                .asBoolean()\n                .tload();\n    }\n\n    function tSet(UintToAddressToBooleanMappingSlot slot, uint256 uintKey, address addressKey, bool value) internal {\n        UintToAddressToBooleanMappingSlot\n            .unwrap(slot)\n            .deriveMapping(uintKey)\n            .deriveMapping(addressKey)\n            .asBoolean()\n            .tstore(value);\n    }\n\n    // Implement the common \"+=\" operation: map[key] += value.\n    function tAdd(AddressToUintMappingSlot slot, address key, uint256 value) internal {\n        AddressToUintMappingSlot.unwrap(slot).deriveMapping(key).asUint256().tstore(tGet(slot, key) + value);\n    }\n\n    function tSub(AddressToUintMappingSlot slot, address key, uint256 value) internal {\n        AddressToUintMappingSlot.unwrap(slot).deriveMapping(key).asUint256().tstore(tGet(slot, key) - value);\n    }\n\n    /***************************************************************************\n                                      Arrays\n    ***************************************************************************/\n\n    function tLength(AddressArraySlotType slot) internal view returns (uint256) {\n        return AddressArraySlotType.unwrap(slot).asUint256().tload();\n    }\n\n    function tAt(AddressArraySlotType slot, uint256 index) internal view returns (address) {\n        _ensureIndexWithinBounds(slot, index);\n        return AddressArraySlotType.unwrap(slot).deriveArray().offset(index).asAddress().tload();\n    }\n\n    function tSet(AddressArraySlotType slot, uint256 index, address value) internal {\n        _ensureIndexWithinBounds(slot, index);\n        AddressArraySlotType.unwrap(slot).deriveArray().offset(index).asAddress().tstore(value);\n    }\n\n    function _ensureIndexWithinBounds(AddressArraySlotType slot, uint256 index) private view {\n        uint256 length = AddressArraySlotType.unwrap(slot).asUint256().tload();\n        if (index >= length) {\n            revert TransientIndexOutOfBounds();\n        }\n    }\n\n    function tUncheckedAt(AddressArraySlotType slot, uint256 index) internal view returns (address) {\n        return AddressArraySlotType.unwrap(slot).deriveArray().offset(index).asAddress().tload();\n    }\n\n    function tUncheckedSet(AddressArraySlotType slot, uint256 index, address value) internal {\n        AddressArraySlotType.unwrap(slot).deriveArray().offset(index).asAddress().tstore(value);\n    }\n\n    function tPush(AddressArraySlotType slot, address value) internal {\n        // Store the value at offset corresponding to the current length.\n        uint256 length = AddressArraySlotType.unwrap(slot).asUint256().tload();\n        AddressArraySlotType.unwrap(slot).deriveArray().offset(length).asAddress().tstore(value);\n        // Update current length to consider the new value.\n        AddressArraySlotType.unwrap(slot).asUint256().tstore(length + 1);\n    }\n\n    function tPop(AddressArraySlotType slot) internal returns (address value) {\n        uint256 lastElementIndex = AddressArraySlotType.unwrap(slot).asUint256().tload() - 1;\n        // Update length to last element. When the index is 0, the slot that holds the length is cleared out.\n        AddressArraySlotType.unwrap(slot).asUint256().tstore(lastElementIndex);\n        StorageSlotExtension.AddressSlotType lastElementSlot = AddressArraySlotType\n            .unwrap(slot)\n            .deriveArray()\n            .offset(lastElementIndex)\n            .asAddress();\n        // Return last element.\n        value = lastElementSlot.tload();\n        // Clear value in temporary storage.\n        lastElementSlot.tstore(address(0));\n    }\n\n    /***************************************************************************\n                                  Uint256 Values\n    ***************************************************************************/\n\n    function tIncrement(StorageSlotExtension.Uint256SlotType slot) internal {\n        slot.tstore(slot.tload() + 1);\n    }\n\n    function tDecrement(StorageSlotExtension.Uint256SlotType slot) internal {\n        slot.tstore(slot.tload() - 1);\n    }\n}\n"},"contracts/VaultGuard.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IVaultErrors } from \"./IVaultErrors.sol\";\nimport { IVault } from \"./IVault.sol\";\n\n/// @notice Contract that shares the modifier `onlyVault`.\ncontract VaultGuard {\n    IVault internal immutable _vault;\n\n    constructor(IVault vault) {\n        _vault = vault;\n    }\n\n    modifier onlyVault() {\n        _ensureOnlyVault();\n        _;\n    }\n\n    function _ensureOnlyVault() private view {\n        if (msg.sender != address(_vault)) {\n            revert IVaultErrors.SenderIsNotVault(msg.sender);\n        }\n    }\n}\n"},"contracts/VaultTypes.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IERC4626 } from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\n\nimport { IRateProvider } from \"./IRateProvider.sol\";\n\n/**\n * @notice Represents a pool's liquidity management configuration.\n * @param disableUnbalancedLiquidity If set, liquidity can only be added or removed proportionally\n * @param enableAddLiquidityCustom If set, the pool has implemented `onAddLiquidityCustom`\n * @param enableRemoveLiquidityCustom If set, the pool has implemented `onRemoveLiquidityCustom`\n * @param enableDonation If set, the pool will not revert if liquidity is added with AddLiquidityKind.DONATION\n */\nstruct LiquidityManagement {\n    bool disableUnbalancedLiquidity;\n    bool enableAddLiquidityCustom;\n    bool enableRemoveLiquidityCustom;\n    bool enableDonation;\n}\n\n// @notice Custom type to store the entire configuration of the pool.\ntype PoolConfigBits is bytes32;\n\n/**\n * @notice Represents a pool's configuration (hooks configuration are separated in another struct).\n * @param liquidityManagement Flags related to adding/removing liquidity\n * @param staticSwapFeePercentage The pool's native swap fee\n * @param aggregateSwapFeePercentage The total swap fee charged, including protocol and pool creator components\n * @param aggregateYieldFeePercentage The total swap fee charged, including protocol and pool creator components\n * @param tokenDecimalDiffs Compressed storage of the token decimals of each pool token\n * @param pauseWindowEndTime Timestamp after which the pool cannot be paused\n * @param isPoolRegistered If true, the pool has been registered with the Vault\n * @param isPoolInitialized If true, the pool has been initialized with liquidity, and is available for trading\n * @param isPoolPaused If true, the pool has been paused (by governance or the pauseManager)\n * @param isPoolInRecoveryMode If true, the pool has been placed in recovery mode, enabling recovery mode withdrawals\n */\nstruct PoolConfig {\n    LiquidityManagement liquidityManagement;\n    uint256 staticSwapFeePercentage;\n    uint256 aggregateSwapFeePercentage;\n    uint256 aggregateYieldFeePercentage;\n    uint40 tokenDecimalDiffs;\n    uint32 pauseWindowEndTime;\n    bool isPoolRegistered;\n    bool isPoolInitialized;\n    bool isPoolPaused;\n    bool isPoolInRecoveryMode;\n}\n\n/**\n * @notice The flag portion of the `HooksConfig`.\n * @dev `enableHookAdjustedAmounts` must be true for all contracts that modify the `amountCalculated`\n * in after hooks. Otherwise, the Vault will ignore any \"hookAdjusted\" amounts. Setting any \"shouldCall\"\n * flags to true will cause the Vault to call the corresponding hook during operations.\n */\nstruct HookFlags {\n    bool enableHookAdjustedAmounts;\n    bool shouldCallBeforeInitialize;\n    bool shouldCallAfterInitialize;\n    bool shouldCallComputeDynamicSwapFee;\n    bool shouldCallBeforeSwap;\n    bool shouldCallAfterSwap;\n    bool shouldCallBeforeAddLiquidity;\n    bool shouldCallAfterAddLiquidity;\n    bool shouldCallBeforeRemoveLiquidity;\n    bool shouldCallAfterRemoveLiquidity;\n}\n\n/// @notice Represents a hook contract configuration for a pool (HookFlags + hooksContract address).\nstruct HooksConfig {\n    bool enableHookAdjustedAmounts;\n    bool shouldCallBeforeInitialize;\n    bool shouldCallAfterInitialize;\n    bool shouldCallComputeDynamicSwapFee;\n    bool shouldCallBeforeSwap;\n    bool shouldCallAfterSwap;\n    bool shouldCallBeforeAddLiquidity;\n    bool shouldCallAfterAddLiquidity;\n    bool shouldCallBeforeRemoveLiquidity;\n    bool shouldCallAfterRemoveLiquidity;\n    address hooksContract;\n}\n\n/**\n * @notice Represents temporary state used during a swap operation.\n * @param indexIn The zero-based index of tokenIn\n * @param indexOut The zero-based index of tokenOut\n * @param amountGivenScaled18 The amountGiven (i.e., tokenIn for ExactIn), adjusted for token decimals\n * @param swapFeePercentage The swap fee to be applied (might be static or dynamic)\n */\nstruct SwapState {\n    uint256 indexIn;\n    uint256 indexOut;\n    uint256 amountGivenScaled18;\n    uint256 swapFeePercentage;\n}\n\n/**\n * @notice Represents the Vault's configuration.\n * @param isQueryDisabled If set to true, disables query functionality of the Vault. Can be modified by governance\n * @param isVaultPaused If set to true, swaps and add/remove liquidity operations are halted\n * @param areBuffersPaused If set to true, the Vault wrap/unwrap primitives associated with buffers will be disabled\n */\nstruct VaultState {\n    bool isQueryDisabled;\n    bool isVaultPaused;\n    bool areBuffersPaused;\n}\n\n/**\n * @notice Represents the accounts holding certain roles for a given pool. This is passed in on pool registration.\n * @param pauseManager Account empowered to pause/unpause the pool (note that governance can always pause a pool)\n * @param swapFeeManager Account empowered to set static swap fees for a pool (or 0 to delegate to governance)\n * @param poolCreator Account empowered to set the pool creator fee (or 0 if all fees go to the protocol and LPs)\n */\nstruct PoolRoleAccounts {\n    address pauseManager;\n    address swapFeeManager;\n    address poolCreator;\n}\n\n/*******************************************************************************\n                                   Tokens\n*******************************************************************************/\n\n// Note that the following tokens are unsupported by the Vault. This list is not meant to be exhaustive, but covers\n// many common types of tokens that will not work with the Vault architecture. (See https://github.com/d-xo/weird-erc20\n// for examples of token features that are problematic for many protocols.)\n//\n// * Rebasing tokens (e.g., aDAI). The Vault keeps track of token balances in its internal accounting; any token whose\n//   balance changes asynchronously (i.e., outside a swap or liquidity operation), would get out-of-sync with this\n//   internal accounting. This category would also include \"airdrop\" tokens, whose balances can change unexpectedly.\n//\n// * Double entrypoint (e.g., old Synthetix tokens, now fixed). These could likewise bypass internal accounting by\n//   registering the token under one address, then accessing it through another. This is especially troublesome\n//   in v3, with the introduction of ERC4626 buffers.\n//\n// * Fee on transfer (e.g., PAXG). The Vault issues credits and debits according to given and calculated token amounts,\n//   and settlement assumes that the send/receive transfer functions transfer exactly the given number of tokens.\n//   If this is not the case, transactions will not settle. Unlike with the other types, which are fundamentally\n//   incompatible, it would be possible to design a Router to handle this - but we didn't try it. In any case, it's\n//   not supported in the current Routers.\n//\n// * Tokens with more than 18 decimals (e.g., YAM-V2). The Vault handles token scaling: i.e., handling I/O for\n//   amounts in native token decimals, but doing calculations with full 18-decimal precision. This requires reading\n//   and storing the decimals for each token. Since virtually all tokens are 18 or fewer decimals, and we have limited\n//   storage space, 18 was a reasonable maximum. Unlike the other types, this is enforceable by the Vault. Attempting\n//   to register such tokens will revert with `InvalidTokenDecimals`. Of course, we must also be able to read the token\n//   decimals, so the Vault only supports tokens that implement `IERC20Metadata.decimals`, and return a value less than\n//   or equal to 18.\n//\n//  * Token decimals are checked and stored only once, on registration. Valid tokens store their decimals as immutable\n//    variables or constants. Malicious tokens that don't respect this basic property would not work anywhere in DeFi.\n//\n// These types of tokens are supported but discouraged, as they don't tend to play well with AMMs generally.\n//\n// * Very low-decimal tokens (e.g., GUSD). The Vault has been extensively tested with 6-decimal tokens (e.g., USDC),\n//   but going much below that may lead to unanticipated effects due to precision loss, especially with smaller trade\n//   values.\n//\n// * Revert on zero value approval/transfer. The Vault has been tested against these, but peripheral contracts, such\n//   as hooks, might not have been designed with this in mind.\n//\n// * Other types from \"weird-erc20,\" such as upgradeable, pausable, or tokens with blocklists. We have seen cases\n//   where a token upgrade fails, \"bricking\" the token - and many operations on pools containing that token. Any\n//   sort of \"permissioned\" token that can make transfers fail can cause operations on pools containing them to\n//   revert. Even Recovery Mode cannot help then, as it does a proportional withdrawal of all tokens. If one of\n//   them is bricked, the whole operation will revert. Since v3 does not have \"internal balances\" like v2, there\n//   is no recourse.\n//\n//   Of course, many tokens in common use have some of these \"features\" (especially centralized stable coins), so\n//   we have to support them anyway. Working with common centralized tokens is a risk common to all of DeFi.\n\n/**\n * @notice Token types supported by the Vault.\n * @dev In general, pools may contain any combination of these tokens.\n *\n * STANDARD tokens (e.g., BAL, WETH) have no rate provider.\n * WITH_RATE tokens (e.g., wstETH) require a rate provider. These may be tokens like wstETH, which need to be wrapped\n * because the underlying stETH token is rebasing, and such tokens are unsupported by the Vault. They may also be\n * tokens like sEUR, which track an underlying asset, but are not yield-bearing. Finally, this encompasses\n * yield-bearing ERC4626 tokens, which can be used to facilitate swaps without requiring wrapping or unwrapping\n * in most cases. The `paysYieldFees` flag can be used to indicate whether a token is yield-bearing (e.g., waDAI),\n * not yield-bearing (e.g., sEUR), or yield-bearing but exempt from fees (e.g., in certain nested pools, where\n * yield fees are charged elsewhere).\n *\n * NB: STANDARD must always be the first enum element, so that newly initialized data structures default to Standard.\n */\nenum TokenType {\n    STANDARD,\n    WITH_RATE\n}\n\n/**\n * @notice Encapsulate the data required for the Vault to support a token of the given type.\n * @dev For STANDARD tokens, the rate provider address must be 0, and paysYieldFees must be false. All WITH_RATE tokens\n * need a rate provider, and may or may not be yield-bearing.\n *\n * At registration time, it is useful to include the token address along with the token parameters in the structure\n * passed to `registerPool`, as the alternative would be parallel arrays, which would be error prone and require\n * validation checks. `TokenConfig` is only used for registration, and is never put into storage (see `TokenInfo`).\n *\n * @param token The token address\n * @param tokenType The token type (see the enum for supported types)\n * @param rateProvider The rate provider for a token (see further documentation above)\n * @param paysYieldFees Flag indicating whether yield fees should be charged on this token\n */\nstruct TokenConfig {\n    IERC20 token;\n    TokenType tokenType;\n    IRateProvider rateProvider;\n    bool paysYieldFees;\n}\n\n/**\n * @notice This data structure is stored in `_poolTokenInfo`, a nested mapping from pool -> (token -> TokenInfo).\n * @dev Since the token is already the key of the nested mapping, it would be redundant (and an extra SLOAD) to store\n * it again in the struct. When we construct PoolData, the tokens are separated into their own array.\n *\n * @param tokenType The token type (see the enum for supported types)\n * @param rateProvider The rate provider for a token (see further documentation above)\n * @param paysYieldFees Flag indicating whether yield fees should be charged on this token\n */\nstruct TokenInfo {\n    TokenType tokenType;\n    IRateProvider rateProvider;\n    bool paysYieldFees;\n}\n\n/**\n * @notice Data structure used to represent the current pool state in memory\n * @param poolConfigBits Custom type to store the entire configuration of the pool.\n * @param tokens Pool tokens, sorted in token registration order\n * @param tokenInfo Configuration data for each token, sorted in token registration order\n * @param balancesRaw Token balances in native decimals\n * @param balancesLiveScaled18 Token balances after paying yield fees, applying decimal scaling and rates\n * @param tokenRates 18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens\n * @param decimalScalingFactors Conversion factor used to adjust for token decimals for uniform precision in\n * calculations. It is 1e18 (FP 1) for 18-decimal tokens\n */\nstruct PoolData {\n    PoolConfigBits poolConfigBits;\n    IERC20[] tokens;\n    TokenInfo[] tokenInfo;\n    uint256[] balancesRaw;\n    uint256[] balancesLiveScaled18;\n    uint256[] tokenRates;\n    uint256[] decimalScalingFactors;\n}\n\nenum Rounding {\n    ROUND_UP,\n    ROUND_DOWN\n}\n\n/*******************************************************************************\n                                    Swaps\n*******************************************************************************/\n\nenum SwapKind {\n    EXACT_IN,\n    EXACT_OUT\n}\n\n// There are two \"SwapParams\" structs defined below. `VaultSwapParams` corresponds to the external swap API defined\n// in the Router contracts, which uses explicit token addresses, the amount given and limit on the calculated amount\n// expressed in native token decimals, and optional user data passed in from the caller.\n//\n// `PoolSwapParams` passes some of this information through (kind, userData), but \"translates\" the parameters to fit\n// the internal swap API used by `IBasePool`. It scales amounts to full 18-decimal precision, adds the token balances,\n// converts the raw token addresses to indices, and adds the address of the Router originating the request. It does\n// not need the limit, since this is checked at the Router level.\n\n/**\n * @notice Data passed into primary Vault `swap` operations.\n * @param kind Type of swap (Exact In or Exact Out)\n * @param pool The pool with the tokens being swapped\n * @param tokenIn The token entering the Vault (balance increases)\n * @param tokenOut The token leaving the Vault (balance decreases)\n * @param amountGivenRaw Amount specified for tokenIn or tokenOut (depending on the type of swap)\n * @param limitRaw Minimum or maximum value of the calculated amount (depending on the type of swap)\n * @param userData Additional (optional) user data\n */\nstruct VaultSwapParams {\n    SwapKind kind;\n    address pool;\n    IERC20 tokenIn;\n    IERC20 tokenOut;\n    uint256 amountGivenRaw;\n    uint256 limitRaw;\n    bytes userData;\n}\n\n/**\n * @notice Data for a swap operation, used by contracts implementing `IBasePool`.\n * @param kind Type of swap (exact in or exact out)\n * @param amountGivenScaled18 Amount given based on kind of the swap (e.g., tokenIn for EXACT_IN)\n * @param balancesScaled18 Current pool balances\n * @param indexIn Index of tokenIn\n * @param indexOut Index of tokenOut\n * @param router The address (usually a router contract) that initiated a swap operation on the Vault\n * @param userData Additional (optional) data required for the swap\n */\nstruct PoolSwapParams {\n    SwapKind kind;\n    uint256 amountGivenScaled18;\n    uint256[] balancesScaled18;\n    uint256 indexIn;\n    uint256 indexOut;\n    address router;\n    bytes userData;\n}\n\n/**\n * @notice Data for the hook after a swap operation.\n * @param kind Type of swap (exact in or exact out)\n * @param tokenIn Token to be swapped from\n * @param tokenOut Token to be swapped to\n * @param amountInScaled18 Amount of tokenIn (entering the Vault)\n * @param amountOutScaled18 Amount of tokenOut (leaving the Vault)\n * @param tokenInBalanceScaled18 Updated (after swap) balance of tokenIn\n * @param tokenOutBalanceScaled18 Updated (after swap) balance of tokenOut\n * @param amountCalculatedScaled18 Token amount calculated by the swap\n * @param amountCalculatedRaw Token amount calculated by the swap\n * @param router The address (usually a router contract) that initiated a swap operation on the Vault\n * @param pool Pool address\n * @param userData Additional (optional) data required for the swap\n */\nstruct AfterSwapParams {\n    SwapKind kind;\n    IERC20 tokenIn;\n    IERC20 tokenOut;\n    uint256 amountInScaled18;\n    uint256 amountOutScaled18;\n    uint256 tokenInBalanceScaled18;\n    uint256 tokenOutBalanceScaled18;\n    uint256 amountCalculatedScaled18;\n    uint256 amountCalculatedRaw;\n    address router;\n    address pool;\n    bytes userData;\n}\n\n/*******************************************************************************\n                                Add liquidity\n*******************************************************************************/\n\nenum AddLiquidityKind {\n    PROPORTIONAL,\n    UNBALANCED,\n    SINGLE_TOKEN_EXACT_OUT,\n    DONATION,\n    CUSTOM\n}\n\n/**\n * @notice Data for an add liquidity operation.\n * @param pool Address of the pool\n * @param to Address of user to mint to\n * @param maxAmountsIn Maximum amounts of input tokens\n * @param minBptAmountOut Minimum amount of output pool tokens\n * @param kind Add liquidity kind\n * @param userData Optional user data\n */\nstruct AddLiquidityParams {\n    address pool;\n    address to;\n    uint256[] maxAmountsIn;\n    uint256 minBptAmountOut;\n    AddLiquidityKind kind;\n    bytes userData;\n}\n\n/*******************************************************************************\n                                Remove liquidity\n*******************************************************************************/\n\nenum RemoveLiquidityKind {\n    PROPORTIONAL,\n    SINGLE_TOKEN_EXACT_IN,\n    SINGLE_TOKEN_EXACT_OUT,\n    CUSTOM\n}\n\n/**\n * @notice Data for an remove liquidity operation.\n * @param pool Address of the pool\n * @param from Address of user to burn from\n * @param maxBptAmountIn Maximum amount of input pool tokens\n * @param minAmountsOut Minimum amounts of output tokens\n * @param kind Remove liquidity kind\n * @param userData Optional user data\n */\nstruct RemoveLiquidityParams {\n    address pool;\n    address from;\n    uint256 maxBptAmountIn;\n    uint256[] minAmountsOut;\n    RemoveLiquidityKind kind;\n    bytes userData;\n}\n\n/*******************************************************************************\n                                Remove liquidity\n*******************************************************************************/\n\nenum WrappingDirection {\n    WRAP,\n    UNWRAP\n}\n\n/**\n * @notice Data for a wrap/unwrap operation.\n * @param kind Type of swap (Exact In or Exact Out)\n * @param direction Direction of the wrapping operation (Wrap or Unwrap)\n * @param wrappedToken Wrapped token, compatible with interface ERC4626\n * @param amountGivenRaw Amount specified for tokenIn or tokenOut (depends on the type of swap and wrapping direction)\n * @param limitRaw Minimum or maximum amount specified for the other token (depends on the type of swap and wrapping\n * direction)\n */\nstruct BufferWrapOrUnwrapParams {\n    SwapKind kind;\n    WrappingDirection direction;\n    IERC4626 wrappedToken;\n    uint256 amountGivenRaw;\n    uint256 limitRaw;\n}\n\n// Protocol Fees are 24-bit values. We transform them by multiplying by 1e11, so that they can be set to any value\n// between 0% and 100% (step 0.00001%). Protocol and pool creator fees are set in the `ProtocolFeeController`, and\n// ensure both constituent and aggregate fees do not exceed this precision.\nuint256 constant FEE_BITLENGTH = 24;\nuint256 constant FEE_SCALING_FACTOR = 1e11;\n// Used to ensure the safety of fee-related math (e.g., pools or hooks don't set it greater than 100%).\n// This value should work for practical purposes and is well within the max precision requirements.\nuint256 constant MAX_FEE_PERCENTAGE = 99.9999e16; // 99.9999%\n"},"contracts/Version.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.24;\n\nimport { IVersion } from \"./IVersion.sol\";\n\n/**\n * @notice Retrieves a contract's version from storage.\n * @dev The version is set at deployment time and cannot be changed. It would be immutable, but immutable strings\n * are not yet supported.\n *\n * Contracts like factories and pools should have versions. These typically take the form of JSON strings containing\n * detailed information about the deployment. For instance:\n *\n * `{name: 'ChildChainGaugeFactory', version: 2, deployment: '20230316-child-chain-gauge-factory-v2'}`\n */\ncontract Version is IVersion {\n    string private _version;\n\n    constructor(string memory version_) {\n        _setVersion(version_);\n    }\n\n    /**\n     * @notice Getter for the version.\n     * @return version The stored contract version\n     */\n    function version() external view returns (string memory) {\n        return _version;\n    }\n\n    /// @dev Internal setter that allows this contract to be used in proxies.\n    function _setVersion(string memory newVersion) internal {\n        _version = newVersion;\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":1},"evmVersion":"cancun","outputSelection":{"*":{"*":["storageLayout","abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2394","formattedMessage":"Warning: Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.\n  --> contracts/StorageSlotExtension.sol:75:13:\n   |\n75 |             tstore(slot, value) // @todo\n   |             ^^^^^^\n\n","message":"Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.","severity":"warning","sourceLocation":{"end":2625,"file":"contracts/StorageSlotExtension.sol","start":2619},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/RouterCommon.sol:130:9:\n    |\n130 |         bytes calldata permit2Signature\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5153,"file":"contracts/RouterCommon.sol","start":5122},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/RouterCommon.sol:97:5:\n   |\n97 |     function getPermit2() external view returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":4042,"file":"contracts/RouterCommon.sol","start":3908},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[81],"IERC165":[1103],"IERC20":[337]},"id":82,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":82,"sourceUnit":90,"src":"133:36:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"141:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":82,"sourceUnit":86,"src":"170:38:0","symbolAliases":[{"foreign":{"id":4,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"178:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7,"name":"IERC20","nameLocations":["590:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"590:6:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"590:6:0"},{"baseName":{"id":9,"name":"IERC165","nameLocations":["598:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1103,"src":"598:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"598:7:0"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"210:357:0","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":81,"linearizedBaseContracts":[81,1103,337],"name":"IERC1363","nameLocation":"578:8:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"1148:370:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":20,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"to","nameLocation":"1556:2:0","nodeType":"VariableDeclaration","scope":20,"src":"1548:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"value","nameLocation":"1568:5:0","nodeType":"VariableDeclaration","scope":20,"src":"1560:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"1593:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:0"},"scope":81,"src":"1523:76:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1605:453:0","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":32,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"to","nameLocation":"2096:2:0","nodeType":"VariableDeclaration","scope":32,"src":"2088:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"value","nameLocation":"2108:5:0","nodeType":"VariableDeclaration","scope":32,"src":"2100:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"data","nameLocation":"2130:4:0","nodeType":"VariableDeclaration","scope":32,"src":"2115:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":26,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"2154:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:0"},"scope":81,"src":"2063:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"2166:453:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"from","nameLocation":"2661:4:0","nodeType":"VariableDeclaration","scope":44,"src":"2653:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"2675:2:0","nodeType":"VariableDeclaration","scope":44,"src":"2667:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"value","nameLocation":"2687:5:0","nodeType":"VariableDeclaration","scope":44,"src":"2679:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"2712:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:0"},"scope":81,"src":"2624:94:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"2724:536:0","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"from","nameLocation":"3302:4:0","nodeType":"VariableDeclaration","scope":58,"src":"3294:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"to","nameLocation":"3316:2:0","nodeType":"VariableDeclaration","scope":58,"src":"3308:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"value","nameLocation":"3328:5:0","nodeType":"VariableDeclaration","scope":58,"src":"3320:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"data","nameLocation":"3350:4:0","nodeType":"VariableDeclaration","scope":58,"src":"3335:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":52,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"3374:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:0"},"scope":81,"src":"3265:115:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"3386:390:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"spender","nameLocation":"3813:7:0","nodeType":"VariableDeclaration","scope":68,"src":"3805:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"value","nameLocation":"3830:5:0","nodeType":"VariableDeclaration","scope":68,"src":"3822:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"3855:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":65,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:0"},"scope":81,"src":"3781:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"3867:478:0","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:0","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"spender","nameLocation":"4382:7:0","nodeType":"VariableDeclaration","scope":80,"src":"4374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"value","nameLocation":"4399:5:0","nodeType":"VariableDeclaration","scope":80,"src":"4391:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"data","nameLocation":"4421:4:0","nodeType":"VariableDeclaration","scope":80,"src":"4406:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":74,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"4445:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:0"},"scope":81,"src":"4350:101:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":82,"src":"568:3885:0","usedErrors":[],"usedEvents":[271,280]}],"src":"107:4347:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1103]},"id":86,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":83,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":86,"sourceUnit":1104,"src":"132:59:1","symbolAliases":[{"foreign":{"id":84,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[337]},"id":90,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":87,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":89,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":90,"sourceUnit":338,"src":"131:49:2","symbolAliases":[{"foreign":{"id":88,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","exportedSymbols":{"IERC20":[337],"IERC20Metadata":[363],"IERC4626":[259]},"id":260,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":91,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":93,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":260,"sourceUnit":338,"src":"133:49:3","symbolAliases":[{"foreign":{"id":92,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"141:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"../token/ERC20/extensions/IERC20Metadata.sol","id":95,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":260,"sourceUnit":364,"src":"183:76:3","symbolAliases":[{"foreign":{"id":94,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"191:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":97,"name":"IERC20","nameLocations":["421:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"421:6:3"},"id":98,"nodeType":"InheritanceSpecifier","src":"421:6:3"},{"baseName":{"id":99,"name":"IERC20Metadata","nameLocations":["429:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":363,"src":"429:14:3"},"id":100,"nodeType":"InheritanceSpecifier","src":"429:14:3"}],"canonicalName":"IERC4626","contractDependencies":[],"contractKind":"interface","documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"261:137:3","text":" @dev Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]."},"fullyImplemented":false,"id":259,"linearizedBaseContracts":[259,363,337],"name":"IERC4626","nameLocation":"409:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7","id":110,"name":"Deposit","nameLocation":"456:7:3","nodeType":"EventDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"480:6:3","nodeType":"VariableDeclaration","scope":110,"src":"464:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"464:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"504:5:3","nodeType":"VariableDeclaration","scope":110,"src":"488:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"488:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":106,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"519:6:3","nodeType":"VariableDeclaration","scope":110,"src":"511:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":108,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"535:6:3","nodeType":"VariableDeclaration","scope":110,"src":"527:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"463:79:3"},"src":"450:93:3"},{"anonymous":false,"eventSelector":"fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db","id":122,"name":"Withdraw","nameLocation":"555:8:3","nodeType":"EventDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"589:6:3","nodeType":"VariableDeclaration","scope":122,"src":"573:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"621:8:3","nodeType":"VariableDeclaration","scope":122,"src":"605:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"655:5:3","nodeType":"VariableDeclaration","scope":122,"src":"639:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":118,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"678:6:3","nodeType":"VariableDeclaration","scope":122,"src":"670:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"702:6:3","nodeType":"VariableDeclaration","scope":122,"src":"694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"563:151:3"},"src":"549:166:3"},{"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"721:207:3","text":" @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."},"functionSelector":"38d52e0f","id":128,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"942:5:3","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"947:2:3"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"assetTokenAddress","nameLocation":"981:17:3","nodeType":"VariableDeclaration","scope":128,"src":"973:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:27:3"},"scope":259,"src":"933:67:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"1006:286:3","text":" @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."},"functionSelector":"01e1d114","id":134,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"1306:11:3","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[],"src":"1317:2:3"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"totalManagedAssets","nameLocation":"1351:18:3","nodeType":"VariableDeclaration","scope":134,"src":"1343:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1342:28:3"},"scope":259,"src":"1297:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"1377:720:3","text":" @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"c6e6f592","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"2111:15:3","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"assets","nameLocation":"2135:6:3","nodeType":"VariableDeclaration","scope":142,"src":"2127:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2126:16:3"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"shares","nameLocation":"2174:6:3","nodeType":"VariableDeclaration","scope":142,"src":"2166:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:16:3"},"scope":259,"src":"2102:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2188:720:3","text":" @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"07a2d13a","id":150,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"2922:15:3","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"shares","nameLocation":"2946:6:3","nodeType":"VariableDeclaration","scope":150,"src":"2938:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2937:16:3"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"assets","nameLocation":"2985:6:3","nodeType":"VariableDeclaration","scope":150,"src":"2977:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2977:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2976:16:3"},"scope":259,"src":"2913:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"2999:386:3","text":" @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."},"functionSelector":"402d267d","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"3399:10:3","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"receiver","nameLocation":"3418:8:3","nodeType":"VariableDeclaration","scope":158,"src":"3410:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3409:18:3"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"maxAssets","nameLocation":"3459:9:3","nodeType":"VariableDeclaration","scope":158,"src":"3451:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:19:3"},"scope":259,"src":"3390:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"3476:1012:3","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"ef8b30f7","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"4502:14:3","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"assets","nameLocation":"4525:6:3","nodeType":"VariableDeclaration","scope":166,"src":"4517:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4517:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4516:16:3"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"shares","nameLocation":"4564:6:3","nodeType":"VariableDeclaration","scope":166,"src":"4556:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"4556:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4555:16:3"},"scope":259,"src":"4493:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4578:651:3","text":" @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"6e553f65","id":176,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5243:7:3","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"assets","nameLocation":"5259:6:3","nodeType":"VariableDeclaration","scope":176,"src":"5251:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"receiver","nameLocation":"5275:8:3","nodeType":"VariableDeclaration","scope":176,"src":"5267:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5267:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5250:34:3"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"shares","nameLocation":"5311:6:3","nodeType":"VariableDeclaration","scope":176,"src":"5303:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5303:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5302:16:3"},"scope":259,"src":"5234:85:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"5325:341:3","text":" @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."},"functionSelector":"c63d75b6","id":184,"implemented":false,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"5680:7:3","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"receiver","nameLocation":"5696:8:3","nodeType":"VariableDeclaration","scope":184,"src":"5688:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"5688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5687:18:3"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"maxShares","nameLocation":"5737:9:3","nodeType":"VariableDeclaration","scope":184,"src":"5729:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5729:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5728:19:3"},"scope":259,"src":"5671:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"5754:984:3","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."},"functionSelector":"b3d7f6b9","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"6752:11:3","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"shares","nameLocation":"6772:6:3","nodeType":"VariableDeclaration","scope":192,"src":"6764:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"6764:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6763:16:3"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"assets","nameLocation":"6811:6:3","nodeType":"VariableDeclaration","scope":192,"src":"6803:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6802:16:3"},"scope":259,"src":"6743:76:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"6825:642:3","text":" @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"94bf804d","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"7481:4:3","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"shares","nameLocation":"7494:6:3","nodeType":"VariableDeclaration","scope":202,"src":"7486:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"7486:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"receiver","nameLocation":"7510:8:3","nodeType":"VariableDeclaration","scope":202,"src":"7502:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"7502:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7485:34:3"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"assets","nameLocation":"7546:6:3","nodeType":"VariableDeclaration","scope":202,"src":"7538:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7538:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7537:16:3"},"scope":259,"src":"7472:82:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"7560:293:3","text":" @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"ce96cb77","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"7867:11:3","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"owner","nameLocation":"7887:5:3","nodeType":"VariableDeclaration","scope":210,"src":"7879:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"7879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7878:15:3"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"maxAssets","nameLocation":"7925:9:3","nodeType":"VariableDeclaration","scope":210,"src":"7917:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7917:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7916:19:3"},"scope":259,"src":"7858:78:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"7942:1034:3","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"0a28a477","id":218,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"8990:15:3","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"assets","nameLocation":"9014:6:3","nodeType":"VariableDeclaration","scope":218,"src":"9006:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"9006:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9005:16:3"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"shares","nameLocation":"9053:6:3","nodeType":"VariableDeclaration","scope":218,"src":"9045:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"9045:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9044:16:3"},"scope":259,"src":"8981:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"9067:670:3","text":" @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"b460af94","id":230,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9751:8:3","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"assets","nameLocation":"9768:6:3","nodeType":"VariableDeclaration","scope":230,"src":"9760:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"9760:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"receiver","nameLocation":"9784:8:3","nodeType":"VariableDeclaration","scope":230,"src":"9776:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"9776:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"9802:5:3","nodeType":"VariableDeclaration","scope":230,"src":"9794:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"9794:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9759:49:3"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"shares","nameLocation":"9835:6:3","nodeType":"VariableDeclaration","scope":230,"src":"9827:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"9827:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9826:16:3"},"scope":259,"src":"9742:101:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"9849:381:3","text":" @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"d905777e","id":238,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"10244:9:3","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"owner","nameLocation":"10262:5:3","nodeType":"VariableDeclaration","scope":238,"src":"10254:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10253:15:3"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"maxShares","nameLocation":"10300:9:3","nodeType":"VariableDeclaration","scope":238,"src":"10292:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"10292:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10291:19:3"},"scope":259,"src":"10235:76:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"10317:1010:3","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"functionSelector":"4cdad506","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"11341:13:3","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"shares","nameLocation":"11363:6:3","nodeType":"VariableDeclaration","scope":246,"src":"11355:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"11355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11354:16:3"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"assets","nameLocation":"11402:6:3","nodeType":"VariableDeclaration","scope":246,"src":"11394:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"11394:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11393:16:3"},"scope":259,"src":"11332:78:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"11416:661:3","text":" @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"ba087652","id":258,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"12091:6:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"shares","nameLocation":"12106:6:3","nodeType":"VariableDeclaration","scope":258,"src":"12098:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"12098:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"receiver","nameLocation":"12122:8:3","nodeType":"VariableDeclaration","scope":258,"src":"12114:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"12114:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"owner","nameLocation":"12140:5:3","nodeType":"VariableDeclaration","scope":258,"src":"12132:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"12132:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12097:49:3"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"assets","nameLocation":"12173:6:3","nodeType":"VariableDeclaration","scope":258,"src":"12165:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"12165:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12164:16:3"},"scope":259,"src":"12082:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":260,"src":"399:11784:3","usedErrors":[],"usedEvents":[110,122,271,280]}],"src":"107:12077:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[337]},"id":338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":261,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":337,"linearizedBaseContracts":[337],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":271,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":271,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":271,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":271,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":280,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":280,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":280,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":280,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":286,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":286,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":337,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":294,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":294,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":337,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":304,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":304,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":301,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":337,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":314,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":314,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":337,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":324,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":324,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":324,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":321,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":337,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":336,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":336,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":336,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":336,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":333,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":337,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":338,"src":"204:2575:4","usedErrors":[],"usedEvents":[271,280]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[337],"IERC20Metadata":[363]},"id":364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":364,"sourceUnit":338,"src":"151:37:5","symbolAliases":[{"foreign":{"id":340,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":343,"name":"IERC20","nameLocations":["306:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"306:6:5"},"id":344,"nodeType":"InheritanceSpecifier","src":"306:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"190:87:5","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":363,"linearizedBaseContracts":[363,337],"name":"IERC20Metadata","nameLocation":"288:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"319:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":350,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:5","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"391:2:5"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"417:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":347,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:5"},"scope":363,"src":"378:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"438:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":356,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:5","nodeType":"FunctionDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"514:2:5"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":356,"src":"540:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":353,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:5"},"scope":363,"src":"499:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"561:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:5","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"648:2:5"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"674:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":359,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:5"},"scope":363,"src":"631:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":364,"src":"278:405:5","usedErrors":[],"usedEvents":[271,280]}],"src":"125:559:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[399]},"id":400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":365,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"149:1965:6","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":399,"linearizedBaseContracts":[399],"name":"IERC20Permit","nameLocation":"2125:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2144:850:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":384,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:6","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"owner","nameLocation":"3032:5:6","nodeType":"VariableDeclaration","scope":384,"src":"3024:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"spender","nameLocation":"3055:7:6","nodeType":"VariableDeclaration","scope":384,"src":"3047:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"value","nameLocation":"3080:5:6","nodeType":"VariableDeclaration","scope":384,"src":"3072:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:6","nodeType":"VariableDeclaration","scope":384,"src":"3095:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"v","nameLocation":"3127:1:6","nodeType":"VariableDeclaration","scope":384,"src":"3121:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":376,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"r","nameLocation":"3146:1:6","nodeType":"VariableDeclaration","scope":384,"src":"3138:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"s","nameLocation":"3165:1:6","nodeType":"VariableDeclaration","scope":384,"src":"3157:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:6"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"3181:0:6"},"scope":399,"src":"2999:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3188:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":392,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:6","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"owner","nameLocation":"3511:5:6","nodeType":"VariableDeclaration","scope":392,"src":"3503:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:6"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":392,"src":"3541:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:6"},"scope":399,"src":"3487:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"3556:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":398,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:6","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"3767:2:6"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"3793:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:6"},"scope":399,"src":"3742:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":400,"src":"2115:1689:6","usedErrors":[],"usedEvents":[]}],"src":"123:3682:6"},"id":6},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1069],"IERC1363":[81],"IERC20":[337],"SafeERC20":[810]},"id":811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":811,"sourceUnit":338,"src":"141:37:7","symbolAliases":[{"foreign":{"id":402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"149:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":811,"sourceUnit":82,"src":"179:58:7","symbolAliases":[{"foreign":{"id":404,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"187:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":811,"sourceUnit":1070,"src":"238:51:7","symbolAliases":[{"foreign":{"id":406,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"246:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"291:458:7","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":810,"linearizedBaseContracts":[810],"name":"SafeERC20","nameLocation":"758:9:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"774:65:7","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":413,"name":"SafeERC20FailedOperation","nameLocation":"850:24:7","nodeType":"ErrorDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"token","nameLocation":"883:5:7","nodeType":"VariableDeclaration","scope":413,"src":"875:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"874:15:7"},"src":"844:46:7"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"896:71:7","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":422,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"978:32:7","nodeType":"ErrorDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"spender","nameLocation":"1019:7:7","nodeType":"VariableDeclaration","scope":422,"src":"1011:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"currentAllowance","nameLocation":"1036:16:7","nodeType":"VariableDeclaration","scope":422,"src":"1028:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1062:17:7","nodeType":"VariableDeclaration","scope":422,"src":"1054:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:70:7"},"src":"972:109:7"},{"body":{"id":445,"nodeType":"Block","src":"1343:88:7","statements":[{"expression":{"arguments":[{"id":434,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"1373:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":437,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"1395:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":304,"src":"1395:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"1412:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"1416:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1411:11:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":435,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1380:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1380:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":433,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1353:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"1353:71:7"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"1087:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":446,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1280:12:7","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"token","nameLocation":"1300:5:7","nodeType":"VariableDeclaration","scope":446,"src":"1293:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":425,"nodeType":"UserDefinedTypeName","pathNode":{"id":424,"name":"IERC20","nameLocations":["1293:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"1293:6:7"},"referencedDeclaration":337,"src":"1293:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"to","nameLocation":"1315:2:7","nodeType":"VariableDeclaration","scope":446,"src":"1307:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1307:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"value","nameLocation":"1327:5:7","nodeType":"VariableDeclaration","scope":446,"src":"1319:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1292:41:7"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1343:0:7"},"scope":810,"src":"1271:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"1760:98:7","statements":[{"expression":{"arguments":[{"id":460,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1790:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":463,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1812:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":336,"src":"1812:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1833:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"1839:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"1843:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:17:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1797:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1801:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"1797:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":459,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"1770:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1770:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"1770:81:7"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1437:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1679:16:7","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"token","nameLocation":"1703:5:7","nodeType":"VariableDeclaration","scope":473,"src":"1696:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":449,"nodeType":"UserDefinedTypeName","pathNode":{"id":448,"name":"IERC20","nameLocations":["1696:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"1696:6:7"},"referencedDeclaration":337,"src":"1696:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"from","nameLocation":"1718:4:7","nodeType":"VariableDeclaration","scope":473,"src":"1710:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1710:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"to","nameLocation":"1732:2:7","nodeType":"VariableDeclaration","scope":473,"src":"1724:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"1744:5:7","nodeType":"VariableDeclaration","scope":473,"src":"1736:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:55:7"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[],"src":"1760:0:7"},"scope":810,"src":"1670:188:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"2600:139:7","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"oldAllowance","nameLocation":"2618:12:7","nodeType":"VariableDeclaration","scope":503,"src":"2610:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":494,"initialValue":{"arguments":[{"arguments":[{"id":490,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2657:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$810","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$810","typeString":"library SafeERC20"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2649:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:7","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2664:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2633:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2639:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2633:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2610:62:7"},{"expression":{"arguments":[{"id":496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2695:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":497,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":498,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"2711:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2726:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2711:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":495,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2682:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"2682:50:7"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"1864:645:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2523:21:7","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"token","nameLocation":"2552:5:7","nodeType":"VariableDeclaration","scope":504,"src":"2545:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"IERC20","nameLocations":["2545:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2545:6:7"},"referencedDeclaration":337,"src":"2545:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"spender","nameLocation":"2567:7:7","nodeType":"VariableDeclaration","scope":504,"src":"2559:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"value","nameLocation":"2584:5:7","nodeType":"VariableDeclaration","scope":504,"src":"2576:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:46:7"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"2600:0:7"},"scope":810,"src":"2514:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"3505:370:7","statements":[{"id":545,"nodeType":"UncheckedBlock","src":"3515:354:7","statements":[{"assignments":[516],"declarations":[{"constant":false,"id":516,"mutability":"mutable","name":"currentAllowance","nameLocation":"3547:16:7","nodeType":"VariableDeclaration","scope":545,"src":"3539:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[{"arguments":[{"id":521,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3590:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$810","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$810","typeString":"library SafeERC20"}],"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3582:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:7","typeDescriptions":{}}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3597:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3566:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":314,"src":"3566:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3566:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3539:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3623:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":527,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3642:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":536,"nodeType":"IfStatement","src":"3619:160:7","trueBody":{"id":535,"nodeType":"Block","src":"3661:118:7","statements":[{"errorCall":{"arguments":[{"id":530,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3719:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3728:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":532,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3746:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":529,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3686:32:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":534,"nodeType":"RevertStatement","src":"3679:85:7"}]}},{"expression":{"arguments":[{"id":538,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3805:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":539,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3812:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":540,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3821:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":541,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3840:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3821:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":537,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"3792:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"3792:66:7"}]}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2745:657:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3416:21:7","nodeType":"FunctionDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"token","nameLocation":"3445:5:7","nodeType":"VariableDeclaration","scope":547,"src":"3438:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":507,"nodeType":"UserDefinedTypeName","pathNode":{"id":506,"name":"IERC20","nameLocations":["3438:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3438:6:7"},"referencedDeclaration":337,"src":"3438:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"spender","nameLocation":"3460:7:7","nodeType":"VariableDeclaration","scope":547,"src":"3452:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3477:17:7","nodeType":"VariableDeclaration","scope":547,"src":"3469:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3437:58:7"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"3505:0:7"},"scope":810,"src":"3407:468:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"4529:303:7","statements":[{"assignments":[559],"declarations":[{"constant":false,"id":559,"mutability":"mutable","name":"approvalCall","nameLocation":"4552:12:7","nodeType":"VariableDeclaration","scope":593,"src":"4539:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":558,"name":"bytes","nodeType":"ElementaryTypeName","src":"4539:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":568,"initialValue":{"arguments":[{"expression":{"id":562,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4582:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":324,"src":"4582:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":564,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4598:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"4607:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4597:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":560,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4567:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4571:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"4567:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4567:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4539:75:7"},{"condition":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4629:45:7","subExpression":{"arguments":[{"id":570,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4654:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":571,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4661:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":569,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"4630:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":592,"nodeType":"IfStatement","src":"4625:201:7","trueBody":{"id":591,"nodeType":"Block","src":"4676:150:7","statements":[{"expression":{"arguments":[{"id":575,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4710:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":578,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4732:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":324,"src":"4732:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":580,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4748:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4747:12:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":576,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4717:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4721:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"4717:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":574,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4690:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"4690:71:7"},{"expression":{"arguments":[{"id":587,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4795:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":588,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4802:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":586,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4775:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4775:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"4775:40:7"}]}}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"3881:566:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4461:12:7","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"token","nameLocation":"4481:5:7","nodeType":"VariableDeclaration","scope":594,"src":"4474:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":550,"nodeType":"UserDefinedTypeName","pathNode":{"id":549,"name":"IERC20","nameLocations":["4474:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"4474:6:7"},"referencedDeclaration":337,"src":"4474:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"spender","nameLocation":"4496:7:7","nodeType":"VariableDeclaration","scope":594,"src":"4488:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"4488:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"value","nameLocation":"4513:5:7","nodeType":"VariableDeclaration","scope":594,"src":"4505:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4505:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4473:46:7"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"4529:0:7"},"scope":810,"src":"4452:380:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":636,"nodeType":"Block","src":"5279:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5293:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5296:4:7","memberName":"code","nodeType":"MemberAccess","src":"5293:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5301:6:7","memberName":"length","nodeType":"MemberAccess","src":"5293:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5293:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:7","subExpression":{"arguments":[{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5402:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5406:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":623,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5413:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":619,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5380:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5386:15:7","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":32,"src":"5380:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":634,"nodeType":"IfStatement","src":"5375:117:7","trueBody":{"id":633,"nodeType":"Block","src":"5420:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":629,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5474:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5466:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"5466:7:7","typeDescriptions":{}}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5466:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":626,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"5441:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":632,"nodeType":"RevertStatement","src":"5434:47:7"}]}},"id":635,"nodeType":"IfStatement","src":"5289:203:7","trueBody":{"id":618,"nodeType":"Block","src":"5314:55:7","statements":[{"expression":{"arguments":[{"id":613,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5341:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5348:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5352:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5328:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"5328:30:7"}]}}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"4838:333:7","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":637,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5185:22:7","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"token","nameLocation":"5217:5:7","nodeType":"VariableDeclaration","scope":637,"src":"5208:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":597,"nodeType":"UserDefinedTypeName","pathNode":{"id":596,"name":"IERC1363","nameLocations":["5208:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5208:8:7"},"referencedDeclaration":81,"src":"5208:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"to","nameLocation":"5232:2:7","nodeType":"VariableDeclaration","scope":637,"src":"5224:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"value","nameLocation":"5244:5:7","nodeType":"VariableDeclaration","scope":637,"src":"5236:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"data","nameLocation":"5264:4:7","nodeType":"VariableDeclaration","scope":637,"src":"5251:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":603,"name":"bytes","nodeType":"ElementaryTypeName","src":"5251:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5207:62:7"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"5279:0:7"},"scope":810,"src":"5176:322:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":683,"nodeType":"Block","src":"6017:239:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":652,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6031:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6034:4:7","memberName":"code","nodeType":"MemberAccess","src":"6031:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:7","memberName":"length","nodeType":"MemberAccess","src":"6031:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6049:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6031:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6127:49:7","subExpression":{"arguments":[{"id":667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6154:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6160:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6164:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":670,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6171:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":665,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6128:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6134:19:7","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":58,"src":"6128:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":681,"nodeType":"IfStatement","src":"6123:127:7","trueBody":{"id":680,"nodeType":"Block","src":"6178:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":676,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6232:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"6224:7:7","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6224:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":673,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6199:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":679,"nodeType":"RevertStatement","src":"6192:47:7"}]}},"id":682,"nodeType":"IfStatement","src":"6027:223:7","trueBody":{"id":664,"nodeType":"Block","src":"6052:65:7","statements":[{"expression":{"arguments":[{"id":658,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6083:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":659,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6090:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6096:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6100:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":657,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"6066:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"6066:40:7"}]}}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"5504:341:7","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":684,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5859:26:7","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"token","nameLocation":"5904:5:7","nodeType":"VariableDeclaration","scope":684,"src":"5895:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":640,"nodeType":"UserDefinedTypeName","pathNode":{"id":639,"name":"IERC1363","nameLocations":["5895:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"5895:8:7"},"referencedDeclaration":81,"src":"5895:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"from","nameLocation":"5927:4:7","nodeType":"VariableDeclaration","scope":684,"src":"5919:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"5919:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"to","nameLocation":"5949:2:7","nodeType":"VariableDeclaration","scope":684,"src":"5941:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"value","nameLocation":"5969:5:7","nodeType":"VariableDeclaration","scope":684,"src":"5961:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"data","nameLocation":"5997:4:7","nodeType":"VariableDeclaration","scope":684,"src":"5984:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"5984:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5885:122:7"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"6017:0:7"},"scope":810,"src":"5850:406:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"7023:218:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":697,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7037:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7040:4:7","memberName":"code","nodeType":"MemberAccess","src":"7037:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7045:6:7","memberName":"length","nodeType":"MemberAccess","src":"7037:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7037:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7123:38:7","subExpression":{"arguments":[{"id":711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7145:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"7149:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":713,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"7156:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":709,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7124:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7130:14:7","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":80,"src":"7124:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7124:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":724,"nodeType":"IfStatement","src":"7119:116:7","trueBody":{"id":723,"nodeType":"Block","src":"7163:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":719,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7217:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}],"id":718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:7","typeDescriptions":{}}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7184:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":722,"nodeType":"RevertStatement","src":"7177:47:7"}]}},"id":725,"nodeType":"IfStatement","src":"7033:202:7","trueBody":{"id":708,"nodeType":"Block","src":"7058:55:7","statements":[{"expression":{"arguments":[{"id":703,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7085:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},{"id":704,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7092:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"7096:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"7072:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"7072:30:7"}]}}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"6262:654:7","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6930:21:7","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"token","nameLocation":"6961:5:7","nodeType":"VariableDeclaration","scope":727,"src":"6952:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"},"typeName":{"id":687,"nodeType":"UserDefinedTypeName","pathNode":{"id":686,"name":"IERC1363","nameLocations":["6952:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"6952:8:7"},"referencedDeclaration":81,"src":"6952:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$81","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":690,"mutability":"mutable","name":"to","nameLocation":"6976:2:7","nodeType":"VariableDeclaration","scope":727,"src":"6968:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"6968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"value","nameLocation":"6988:5:7","nodeType":"VariableDeclaration","scope":727,"src":"6980:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"6980:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"data","nameLocation":"7008:4:7","nodeType":"VariableDeclaration","scope":727,"src":"6995:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":693,"name":"bytes","nodeType":"ElementaryTypeName","src":"6995:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6951:62:7"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"7023:0:7"},"scope":810,"src":"6921:320:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"7808:650:7","statements":[{"assignments":[737],"declarations":[{"constant":false,"id":737,"mutability":"mutable","name":"returnSize","nameLocation":"7826:10:7","nodeType":"VariableDeclaration","scope":767,"src":"7818:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"7818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":738,"nodeType":"VariableDeclarationStatement","src":"7818:18:7"},{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"returnValue","nameLocation":"7854:11:7","nodeType":"VariableDeclaration","scope":767,"src":"7846:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"nodeType":"VariableDeclarationStatement","src":"7846:19:7"},{"AST":{"nativeSrc":"7900:396:7","nodeType":"YulBlock","src":"7900:396:7","statements":[{"nativeSrc":"7914:75:7","nodeType":"YulVariableDeclaration","src":"7914:75:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7934:3:7","nodeType":"YulIdentifier","src":"7934:3:7"},"nativeSrc":"7934:5:7","nodeType":"YulFunctionCall","src":"7934:5:7"},{"name":"token","nativeSrc":"7941:5:7","nodeType":"YulIdentifier","src":"7941:5:7"},{"kind":"number","nativeSrc":"7948:1:7","nodeType":"YulLiteral","src":"7948:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7955:4:7","nodeType":"YulIdentifier","src":"7955:4:7"},{"kind":"number","nativeSrc":"7961:4:7","nodeType":"YulLiteral","src":"7961:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7951:3:7","nodeType":"YulIdentifier","src":"7951:3:7"},"nativeSrc":"7951:15:7","nodeType":"YulFunctionCall","src":"7951:15:7"},{"arguments":[{"name":"data","nativeSrc":"7974:4:7","nodeType":"YulIdentifier","src":"7974:4:7"}],"functionName":{"name":"mload","nativeSrc":"7968:5:7","nodeType":"YulIdentifier","src":"7968:5:7"},"nativeSrc":"7968:11:7","nodeType":"YulFunctionCall","src":"7968:11:7"},{"kind":"number","nativeSrc":"7981:1:7","nodeType":"YulLiteral","src":"7981:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7984:4:7","nodeType":"YulLiteral","src":"7984:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7929:4:7","nodeType":"YulIdentifier","src":"7929:4:7"},"nativeSrc":"7929:60:7","nodeType":"YulFunctionCall","src":"7929:60:7"},"variables":[{"name":"success","nativeSrc":"7918:7:7","nodeType":"YulTypedName","src":"7918:7:7","type":""}]},{"body":{"nativeSrc":"8050:157:7","nodeType":"YulBlock","src":"8050:157:7","statements":[{"nativeSrc":"8068:22:7","nodeType":"YulVariableDeclaration","src":"8068:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"8085:4:7","nodeType":"YulLiteral","src":"8085:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8079:5:7","nodeType":"YulIdentifier","src":"8079:5:7"},"nativeSrc":"8079:11:7","nodeType":"YulFunctionCall","src":"8079:11:7"},"variables":[{"name":"ptr","nativeSrc":"8072:3:7","nodeType":"YulTypedName","src":"8072:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8122:3:7","nodeType":"YulIdentifier","src":"8122:3:7"},{"kind":"number","nativeSrc":"8127:1:7","nodeType":"YulLiteral","src":"8127:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8130:14:7","nodeType":"YulIdentifier","src":"8130:14:7"},"nativeSrc":"8130:16:7","nodeType":"YulFunctionCall","src":"8130:16:7"}],"functionName":{"name":"returndatacopy","nativeSrc":"8107:14:7","nodeType":"YulIdentifier","src":"8107:14:7"},"nativeSrc":"8107:40:7","nodeType":"YulFunctionCall","src":"8107:40:7"},"nativeSrc":"8107:40:7","nodeType":"YulExpressionStatement","src":"8107:40:7"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8171:3:7","nodeType":"YulIdentifier","src":"8171:3:7"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8176:14:7","nodeType":"YulIdentifier","src":"8176:14:7"},"nativeSrc":"8176:16:7","nodeType":"YulFunctionCall","src":"8176:16:7"}],"functionName":{"name":"revert","nativeSrc":"8164:6:7","nodeType":"YulIdentifier","src":"8164:6:7"},"nativeSrc":"8164:29:7","nodeType":"YulFunctionCall","src":"8164:29:7"},"nativeSrc":"8164:29:7","nodeType":"YulExpressionStatement","src":"8164:29:7"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8041:7:7","nodeType":"YulIdentifier","src":"8041:7:7"}],"functionName":{"name":"iszero","nativeSrc":"8034:6:7","nodeType":"YulIdentifier","src":"8034:6:7"},"nativeSrc":"8034:15:7","nodeType":"YulFunctionCall","src":"8034:15:7"},"nativeSrc":"8031:176:7","nodeType":"YulIf","src":"8031:176:7"},{"nativeSrc":"8220:30:7","nodeType":"YulAssignment","src":"8220:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8234:14:7","nodeType":"YulIdentifier","src":"8234:14:7"},"nativeSrc":"8234:16:7","nodeType":"YulFunctionCall","src":"8234:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"8220:10:7","nodeType":"YulIdentifier","src":"8220:10:7"}]},{"nativeSrc":"8263:23:7","nodeType":"YulAssignment","src":"8263:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"8284:1:7","nodeType":"YulLiteral","src":"8284:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8278:5:7","nodeType":"YulIdentifier","src":"8278:5:7"},"nativeSrc":"8278:8:7","nodeType":"YulFunctionCall","src":"8278:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"8263:11:7","nodeType":"YulIdentifier","src":"8263:11:7"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":733,"isOffset":false,"isSlot":false,"src":"7955:4:7","valueSize":1},{"declaration":733,"isOffset":false,"isSlot":false,"src":"7974:4:7","valueSize":1},{"declaration":737,"isOffset":false,"isSlot":false,"src":"8220:10:7","valueSize":1},{"declaration":740,"isOffset":false,"isSlot":false,"src":"8263:11:7","valueSize":1},{"declaration":731,"isOffset":false,"isSlot":false,"src":"7941:5:7","valueSize":1}],"flags":["memory-safe"],"id":742,"nodeType":"InlineAssembly","src":"7875:421:7"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":743,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"8310:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8310:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"8362:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8362:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8310:68:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":748,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"8336:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:7","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:4:7","memberName":"code","nodeType":"MemberAccess","src":"8328:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8348:6:7","memberName":"length","nodeType":"MemberAccess","src":"8328:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8358:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8328:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"8306:146:7","trueBody":{"id":765,"nodeType":"Block","src":"8380:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":761,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"8434:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:7","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":758,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"8401:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8401:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":764,"nodeType":"RevertStatement","src":"8394:47:7"}]}}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"7247:486:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7747:19:7","nodeType":"FunctionDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"token","nameLocation":"7774:5:7","nodeType":"VariableDeclaration","scope":768,"src":"7767:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":730,"nodeType":"UserDefinedTypeName","pathNode":{"id":729,"name":"IERC20","nameLocations":["7767:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"7767:6:7"},"referencedDeclaration":337,"src":"7767:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"data","nameLocation":"7794:4:7","nodeType":"VariableDeclaration","scope":768,"src":"7781:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":732,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7766:33:7"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"7808:0:7"},"scope":810,"src":"7738:720:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":808,"nodeType":"Block","src":"9049:391:7","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"success","nameLocation":"9064:7:7","nodeType":"VariableDeclaration","scope":808,"src":"9059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":779,"name":"bool","nodeType":"ElementaryTypeName","src":"9059:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":781,"nodeType":"VariableDeclarationStatement","src":"9059:12:7"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"returnSize","nameLocation":"9089:10:7","nodeType":"VariableDeclaration","scope":808,"src":"9081:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"9081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":784,"nodeType":"VariableDeclarationStatement","src":"9081:18:7"},{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"returnValue","nameLocation":"9117:11:7","nodeType":"VariableDeclaration","scope":808,"src":"9109:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":787,"nodeType":"VariableDeclarationStatement","src":"9109:19:7"},{"AST":{"nativeSrc":"9163:174:7","nodeType":"YulBlock","src":"9163:174:7","statements":[{"nativeSrc":"9177:71:7","nodeType":"YulAssignment","src":"9177:71:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9193:3:7","nodeType":"YulIdentifier","src":"9193:3:7"},"nativeSrc":"9193:5:7","nodeType":"YulFunctionCall","src":"9193:5:7"},{"name":"token","nativeSrc":"9200:5:7","nodeType":"YulIdentifier","src":"9200:5:7"},{"kind":"number","nativeSrc":"9207:1:7","nodeType":"YulLiteral","src":"9207:1:7","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9214:4:7","nodeType":"YulIdentifier","src":"9214:4:7"},{"kind":"number","nativeSrc":"9220:4:7","nodeType":"YulLiteral","src":"9220:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9210:3:7","nodeType":"YulIdentifier","src":"9210:3:7"},"nativeSrc":"9210:15:7","nodeType":"YulFunctionCall","src":"9210:15:7"},{"arguments":[{"name":"data","nativeSrc":"9233:4:7","nodeType":"YulIdentifier","src":"9233:4:7"}],"functionName":{"name":"mload","nativeSrc":"9227:5:7","nodeType":"YulIdentifier","src":"9227:5:7"},"nativeSrc":"9227:11:7","nodeType":"YulFunctionCall","src":"9227:11:7"},{"kind":"number","nativeSrc":"9240:1:7","nodeType":"YulLiteral","src":"9240:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9243:4:7","nodeType":"YulLiteral","src":"9243:4:7","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9188:4:7","nodeType":"YulIdentifier","src":"9188:4:7"},"nativeSrc":"9188:60:7","nodeType":"YulFunctionCall","src":"9188:60:7"},"variableNames":[{"name":"success","nativeSrc":"9177:7:7","nodeType":"YulIdentifier","src":"9177:7:7"}]},{"nativeSrc":"9261:30:7","nodeType":"YulAssignment","src":"9261:30:7","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9275:14:7","nodeType":"YulIdentifier","src":"9275:14:7"},"nativeSrc":"9275:16:7","nodeType":"YulFunctionCall","src":"9275:16:7"},"variableNames":[{"name":"returnSize","nativeSrc":"9261:10:7","nodeType":"YulIdentifier","src":"9261:10:7"}]},{"nativeSrc":"9304:23:7","nodeType":"YulAssignment","src":"9304:23:7","value":{"arguments":[{"kind":"number","nativeSrc":"9325:1:7","nodeType":"YulLiteral","src":"9325:1:7","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9319:5:7","nodeType":"YulIdentifier","src":"9319:5:7"},"nativeSrc":"9319:8:7","nodeType":"YulFunctionCall","src":"9319:8:7"},"variableNames":[{"name":"returnValue","nativeSrc":"9304:11:7","nodeType":"YulIdentifier","src":"9304:11:7"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":774,"isOffset":false,"isSlot":false,"src":"9214:4:7","valueSize":1},{"declaration":774,"isOffset":false,"isSlot":false,"src":"9233:4:7","valueSize":1},{"declaration":783,"isOffset":false,"isSlot":false,"src":"9261:10:7","valueSize":1},{"declaration":786,"isOffset":false,"isSlot":false,"src":"9304:11:7","valueSize":1},{"declaration":780,"isOffset":false,"isSlot":false,"src":"9177:7:7","valueSize":1},{"declaration":772,"isOffset":false,"isSlot":false,"src":"9200:5:7","valueSize":1}],"flags":["memory-safe"],"id":788,"nodeType":"InlineAssembly","src":"9138:199:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":789,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9353:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9365:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9365:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"9416:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9416:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9365:67:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":795,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9391:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9383:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9383:7:7","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9383:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9398:4:7","memberName":"code","nodeType":"MemberAccess","src":"9383:19:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9403:6:7","memberName":"length","nodeType":"MemberAccess","src":"9383:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9383:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9364:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9353:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":778,"id":807,"nodeType":"Return","src":"9346:87:7"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"8464:491:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8969:23:7","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"token","nameLocation":"9000:5:7","nodeType":"VariableDeclaration","scope":809,"src":"8993:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":771,"nodeType":"UserDefinedTypeName","pathNode":{"id":770,"name":"IERC20","nameLocations":["8993:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"8993:6:7"},"referencedDeclaration":337,"src":"8993:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"data","nameLocation":"9020:4:7","nodeType":"VariableDeclaration","scope":809,"src":"9007:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":773,"name":"bytes","nodeType":"ElementaryTypeName","src":"9007:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8992:33:7"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"9043:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"9043:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9042:6:7"},"scope":810,"src":"8960:480:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":811,"src":"750:8692:7","usedErrors":[413,422],"usedEvents":[]}],"src":"115:9328:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1069],"Errors":[1091]},"id":1070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":812,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1070,"sourceUnit":1092,"src":"127:36:8","symbolAliases":[{"foreign":{"id":813,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"135:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"165:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1069,"linearizedBaseContracts":[1069],"name":"Address","nameLocation":"241:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"255:75:8","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":820,"name":"AddressEmptyCode","nameLocation":"341:16:8","nodeType":"ErrorDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"target","nameLocation":"366:6:8","nodeType":"VariableDeclaration","scope":820,"src":"358:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:8"},"src":"335:39:8"},{"body":{"id":866,"nodeType":"Block","src":"1361:278:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":830,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:8","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":833,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1399:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"1371:125:8","trueBody":{"id":846,"nodeType":"Block","src":"1407:89:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":840,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:8","typeDescriptions":{}}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1478:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":835,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"1428:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1091_$","typeString":"type(library Errors)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:8","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"1428:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":845,"nodeType":"RevertStatement","src":"1421:64:8"}]}},{"assignments":[849,null],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"success","nameLocation":"1512:7:8","nodeType":"VariableDeclaration","scope":866,"src":"1507:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":848,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":856,"initialValue":{"arguments":[{"hexValue":"","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":850,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1525:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:8","memberName":"call","nodeType":"MemberAccess","src":"1525:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":852,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"1547:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:8"},{"condition":{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:8","subExpression":{"id":857,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1573:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"IfStatement","src":"1568:65:8","trueBody":{"id":864,"nodeType":"Block","src":"1582:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":859,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"1603:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1091_$","typeString":"type(library Errors)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:8","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"1603:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":863,"nodeType":"RevertStatement","src":"1596:26:8"}]}}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"380:905:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:8","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:8","nodeType":"VariableDeclaration","scope":867,"src":"1309:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"amount","nameLocation":"1344:6:8","nodeType":"VariableDeclaration","scope":867,"src":"1336:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:8"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"1361:0:8"},"scope":1069,"src":"1290:349:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":883,"nodeType":"Block","src":"2573:62:8","statements":[{"expression":{"arguments":[{"id":878,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2612:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2620:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":877,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"2590:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2583:45:8"}]},"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"1645:834:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:8","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"target","nameLocation":"2514:6:8","nodeType":"VariableDeclaration","scope":884,"src":"2506:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"data","nameLocation":"2535:4:8","nodeType":"VariableDeclaration","scope":884,"src":"2522:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":871,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:8"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2559:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":874,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:8"},"scope":1069,"src":"2484:151:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":933,"nodeType":"Block","src":"3072:294:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":898,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:8","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3110:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"3082:123:8","trueBody":{"id":914,"nodeType":"Block","src":"3117:88:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":908,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:8","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:8","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3188:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":903,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3138:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1091_$","typeString":"type(library Errors)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:8","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1079,"src":"3138:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":913,"nodeType":"RevertStatement","src":"3131:63:8"}]}},{"assignments":[917,919],"declarations":[{"constant":false,"id":917,"mutability":"mutable","name":"success","nameLocation":"3220:7:8","nodeType":"VariableDeclaration","scope":933,"src":"3215:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":916,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:8","nodeType":"VariableDeclaration","scope":933,"src":"3229:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":926,"initialValue":{"arguments":[{"id":924,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3282:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":920,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3256:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:8","memberName":"call","nodeType":"MemberAccess","src":"3256:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3275:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:8"},{"expression":{"arguments":[{"id":928,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3331:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"3339:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":930,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"3348:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":927,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3304:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":895,"id":932,"nodeType":"Return","src":"3297:62:8"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2641:313:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":934,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:8","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"target","nameLocation":"2998:6:8","nodeType":"VariableDeclaration","scope":934,"src":"2990:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"data","nameLocation":"3019:4:8","nodeType":"VariableDeclaration","scope":934,"src":"3006:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":888,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"value","nameLocation":"3033:5:8","nodeType":"VariableDeclaration","scope":934,"src":"3025:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:8"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"3058:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":893,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:8"},"scope":1069,"src":"2959:407:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"3605:154:8","statements":[{"assignments":[945,947],"declarations":[{"constant":false,"id":945,"mutability":"mutable","name":"success","nameLocation":"3621:7:8","nodeType":"VariableDeclaration","scope":959,"src":"3616:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":944,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:8","nodeType":"VariableDeclaration","scope":959,"src":"3630:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":952,"initialValue":{"arguments":[{"id":950,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3675:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":948,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3657:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:8"},{"expression":{"arguments":[{"id":954,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"3724:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":955,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3732:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":956,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3741:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":953,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3697:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":943,"id":958,"nodeType":"Return","src":"3690:62:8"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"3372:128:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:8","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"target","nameLocation":"3541:6:8","nodeType":"VariableDeclaration","scope":960,"src":"3533:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"data","nameLocation":"3562:4:8","nodeType":"VariableDeclaration","scope":960,"src":"3549:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":938,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:8"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"3591:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:8"},"scope":1069,"src":"3505:254:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":985,"nodeType":"Block","src":"3997:156:8","statements":[{"assignments":[971,973],"declarations":[{"constant":false,"id":971,"mutability":"mutable","name":"success","nameLocation":"4013:7:8","nodeType":"VariableDeclaration","scope":985,"src":"4008:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":970,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:8","nodeType":"VariableDeclaration","scope":985,"src":"4022:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":972,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":978,"initialValue":{"arguments":[{"id":976,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4069:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":974,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4049:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:8"},{"expression":{"arguments":[{"id":980,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4118:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4126:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":982,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"4135:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":979,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"4091:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":969,"id":984,"nodeType":"Return","src":"4084:62:8"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"3765:130:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":986,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:8","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"target","nameLocation":"3938:6:8","nodeType":"VariableDeclaration","scope":986,"src":"3930:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"data","nameLocation":"3959:4:8","nodeType":"VariableDeclaration","scope":986,"src":"3946:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":964,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:8"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"3983:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:8"},"scope":1069,"src":"3900:253:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"4579:424:8","statements":[{"condition":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:8","subExpression":{"id":998,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"4594:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1023,"nodeType":"Block","src":"4653:344:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1005,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4841:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:8","memberName":"length","nodeType":"MemberAccess","src":"4841:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1009,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4867:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:8","memberName":"code","nodeType":"MemberAccess","src":"4867:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:8","memberName":"length","nodeType":"MemberAccess","src":"4867:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"4837:119:8","trueBody":{"id":1019,"nodeType":"Block","src":"4892:64:8","statements":[{"errorCall":{"arguments":[{"id":1016,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4934:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1015,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"4917:16:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1018,"nodeType":"RevertStatement","src":"4910:31:8"}]}},{"expression":{"id":1021,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4976:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":997,"id":1022,"nodeType":"Return","src":"4969:17:8"}]},"id":1024,"nodeType":"IfStatement","src":"4589:408:8","trueBody":{"id":1004,"nodeType":"Block","src":"4603:44:8","statements":[{"expression":{"arguments":[{"id":1001,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4625:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1000,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4617:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"4617:19:8"}]}}]},"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"4159:257:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:8","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"target","nameLocation":"4474:6:8","nodeType":"VariableDeclaration","scope":1026,"src":"4466:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"success","nameLocation":"4495:7:8","nodeType":"VariableDeclaration","scope":1026,"src":"4490:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":990,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:8","nodeType":"VariableDeclaration","scope":1026,"src":"4512:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:8"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"4565:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:8"},"scope":1069,"src":"4421:582:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"5307:122:8","statements":[{"condition":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:8","subExpression":{"id":1036,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5322:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1045,"nodeType":"Block","src":"5381:42:8","statements":[{"expression":{"id":1043,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5402:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1035,"id":1044,"nodeType":"Return","src":"5395:17:8"}]},"id":1046,"nodeType":"IfStatement","src":"5317:106:8","trueBody":{"id":1042,"nodeType":"Block","src":"5331:44:8","statements":[{"expression":{"arguments":[{"id":1039,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5353:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1038,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5345:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"5345:19:8"}]}}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"5009:191:8","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:8","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"success","nameLocation":"5236:7:8","nodeType":"VariableDeclaration","scope":1048,"src":"5231:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1028,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:8","nodeType":"VariableDeclaration","scope":1048,"src":"5245:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1030,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:8"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1048,"src":"5293:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:8"},"scope":1069,"src":"5205:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1067,"nodeType":"Block","src":"5598:432:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1054,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"5674:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:8","memberName":"length","nodeType":"MemberAccess","src":"5674:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1065,"nodeType":"Block","src":"5973:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1060,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5994:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1091_$","typeString":"type(library Errors)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:8","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1082,"src":"5994:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1064,"nodeType":"RevertStatement","src":"5987:26:8"}]},"id":1066,"nodeType":"IfStatement","src":"5670:354:8","trueBody":{"id":1059,"nodeType":"Block","src":"5697:270:8","statements":[{"AST":{"nativeSrc":"5824:133:8","nodeType":"YulBlock","src":"5824:133:8","statements":[{"nativeSrc":"5842:40:8","nodeType":"YulVariableDeclaration","src":"5842:40:8","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:8","nodeType":"YulIdentifier","src":"5871:10:8"}],"functionName":{"name":"mload","nativeSrc":"5865:5:8","nodeType":"YulIdentifier","src":"5865:5:8"},"nativeSrc":"5865:17:8","nodeType":"YulFunctionCall","src":"5865:17:8"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:8","nodeType":"YulTypedName","src":"5846:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:8","nodeType":"YulLiteral","src":"5910:2:8","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:8","nodeType":"YulIdentifier","src":"5914:10:8"}],"functionName":{"name":"add","nativeSrc":"5906:3:8","nodeType":"YulIdentifier","src":"5906:3:8"},"nativeSrc":"5906:19:8","nodeType":"YulFunctionCall","src":"5906:19:8"},{"name":"returndata_size","nativeSrc":"5927:15:8","nodeType":"YulIdentifier","src":"5927:15:8"}],"functionName":{"name":"revert","nativeSrc":"5899:6:8","nodeType":"YulIdentifier","src":"5899:6:8"},"nativeSrc":"5899:44:8","nodeType":"YulFunctionCall","src":"5899:44:8"},"nativeSrc":"5899:44:8","nodeType":"YulExpressionStatement","src":"5899:44:8"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1051,"isOffset":false,"isSlot":false,"src":"5871:10:8","valueSize":1},{"declaration":1051,"isOffset":false,"isSlot":false,"src":"5914:10:8","valueSize":1}],"flags":["memory-safe"],"id":1058,"nodeType":"InlineAssembly","src":"5799:158:8"}]}}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"5435:103:8","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:8","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:8","nodeType":"VariableDeclaration","scope":1068,"src":"5560:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1050,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:8"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"5598:0:8"},"scope":1069,"src":"5543:487:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1070,"src":"233:5799:8","usedErrors":[820],"usedEvents":[]}],"src":"101:5932:8"},"id":8},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1091]},"id":1092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1071,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"126:284:9","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1091,"linearizedBaseContracts":[1091],"name":"Errors","nameLocation":"419:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"432:94:9","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1079,"name":"InsufficientBalance","nameLocation":"537:19:9","nodeType":"ErrorDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"balance","nameLocation":"565:7:9","nodeType":"VariableDeclaration","scope":1079,"src":"557:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"needed","nameLocation":"582:6:9","nodeType":"VariableDeclaration","scope":1079,"src":"574:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:9"},"src":"531:59:9"},{"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"596:89:9","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1082,"name":"FailedCall","nameLocation":"696:10:9","nodeType":"ErrorDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"706:2:9"},"src":"690:19:9"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"715:46:9","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1085,"name":"FailedDeployment","nameLocation":"772:16:9","nodeType":"ErrorDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"788:2:9"},"src":"766:25:9"},{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"797:58:9","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1090,"name":"MissingPrecompile","nameLocation":"866:17:9","nodeType":"ErrorDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"884:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:9"},"src":"860:33:9"}],"scope":1092,"src":"411:484:9","usedErrors":[1079,1082,1085,1090],"usedEvents":[]}],"src":"100:796:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1103]},"id":1104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1093,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"141:280:10","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1103,"linearizedBaseContracts":[1103],"name":"IERC165","nameLocation":"432:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"446:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1102,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:10","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:10","nodeType":"VariableDeclaration","scope":1102,"src":"818:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1096,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:10"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"861:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1099,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:10"},"scope":1103,"src":"791:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1104,"src":"422:447:10","usedErrors":[],"usedEvents":[]}],"src":"115:755:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[2868]},"id":2869,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"218:550:11","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":2868,"linearizedBaseContracts":[2868],"name":"SafeCast","nameLocation":"777:8:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"792:68:11","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":1113,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:11","nodeType":"ErrorDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"bits","nameLocation":"908:4:11","nodeType":"VariableDeclaration","scope":1113,"src":"902:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1108,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"value","nameLocation":"922:5:11","nodeType":"VariableDeclaration","scope":1113,"src":"914:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:11"},"src":"865:64:11"},{"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"935:75:11","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":1118,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:11","nodeType":"ErrorDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"value","nameLocation":"1056:5:11","nodeType":"VariableDeclaration","scope":1118,"src":"1049:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1115,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:11"},"src":"1015:48:11"},{"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"1069:67:11","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":1125,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:11","nodeType":"ErrorDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"bits","nameLocation":"1183:4:11","nodeType":"VariableDeclaration","scope":1125,"src":"1177:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1120,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"value","nameLocation":"1196:5:11","nodeType":"VariableDeclaration","scope":1125,"src":"1189:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1122,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:11"},"src":"1141:62:11"},{"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"1209:75:11","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":1130,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:11","nodeType":"ErrorDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"1331:5:11","nodeType":"VariableDeclaration","scope":1130,"src":"1323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:11"},"src":"1289:49:11"},{"body":{"id":1157,"nodeType":"Block","src":"1695:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1709:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1140,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":1139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:11","memberName":"max","nodeType":"MemberAccess","src":"1717:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1151,"nodeType":"IfStatement","src":"1705:105:11","trueBody":{"id":1150,"nodeType":"Block","src":"1736:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":1147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"1757:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1149,"nodeType":"RevertStatement","src":"1750:49:11"}]}},{"expression":{"arguments":[{"id":1154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1152,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:11","typeDescriptions":{}}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":1137,"id":1156,"nodeType":"Return","src":"1819:21:11"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"1344:280:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:11","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"value","nameLocation":"1656:5:11","nodeType":"VariableDeclaration","scope":1158,"src":"1648:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:11"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"1686:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":1135,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:11"},"scope":2868,"src":"1629:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1185,"nodeType":"Block","src":"2204:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1168,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":1167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:11","memberName":"max","nodeType":"MemberAccess","src":"2226:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1179,"nodeType":"IfStatement","src":"2214:105:11","trueBody":{"id":1178,"nodeType":"Block","src":"2245:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2302:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2266:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1177,"nodeType":"RevertStatement","src":"2259:49:11"}]}},{"expression":{"arguments":[{"id":1182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":1180,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:11","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":1165,"id":1184,"nodeType":"Return","src":"2328:21:11"}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"1853:280:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:11","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"value","nameLocation":"2165:5:11","nodeType":"VariableDeclaration","scope":1186,"src":"2157:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:11"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1186,"src":"2195:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1163,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:11"},"scope":2868,"src":"2138:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1213,"nodeType":"Block","src":"2713:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1196,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":1195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:11","memberName":"max","nodeType":"MemberAccess","src":"2735:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"2723:105:11","trueBody":{"id":1206,"nodeType":"Block","src":"2754:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":1203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2811:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1201,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2775:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1205,"nodeType":"RevertStatement","src":"2768:49:11"}]}},{"expression":{"arguments":[{"id":1210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":1208,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:11","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":1193,"id":1212,"nodeType":"Return","src":"2837:21:11"}]},"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"2362:280:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:11","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"value","nameLocation":"2674:5:11","nodeType":"VariableDeclaration","scope":1214,"src":"2666:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:11"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1214,"src":"2704:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":1191,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:11"},"scope":2868,"src":"2647:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1241,"nodeType":"Block","src":"3222:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3236:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1224,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:11","memberName":"max","nodeType":"MemberAccess","src":"3244:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"IfStatement","src":"3232:105:11","trueBody":{"id":1234,"nodeType":"Block","src":"3263:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":1231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3320:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1229,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3284:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1233,"nodeType":"RevertStatement","src":"3277:49:11"}]}},{"expression":{"arguments":[{"id":1238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3361:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1236,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:11","typeDescriptions":{}}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1221,"id":1240,"nodeType":"Return","src":"3346:21:11"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"2871:280:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":1242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:11","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"value","nameLocation":"3183:5:11","nodeType":"VariableDeclaration","scope":1242,"src":"3175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:11"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1242,"src":"3213:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1219,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:11"},"scope":2868,"src":"3156:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"3731:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1252,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":1251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:11","memberName":"max","nodeType":"MemberAccess","src":"3753:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1263,"nodeType":"IfStatement","src":"3741:105:11","trueBody":{"id":1262,"nodeType":"Block","src":"3772:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3829:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1257,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3793:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1261,"nodeType":"RevertStatement","src":"3786:49:11"}]}},{"expression":{"arguments":[{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"3870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":1264,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:11","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":1249,"id":1268,"nodeType":"Return","src":"3855:21:11"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"3380:280:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:11","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"value","nameLocation":"3692:5:11","nodeType":"VariableDeclaration","scope":1270,"src":"3684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:11"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"3722:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":1247,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:11"},"scope":2868,"src":"3665:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"4240:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"4254:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1280,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:11","memberName":"max","nodeType":"MemberAccess","src":"4262:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1291,"nodeType":"IfStatement","src":"4250:105:11","trueBody":{"id":1290,"nodeType":"Block","src":"4281:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":1287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"4338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"4302:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1289,"nodeType":"RevertStatement","src":"4295:49:11"}]}},{"expression":{"arguments":[{"id":1294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"4379:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1292,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1277,"id":1296,"nodeType":"Return","src":"4364:21:11"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"3889:280:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:11","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"value","nameLocation":"4201:5:11","nodeType":"VariableDeclaration","scope":1298,"src":"4193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:11"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1298,"src":"4231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":1275,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:11"},"scope":2868,"src":"4174:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"4749:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4763:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1308,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":1307,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:11","memberName":"max","nodeType":"MemberAccess","src":"4771:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1319,"nodeType":"IfStatement","src":"4759:105:11","trueBody":{"id":1318,"nodeType":"Block","src":"4790:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4847:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"4811:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1317,"nodeType":"RevertStatement","src":"4804:49:11"}]}},{"expression":{"arguments":[{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":1320,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:11","typeDescriptions":{}}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":1305,"id":1324,"nodeType":"Return","src":"4873:21:11"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"4398:280:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:11","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"value","nameLocation":"4710:5:11","nodeType":"VariableDeclaration","scope":1326,"src":"4702:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:11"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"4740:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":1303,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:11"},"scope":2868,"src":"4683:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"5258:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1336,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":1335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:11","memberName":"max","nodeType":"MemberAccess","src":"5280:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1347,"nodeType":"IfStatement","src":"5268:105:11","trueBody":{"id":1346,"nodeType":"Block","src":"5299:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":1343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1341,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5320:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1345,"nodeType":"RevertStatement","src":"5313:49:11"}]}},{"expression":{"arguments":[{"id":1350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"5397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":1348,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:11","typeDescriptions":{}}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":1333,"id":1352,"nodeType":"Return","src":"5382:21:11"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"4907:280:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:11","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"value","nameLocation":"5219:5:11","nodeType":"VariableDeclaration","scope":1354,"src":"5211:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:11"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"5249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1331,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:11"},"scope":2868,"src":"5192:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"5767:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5781:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1364,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":1363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:11","memberName":"max","nodeType":"MemberAccess","src":"5789:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1375,"nodeType":"IfStatement","src":"5777:105:11","trueBody":{"id":1374,"nodeType":"Block","src":"5808:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"5829:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1373,"nodeType":"RevertStatement","src":"5822:49:11"}]}},{"expression":{"arguments":[{"id":1378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5906:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":1376,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:11","typeDescriptions":{}}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":1361,"id":1380,"nodeType":"Return","src":"5891:21:11"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"5416:280:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:11","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"value","nameLocation":"5728:5:11","nodeType":"VariableDeclaration","scope":1382,"src":"5720:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:11"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"5758:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":1359,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:11"},"scope":2868,"src":"5701:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1409,"nodeType":"Block","src":"6276:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"6290:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1392,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":1391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:11","memberName":"max","nodeType":"MemberAccess","src":"6298:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1403,"nodeType":"IfStatement","src":"6286:105:11","trueBody":{"id":1402,"nodeType":"Block","src":"6317:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":1399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"6374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"6338:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1401,"nodeType":"RevertStatement","src":"6331:49:11"}]}},{"expression":{"arguments":[{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"6415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":1404,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:11","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":1389,"id":1408,"nodeType":"Return","src":"6400:21:11"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"5925:280:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":1410,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:11","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"value","nameLocation":"6237:5:11","nodeType":"VariableDeclaration","scope":1410,"src":"6229:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:11"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1410,"src":"6267:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":1387,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:11"},"scope":2868,"src":"6210:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"6785:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"6799:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1420,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":1419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:11","memberName":"max","nodeType":"MemberAccess","src":"6807:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"6795:105:11","trueBody":{"id":1430,"nodeType":"Block","src":"6826:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":1427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"6883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1425,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"6847:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1429,"nodeType":"RevertStatement","src":"6840:49:11"}]}},{"expression":{"arguments":[{"id":1434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"6924:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":1432,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:11","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":1417,"id":1436,"nodeType":"Return","src":"6909:21:11"}]},"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"6434:280:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":1438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:11","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"value","nameLocation":"6746:5:11","nodeType":"VariableDeclaration","scope":1438,"src":"6738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:11"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1438,"src":"6776:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":1415,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:11"},"scope":2868,"src":"6719:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"7294:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"7308:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1448,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":1447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:11","memberName":"max","nodeType":"MemberAccess","src":"7316:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"7304:105:11","trueBody":{"id":1458,"nodeType":"Block","src":"7335:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":1455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"7392:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1453,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"7356:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1457,"nodeType":"RevertStatement","src":"7349:49:11"}]}},{"expression":{"arguments":[{"id":1462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"7433:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1460,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:11","typeDescriptions":{}}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":1445,"id":1464,"nodeType":"Return","src":"7418:21:11"}]},"documentation":{"id":1439,"nodeType":"StructuredDocumentation","src":"6943:280:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:11","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"value","nameLocation":"7255:5:11","nodeType":"VariableDeclaration","scope":1466,"src":"7247:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:11"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1466,"src":"7285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1443,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:11"},"scope":2868,"src":"7228:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"7803:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1476,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":1475,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:11","memberName":"max","nodeType":"MemberAccess","src":"7825:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"IfStatement","src":"7813:105:11","trueBody":{"id":1486,"nodeType":"Block","src":"7844:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":1483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7901:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"7865:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1485,"nodeType":"RevertStatement","src":"7858:49:11"}]}},{"expression":{"arguments":[{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":1488,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:11","typeDescriptions":{}}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":1473,"id":1492,"nodeType":"Return","src":"7927:21:11"}]},"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"7452:280:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:11","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"value","nameLocation":"7764:5:11","nodeType":"VariableDeclaration","scope":1494,"src":"7756:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:11"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"7794:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":1471,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:11"},"scope":2868,"src":"7737:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"8312:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"8326:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1504,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":1503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:11","memberName":"max","nodeType":"MemberAccess","src":"8334:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1515,"nodeType":"IfStatement","src":"8322:105:11","trueBody":{"id":1514,"nodeType":"Block","src":"8353:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"8410:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"8374:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1513,"nodeType":"RevertStatement","src":"8367:49:11"}]}},{"expression":{"arguments":[{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"8451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":1516,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:11","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":1501,"id":1520,"nodeType":"Return","src":"8436:21:11"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"7961:280:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:11","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"value","nameLocation":"8273:5:11","nodeType":"VariableDeclaration","scope":1522,"src":"8265:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:11"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"8303:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":1499,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:11"},"scope":2868,"src":"8246:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1549,"nodeType":"Block","src":"8821:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"8835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1532,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":1531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:11","memberName":"max","nodeType":"MemberAccess","src":"8843:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1543,"nodeType":"IfStatement","src":"8831:105:11","trueBody":{"id":1542,"nodeType":"Block","src":"8862:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":1539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"8919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1537,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"8883:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1541,"nodeType":"RevertStatement","src":"8876:49:11"}]}},{"expression":{"arguments":[{"id":1546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"8960:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":1544,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:11","typeDescriptions":{}}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":1529,"id":1548,"nodeType":"Return","src":"8945:21:11"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"8470:280:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:11","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"value","nameLocation":"8782:5:11","nodeType":"VariableDeclaration","scope":1550,"src":"8774:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:11"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"8812:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":1527,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:11"},"scope":2868,"src":"8755:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1577,"nodeType":"Block","src":"9330:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"9344:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1560,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":1559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:11","memberName":"max","nodeType":"MemberAccess","src":"9352:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1571,"nodeType":"IfStatement","src":"9340:105:11","trueBody":{"id":1570,"nodeType":"Block","src":"9371:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":1567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"9428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"9392:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1569,"nodeType":"RevertStatement","src":"9385:49:11"}]}},{"expression":{"arguments":[{"id":1574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"9469:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1572,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:11","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":1557,"id":1576,"nodeType":"Return","src":"9454:21:11"}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"8979:280:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:11","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"value","nameLocation":"9291:5:11","nodeType":"VariableDeclaration","scope":1578,"src":"9283:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:11"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"9321:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1555,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:11"},"scope":2868,"src":"9264:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"9839:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9853:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1588,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":1587,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:11","memberName":"max","nodeType":"MemberAccess","src":"9861:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1599,"nodeType":"IfStatement","src":"9849:105:11","trueBody":{"id":1598,"nodeType":"Block","src":"9880:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9937:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"9901:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1597,"nodeType":"RevertStatement","src":"9894:49:11"}]}},{"expression":{"arguments":[{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"9978:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1600,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:11","typeDescriptions":{}}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":1585,"id":1604,"nodeType":"Return","src":"9963:21:11"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"9488:280:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:11","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"value","nameLocation":"9800:5:11","nodeType":"VariableDeclaration","scope":1606,"src":"9792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:11"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1606,"src":"9830:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":1583,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:11"},"scope":2868,"src":"9773:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"10348:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1616,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":1615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:11","memberName":"max","nodeType":"MemberAccess","src":"10370:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"10358:105:11","trueBody":{"id":1626,"nodeType":"Block","src":"10389:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":1623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10446:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1621,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"10410:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1625,"nodeType":"RevertStatement","src":"10403:49:11"}]}},{"expression":{"arguments":[{"id":1630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10487:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1628,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:11","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":1613,"id":1632,"nodeType":"Return","src":"10472:21:11"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"9997:280:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:11","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10309:5:11","nodeType":"VariableDeclaration","scope":1634,"src":"10301:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:11"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1634,"src":"10339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1611,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:11"},"scope":2868,"src":"10282:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1661,"nodeType":"Block","src":"10857:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"10871:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1644,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":1643,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:11","memberName":"max","nodeType":"MemberAccess","src":"10879:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1655,"nodeType":"IfStatement","src":"10867:105:11","trueBody":{"id":1654,"nodeType":"Block","src":"10898:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"10955:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"10919:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1653,"nodeType":"RevertStatement","src":"10912:49:11"}]}},{"expression":{"arguments":[{"id":1658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"10996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":1656,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:11","typeDescriptions":{}}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":1641,"id":1660,"nodeType":"Return","src":"10981:21:11"}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"10506:280:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:11","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"value","nameLocation":"10818:5:11","nodeType":"VariableDeclaration","scope":1662,"src":"10810:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:11"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1662,"src":"10848:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":1639,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:11"},"scope":2868,"src":"10791:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"11360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"11374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1672,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":1671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:11","memberName":"max","nodeType":"MemberAccess","src":"11382:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"nodeType":"IfStatement","src":"11370:103:11","trueBody":{"id":1682,"nodeType":"Block","src":"11400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":1679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"11456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1677,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"11421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1681,"nodeType":"RevertStatement","src":"11414:48:11"}]}},{"expression":{"arguments":[{"id":1686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"11496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":1684,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:11","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":1669,"id":1688,"nodeType":"Return","src":"11482:20:11"}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"11015:276:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:11","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"value","nameLocation":"11322:5:11","nodeType":"VariableDeclaration","scope":1690,"src":"11314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:11"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1690,"src":"11352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1667,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:11"},"scope":2868,"src":"11296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"11860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"11874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1700,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":1699,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:11","memberName":"max","nodeType":"MemberAccess","src":"11882:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"11870:103:11","trueBody":{"id":1710,"nodeType":"Block","src":"11900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"11956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1705,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"11921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1709,"nodeType":"RevertStatement","src":"11914:48:11"}]}},{"expression":{"arguments":[{"id":1714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":1712,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:11","typeDescriptions":{}}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":1697,"id":1716,"nodeType":"Return","src":"11982:20:11"}]},"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"11515:276:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:11","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"value","nameLocation":"11822:5:11","nodeType":"VariableDeclaration","scope":1718,"src":"11814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:11"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"11852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":1695,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:11"},"scope":2868,"src":"11796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"12360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"12374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1728,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":1727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:11","memberName":"max","nodeType":"MemberAccess","src":"12382:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"IfStatement","src":"12370:103:11","trueBody":{"id":1738,"nodeType":"Block","src":"12400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":1735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"12456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1733,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1737,"nodeType":"RevertStatement","src":"12414:48:11"}]}},{"expression":{"arguments":[{"id":1742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"12496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":1740,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:11","typeDescriptions":{}}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":1725,"id":1744,"nodeType":"Return","src":"12482:20:11"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"12015:276:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:11","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"value","nameLocation":"12322:5:11","nodeType":"VariableDeclaration","scope":1746,"src":"12314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:11"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"12352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":1723,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:11"},"scope":2868,"src":"12296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"12860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"12874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1756,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":1755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:11","memberName":"max","nodeType":"MemberAccess","src":"12882:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"nodeType":"IfStatement","src":"12870:103:11","trueBody":{"id":1766,"nodeType":"Block","src":"12900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"12956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1761,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"12921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1765,"nodeType":"RevertStatement","src":"12914:48:11"}]}},{"expression":{"arguments":[{"id":1770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"12996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":1768,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:11","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":1753,"id":1772,"nodeType":"Return","src":"12982:20:11"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"12515:276:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:11","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"value","nameLocation":"12822:5:11","nodeType":"VariableDeclaration","scope":1774,"src":"12814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:11"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"12852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":1751,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:11"},"scope":2868,"src":"12796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"13360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"13374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1784,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":1783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:11","memberName":"max","nodeType":"MemberAccess","src":"13382:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1795,"nodeType":"IfStatement","src":"13370:103:11","trueBody":{"id":1794,"nodeType":"Block","src":"13400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":1791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"13456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1789,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1793,"nodeType":"RevertStatement","src":"13414:48:11"}]}},{"expression":{"arguments":[{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"13496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1796,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:11","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1781,"id":1800,"nodeType":"Return","src":"13482:20:11"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"13015:276:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:11","nodeType":"FunctionDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"13322:5:11","nodeType":"VariableDeclaration","scope":1802,"src":"13314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:11"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"13352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1779,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:11"},"scope":2868,"src":"13296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"13860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"13874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1812,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":1811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:11","memberName":"max","nodeType":"MemberAccess","src":"13882:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1823,"nodeType":"IfStatement","src":"13870:103:11","trueBody":{"id":1822,"nodeType":"Block","src":"13900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":1819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"13956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1817,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1821,"nodeType":"RevertStatement","src":"13914:48:11"}]}},{"expression":{"arguments":[{"id":1826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"13996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":1824,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:11","typeDescriptions":{}}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":1809,"id":1828,"nodeType":"Return","src":"13982:20:11"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"13515:276:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:11","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"value","nameLocation":"13822:5:11","nodeType":"VariableDeclaration","scope":1830,"src":"13814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:11"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1830,"src":"13852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":1807,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:11"},"scope":2868,"src":"13796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"14360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"14374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1840,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":1839,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:11","memberName":"max","nodeType":"MemberAccess","src":"14382:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"14370:103:11","trueBody":{"id":1850,"nodeType":"Block","src":"14400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"14456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1845,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1849,"nodeType":"RevertStatement","src":"14414:48:11"}]}},{"expression":{"arguments":[{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"14496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1852,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:11","typeDescriptions":{}}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1837,"id":1856,"nodeType":"Return","src":"14482:20:11"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"14015:276:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:11","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"value","nameLocation":"14322:5:11","nodeType":"VariableDeclaration","scope":1858,"src":"14314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:11"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"14352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1835,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:11"},"scope":2868,"src":"14296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1885,"nodeType":"Block","src":"14860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":1868,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":1867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:11","memberName":"max","nodeType":"MemberAccess","src":"14882:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"14870:103:11","trueBody":{"id":1878,"nodeType":"Block","src":"14900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":1875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1873,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1877,"nodeType":"RevertStatement","src":"14914:48:11"}]}},{"expression":{"arguments":[{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":1880,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:11","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":1865,"id":1884,"nodeType":"Return","src":"14982:20:11"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"14515:276:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:11","nodeType":"FunctionDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"value","nameLocation":"14822:5:11","nodeType":"VariableDeclaration","scope":1886,"src":"14814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:11"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"14852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1863,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:11"},"scope":2868,"src":"14796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1913,"nodeType":"Block","src":"15360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"15374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1896,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":1895,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:11","memberName":"max","nodeType":"MemberAccess","src":"15382:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1907,"nodeType":"IfStatement","src":"15370:103:11","trueBody":{"id":1906,"nodeType":"Block","src":"15400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":1903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"15456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1901,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1905,"nodeType":"RevertStatement","src":"15414:48:11"}]}},{"expression":{"arguments":[{"id":1910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"15496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1908,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:11","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1893,"id":1912,"nodeType":"Return","src":"15482:20:11"}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"15015:276:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:11","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"15322:5:11","nodeType":"VariableDeclaration","scope":1914,"src":"15314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:11"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"15352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1891,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:11"},"scope":2868,"src":"15296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"15860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1924,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":1923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:11","memberName":"max","nodeType":"MemberAccess","src":"15882:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1935,"nodeType":"IfStatement","src":"15870:103:11","trueBody":{"id":1934,"nodeType":"Block","src":"15900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1929,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1933,"nodeType":"RevertStatement","src":"15914:48:11"}]}},{"expression":{"arguments":[{"id":1938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1936,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:11","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":1921,"id":1940,"nodeType":"Return","src":"15982:20:11"}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"15515:276:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:11","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"value","nameLocation":"15822:5:11","nodeType":"VariableDeclaration","scope":1942,"src":"15814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:11"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"15852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1919,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:11"},"scope":2868,"src":"15796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1969,"nodeType":"Block","src":"16360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"16374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1952,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":1951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:11","memberName":"max","nodeType":"MemberAccess","src":"16382:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"16370:103:11","trueBody":{"id":1962,"nodeType":"Block","src":"16400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":1959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"16456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1957,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"16421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1961,"nodeType":"RevertStatement","src":"16414:48:11"}]}},{"expression":{"arguments":[{"id":1966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"16496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1964,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:11","typeDescriptions":{}}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":1949,"id":1968,"nodeType":"Return","src":"16482:20:11"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"16015:276:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:11","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"value","nameLocation":"16322:5:11","nodeType":"VariableDeclaration","scope":1970,"src":"16314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:11"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"16352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1947,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:11"},"scope":2868,"src":"16296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"16854:146:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"16868:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1980,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1979,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:11","memberName":"max","nodeType":"MemberAccess","src":"16876:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"nodeType":"IfStatement","src":"16864:101:11","trueBody":{"id":1990,"nodeType":"Block","src":"16893:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":1987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"16948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1985,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"16914:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1989,"nodeType":"RevertStatement","src":"16907:47:11"}]}},{"expression":{"arguments":[{"id":1994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"16987:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1992,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:11","typeDescriptions":{}}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1977,"id":1996,"nodeType":"Return","src":"16974:19:11"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"16515:272:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:11","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"value","nameLocation":"16817:5:11","nodeType":"VariableDeclaration","scope":1998,"src":"16809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:11"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"16847:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1975,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:11"},"scope":2868,"src":"16792:208:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2020,"nodeType":"Block","src":"17236:128:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"17250:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"nodeType":"IfStatement","src":"17246:81:11","trueBody":{"id":2013,"nodeType":"Block","src":"17261:66:11","statements":[{"errorCall":{"arguments":[{"id":2010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"17310:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2009,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"17282:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2012,"nodeType":"RevertStatement","src":"17275:41:11"}]}},{"expression":{"arguments":[{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"17351:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:11","typeDescriptions":{}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2005,"id":2019,"nodeType":"Return","src":"17336:21:11"}]},"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"17006:160:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":2021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:11","nodeType":"FunctionDefinition","parameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"value","nameLocation":"17197:5:11","nodeType":"VariableDeclaration","scope":2021,"src":"17190:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2000,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:11"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2021,"src":"17227:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:11"},"scope":2868,"src":"17171:193:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2046,"nodeType":"Block","src":"17761:150:11","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"17771:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"17791:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":2030,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:11","typeDescriptions":{}}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":2035,"nodeType":"ExpressionStatement","src":"17771:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"17811:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"17825:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"IfStatement","src":"17807:98:11","trueBody":{"id":2044,"nodeType":"Block","src":"17832:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"17888:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2039,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"17853:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2043,"nodeType":"RevertStatement","src":"17846:48:11"}]}}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"17370:312:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:11","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"value","nameLocation":"17712:5:11","nodeType":"VariableDeclaration","scope":2047,"src":"17705:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2023,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:11"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:11","nodeType":"VariableDeclaration","scope":2047,"src":"17742:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":2026,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:11"},"scope":2868,"src":"17687:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"18308:150:11","statements":[{"expression":{"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"18318:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"18338:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":2056,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:11","typeDescriptions":{}}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":2061,"nodeType":"ExpressionStatement","src":"18318:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"18358:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"18372:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"18354:98:11","trueBody":{"id":2070,"nodeType":"Block","src":"18379:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"18435:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2065,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"18400:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2069,"nodeType":"RevertStatement","src":"18393:48:11"}]}}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"17917:312:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:11","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"value","nameLocation":"18259:5:11","nodeType":"VariableDeclaration","scope":2073,"src":"18252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2049,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:11"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:11","nodeType":"VariableDeclaration","scope":2073,"src":"18289:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":2052,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:11"},"scope":2868,"src":"18234:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2098,"nodeType":"Block","src":"18855:150:11","statements":[{"expression":{"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2081,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"18865:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"18885:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":2082,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:11","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":2087,"nodeType":"ExpressionStatement","src":"18865:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"18905:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"18919:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2097,"nodeType":"IfStatement","src":"18901:98:11","trueBody":{"id":2096,"nodeType":"Block","src":"18926:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"18982:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2091,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"18947:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2095,"nodeType":"RevertStatement","src":"18940:48:11"}]}}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"18464:312:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2099,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:11","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"value","nameLocation":"18806:5:11","nodeType":"VariableDeclaration","scope":2099,"src":"18799:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2075,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:11"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:11","nodeType":"VariableDeclaration","scope":2099,"src":"18836:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":2078,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:11"},"scope":2868,"src":"18781:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2124,"nodeType":"Block","src":"19402:150:11","statements":[{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"19412:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"19432:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":2108,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:11","typeDescriptions":{}}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":2113,"nodeType":"ExpressionStatement","src":"19412:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"19452:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"19466:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2123,"nodeType":"IfStatement","src":"19448:98:11","trueBody":{"id":2122,"nodeType":"Block","src":"19473:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"19529:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2117,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"19494:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2121,"nodeType":"RevertStatement","src":"19487:48:11"}]}}]},"documentation":{"id":2100,"nodeType":"StructuredDocumentation","src":"19011:312:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:11","nodeType":"FunctionDefinition","parameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"value","nameLocation":"19353:5:11","nodeType":"VariableDeclaration","scope":2125,"src":"19346:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2101,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:11"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:11","nodeType":"VariableDeclaration","scope":2125,"src":"19383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":2104,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:11"},"scope":2868,"src":"19328:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2150,"nodeType":"Block","src":"19949:150:11","statements":[{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"19959:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"19979:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":2134,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:11","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":2139,"nodeType":"ExpressionStatement","src":"19959:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"19999:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"20013:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"19995:98:11","trueBody":{"id":2148,"nodeType":"Block","src":"20020:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"20076:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2143,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"20041:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2147,"nodeType":"RevertStatement","src":"20034:48:11"}]}}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"19558:312:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2151,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:11","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"value","nameLocation":"19900:5:11","nodeType":"VariableDeclaration","scope":2151,"src":"19893:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2127,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:11"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:11","nodeType":"VariableDeclaration","scope":2151,"src":"19930:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":2130,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:11"},"scope":2868,"src":"19875:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"20496:150:11","statements":[{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2159,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"20506:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"20526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":2160,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:11","typeDescriptions":{}}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":2165,"nodeType":"ExpressionStatement","src":"20506:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"20546:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"20560:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"20542:98:11","trueBody":{"id":2174,"nodeType":"Block","src":"20567:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"20623:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2169,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"20588:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2173,"nodeType":"RevertStatement","src":"20581:48:11"}]}}]},"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"20105:312:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:11","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"value","nameLocation":"20447:5:11","nodeType":"VariableDeclaration","scope":2177,"src":"20440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2153,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:11"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:11","nodeType":"VariableDeclaration","scope":2177,"src":"20477:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":2156,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:11"},"scope":2868,"src":"20422:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"21043:150:11","statements":[{"expression":{"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2185,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"21053:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"21073:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":2186,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:11","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":2191,"nodeType":"ExpressionStatement","src":"21053:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"21093:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"21107:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"21089:98:11","trueBody":{"id":2200,"nodeType":"Block","src":"21114:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"21170:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2195,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"21135:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2199,"nodeType":"RevertStatement","src":"21128:48:11"}]}}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"20652:312:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:11","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"value","nameLocation":"20994:5:11","nodeType":"VariableDeclaration","scope":2203,"src":"20987:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2179,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:11"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:11","nodeType":"VariableDeclaration","scope":2203,"src":"21024:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":2182,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:11"},"scope":2868,"src":"20969:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2228,"nodeType":"Block","src":"21590:150:11","statements":[{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2211,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"21600:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"21620:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":2212,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:11","typeDescriptions":{}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":2217,"nodeType":"ExpressionStatement","src":"21600:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"21640:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"21654:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2227,"nodeType":"IfStatement","src":"21636:98:11","trueBody":{"id":2226,"nodeType":"Block","src":"21661:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"21717:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2221,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"21682:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2225,"nodeType":"RevertStatement","src":"21675:48:11"}]}}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"21199:312:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:11","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"value","nameLocation":"21541:5:11","nodeType":"VariableDeclaration","scope":2229,"src":"21534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2205,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:11"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:11","nodeType":"VariableDeclaration","scope":2229,"src":"21571:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":2208,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:11"},"scope":2868,"src":"21516:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2254,"nodeType":"Block","src":"22137:150:11","statements":[{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22147:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"22167:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":2238,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:11","typeDescriptions":{}}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":2243,"nodeType":"ExpressionStatement","src":"22147:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"22187:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"22201:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2253,"nodeType":"IfStatement","src":"22183:98:11","trueBody":{"id":2252,"nodeType":"Block","src":"22208:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"22264:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2247,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"22229:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2251,"nodeType":"RevertStatement","src":"22222:48:11"}]}}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"21746:312:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:11","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"value","nameLocation":"22088:5:11","nodeType":"VariableDeclaration","scope":2255,"src":"22081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2231,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:11"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:11","nodeType":"VariableDeclaration","scope":2255,"src":"22118:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":2234,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:11"},"scope":2868,"src":"22063:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"22684:150:11","statements":[{"expression":{"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"22694:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"22714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":2264,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:11","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":2269,"nodeType":"ExpressionStatement","src":"22694:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"22734:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"22748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"22730:98:11","trueBody":{"id":2278,"nodeType":"Block","src":"22755:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"22811:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2273,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"22776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2277,"nodeType":"RevertStatement","src":"22769:48:11"}]}}]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"22293:312:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:11","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"value","nameLocation":"22635:5:11","nodeType":"VariableDeclaration","scope":2281,"src":"22628:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2257,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:11"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:11","nodeType":"VariableDeclaration","scope":2281,"src":"22665:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":2260,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:11"},"scope":2868,"src":"22610:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2306,"nodeType":"Block","src":"23231:150:11","statements":[{"expression":{"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2289,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"23241:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23261:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":2290,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:11","typeDescriptions":{}}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":2295,"nodeType":"ExpressionStatement","src":"23241:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"23281:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23295:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2305,"nodeType":"IfStatement","src":"23277:98:11","trueBody":{"id":2304,"nodeType":"Block","src":"23302:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"23358:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2299,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"23323:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2303,"nodeType":"RevertStatement","src":"23316:48:11"}]}}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"22840:312:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:11","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"value","nameLocation":"23182:5:11","nodeType":"VariableDeclaration","scope":2307,"src":"23175:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2283,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:11"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:11","nodeType":"VariableDeclaration","scope":2307,"src":"23212:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":2286,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:11"},"scope":2868,"src":"23157:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2332,"nodeType":"Block","src":"23778:150:11","statements":[{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2315,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"23788:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"23808:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":2316,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:11","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":2321,"nodeType":"ExpressionStatement","src":"23788:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"23828:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"23842:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2331,"nodeType":"IfStatement","src":"23824:98:11","trueBody":{"id":2330,"nodeType":"Block","src":"23849:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"23905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2325,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"23870:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2329,"nodeType":"RevertStatement","src":"23863:48:11"}]}}]},"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"23387:312:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2333,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:11","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"value","nameLocation":"23729:5:11","nodeType":"VariableDeclaration","scope":2333,"src":"23722:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2309,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:11"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:11","nodeType":"VariableDeclaration","scope":2333,"src":"23759:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":2312,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:11"},"scope":2868,"src":"23704:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2358,"nodeType":"Block","src":"24325:150:11","statements":[{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"24335:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"24355:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":2342,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:11","typeDescriptions":{}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":2347,"nodeType":"ExpressionStatement","src":"24335:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"24375:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"24389:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2357,"nodeType":"IfStatement","src":"24371:98:11","trueBody":{"id":2356,"nodeType":"Block","src":"24396:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"24452:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2351,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"24417:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2355,"nodeType":"RevertStatement","src":"24410:48:11"}]}}]},"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"23934:312:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:11","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"value","nameLocation":"24276:5:11","nodeType":"VariableDeclaration","scope":2359,"src":"24269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2335,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:11"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:11","nodeType":"VariableDeclaration","scope":2359,"src":"24306:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":2338,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:11"},"scope":2868,"src":"24251:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"24872:150:11","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2367,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"24882:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"24902:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":2368,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:11","typeDescriptions":{}}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":2373,"nodeType":"ExpressionStatement","src":"24882:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"24922:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"24936:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2383,"nodeType":"IfStatement","src":"24918:98:11","trueBody":{"id":2382,"nodeType":"Block","src":"24943:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"24999:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2377,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"24964:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2381,"nodeType":"RevertStatement","src":"24957:48:11"}]}}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"24481:312:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:11","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"value","nameLocation":"24823:5:11","nodeType":"VariableDeclaration","scope":2385,"src":"24816:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2361,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:11"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:11","nodeType":"VariableDeclaration","scope":2385,"src":"24853:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":2364,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:11"},"scope":2868,"src":"24798:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2410,"nodeType":"Block","src":"25419:150:11","statements":[{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"25429:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"25449:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":2394,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:11","typeDescriptions":{}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":2399,"nodeType":"ExpressionStatement","src":"25429:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"25469:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"25483:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2409,"nodeType":"IfStatement","src":"25465:98:11","trueBody":{"id":2408,"nodeType":"Block","src":"25490:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"25546:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2403,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"25511:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2407,"nodeType":"RevertStatement","src":"25504:48:11"}]}}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"25028:312:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":2411,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:11","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"value","nameLocation":"25370:5:11","nodeType":"VariableDeclaration","scope":2411,"src":"25363:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2387,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:11"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:11","nodeType":"VariableDeclaration","scope":2411,"src":"25400:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":2390,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:11"},"scope":2868,"src":"25345:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"25966:150:11","statements":[{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"25976:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"25996:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2420,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:11","typeDescriptions":{}}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":2425,"nodeType":"ExpressionStatement","src":"25976:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"26016:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"26030:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"26012:98:11","trueBody":{"id":2434,"nodeType":"Block","src":"26037:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"26093:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2429,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"26058:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2433,"nodeType":"RevertStatement","src":"26051:48:11"}]}}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"25575:312:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:11","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"value","nameLocation":"25917:5:11","nodeType":"VariableDeclaration","scope":2437,"src":"25910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2413,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:11"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:11","nodeType":"VariableDeclaration","scope":2437,"src":"25947:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2416,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:11"},"scope":2868,"src":"25892:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"26513:150:11","statements":[{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"26523:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"26543:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":2446,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:11","typeDescriptions":{}}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":2451,"nodeType":"ExpressionStatement","src":"26523:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"26563:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"26577:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2461,"nodeType":"IfStatement","src":"26559:98:11","trueBody":{"id":2460,"nodeType":"Block","src":"26584:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"26640:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2455,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"26605:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2459,"nodeType":"RevertStatement","src":"26598:48:11"}]}}]},"documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"26122:312:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:11","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"value","nameLocation":"26464:5:11","nodeType":"VariableDeclaration","scope":2463,"src":"26457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2439,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:11"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:11","nodeType":"VariableDeclaration","scope":2463,"src":"26494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":2442,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:11"},"scope":2868,"src":"26439:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2488,"nodeType":"Block","src":"27060:150:11","statements":[{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2471,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27070:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"27090:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":2472,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:11","typeDescriptions":{}}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":2477,"nodeType":"ExpressionStatement","src":"27070:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27110:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"27124:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"IfStatement","src":"27106:98:11","trueBody":{"id":2486,"nodeType":"Block","src":"27131:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":2483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"27187:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2481,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"27152:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2485,"nodeType":"RevertStatement","src":"27145:48:11"}]}}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"26669:312:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:11","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"value","nameLocation":"27011:5:11","nodeType":"VariableDeclaration","scope":2489,"src":"27004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2465,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:11"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:11","nodeType":"VariableDeclaration","scope":2489,"src":"27041:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":2468,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:11"},"scope":2868,"src":"26986:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"27607:150:11","statements":[{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"27617:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"27637:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":2498,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:11","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":2503,"nodeType":"ExpressionStatement","src":"27617:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"27657:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"27671:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"27653:98:11","trueBody":{"id":2512,"nodeType":"Block","src":"27678:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"27734:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2507,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"27699:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2511,"nodeType":"RevertStatement","src":"27692:48:11"}]}}]},"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"27216:312:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:11","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"value","nameLocation":"27558:5:11","nodeType":"VariableDeclaration","scope":2515,"src":"27551:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2491,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:11"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:11","nodeType":"VariableDeclaration","scope":2515,"src":"27588:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":2494,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:11"},"scope":2868,"src":"27533:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"28147:148:11","statements":[{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2523,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"28157:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"28176:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":2524,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:11","typeDescriptions":{}}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":2529,"nodeType":"ExpressionStatement","src":"28157:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"28196:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"28210:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2539,"nodeType":"IfStatement","src":"28192:97:11","trueBody":{"id":2538,"nodeType":"Block","src":"28217:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"28272:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2533,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"28238:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2537,"nodeType":"RevertStatement","src":"28231:47:11"}]}}]},"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"27763:307:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:11","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"value","nameLocation":"28099:5:11","nodeType":"VariableDeclaration","scope":2541,"src":"28092:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2517,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:11"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:11","nodeType":"VariableDeclaration","scope":2541,"src":"28129:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":2520,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:11"},"scope":2868,"src":"28075:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"28685:148:11","statements":[{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"28695:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"28714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":2550,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:11","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":2555,"nodeType":"ExpressionStatement","src":"28695:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"28734:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"28748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"28730:97:11","trueBody":{"id":2564,"nodeType":"Block","src":"28755:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":2561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"28810:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2559,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"28776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2563,"nodeType":"RevertStatement","src":"28769:47:11"}]}}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"28301:307:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:11","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"value","nameLocation":"28637:5:11","nodeType":"VariableDeclaration","scope":2567,"src":"28630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2543,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:11"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:11","nodeType":"VariableDeclaration","scope":2567,"src":"28667:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":2546,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:11"},"scope":2868,"src":"28613:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2592,"nodeType":"Block","src":"29223:148:11","statements":[{"expression":{"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"29233:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"29252:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":2576,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:11","typeDescriptions":{}}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":2581,"nodeType":"ExpressionStatement","src":"29233:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"29272:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"29286:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"29268:97:11","trueBody":{"id":2590,"nodeType":"Block","src":"29293:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":2587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"29348:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2585,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"29314:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2589,"nodeType":"RevertStatement","src":"29307:47:11"}]}}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"28839:307:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:11","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"value","nameLocation":"29175:5:11","nodeType":"VariableDeclaration","scope":2593,"src":"29168:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2569,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:11"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:11","nodeType":"VariableDeclaration","scope":2593,"src":"29205:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":2572,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:11"},"scope":2868,"src":"29151:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2618,"nodeType":"Block","src":"29761:148:11","statements":[{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"29771:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"29790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":2602,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:11","typeDescriptions":{}}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":2607,"nodeType":"ExpressionStatement","src":"29771:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"29810:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"29824:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2617,"nodeType":"IfStatement","src":"29806:97:11","trueBody":{"id":2616,"nodeType":"Block","src":"29831:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":2613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"29886:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2611,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"29852:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2615,"nodeType":"RevertStatement","src":"29845:47:11"}]}}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"29377:307:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:11","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"value","nameLocation":"29713:5:11","nodeType":"VariableDeclaration","scope":2619,"src":"29706:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2595,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:11"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:11","nodeType":"VariableDeclaration","scope":2619,"src":"29743:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":2598,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:11"},"scope":2868,"src":"29689:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"30299:148:11","statements":[{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"30309:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"30328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":2628,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:11","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":2633,"nodeType":"ExpressionStatement","src":"30309:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"30348:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2643,"nodeType":"IfStatement","src":"30344:97:11","trueBody":{"id":2642,"nodeType":"Block","src":"30369:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":2639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"30424:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2637,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"30390:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2641,"nodeType":"RevertStatement","src":"30383:47:11"}]}}]},"documentation":{"id":2620,"nodeType":"StructuredDocumentation","src":"29915:307:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:11","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"value","nameLocation":"30251:5:11","nodeType":"VariableDeclaration","scope":2645,"src":"30244:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2621,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:11"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:11","nodeType":"VariableDeclaration","scope":2645,"src":"30281:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2624,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:11"},"scope":2868,"src":"30227:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2670,"nodeType":"Block","src":"30837:148:11","statements":[{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"30847:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"30866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":2654,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:11","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":2659,"nodeType":"ExpressionStatement","src":"30847:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"30886:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"30900:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"30882:97:11","trueBody":{"id":2668,"nodeType":"Block","src":"30907:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":2665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"30962:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2663,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"30928:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2667,"nodeType":"RevertStatement","src":"30921:47:11"}]}}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"30453:307:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":2671,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:11","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"value","nameLocation":"30789:5:11","nodeType":"VariableDeclaration","scope":2671,"src":"30782:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2647,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:11"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:11","nodeType":"VariableDeclaration","scope":2671,"src":"30819:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":2650,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:11"},"scope":2868,"src":"30765:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"31375:148:11","statements":[{"expression":{"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"31385:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"31404:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":2680,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:11","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":2685,"nodeType":"ExpressionStatement","src":"31385:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"31424:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"31438:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"31420:97:11","trueBody":{"id":2694,"nodeType":"Block","src":"31445:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"31500:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2689,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"31466:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2693,"nodeType":"RevertStatement","src":"31459:47:11"}]}}]},"documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"30991:307:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:11","nodeType":"FunctionDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"value","nameLocation":"31327:5:11","nodeType":"VariableDeclaration","scope":2697,"src":"31320:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2673,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:11"},"returnParameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:11","nodeType":"VariableDeclaration","scope":2697,"src":"31357:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":2676,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:11"},"scope":2868,"src":"31303:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2722,"nodeType":"Block","src":"31913:148:11","statements":[{"expression":{"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"31923:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"31942:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":2706,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:11","typeDescriptions":{}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":2711,"nodeType":"ExpressionStatement","src":"31923:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"31962:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"31976:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2721,"nodeType":"IfStatement","src":"31958:97:11","trueBody":{"id":2720,"nodeType":"Block","src":"31983:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"32038:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2715,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"32004:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2719,"nodeType":"RevertStatement","src":"31997:47:11"}]}}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"31529:307:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:11","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"value","nameLocation":"31865:5:11","nodeType":"VariableDeclaration","scope":2723,"src":"31858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2699,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:11"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:11","nodeType":"VariableDeclaration","scope":2723,"src":"31895:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":2702,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:11"},"scope":2868,"src":"31841:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2748,"nodeType":"Block","src":"32451:148:11","statements":[{"expression":{"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"32461:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"32480:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":2732,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:11","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":2737,"nodeType":"ExpressionStatement","src":"32461:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"32500:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"32514:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2747,"nodeType":"IfStatement","src":"32496:97:11","trueBody":{"id":2746,"nodeType":"Block","src":"32521:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"32576:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2741,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"32542:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2745,"nodeType":"RevertStatement","src":"32535:47:11"}]}}]},"documentation":{"id":2724,"nodeType":"StructuredDocumentation","src":"32067:307:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":2749,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:11","nodeType":"FunctionDefinition","parameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"value","nameLocation":"32403:5:11","nodeType":"VariableDeclaration","scope":2749,"src":"32396:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2725,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:11"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:11","nodeType":"VariableDeclaration","scope":2749,"src":"32433:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2728,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:11"},"scope":2868,"src":"32379:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"32989:148:11","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"32999:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"33018:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2758,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:11","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":2763,"nodeType":"ExpressionStatement","src":"32999:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"33038:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"33052:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"33034:97:11","trueBody":{"id":2772,"nodeType":"Block","src":"33059:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"33114:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2767,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"33080:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2771,"nodeType":"RevertStatement","src":"33073:47:11"}]}}]},"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"32605:307:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:11","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"value","nameLocation":"32941:5:11","nodeType":"VariableDeclaration","scope":2775,"src":"32934:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2751,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:11"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:11","nodeType":"VariableDeclaration","scope":2775,"src":"32971:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2754,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:11"},"scope":2868,"src":"32917:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2800,"nodeType":"Block","src":"33527:148:11","statements":[{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"33537:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"33556:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":2784,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:11","typeDescriptions":{}}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":2789,"nodeType":"ExpressionStatement","src":"33537:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"33576:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"33590:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2799,"nodeType":"IfStatement","src":"33572:97:11","trueBody":{"id":2798,"nodeType":"Block","src":"33597:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":2795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"33652:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2793,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"33618:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2797,"nodeType":"RevertStatement","src":"33611:47:11"}]}}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"33143:307:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":2801,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:11","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"value","nameLocation":"33479:5:11","nodeType":"VariableDeclaration","scope":2801,"src":"33472:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2777,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:11"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:11","nodeType":"VariableDeclaration","scope":2801,"src":"33509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":2780,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:11"},"scope":2868,"src":"33455:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2826,"nodeType":"Block","src":"34058:146:11","statements":[{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"34068:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"34086:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":2810,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:11","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":2815,"nodeType":"ExpressionStatement","src":"34068:24:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"34106:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"34120:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2825,"nodeType":"IfStatement","src":"34102:96:11","trueBody":{"id":2824,"nodeType":"Block","src":"34127:71:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":2821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"34181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2819,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"34148:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2823,"nodeType":"RevertStatement","src":"34141:46:11"}]}}]},"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"33681:302:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:11","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"34011:5:11","nodeType":"VariableDeclaration","scope":2827,"src":"34004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2803,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:11"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:11","nodeType":"VariableDeclaration","scope":2827,"src":"34041:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":2806,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:11"},"scope":2868,"src":"33988:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2856,"nodeType":"Block","src":"34444:250:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"34557:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2839,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2838,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:11","memberName":"max","nodeType":"MemberAccess","src":"34573:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:11","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"34553:105:11","trueBody":{"id":2849,"nodeType":"Block","src":"34592:66:11","statements":[{"errorCall":{"arguments":[{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"34641:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"34613:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2848,"nodeType":"RevertStatement","src":"34606:41:11"}]}},{"expression":{"arguments":[{"id":2853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"34681:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2851,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:11","typeDescriptions":{}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2834,"id":2855,"nodeType":"Return","src":"34667:20:11"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"34210:165:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":2857,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:11","nodeType":"FunctionDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"value","nameLocation":"34406:5:11","nodeType":"VariableDeclaration","scope":2857,"src":"34398:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:11"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2857,"src":"34436:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2832,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:11"},"scope":2868,"src":"34380:314:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2866,"nodeType":"Block","src":"34853:87:11","statements":[{"AST":{"nativeSrc":"34888:46:11","nodeType":"YulBlock","src":"34888:46:11","statements":[{"nativeSrc":"34902:22:11","nodeType":"YulAssignment","src":"34902:22:11","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:11","nodeType":"YulIdentifier","src":"34921:1:11"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:11","nodeType":"YulIdentifier","src":"34914:6:11"},"nativeSrc":"34914:9:11","nodeType":"YulFunctionCall","src":"34914:9:11"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:11","nodeType":"YulIdentifier","src":"34907:6:11"},"nativeSrc":"34907:17:11","nodeType":"YulFunctionCall","src":"34907:17:11"},"variableNames":[{"name":"u","nativeSrc":"34902:1:11","nodeType":"YulIdentifier","src":"34902:1:11"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2860,"isOffset":false,"isSlot":false,"src":"34921:1:11","valueSize":1},{"declaration":2863,"isOffset":false,"isSlot":false,"src":"34902:1:11","valueSize":1}],"flags":["memory-safe"],"id":2865,"nodeType":"InlineAssembly","src":"34863:71:11"}]},"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"34700:90:11","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":2867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:11","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"b","nameLocation":"34816:1:11","nodeType":"VariableDeclaration","scope":2867,"src":"34811:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2859,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:11"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"u","nameLocation":"34850:1:11","nodeType":"VariableDeclaration","scope":2867,"src":"34842:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:11"},"scope":2868,"src":"34795:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2869,"src":"769:34173:11","usedErrors":[1113,1118,1125,1130],"usedEvents":[]}],"src":"192:34751:11"},"id":11},"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol":{"ast":{"absolutePath":"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol","exportedSymbols":{"IAllowanceTransfer":[3080],"IEIP712":[3088]},"id":3081,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2870,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@uniswap/permit2/src/interfaces/IEIP712.sol","file":"./IEIP712.sol","id":2872,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3081,"sourceUnit":3089,"src":"57:38:12","symbolAliases":[{"foreign":{"id":2871,"name":"IEIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"65:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2874,"name":"IEIP712","nameLocations":["362:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3088,"src":"362:7:12"},"id":2875,"nodeType":"InheritanceSpecifier","src":"362:7:12"}],"canonicalName":"IAllowanceTransfer","contractDependencies":[],"contractKind":"interface","documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"97:233:12","text":"@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"},"fullyImplemented":false,"id":3080,"linearizedBaseContracts":[3080,3088],"name":"IAllowanceTransfer","nameLocation":"340:18:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"376:145:12","text":"@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"},"errorSelector":"d81b2f2e","id":2880,"name":"AllowanceExpired","nameLocation":"532:16:12","nodeType":"ErrorDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"deadline","nameLocation":"557:8:12","nodeType":"VariableDeclaration","scope":2880,"src":"549:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"548:18:12"},"src":"526:41:12"},{"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"573:115:12","text":"@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"},"errorSelector":"f96fb071","id":2885,"name":"InsufficientAllowance","nameLocation":"699:21:12","nodeType":"ErrorDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"amount","nameLocation":"729:6:12","nodeType":"VariableDeclaration","scope":2885,"src":"721:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"720:16:12"},"src":"693:44:12"},{"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"743:56:12","text":"@notice Thrown when too many nonces are invalidated."},"errorSelector":"24d35a26","id":2888,"name":"ExcessiveInvalidation","nameLocation":"810:21:12","nodeType":"ErrorDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[],"src":"831:2:12"},"src":"804:30:12"},{"anonymous":false,"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"840:84:12","text":"@notice Emits an event when the owner successfully invalidates an ordered nonce."},"eventSelector":"55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3","id":2901,"name":"NonceInvalidation","nameLocation":"935:17:12","nodeType":"EventDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"978:5:12","nodeType":"VariableDeclaration","scope":2901,"src":"962:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2893,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1001:5:12","nodeType":"VariableDeclaration","scope":2901,"src":"985:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1024:7:12","nodeType":"VariableDeclaration","scope":2901,"src":"1008:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2897,"indexed":false,"mutability":"mutable","name":"newNonce","nameLocation":"1040:8:12","nodeType":"VariableDeclaration","scope":2901,"src":"1033:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2896,"name":"uint48","nodeType":"ElementaryTypeName","src":"1033:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2899,"indexed":false,"mutability":"mutable","name":"oldNonce","nameLocation":"1057:8:12","nodeType":"VariableDeclaration","scope":2901,"src":"1050:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2898,"name":"uint48","nodeType":"ElementaryTypeName","src":"1050:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"952:119:12"},"src":"929:143:12"},{"anonymous":false,"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"1078:99:12","text":"@notice Emits an event when the owner successfully sets permissions on a token for the spender."},"eventSelector":"da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b","id":2914,"name":"Approval","nameLocation":"1188:8:12","nodeType":"EventDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1222:5:12","nodeType":"VariableDeclaration","scope":2914,"src":"1206:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2906,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1245:5:12","nodeType":"VariableDeclaration","scope":2914,"src":"1229:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2905,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2908,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1268:7:12","nodeType":"VariableDeclaration","scope":2914,"src":"1252:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2907,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2910,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1285:6:12","nodeType":"VariableDeclaration","scope":2914,"src":"1277:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2909,"name":"uint160","nodeType":"ElementaryTypeName","src":"1277:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2912,"indexed":false,"mutability":"mutable","name":"expiration","nameLocation":"1300:10:12","nodeType":"VariableDeclaration","scope":2914,"src":"1293:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2911,"name":"uint48","nodeType":"ElementaryTypeName","src":"1293:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1196:120:12"},"src":"1182:135:12"},{"anonymous":false,"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"1323:124:12","text":"@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."},"eventSelector":"c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec","id":2929,"name":"Permit","nameLocation":"1458:6:12","nodeType":"EventDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1490:5:12","nodeType":"VariableDeclaration","scope":2929,"src":"1474:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2919,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1521:5:12","nodeType":"VariableDeclaration","scope":2929,"src":"1505:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2921,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1552:7:12","nodeType":"VariableDeclaration","scope":2929,"src":"1536:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2920,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2923,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1577:6:12","nodeType":"VariableDeclaration","scope":2929,"src":"1569:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2922,"name":"uint160","nodeType":"ElementaryTypeName","src":"1569:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2925,"indexed":false,"mutability":"mutable","name":"expiration","nameLocation":"1600:10:12","nodeType":"VariableDeclaration","scope":2929,"src":"1593:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2924,"name":"uint48","nodeType":"ElementaryTypeName","src":"1593:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2927,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1627:5:12","nodeType":"VariableDeclaration","scope":2929,"src":"1620:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2926,"name":"uint48","nodeType":"ElementaryTypeName","src":"1620:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1464:174:12"},"src":"1452:187:12"},{"anonymous":false,"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"1645:98:12","text":"@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."},"eventSelector":"89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4","id":2938,"name":"Lockdown","nameLocation":"1754:8:12","nodeType":"EventDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1779:5:12","nodeType":"VariableDeclaration","scope":2938,"src":"1763:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2934,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1794:5:12","nodeType":"VariableDeclaration","scope":2938,"src":"1786:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2936,"indexed":false,"mutability":"mutable","name":"spender","nameLocation":"1809:7:12","nodeType":"VariableDeclaration","scope":2938,"src":"1801:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1762:55:12"},"src":"1748:70:12"},{"canonicalName":"IAllowanceTransfer.PermitDetails","documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"1824:39:12","text":"@notice The permit data for a token"},"id":2948,"members":[{"constant":false,"id":2941,"mutability":"mutable","name":"token","nameLocation":"1938:5:12","nodeType":"VariableDeclaration","scope":2948,"src":"1930:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"1930:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"amount","nameLocation":"2008:6:12","nodeType":"VariableDeclaration","scope":2948,"src":"2000:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2942,"name":"uint160","nodeType":"ElementaryTypeName","src":"2000:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"expiration","nameLocation":"2105:10:12","nodeType":"VariableDeclaration","scope":2948,"src":"2098:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2944,"name":"uint48","nodeType":"ElementaryTypeName","src":"2098:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"nonce","nameLocation":"2220:5:12","nodeType":"VariableDeclaration","scope":2948,"src":"2213:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2946,"name":"uint48","nodeType":"ElementaryTypeName","src":"2213:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PermitDetails","nameLocation":"1875:13:12","nodeType":"StructDefinition","scope":3080,"src":"1868:364:12","visibility":"public"},{"canonicalName":"IAllowanceTransfer.PermitSingle","documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"2238:66:12","text":"@notice The permit message signed for a single token allowance"},"id":2957,"members":[{"constant":false,"id":2952,"mutability":"mutable","name":"details","nameLocation":"2407:7:12","nodeType":"VariableDeclaration","scope":2957,"src":"2393:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$2948_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"},"typeName":{"id":2951,"nodeType":"UserDefinedTypeName","pathNode":{"id":2950,"name":"PermitDetails","nameLocations":["2393:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2948,"src":"2393:13:12"},"referencedDeclaration":2948,"src":"2393:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$2948_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"spender","nameLocation":"2486:7:12","nodeType":"VariableDeclaration","scope":2957,"src":"2478:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"sigDeadline","nameLocation":"2555:11:12","nodeType":"VariableDeclaration","scope":2957,"src":"2547:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitSingle","nameLocation":"2316:12:12","nodeType":"StructDefinition","scope":3080,"src":"2309:264:12","visibility":"public"},{"canonicalName":"IAllowanceTransfer.PermitBatch","documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"2579:67:12","text":"@notice The permit message signed for multiple token allowances"},"id":2967,"members":[{"constant":false,"id":2962,"mutability":"mutable","name":"details","nameLocation":"2753:7:12","nodeType":"VariableDeclaration","scope":2967,"src":"2737:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$2948_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails[]"},"typeName":{"baseType":{"id":2960,"nodeType":"UserDefinedTypeName","pathNode":{"id":2959,"name":"PermitDetails","nameLocations":["2737:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":2948,"src":"2737:13:12"},"referencedDeclaration":2948,"src":"2737:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$2948_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"}},"id":2961,"nodeType":"ArrayTypeName","src":"2737:15:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$2948_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails[]"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"spender","nameLocation":"2832:7:12","nodeType":"VariableDeclaration","scope":2967,"src":"2824:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"2824:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"sigDeadline","nameLocation":"2901:11:12","nodeType":"VariableDeclaration","scope":2967,"src":"2893:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitBatch","nameLocation":"2658:11:12","nodeType":"StructDefinition","scope":3080,"src":"2651:268:12","visibility":"public"},{"canonicalName":"IAllowanceTransfer.PackedAllowance","documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"2925:217:12","text":"@notice The saved permissions\n @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n @dev Setting amount to type(uint160).max sets an unlimited approval"},"id":2975,"members":[{"constant":false,"id":2970,"mutability":"mutable","name":"amount","nameLocation":"3214:6:12","nodeType":"VariableDeclaration","scope":2975,"src":"3206:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2969,"name":"uint160","nodeType":"ElementaryTypeName","src":"3206:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"expiration","nameLocation":"3266:10:12","nodeType":"VariableDeclaration","scope":2975,"src":"3259:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2971,"name":"uint48","nodeType":"ElementaryTypeName","src":"3259:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"nonce","nameLocation":"3381:5:12","nodeType":"VariableDeclaration","scope":2975,"src":"3374:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2973,"name":"uint48","nodeType":"ElementaryTypeName","src":"3374:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PackedAllowance","nameLocation":"3154:15:12","nodeType":"StructDefinition","scope":3080,"src":"3147:246:12","visibility":"public"},{"canonicalName":"IAllowanceTransfer.TokenSpenderPair","documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"3399:33:12","text":"@notice A token spender pair."},"id":2981,"members":[{"constant":false,"id":2978,"mutability":"mutable","name":"token","nameLocation":"3524:5:12","nodeType":"VariableDeclaration","scope":2981,"src":"3516:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2977,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"spender","nameLocation":"3578:7:12","nodeType":"VariableDeclaration","scope":2981,"src":"3570:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenSpenderPair","nameLocation":"3444:16:12","nodeType":"StructDefinition","scope":3080,"src":"3437:155:12","visibility":"public"},{"canonicalName":"IAllowanceTransfer.AllowanceTransferDetails","documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"3598:41:12","text":"@notice Details for a token transfer."},"id":2991,"members":[{"constant":false,"id":2984,"mutability":"mutable","name":"from","nameLocation":"3728:4:12","nodeType":"VariableDeclaration","scope":2991,"src":"3720:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"3720:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"to","nameLocation":"3788:2:12","nodeType":"VariableDeclaration","scope":2991,"src":"3780:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"amount","nameLocation":"3843:6:12","nodeType":"VariableDeclaration","scope":2991,"src":"3835:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2987,"name":"uint160","nodeType":"ElementaryTypeName","src":"3835:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"token","nameLocation":"3906:5:12","nodeType":"VariableDeclaration","scope":2991,"src":"3898:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2989,"name":"address","nodeType":"ElementaryTypeName","src":"3898:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AllowanceTransferDetails","nameLocation":"3651:24:12","nodeType":"StructDefinition","scope":3080,"src":"3644:274:12","visibility":"public"},{"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"3924:455:12","text":"@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."},"functionSelector":"927da105","id":3007,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4393:9:12","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"user","nameLocation":"4411:4:12","nodeType":"VariableDeclaration","scope":3007,"src":"4403:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"4403:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"token","nameLocation":"4425:5:12","nodeType":"VariableDeclaration","scope":3007,"src":"4417:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"spender","nameLocation":"4440:7:12","nodeType":"VariableDeclaration","scope":3007,"src":"4432:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"4432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4402:46:12"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"amount","nameLocation":"4504:6:12","nodeType":"VariableDeclaration","scope":3007,"src":"4496:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3000,"name":"uint160","nodeType":"ElementaryTypeName","src":"4496:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"expiration","nameLocation":"4519:10:12","nodeType":"VariableDeclaration","scope":3007,"src":"4512:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3002,"name":"uint48","nodeType":"ElementaryTypeName","src":"4512:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"nonce","nameLocation":"4538:5:12","nodeType":"VariableDeclaration","scope":3007,"src":"4531:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3004,"name":"uint48","nodeType":"ElementaryTypeName","src":"4531:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4495:49:12"},"scope":3080,"src":"4384:161:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"4551:498:12","text":"@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"},"functionSelector":"87517c45","id":3019,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5063:7:12","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"token","nameLocation":"5079:5:12","nodeType":"VariableDeclaration","scope":3019,"src":"5071:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"5071:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"spender","nameLocation":"5094:7:12","nodeType":"VariableDeclaration","scope":3019,"src":"5086:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"5086:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"amount","nameLocation":"5111:6:12","nodeType":"VariableDeclaration","scope":3019,"src":"5103:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3013,"name":"uint160","nodeType":"ElementaryTypeName","src":"5103:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"expiration","nameLocation":"5126:10:12","nodeType":"VariableDeclaration","scope":3019,"src":"5119:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3015,"name":"uint48","nodeType":"ElementaryTypeName","src":"5119:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"5070:67:12"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[],"src":"5146:0:12"},"scope":3080,"src":"5054:93:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"5153:407:12","text":"@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"},"functionSelector":"2b67b570","id":3030,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"5574:6:12","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"owner","nameLocation":"5589:5:12","nodeType":"VariableDeclaration","scope":3030,"src":"5581:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"5581:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"permitSingle","nameLocation":"5616:12:12","nodeType":"VariableDeclaration","scope":3030,"src":"5596:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$2957_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"},"typeName":{"id":3024,"nodeType":"UserDefinedTypeName","pathNode":{"id":3023,"name":"PermitSingle","nameLocations":["5596:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":2957,"src":"5596:12:12"},"referencedDeclaration":2957,"src":"5596:12:12","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$2957_storage_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"signature","nameLocation":"5645:9:12","nodeType":"VariableDeclaration","scope":3030,"src":"5630:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3026,"name":"bytes","nodeType":"ElementaryTypeName","src":"5630:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5580:75:12"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[],"src":"5664:0:12"},"scope":3080,"src":"5565:100:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"5671:411:12","text":"@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"},"functionSelector":"2a2d80d1","id":3041,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"6096:6:12","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"owner","nameLocation":"6111:5:12","nodeType":"VariableDeclaration","scope":3041,"src":"6103:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"6103:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"permitBatch","nameLocation":"6137:11:12","nodeType":"VariableDeclaration","scope":3041,"src":"6118:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":3035,"nodeType":"UserDefinedTypeName","pathNode":{"id":3034,"name":"PermitBatch","nameLocations":["6118:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2967,"src":"6118:11:12"},"referencedDeclaration":2967,"src":"6118:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"signature","nameLocation":"6165:9:12","nodeType":"VariableDeclaration","scope":3041,"src":"6150:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3037,"name":"bytes","nodeType":"ElementaryTypeName","src":"6150:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6102:73:12"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[],"src":"6184:0:12"},"scope":3080,"src":"6087:98:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"6191:386:12","text":"@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."},"functionSelector":"36c78516","id":3053,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6591:12:12","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"from","nameLocation":"6612:4:12","nodeType":"VariableDeclaration","scope":3053,"src":"6604:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"6604:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"to","nameLocation":"6626:2:12","nodeType":"VariableDeclaration","scope":3053,"src":"6618:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"6618:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"amount","nameLocation":"6638:6:12","nodeType":"VariableDeclaration","scope":3053,"src":"6630:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3047,"name":"uint160","nodeType":"ElementaryTypeName","src":"6630:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"token","nameLocation":"6654:5:12","nodeType":"VariableDeclaration","scope":3053,"src":"6646:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"6646:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6603:57:12"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[],"src":"6669:0:12"},"scope":3080,"src":"6582:88:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"6676:264:12","text":"@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."},"functionSelector":"0d58b1db","id":3061,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6954:12:12","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"transferDetails","nameLocation":"7003:15:12","nodeType":"VariableDeclaration","scope":3061,"src":"6967:51:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$2991_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails[]"},"typeName":{"baseType":{"id":3056,"nodeType":"UserDefinedTypeName","pathNode":{"id":3055,"name":"AllowanceTransferDetails","nameLocations":["6967:24:12"],"nodeType":"IdentifierPath","referencedDeclaration":2991,"src":"6967:24:12"},"referencedDeclaration":2991,"src":"6967:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$2991_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails"}},"id":3057,"nodeType":"ArrayTypeName","src":"6967:26:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$2991_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails[]"}},"visibility":"internal"}],"src":"6966:53:12"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"7028:0:12"},"scope":3080,"src":"6945:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3062,"nodeType":"StructuredDocumentation","src":"7035:167:12","text":"@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."},"functionSelector":"cc53287f","id":3069,"implemented":false,"kind":"function","modifiers":[],"name":"lockdown","nameLocation":"7216:8:12","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"approvals","nameLocation":"7253:9:12","nodeType":"VariableDeclaration","scope":3069,"src":"7225:37:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$2981_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair[]"},"typeName":{"baseType":{"id":3064,"nodeType":"UserDefinedTypeName","pathNode":{"id":3063,"name":"TokenSpenderPair","nameLocations":["7225:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":2981,"src":"7225:16:12"},"referencedDeclaration":2981,"src":"7225:16:12","typeDescriptions":{"typeIdentifier":"t_struct$_TokenSpenderPair_$2981_storage_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair"}},"id":3065,"nodeType":"ArrayTypeName","src":"7225:18:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$2981_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair[]"}},"visibility":"internal"}],"src":"7224:39:12"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[],"src":"7272:0:12"},"scope":3080,"src":"7207:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"7279:332:12","text":"@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."},"functionSelector":"65d9723c","id":3079,"implemented":false,"kind":"function","modifiers":[],"name":"invalidateNonces","nameLocation":"7625:16:12","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"token","nameLocation":"7650:5:12","nodeType":"VariableDeclaration","scope":3079,"src":"7642:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3071,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"spender","nameLocation":"7665:7:12","nodeType":"VariableDeclaration","scope":3079,"src":"7657:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3073,"name":"address","nodeType":"ElementaryTypeName","src":"7657:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"newNonce","nameLocation":"7681:8:12","nodeType":"VariableDeclaration","scope":3079,"src":"7674:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3075,"name":"uint48","nodeType":"ElementaryTypeName","src":"7674:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"7641:49:12"},"returnParameters":{"id":3078,"nodeType":"ParameterList","parameters":[],"src":"7699:0:12"},"scope":3080,"src":"7616:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3081,"src":"330:7372:12","usedErrors":[2880,2885,2888],"usedEvents":[2901,2914,2929,2938]}],"src":"32:7671:12"},"id":12},"@uniswap/permit2/src/interfaces/IEIP712.sol":{"ast":{"absolutePath":"@uniswap/permit2/src/interfaces/IEIP712.sol","exportedSymbols":{"IEIP712":[3088]},"id":3089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3082,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IEIP712","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3088,"linearizedBaseContracts":[3088],"name":"IEIP712","nameLocation":"67:7:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3644e515","id":3087,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"90:16:13","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"106:2:13"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"132:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"132:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"131:9:13"},"scope":3088,"src":"81:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3089,"src":"57:86:13","usedErrors":[],"usedEvents":[]}],"src":"32:112:13"},"id":13},"contracts/CastingHelpers.sol":{"ast":{"absolutePath":"contracts/CastingHelpers.sol","exportedSymbols":{"CastingHelpers":[3120],"IERC20":[337]},"id":3121,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3090,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3121,"sourceUnit":338,"src":"72:72:14","symbolAliases":[{"foreign":{"id":3091,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"81:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CastingHelpers","contractDependencies":[],"contractKind":"library","documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"146:71:14","text":"@notice Library of helper functions related to typecasting arrays."},"fullyImplemented":true,"id":3120,"linearizedBaseContracts":[3120],"name":"CastingHelpers","nameLocation":"225:14:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3105,"nodeType":"Block","src":"410:140:14","statements":[{"AST":{"nativeSrc":"501:43:14","nodeType":"YulBlock","src":"501:43:14","statements":[{"nativeSrc":"515:19:14","nodeType":"YulAssignment","src":"515:19:14","value":{"name":"addresses","nativeSrc":"525:9:14","nodeType":"YulIdentifier","src":"525:9:14"},"variableNames":[{"name":"tokens","nativeSrc":"515:6:14","nodeType":"YulIdentifier","src":"515:6:14"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3097,"isOffset":false,"isSlot":false,"src":"525:9:14","valueSize":1},{"declaration":3102,"isOffset":false,"isSlot":false,"src":"515:6:14","valueSize":1}],"flags":["memory-safe"],"id":3104,"nodeType":"InlineAssembly","src":"476:68:14"}]},"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"246:66:14","text":"@dev Returns a native array of addresses as an IERC20[] array."},"id":3106,"implemented":true,"kind":"function","modifiers":[],"name":"asIERC20","nameLocation":"326:8:14","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"addresses","nameLocation":"352:9:14","nodeType":"VariableDeclaration","scope":3106,"src":"335:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3096,"nodeType":"ArrayTypeName","src":"335:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"334:28:14"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"tokens","nameLocation":"402:6:14","nodeType":"VariableDeclaration","scope":3106,"src":"386:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":3100,"nodeType":"UserDefinedTypeName","pathNode":{"id":3099,"name":"IERC20","nameLocations":["386:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"386:6:14"},"referencedDeclaration":337,"src":"386:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":3101,"nodeType":"ArrayTypeName","src":"386:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"385:24:14"},"scope":3120,"src":"317:233:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3118,"nodeType":"Block","src":"712:140:14","statements":[{"AST":{"nativeSrc":"803:43:14","nodeType":"YulBlock","src":"803:43:14","statements":[{"nativeSrc":"817:19:14","nodeType":"YulAssignment","src":"817:19:14","value":{"name":"tokens","nativeSrc":"830:6:14","nodeType":"YulIdentifier","src":"830:6:14"},"variableNames":[{"name":"addresses","nativeSrc":"817:9:14","nodeType":"YulIdentifier","src":"817:9:14"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3115,"isOffset":false,"isSlot":false,"src":"817:9:14","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"830:6:14","valueSize":1}],"flags":["memory-safe"],"id":3117,"nodeType":"InlineAssembly","src":"778:68:14"}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"556:57:14","text":"@dev Returns an IERC20[] array as an address[] array."},"id":3119,"implemented":true,"kind":"function","modifiers":[],"name":"asAddress","nameLocation":"627:9:14","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"tokens","nameLocation":"653:6:14","nodeType":"VariableDeclaration","scope":3119,"src":"637:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":3109,"nodeType":"UserDefinedTypeName","pathNode":{"id":3108,"name":"IERC20","nameLocations":["637:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"637:6:14"},"referencedDeclaration":337,"src":"637:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":3110,"nodeType":"ArrayTypeName","src":"637:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"636:24:14"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"addresses","nameLocation":"701:9:14","nodeType":"VariableDeclaration","scope":3119,"src":"684:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3114,"nodeType":"ArrayTypeName","src":"684:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"683:28:14"},"scope":3120,"src":"618:234:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3121,"src":"217:637:14","usedErrors":[],"usedEvents":[]}],"src":"46:809:14"},"id":14},"contracts/IAuthentication.sol":{"ast":{"absolutePath":"contracts/IAuthentication.sol","exportedSymbols":{"IAuthentication":[3135]},"id":3136,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3122,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthentication","contractDependencies":[],"contractKind":"interface","documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"72:77:15","text":"@notice Simple interface for permissioned calling of external functions."},"fullyImplemented":false,"id":3135,"linearizedBaseContracts":[3135],"name":"IAuthentication","nameLocation":"159:15:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"181:67:15","text":"@notice The sender does not have permission to call a function."},"errorSelector":"23dada53","id":3126,"name":"SenderNotAllowed","nameLocation":"259:16:15","nodeType":"ErrorDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"275:2:15"},"src":"253:25:15"},{"documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"284:237:15","text":" @notice Returns the action identifier associated with the external function described by `selector`.\n @param selector The 4-byte selector of the permissioned function\n @return actionId The computed actionId"},"functionSelector":"851c1bb3","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nameLocation":"535:11:15","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"selector","nameLocation":"554:8:15","nodeType":"VariableDeclaration","scope":3134,"src":"547:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3128,"name":"bytes4","nodeType":"ElementaryTypeName","src":"547:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"546:17:15"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"actionId","nameLocation":"595:8:15","nodeType":"VariableDeclaration","scope":3134,"src":"587:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"587:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"586:18:15"},"scope":3135,"src":"526:79:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3136,"src":"149:458:15","usedErrors":[3126],"usedEvents":[]}],"src":"46:562:15"},"id":15},"contracts/IAuthorizer.sol":{"ast":{"absolutePath":"contracts/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[3151]},"id":3152,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3137,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthorizer","contractDependencies":[],"contractKind":"interface","documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"72:56:16","text":"@notice Interface to the Vault's permission system."},"fullyImplemented":false,"id":3151,"linearizedBaseContracts":[3151],"name":"IAuthorizer","nameLocation":"138:11:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"156:354:16","text":" @notice Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n @param actionId Identifier for the action to be performed\n @param account Account trying to perform the action\n @param where Target contract for the action\n @return success True if the action is permitted"},"functionSelector":"9be2a884","id":3150,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nameLocation":"524:10:16","nodeType":"FunctionDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"actionId","nameLocation":"543:8:16","nodeType":"VariableDeclaration","scope":3150,"src":"535:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"535:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"account","nameLocation":"561:7:16","nodeType":"VariableDeclaration","scope":3150,"src":"553:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"553:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"where","nameLocation":"578:5:16","nodeType":"VariableDeclaration","scope":3150,"src":"570:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"570:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"534:50:16"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"success","nameLocation":"613:7:16","nodeType":"VariableDeclaration","scope":3150,"src":"608:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3147,"name":"bool","nodeType":"ElementaryTypeName","src":"608:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"607:14:16"},"scope":3151,"src":"515:107:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3152,"src":"128:496:16","usedErrors":[],"usedEvents":[]}],"src":"46:579:16"},"id":16},"contracts/IHooks.sol":{"ast":{"absolutePath":"contracts/IHooks.sol","exportedSymbols":{"AddLiquidityKind":[8439],"AfterSwapParams":[8433],"HookFlags":[8259],"IHooks":[3353],"LiquidityManagement":[8212],"PoolSwapParams":[8404],"RemoveLiquidityKind":[8460],"SwapKind":[8367],"TokenConfig":[8326]},"id":3354,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3153,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:17"},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":3162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3354,"sourceUnit":8504,"src":"289:193:17","symbolAliases":[{"foreign":{"id":3154,"name":"TokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"302:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3155,"name":"LiquidityManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"319:19:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3156,"name":"PoolSwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"344:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3157,"name":"AfterSwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"364:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3158,"name":"HookFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"385:9:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3159,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"400:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3160,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"422:19:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3161,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"447:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IHooks","contractDependencies":[],"contractKind":"interface","documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"484:490:17","text":" @notice Interface for pool hooks.\n @dev Hooks are functions invoked by the Vault at specific points in the flow of each operation. This guarantees that\n they are called in the correct order, and with the correct arguments. To maintain this security, these functions\n should only be called by the Vault. The recommended way to do this is to derive the hook contract from `BaseHooks`,\n then use the `onlyVault` modifier from `VaultGuard`. (See the examples in /pool-hooks.)"},"fullyImplemented":false,"id":3353,"linearizedBaseContracts":[3353],"name":"IHooks","nameLocation":"985:6:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"1205:769:17","text":" @notice Hook executed when a pool is registered with a non-zero hooks contract.\n @dev Returns true if registration was successful, and false to revert the pool registration.\n Make sure this function is properly implemented (e.g. check the factory, and check that the\n given pool is from the factory). The Vault address will be msg.sender.\n @param factory Address of the pool factory (contract deploying the pool)\n @param pool Address of the pool\n @param tokenConfig An array of descriptors for the tokens the pool will manage\n @param liquidityManagement Liquidity management flags indicating which functions are enabled\n @return success True if the hook allowed the registration, false otherwise"},"functionSelector":"0b89f182","id":3180,"implemented":false,"kind":"function","modifiers":[],"name":"onRegister","nameLocation":"1988:10:17","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"factory","nameLocation":"2016:7:17","nodeType":"VariableDeclaration","scope":3180,"src":"2008:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3165,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"pool","nameLocation":"2041:4:17","nodeType":"VariableDeclaration","scope":3180,"src":"2033:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"2033:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"tokenConfig","nameLocation":"2076:11:17","nodeType":"VariableDeclaration","scope":3180,"src":"2055:32:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8326_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig[]"},"typeName":{"baseType":{"id":3170,"nodeType":"UserDefinedTypeName","pathNode":{"id":3169,"name":"TokenConfig","nameLocations":["2055:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":8326,"src":"2055:11:17"},"referencedDeclaration":8326,"src":"2055:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfig_$8326_storage_ptr","typeString":"struct TokenConfig"}},"id":3171,"nodeType":"ArrayTypeName","src":"2055:13:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8326_storage_$dyn_storage_ptr","typeString":"struct TokenConfig[]"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"liquidityManagement","nameLocation":"2126:19:17","nodeType":"VariableDeclaration","scope":3180,"src":"2097:48:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_calldata_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":3174,"nodeType":"UserDefinedTypeName","pathNode":{"id":3173,"name":"LiquidityManagement","nameLocations":["2097:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":8212,"src":"2097:19:17"},"referencedDeclaration":8212,"src":"2097:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"}],"src":"1998:153:17"},"returnParameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"success","nameLocation":"2175:7:17","nodeType":"VariableDeclaration","scope":3180,"src":"2170:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3177,"name":"bool","nodeType":"ElementaryTypeName","src":"2170:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2169:14:17"},"scope":3353,"src":"1979:205:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3181,"nodeType":"StructuredDocumentation","src":"2190:412:17","text":" @notice Return the set of hooks implemented by the contract.\n @dev The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined\n (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero).\n `onRegister` is the only \"mandatory\" hook.\n @return hookFlags Flags indicating which hooks the contract supports"},"functionSelector":"d77153a7","id":3187,"implemented":false,"kind":"function","modifiers":[],"name":"getHookFlags","nameLocation":"2616:12:17","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[],"src":"2628:2:17"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"hookFlags","nameLocation":"2671:9:17","nodeType":"VariableDeclaration","scope":3187,"src":"2654:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$8259_memory_ptr","typeString":"struct HookFlags"},"typeName":{"id":3184,"nodeType":"UserDefinedTypeName","pathNode":{"id":3183,"name":"HookFlags","nameLocations":["2654:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":8259,"src":"2654:9:17"},"referencedDeclaration":8259,"src":"2654:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_HookFlags_$8259_storage_ptr","typeString":"struct HookFlags"}},"visibility":"internal"}],"src":"2653:28:17"},"scope":3353,"src":"2607:75:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"2897:484:17","text":" @notice Hook executed before pool initialization.\n @dev Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use\n the `onlyVault` modifier to guarantee this is only called by the Vault.\n @param exactAmountsIn Exact amounts of input tokens\n @param userData Optional, arbitrary data sent with the encoded request\n @return success True if the pool wishes to proceed with initialization"},"functionSelector":"1c149e28","id":3198,"implemented":false,"kind":"function","modifiers":[],"name":"onBeforeInitialize","nameLocation":"3395:18:17","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"3431:14:17","nodeType":"VariableDeclaration","scope":3198,"src":"3414:31:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ArrayTypeName","src":"3414:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"userData","nameLocation":"3460:8:17","nodeType":"VariableDeclaration","scope":3198,"src":"3447:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3192,"name":"bytes","nodeType":"ElementaryTypeName","src":"3447:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3413:56:17"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"success","nameLocation":"3493:7:17","nodeType":"VariableDeclaration","scope":3198,"src":"3488:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3195,"name":"bool","nodeType":"ElementaryTypeName","src":"3488:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3487:14:17"},"scope":3353,"src":"3386:116:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"3508:563:17","text":" @notice Hook to be executed after pool initialization.\n @dev Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use\n the `onlyVault` modifier to guarantee this is only called by the Vault.\n @param exactAmountsIn Exact amounts of input tokens\n @param bptAmountOut Amount of pool tokens minted during initialization\n @param userData Optional, arbitrary data sent with the encoded request\n @return success True if the pool accepts the initialization results"},"functionSelector":"38be241d","id":3211,"implemented":false,"kind":"function","modifiers":[],"name":"onAfterInitialize","nameLocation":"4085:17:17","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"4129:14:17","nodeType":"VariableDeclaration","scope":3211,"src":"4112:31:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"4112:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3201,"nodeType":"ArrayTypeName","src":"4112:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"bptAmountOut","nameLocation":"4161:12:17","nodeType":"VariableDeclaration","scope":3211,"src":"4153:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"4153:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"userData","nameLocation":"4196:8:17","nodeType":"VariableDeclaration","scope":3211,"src":"4183:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3205,"name":"bytes","nodeType":"ElementaryTypeName","src":"4183:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4102:108:17"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"success","nameLocation":"4234:7:17","nodeType":"VariableDeclaration","scope":3211,"src":"4229:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3208,"name":"bool","nodeType":"ElementaryTypeName","src":"4229:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4228:14:17"},"scope":3353,"src":"4076:167:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3212,"nodeType":"StructuredDocumentation","src":"4461:953:17","text":" @notice Hook to be executed before adding liquidity.\n @dev Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use\n the `onlyVault` modifier to guarantee this is only called by the Vault.\n @param router The address (usually a router contract) that initiated an add liquidity operation on the Vault\n @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n @param kind The add liquidity operation type (e.g., proportional, custom)\n @param maxAmountsInScaled18 Maximum amounts of input tokens\n @param minBptAmountOut Minimum amount of output pool tokens\n @param balancesScaled18 Current pool balances, sorted in token registration order\n @param userData Optional, arbitrary data sent with the encoded request\n @return success True if the pool wishes to proceed with settlement"},"functionSelector":"45421ec7","id":3234,"implemented":false,"kind":"function","modifiers":[],"name":"onBeforeAddLiquidity","nameLocation":"5428:20:17","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"router","nameLocation":"5466:6:17","nodeType":"VariableDeclaration","scope":3234,"src":"5458:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"5458:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"pool","nameLocation":"5490:4:17","nodeType":"VariableDeclaration","scope":3234,"src":"5482:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"5482:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"kind","nameLocation":"5521:4:17","nodeType":"VariableDeclaration","scope":3234,"src":"5504:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},"typeName":{"id":3218,"nodeType":"UserDefinedTypeName","pathNode":{"id":3217,"name":"AddLiquidityKind","nameLocations":["5504:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":8439,"src":"5504:16:17"},"referencedDeclaration":8439,"src":"5504:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"maxAmountsInScaled18","nameLocation":"5552:20:17","nodeType":"VariableDeclaration","scope":3234,"src":"5535:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3221,"nodeType":"ArrayTypeName","src":"5535:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"5590:15:17","nodeType":"VariableDeclaration","scope":3234,"src":"5582:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"5582:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"balancesScaled18","nameLocation":"5632:16:17","nodeType":"VariableDeclaration","scope":3234,"src":"5615:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ArrayTypeName","src":"5615:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"userData","nameLocation":"5671:8:17","nodeType":"VariableDeclaration","scope":3234,"src":"5658:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3228,"name":"bytes","nodeType":"ElementaryTypeName","src":"5658:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5448:237:17"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"success","nameLocation":"5709:7:17","nodeType":"VariableDeclaration","scope":3234,"src":"5704:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3231,"name":"bool","nodeType":"ElementaryTypeName","src":"5704:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5703:14:17"},"scope":3353,"src":"5419:299:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"5724:1250:17","text":" @notice Hook to be executed after adding liquidity.\n @dev Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore\n `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the\n `onlyVault` modifier to guarantee this is only called by the Vault.\n @param router The address (usually a router contract) that initiated an add liquidity operation on the Vault\n @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n @param kind The add liquidity operation type (e.g., proportional, custom)\n @param amountsInScaled18 Actual amounts of tokens added, sorted in token registration order\n @param amountsInRaw Actual amounts of tokens added, sorted in token registration order\n @param bptAmountOut Amount of pool tokens minted\n @param balancesScaled18 Current pool balances, sorted in token registration order\n @param userData Additional (optional) data provided by the user\n @return success True if the pool wishes to proceed with settlement\n @return hookAdjustedAmountsInRaw New amountsInRaw, potentially modified by the hook"},"functionSelector":"976907cc","id":3263,"implemented":false,"kind":"function","modifiers":[],"name":"onAfterAddLiquidity","nameLocation":"6988:19:17","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"router","nameLocation":"7025:6:17","nodeType":"VariableDeclaration","scope":3263,"src":"7017:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"7017:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"pool","nameLocation":"7049:4:17","nodeType":"VariableDeclaration","scope":3263,"src":"7041:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"7041:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"kind","nameLocation":"7080:4:17","nodeType":"VariableDeclaration","scope":3263,"src":"7063:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},"typeName":{"id":3241,"nodeType":"UserDefinedTypeName","pathNode":{"id":3240,"name":"AddLiquidityKind","nameLocations":["7063:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":8439,"src":"7063:16:17"},"referencedDeclaration":8439,"src":"7063:16:17","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"amountsInScaled18","nameLocation":"7111:17:17","nodeType":"VariableDeclaration","scope":3263,"src":"7094:34:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"7094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3244,"nodeType":"ArrayTypeName","src":"7094:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"amountsInRaw","nameLocation":"7155:12:17","nodeType":"VariableDeclaration","scope":3263,"src":"7138:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"7138:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ArrayTypeName","src":"7138:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"bptAmountOut","nameLocation":"7185:12:17","nodeType":"VariableDeclaration","scope":3263,"src":"7177:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"7177:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"balancesScaled18","nameLocation":"7224:16:17","nodeType":"VariableDeclaration","scope":3263,"src":"7207:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"7207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ArrayTypeName","src":"7207:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"userData","nameLocation":"7263:8:17","nodeType":"VariableDeclaration","scope":3263,"src":"7250:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3254,"name":"bytes","nodeType":"ElementaryTypeName","src":"7250:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7007:270:17"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"success","nameLocation":"7301:7:17","nodeType":"VariableDeclaration","scope":3263,"src":"7296:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3257,"name":"bool","nodeType":"ElementaryTypeName","src":"7296:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"hookAdjustedAmountsInRaw","nameLocation":"7327:24:17","nodeType":"VariableDeclaration","scope":3263,"src":"7310:41:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"7310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ArrayTypeName","src":"7310:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7295:57:17"},"scope":3353,"src":"6979:374:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"7572:992:17","text":" @notice Hook to be executed before removing liquidity.\n @dev Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use\n the `onlyVault` modifier to guarantee this is only called by the Vault.\n @param router The address (usually a router contract) that initiated a remove liquidity operation on the Vault\n @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n @param kind The type of remove liquidity operation (e.g., proportional, custom)\n @param maxBptAmountIn Maximum amount of input pool tokens\n @param minAmountsOutScaled18 Minimum output amounts, sorted in token registration order\n @param balancesScaled18 Current pool balances, sorted in token registration order\n @param userData Optional, arbitrary data sent with the encoded request\n @return success True if the pool wishes to proceed with settlement"},"functionSelector":"ba5f9f40","id":3286,"implemented":false,"kind":"function","modifiers":[],"name":"onBeforeRemoveLiquidity","nameLocation":"8578:23:17","nodeType":"FunctionDefinition","parameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"router","nameLocation":"8619:6:17","nodeType":"VariableDeclaration","scope":3286,"src":"8611:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"8611:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"pool","nameLocation":"8643:4:17","nodeType":"VariableDeclaration","scope":3286,"src":"8635:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"8635:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"kind","nameLocation":"8677:4:17","nodeType":"VariableDeclaration","scope":3286,"src":"8657:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":3270,"nodeType":"UserDefinedTypeName","pathNode":{"id":3269,"name":"RemoveLiquidityKind","nameLocations":["8657:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":8460,"src":"8657:19:17"},"referencedDeclaration":8460,"src":"8657:19:17","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"8699:14:17","nodeType":"VariableDeclaration","scope":3286,"src":"8691:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"8691:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"minAmountsOutScaled18","nameLocation":"8740:21:17","nodeType":"VariableDeclaration","scope":3286,"src":"8723:38:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ArrayTypeName","src":"8723:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"balancesScaled18","nameLocation":"8788:16:17","nodeType":"VariableDeclaration","scope":3286,"src":"8771:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"8771:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3278,"nodeType":"ArrayTypeName","src":"8771:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"userData","nameLocation":"8827:8:17","nodeType":"VariableDeclaration","scope":3286,"src":"8814:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3280,"name":"bytes","nodeType":"ElementaryTypeName","src":"8814:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8601:240:17"},"returnParameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"success","nameLocation":"8865:7:17","nodeType":"VariableDeclaration","scope":3286,"src":"8860:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3283,"name":"bool","nodeType":"ElementaryTypeName","src":"8860:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8859:14:17"},"scope":3353,"src":"8569:305:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"8880:1276:17","text":" @notice Hook to be executed after removing liquidity.\n @dev Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore\n `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the\n `onlyVault` modifier to guarantee this is only called by the Vault.\n @param router The address (usually a router contract) that initiated a remove liquidity operation on the Vault\n @param pool Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\n @param kind The type of remove liquidity operation (e.g., proportional, custom)\n @param bptAmountIn Amount of pool tokens to burn\n @param amountsOutScaled18 Scaled amount of tokens to receive, sorted in token registration order\n @param amountsOutRaw Actual amount of tokens to receive, sorted in token registration order\n @param balancesScaled18 Current pool balances, sorted in token registration order\n @param userData Additional (optional) data provided by the user\n @return success True if the pool wishes to proceed with settlement\n @return hookAdjustedAmountsOutRaw New amountsOutRaw, potentially modified by the hook"},"functionSelector":"2754888d","id":3315,"implemented":false,"kind":"function","modifiers":[],"name":"onAfterRemoveLiquidity","nameLocation":"10170:22:17","nodeType":"FunctionDefinition","parameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"router","nameLocation":"10210:6:17","nodeType":"VariableDeclaration","scope":3315,"src":"10202:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3288,"name":"address","nodeType":"ElementaryTypeName","src":"10202:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"pool","nameLocation":"10234:4:17","nodeType":"VariableDeclaration","scope":3315,"src":"10226:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3290,"name":"address","nodeType":"ElementaryTypeName","src":"10226:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"kind","nameLocation":"10268:4:17","nodeType":"VariableDeclaration","scope":3315,"src":"10248:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"RemoveLiquidityKind","nameLocations":["10248:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":8460,"src":"10248:19:17"},"referencedDeclaration":8460,"src":"10248:19:17","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"bptAmountIn","nameLocation":"10290:11:17","nodeType":"VariableDeclaration","scope":3315,"src":"10282:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"10282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"amountsOutScaled18","nameLocation":"10328:18:17","nodeType":"VariableDeclaration","scope":3315,"src":"10311:35:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"10311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3298,"nodeType":"ArrayTypeName","src":"10311:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"amountsOutRaw","nameLocation":"10373:13:17","nodeType":"VariableDeclaration","scope":3315,"src":"10356:30:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"10356:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3301,"nodeType":"ArrayTypeName","src":"10356:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"balancesScaled18","nameLocation":"10413:16:17","nodeType":"VariableDeclaration","scope":3315,"src":"10396:33:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3304,"nodeType":"ArrayTypeName","src":"10396:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"userData","nameLocation":"10452:8:17","nodeType":"VariableDeclaration","scope":3315,"src":"10439:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3306,"name":"bytes","nodeType":"ElementaryTypeName","src":"10439:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10192:274:17"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"success","nameLocation":"10490:7:17","nodeType":"VariableDeclaration","scope":3315,"src":"10485:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3309,"name":"bool","nodeType":"ElementaryTypeName","src":"10485:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"hookAdjustedAmountsOutRaw","nameLocation":"10516:25:17","nodeType":"VariableDeclaration","scope":3315,"src":"10499:42:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"10499:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ArrayTypeName","src":"10499:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10484:58:17"},"scope":3353,"src":"10161:382:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"10753:556:17","text":" @notice Called before a swap to give the Pool an opportunity to perform actions.\n @dev Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the\n `onlyVault` modifier to guarantee this is only called by the Vault.\n @param params Swap parameters (see PoolSwapParams for struct definition)\n @param pool Pool address, used to get pool information from the Vault (poolData, token config, etc.)\n @return success True if the pool wishes to proceed with settlement"},"functionSelector":"5211fa77","id":3326,"implemented":false,"kind":"function","modifiers":[],"name":"onBeforeSwap","nameLocation":"11323:12:17","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"params","nameLocation":"11360:6:17","nodeType":"VariableDeclaration","scope":3326,"src":"11336:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8404_calldata_ptr","typeString":"struct PoolSwapParams"},"typeName":{"id":3318,"nodeType":"UserDefinedTypeName","pathNode":{"id":3317,"name":"PoolSwapParams","nameLocations":["11336:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":8404,"src":"11336:14:17"},"referencedDeclaration":8404,"src":"11336:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8404_storage_ptr","typeString":"struct PoolSwapParams"}},"visibility":"internal"},{"constant":false,"id":3321,"mutability":"mutable","name":"pool","nameLocation":"11376:4:17","nodeType":"VariableDeclaration","scope":3326,"src":"11368:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"11368:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11335:46:17"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"success","nameLocation":"11405:7:17","nodeType":"VariableDeclaration","scope":3326,"src":"11400:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3323,"name":"bool","nodeType":"ElementaryTypeName","src":"11400:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11399:14:17"},"scope":3353,"src":"11314:100:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"11420:671:17","text":" @notice Called after a swap to perform further actions once the balances have been updated by the swap.\n @dev Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore\n `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should\n use the `onlyVault` modifier to guarantee this is only called by the Vault.\n @param params Swap parameters (see above for struct definition)\n @return success True if the pool wishes to proceed with settlement\n @return hookAdjustedAmountCalculatedRaw New amount calculated, potentially modified by the hook"},"functionSelector":"18b6eb55","id":3337,"implemented":false,"kind":"function","modifiers":[],"name":"onAfterSwap","nameLocation":"12105:11:17","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"params","nameLocation":"12151:6:17","nodeType":"VariableDeclaration","scope":3337,"src":"12126:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$8433_calldata_ptr","typeString":"struct AfterSwapParams"},"typeName":{"id":3329,"nodeType":"UserDefinedTypeName","pathNode":{"id":3328,"name":"AfterSwapParams","nameLocations":["12126:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":8433,"src":"12126:15:17"},"referencedDeclaration":8433,"src":"12126:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_AfterSwapParams_$8433_storage_ptr","typeString":"struct AfterSwapParams"}},"visibility":"internal"}],"src":"12116:47:17"},"returnParameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"success","nameLocation":"12187:7:17","nodeType":"VariableDeclaration","scope":3337,"src":"12182:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"12182:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"hookAdjustedAmountCalculatedRaw","nameLocation":"12204:31:17","nodeType":"VariableDeclaration","scope":3337,"src":"12196:39:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"12196:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12181:55:17"},"scope":3353,"src":"12096:141:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"12243:795:17","text":" @notice Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\n @dev Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use\n the `onlyVault` modifier to guarantee this is only called by the Vault.\n @param params Swap parameters (see PoolSwapParams for struct definition)\n @param pool Pool address, used to get pool information from the Vault (poolData, token config, etc.)\n @param staticSwapFeePercentage 18-decimal FP value of the static swap fee percentage, for reference\n @return success True if the pool wishes to proceed with settlement\n @return dynamicSwapFeePercentage Value of the swap fee percentage, as an 18-decimal FP value"},"functionSelector":"a0e8f5ac","id":3352,"implemented":false,"kind":"function","modifiers":[],"name":"onComputeDynamicSwapFeePercentage","nameLocation":"13052:33:17","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"params","nameLocation":"13119:6:17","nodeType":"VariableDeclaration","scope":3352,"src":"13095:30:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8404_calldata_ptr","typeString":"struct PoolSwapParams"},"typeName":{"id":3340,"nodeType":"UserDefinedTypeName","pathNode":{"id":3339,"name":"PoolSwapParams","nameLocations":["13095:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":8404,"src":"13095:14:17"},"referencedDeclaration":8404,"src":"13095:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8404_storage_ptr","typeString":"struct PoolSwapParams"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"pool","nameLocation":"13143:4:17","nodeType":"VariableDeclaration","scope":3352,"src":"13135:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3342,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"staticSwapFeePercentage","nameLocation":"13165:23:17","nodeType":"VariableDeclaration","scope":3352,"src":"13157:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"13157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13085:109:17"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"success","nameLocation":"13223:7:17","nodeType":"VariableDeclaration","scope":3352,"src":"13218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3347,"name":"bool","nodeType":"ElementaryTypeName","src":"13218:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"dynamicSwapFeePercentage","nameLocation":"13240:24:17","nodeType":"VariableDeclaration","scope":3352,"src":"13232:32:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13232:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13217:48:17"},"scope":3353,"src":"13043:223:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3354,"src":"975:12293:17","usedErrors":[],"usedEvents":[]}],"src":"46:13223:17"},"id":17},"contracts/IProtocolFeeController.sol":{"ast":{"absolutePath":"contracts/IProtocolFeeController.sol","exportedSymbols":{"IERC20":[337],"IProtocolFeeController":[3691],"IVault":[4357]},"id":3692,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3355,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3692,"sourceUnit":338,"src":"72:72:18","symbolAliases":[{"foreign":{"id":3356,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"81:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":3359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3692,"sourceUnit":4358,"src":"146:38:18","symbolAliases":[{"foreign":{"id":3358,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"155:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProtocolFeeController","contractDependencies":[],"contractKind":"interface","documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"186:80:18","text":"@notice Contract that handles protocol and pool creator fees for the Vault."},"fullyImplemented":false,"id":3691,"linearizedBaseContracts":[3691],"name":"IProtocolFeeController","nameLocation":"276:22:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3361,"nodeType":"StructuredDocumentation","src":"305:157:18","text":" @notice Emitted when the protocol swap fee percentage is updated.\n @param swapFeePercentage The updated protocol swap fee percentage"},"eventSelector":"bf5ac0fc89bbf8819be79f280146b65ea2af2a9705cd9cfe0c9d93f6e87f307d","id":3365,"name":"GlobalProtocolSwapFeePercentageChanged","nameLocation":"473:38:18","nodeType":"EventDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"indexed":false,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"520:17:18","nodeType":"VariableDeclaration","scope":3365,"src":"512:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"511:27:18"},"src":"467:72:18"},{"anonymous":false,"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"545:160:18","text":" @notice Emitted when the protocol yield fee percentage is updated.\n @param yieldFeePercentage The updated protocol yield fee percentage"},"eventSelector":"48c5c3ccec54c4e0ea08d83d838fa9bb725eb0b52c591cb00bd6e63bca8c44f6","id":3370,"name":"GlobalProtocolYieldFeePercentageChanged","nameLocation":"716:39:18","nodeType":"EventDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"indexed":false,"mutability":"mutable","name":"yieldFeePercentage","nameLocation":"764:18:18","nodeType":"VariableDeclaration","scope":3370,"src":"756:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:28:18"},"src":"710:74:18"},{"anonymous":false,"documentation":{"id":3371,"nodeType":"StructuredDocumentation","src":"790:245:18","text":" @notice Emitted when the protocol swap fee percentage is updated for a specific pool.\n @param pool The pool whose protocol swap fee will be changed\n @param swapFeePercentage The updated protocol swap fee percentage"},"eventSelector":"97cff4b6e6d80e307faab8b730d9f69264e860f2e0e10cfb8cdaf8a2f44e839e","id":3377,"name":"ProtocolSwapFeePercentageChanged","nameLocation":"1046:32:18","nodeType":"EventDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1095:4:18","nodeType":"VariableDeclaration","scope":3377,"src":"1079:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3375,"indexed":false,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"1109:17:18","nodeType":"VariableDeclaration","scope":3377,"src":"1101:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:49:18"},"src":"1040:88:18"},{"anonymous":false,"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"1134:249:18","text":" @notice Emitted when the protocol yield fee percentage is updated for a specific pool.\n @param pool The pool whose protocol yield fee will be changed\n @param yieldFeePercentage The updated protocol yield fee percentage"},"eventSelector":"af47449d1c3597ccc9f5ec3acad03cef57aa90a719000441b320687087948efd","id":3384,"name":"ProtocolYieldFeePercentageChanged","nameLocation":"1394:33:18","nodeType":"EventDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1444:4:18","nodeType":"VariableDeclaration","scope":3384,"src":"1428:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3379,"name":"address","nodeType":"ElementaryTypeName","src":"1428:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3382,"indexed":false,"mutability":"mutable","name":"yieldFeePercentage","nameLocation":"1458:18:18","nodeType":"VariableDeclaration","scope":3384,"src":"1450:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1427:50:18"},"src":"1388:90:18"},{"anonymous":false,"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"1484:267:18","text":" @notice Emitted when the pool creator swap fee percentage of a pool is updated.\n @param pool The pool whose pool creator swap fee will be changed\n @param poolCreatorSwapFeePercentage The new pool creator swap fee percentage for the pool"},"eventSelector":"b7cf36369623c01ed7b2eafc4025224e924a2836d5fb49428a0f65417586bf5c","id":3391,"name":"PoolCreatorSwapFeePercentageChanged","nameLocation":"1762:35:18","nodeType":"EventDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1814:4:18","nodeType":"VariableDeclaration","scope":3391,"src":"1798:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3389,"indexed":false,"mutability":"mutable","name":"poolCreatorSwapFeePercentage","nameLocation":"1828:28:18","nodeType":"VariableDeclaration","scope":3391,"src":"1820:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1797:60:18"},"src":"1756:102:18"},{"anonymous":false,"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"1864:271:18","text":" @notice Emitted when the pool creator yield fee percentage of a pool is updated.\n @param pool The pool whose pool creator yield fee will be changed\n @param poolCreatorYieldFeePercentage The new pool creator yield fee percentage for the pool"},"eventSelector":"47f70ddbc624c299cef7841aaea0a86b677c800203e953104e958c9ec9bdab34","id":3398,"name":"PoolCreatorYieldFeePercentageChanged","nameLocation":"2146:36:18","nodeType":"EventDefinition","parameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2199:4:18","nodeType":"VariableDeclaration","scope":3398,"src":"2183:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3393,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3396,"indexed":false,"mutability":"mutable","name":"poolCreatorYieldFeePercentage","nameLocation":"2213:29:18","nodeType":"VariableDeclaration","scope":3398,"src":"2205:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:61:18"},"src":"2140:104:18"},{"anonymous":false,"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"2250:560:18","text":" @notice Logs the collection of protocol swap fees in a specific token and amount.\n @dev Note that since charging protocol fees (i.e., distributing tokens between pool and fee balances) occurs\n in the Vault, but fee collection happens in the ProtocolFeeController, the swap fees reported here may encompass\n multiple operations.\n @param pool The pool on which the swap fee was charged\n @param token The token in which the swap fee was charged\n @param amount The amount of the token collected in fees"},"eventSelector":"ae7ebad9fc3d1d17965f063fa520d393595e2ef6c8e22ae8413b60900444e19f","id":3408,"name":"ProtocolSwapFeeCollected","nameLocation":"2821:24:18","nodeType":"EventDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2862:4:18","nodeType":"VariableDeclaration","scope":3408,"src":"2846:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3404,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"2883:5:18","nodeType":"VariableDeclaration","scope":3408,"src":"2868:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3403,"nodeType":"UserDefinedTypeName","pathNode":{"id":3402,"name":"IERC20","nameLocations":["2868:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2868:6:18"},"referencedDeclaration":337,"src":"2868:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3406,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2898:6:18","nodeType":"VariableDeclaration","scope":3408,"src":"2890:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:60:18"},"src":"2815:91:18"},{"anonymous":false,"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"2912:564:18","text":" @notice Logs the collection of protocol yield fees in a specific token and amount.\n @dev Note that since charging protocol fees (i.e., distributing tokens between pool and fee balances) occurs\n in the Vault, but fee collection happens in the ProtocolFeeController, the yield fees reported here may encompass\n multiple operations.\n @param pool The pool on which the yield fee was charged\n @param token The token in which the yield fee was charged\n @param amount The amount of the token collected in fees"},"eventSelector":"e505e41b0d437b47350a9990142ccf38acb11ffa0e5af8f973b9e172f3d5d5e2","id":3418,"name":"ProtocolYieldFeeCollected","nameLocation":"3487:25:18","nodeType":"EventDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"3529:4:18","nodeType":"VariableDeclaration","scope":3418,"src":"3513:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3410,"name":"address","nodeType":"ElementaryTypeName","src":"3513:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3414,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3550:5:18","nodeType":"VariableDeclaration","scope":3418,"src":"3535:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"IERC20","nameLocations":["3535:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3535:6:18"},"referencedDeclaration":337,"src":"3535:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3416,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3565:6:18","nodeType":"VariableDeclaration","scope":3418,"src":"3557:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3557:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3512:60:18"},"src":"3481:92:18"},{"anonymous":false,"documentation":{"id":3419,"nodeType":"StructuredDocumentation","src":"3579:333:18","text":" @notice Logs the withdrawal of protocol fees in a specific token and amount.\n @param pool The pool from which protocol fees are being withdrawn\n @param token The token being withdrawn\n @param recipient The recipient of the funds\n @param amount The amount of the fee token that was withdrawn"},"eventSelector":"1c2887fcb98f75e66bb9a36311f2d3d22fb204e6362106f30e9df7eaf63131b5","id":3430,"name":"ProtocolFeesWithdrawn","nameLocation":"3923:21:18","nodeType":"EventDefinition","parameters":{"id":3429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"3961:4:18","nodeType":"VariableDeclaration","scope":3430,"src":"3945:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3420,"name":"address","nodeType":"ElementaryTypeName","src":"3945:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3424,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3982:5:18","nodeType":"VariableDeclaration","scope":3430,"src":"3967:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3423,"nodeType":"UserDefinedTypeName","pathNode":{"id":3422,"name":"IERC20","nameLocations":["3967:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3967:6:18"},"referencedDeclaration":337,"src":"3967:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3426,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4005:9:18","nodeType":"VariableDeclaration","scope":3430,"src":"3989:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3425,"name":"address","nodeType":"ElementaryTypeName","src":"3989:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3428,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4024:6:18","nodeType":"VariableDeclaration","scope":3430,"src":"4016:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4016:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3944:87:18"},"src":"3917:115:18"},{"anonymous":false,"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"4038:398:18","text":" @notice Logs the withdrawal of pool creator fees in a specific token and amount.\n @param pool The pool from which pool creator fees are being withdrawn\n @param token The token being withdrawn\n @param recipient The recipient of the funds (the pool creator if permissionless, or another account)\n @param amount The amount of the fee token that was withdrawn"},"eventSelector":"938f3a3a03ee425ccc0f8010b0468938cbafd3750fa43bbdf09c6f75e97e51f9","id":3442,"name":"PoolCreatorFeesWithdrawn","nameLocation":"4447:24:18","nodeType":"EventDefinition","parameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"4497:4:18","nodeType":"VariableDeclaration","scope":3442,"src":"4481:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"4481:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3436,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"4526:5:18","nodeType":"VariableDeclaration","scope":3442,"src":"4511:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3435,"nodeType":"UserDefinedTypeName","pathNode":{"id":3434,"name":"IERC20","nameLocations":["4511:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"4511:6:18"},"referencedDeclaration":337,"src":"4511:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3438,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4557:9:18","nodeType":"VariableDeclaration","scope":3442,"src":"4541:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3437,"name":"address","nodeType":"ElementaryTypeName","src":"4541:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3440,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4584:6:18","nodeType":"VariableDeclaration","scope":3442,"src":"4576:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"4576:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4471:125:18"},"src":"4441:156:18"},{"anonymous":false,"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"4603:529:18","text":" @notice Emitted on pool registration with the initial aggregate swap fee percentage, for off-chain processes.\n @dev If the pool is registered as protocol fee exempt, this will be zero (until changed). Otherwise, it will\n equal the current global swap fee percentage.\n @param pool The pool being registered\n @param aggregateSwapFeePercentage The initial aggregate swap fee percentage\n @param isProtocolFeeExempt True if the pool is exempt from taking protocol fees initially"},"eventSelector":"a34ad86562f9716c2f1e723934cc63f44a9b4695cb8535c30dd8308d03a78564","id":3451,"name":"InitialPoolAggregateSwapFeePercentage","nameLocation":"5143:37:18","nodeType":"EventDefinition","parameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"5206:4:18","nodeType":"VariableDeclaration","scope":3451,"src":"5190:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"5190:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3447,"indexed":false,"mutability":"mutable","name":"aggregateSwapFeePercentage","nameLocation":"5228:26:18","nodeType":"VariableDeclaration","scope":3451,"src":"5220:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5220:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3449,"indexed":false,"mutability":"mutable","name":"isProtocolFeeExempt","nameLocation":"5269:19:18","nodeType":"VariableDeclaration","scope":3451,"src":"5264:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3448,"name":"bool","nodeType":"ElementaryTypeName","src":"5264:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5180:114:18"},"src":"5137:158:18"},{"anonymous":false,"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"5301:533:18","text":" @notice Emitted on pool registration with the initial aggregate yield fee percentage, for off-chain processes.\n @dev If the pool is registered as protocol fee exempt, this will be zero (until changed). Otherwise, it will\n equal the current global yield fee percentage.\n @param pool The pool being registered\n @param aggregateYieldFeePercentage The initial aggregate yield fee percentage\n @param isProtocolFeeExempt True if the pool is exempt from taking protocol fees initially"},"eventSelector":"ce1d009285405b74cf77294916c17664de2c84eef81225c71f265f823b358bcb","id":3460,"name":"InitialPoolAggregateYieldFeePercentage","nameLocation":"5845:38:18","nodeType":"EventDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"5909:4:18","nodeType":"VariableDeclaration","scope":3460,"src":"5893:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3453,"name":"address","nodeType":"ElementaryTypeName","src":"5893:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3456,"indexed":false,"mutability":"mutable","name":"aggregateYieldFeePercentage","nameLocation":"5931:27:18","nodeType":"VariableDeclaration","scope":3460,"src":"5923:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"5923:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3458,"indexed":false,"mutability":"mutable","name":"isProtocolFeeExempt","nameLocation":"5973:19:18","nodeType":"VariableDeclaration","scope":3460,"src":"5968:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3457,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5883:115:18"},"src":"5839:160:18"},{"anonymous":false,"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"6005:738:18","text":" @notice Emitted as a convenience during pool registration, more focused than the Vault's `PoolRegistered` event.\n @dev The `PoolRegistered` event includes the `roleAccounts` field, which also records the pool creator, but this\n simpler event is also provided for convenience. Though `InitialPoolAggregateSwapFeePercentage` and its yield fee\n counterpart also include the protocol fee exemption flag, we might as well include it here as well.\n @param pool The address of the pool being registered\n @param poolCreator The address of the pool creator (non-zero, or the event would not be emitted)\n @param  protocolFeeExempt True if the pool is initially exempt from protocol fees"},"eventSelector":"d9725c347996d9a5d6001b5f7c2a2515d365258012fceff4f49e84310ed07912","id":3469,"name":"PoolRegisteredWithFeeController","nameLocation":"6754:31:18","nodeType":"EventDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"6802:4:18","nodeType":"VariableDeclaration","scope":3469,"src":"6786:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"6786:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3465,"indexed":true,"mutability":"mutable","name":"poolCreator","nameLocation":"6824:11:18","nodeType":"VariableDeclaration","scope":3469,"src":"6808:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3464,"name":"address","nodeType":"ElementaryTypeName","src":"6808:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3467,"indexed":false,"mutability":"mutable","name":"protocolFeeExempt","nameLocation":"6842:17:18","nodeType":"VariableDeclaration","scope":3469,"src":"6837:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3466,"name":"bool","nodeType":"ElementaryTypeName","src":"6837:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:75:18"},"src":"6748:113:18"},{"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"6867:219:18","text":" @notice Error raised when the protocol swap fee percentage exceeds the maximum allowed value.\n @dev Note that this is checked for both the global and pool-specific protocol swap fee percentages."},"errorSelector":"7e6eb7fb","id":3472,"name":"ProtocolSwapFeePercentageTooHigh","nameLocation":"7097:32:18","nodeType":"ErrorDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[],"src":"7129:2:18"},"src":"7091:41:18"},{"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"7138:221:18","text":" @notice Error raised when the protocol yield fee percentage exceeds the maximum allowed value.\n @dev Note that this is checked for both the global and pool-specific protocol yield fee percentages."},"errorSelector":"a7849e8e","id":3475,"name":"ProtocolYieldFeePercentageTooHigh","nameLocation":"7370:33:18","nodeType":"ErrorDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[],"src":"7403:2:18"},"src":"7364:42:18"},{"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"7412:156:18","text":" @notice Error raised if there is no pool creator on a withdrawal attempt from the given pool.\n @param pool The pool with no creator"},"errorSelector":"8bcbf353","id":3480,"name":"PoolCreatorNotRegistered","nameLocation":"7579:24:18","nodeType":"ErrorDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"pool","nameLocation":"7612:4:18","nodeType":"VariableDeclaration","scope":3480,"src":"7604:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3477,"name":"address","nodeType":"ElementaryTypeName","src":"7604:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7603:14:18"},"src":"7573:45:18"},{"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"7624:236:18","text":" @notice Error raised if the wrong account attempts to withdraw pool creator fees.\n @param caller The account attempting to withdraw pool creator fees\n @param pool The pool the caller tried to withdraw from"},"errorSelector":"fbecdbf4","id":3487,"name":"CallerIsNotPoolCreator","nameLocation":"7871:22:18","nodeType":"ErrorDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"caller","nameLocation":"7902:6:18","nodeType":"VariableDeclaration","scope":3487,"src":"7894:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"7894:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"pool","nameLocation":"7918:4:18","nodeType":"VariableDeclaration","scope":3487,"src":"7910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"7910:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7893:30:18"},"src":"7865:59:18"},{"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"7930:110:18","text":"@notice Error raised when the pool creator swap or yield fee percentage exceeds the maximum allowed value."},"errorSelector":"0370da74","id":3490,"name":"PoolCreatorFeePercentageTooHigh","nameLocation":"8051:31:18","nodeType":"ErrorDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[],"src":"8082:2:18"},"src":"8045:40:18"},{"documentation":{"id":3491,"nodeType":"StructuredDocumentation","src":"8091:109:18","text":" @notice Get the address of the main Vault contract.\n @return vault The Vault address"},"functionSelector":"fbfa77cf","id":3497,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"8214:5:18","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[],"src":"8219:2:18"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3497,"src":"8245:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":3494,"nodeType":"UserDefinedTypeName","pathNode":{"id":3493,"name":"IVault","nameLocations":["8245:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"8245:6:18"},"referencedDeclaration":4357,"src":"8245:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"}],"src":"8244:8:18"},"scope":3691,"src":"8205:48:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"8259:131:18","text":" @notice Collects aggregate fees from the Vault for a given pool.\n @param pool The pool with aggregate fees"},"functionSelector":"8f4ab9ca","id":3503,"implemented":false,"kind":"function","modifiers":[],"name":"collectAggregateFees","nameLocation":"8404:20:18","nodeType":"FunctionDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"pool","nameLocation":"8433:4:18","nodeType":"VariableDeclaration","scope":3503,"src":"8425:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3499,"name":"address","nodeType":"ElementaryTypeName","src":"8425:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8424:14:18"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[],"src":"8447:0:18"},"scope":3691,"src":"8395:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"8454:156:18","text":" @notice Getter for the current global protocol swap fee.\n @return protocolSwapFeePercentage The global protocol swap fee percentage"},"functionSelector":"7869ee18","id":3509,"implemented":false,"kind":"function","modifiers":[],"name":"getGlobalProtocolSwapFeePercentage","nameLocation":"8624:34:18","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[],"src":"8658:2:18"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"protocolSwapFeePercentage","nameLocation":"8692:25:18","nodeType":"VariableDeclaration","scope":3509,"src":"8684:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"8684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8683:35:18"},"scope":3691,"src":"8615:104:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"8725:159:18","text":" @notice Getter for the current global protocol yield fee.\n @return protocolYieldFeePercentage The global protocol yield fee percentage"},"functionSelector":"55fb76af","id":3515,"implemented":false,"kind":"function","modifiers":[],"name":"getGlobalProtocolYieldFeePercentage","nameLocation":"8898:35:18","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[],"src":"8933:2:18"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"protocolYieldFeePercentage","nameLocation":"8967:26:18","nodeType":"VariableDeclaration","scope":3515,"src":"8959:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"8959:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8958:36:18"},"scope":3691,"src":"8889:106:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3516,"nodeType":"StructuredDocumentation","src":"9001:207:18","text":" @notice Getter for pool registration flag.\n @param pool The address of the pool\n @return isRegistered True if the pool configuration has been set (e.g., through `registerPool`)"},"functionSelector":"c673bdaf","id":3523,"implemented":false,"kind":"function","modifiers":[],"name":"isPoolRegistered","nameLocation":"9222:16:18","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"pool","nameLocation":"9247:4:18","nodeType":"VariableDeclaration","scope":3523,"src":"9239:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3517,"name":"address","nodeType":"ElementaryTypeName","src":"9239:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9238:14:18"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3523,"src":"9276:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3520,"name":"bool","nodeType":"ElementaryTypeName","src":"9276:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9275:6:18"},"scope":3691,"src":"9213:69:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"9288:292:18","text":" @notice Getter for the current protocol swap fee for a given pool.\n @param pool The address of the pool\n @return protocolSwapFeePercentage The protocol swap fee percentage for the given pool\n @return isOverride True if the protocol fee has been overridden"},"functionSelector":"5c15a0b4","id":3533,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolProtocolSwapFeeInfo","nameLocation":"9594:26:18","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"pool","nameLocation":"9638:4:18","nodeType":"VariableDeclaration","scope":3533,"src":"9630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3525,"name":"address","nodeType":"ElementaryTypeName","src":"9630:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9620:28:18"},"returnParameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"protocolSwapFeePercentage","nameLocation":"9680:25:18","nodeType":"VariableDeclaration","scope":3533,"src":"9672:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"9672:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"isOverride","nameLocation":"9712:10:18","nodeType":"VariableDeclaration","scope":3533,"src":"9707:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3530,"name":"bool","nodeType":"ElementaryTypeName","src":"9707:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9671:52:18"},"scope":3691,"src":"9585:139:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3534,"nodeType":"StructuredDocumentation","src":"9730:295:18","text":" @notice Getter for the current protocol yield fee for a given pool.\n @param pool The address of the pool\n @return protocolYieldFeePercentage The protocol yield fee percentage for the given pool\n @return isOverride True if the protocol fee has been overridden"},"functionSelector":"7a2b97dc","id":3543,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolProtocolYieldFeeInfo","nameLocation":"10039:27:18","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"pool","nameLocation":"10084:4:18","nodeType":"VariableDeclaration","scope":3543,"src":"10076:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3535,"name":"address","nodeType":"ElementaryTypeName","src":"10076:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10066:28:18"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"protocolYieldFeePercentage","nameLocation":"10126:26:18","nodeType":"VariableDeclaration","scope":3543,"src":"10118:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"10118:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"isOverride","nameLocation":"10159:10:18","nodeType":"VariableDeclaration","scope":3543,"src":"10154:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3540,"name":"bool","nodeType":"ElementaryTypeName","src":"10154:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10117:53:18"},"scope":3691,"src":"10030:141:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"10177:249:18","text":" @notice Getter for the current pool creator swap fee percentage for a given pool.\n @param pool The address of the pool\n @return poolCreatorSwapFeePercentage The pool creator swap fee component of the aggregate swap fee"},"functionSelector":"0b8e059b","id":3551,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolCreatorSwapFeePercentage","nameLocation":"10440:31:18","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"pool","nameLocation":"10480:4:18","nodeType":"VariableDeclaration","scope":3551,"src":"10472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"10472:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10471:14:18"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3551,"src":"10509:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"10509:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10508:9:18"},"scope":3691,"src":"10431:87:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"10524:252:18","text":" @notice Getter for the current pool creator yield fee percentage for a given pool.\n @param pool The address of the pool\n @return poolCreatorSwapFeePercentage The pool creator yield fee component of the aggregate yield fee"},"functionSelector":"0252aab5","id":3559,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolCreatorYieldFeePercentage","nameLocation":"10790:32:18","nodeType":"FunctionDefinition","parameters":{"id":3555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"mutability":"mutable","name":"pool","nameLocation":"10831:4:18","nodeType":"VariableDeclaration","scope":3559,"src":"10823:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3553,"name":"address","nodeType":"ElementaryTypeName","src":"10823:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10822:14:18"},"returnParameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3559,"src":"10860:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"10860:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10859:9:18"},"scope":3691,"src":"10781:88:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"10875:344:18","text":" @notice Returns the amount of each pool token allocated to the protocol for withdrawal.\n @dev Includes both swap and yield fees.\n @param pool The address of the pool on which fees were collected\n @return feeAmounts The total amounts of each token available for withdrawal, sorted in token registration order"},"functionSelector":"8df44c54","id":3568,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeeAmounts","nameLocation":"11233:21:18","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"pool","nameLocation":"11263:4:18","nodeType":"VariableDeclaration","scope":3568,"src":"11255:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3561,"name":"address","nodeType":"ElementaryTypeName","src":"11255:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11254:14:18"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"feeAmounts","nameLocation":"11309:10:18","nodeType":"VariableDeclaration","scope":3568,"src":"11292:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3565,"nodeType":"ArrayTypeName","src":"11292:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11291:29:18"},"scope":3691,"src":"11224:97:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"11327:348:18","text":" @notice Returns the amount of each pool token allocated to the pool creator for withdrawal.\n @dev Includes both swap and yield fees.\n @param pool The address of the pool on which fees were collected\n @return feeAmounts The total amounts of each token available for withdrawal, sorted in token registration order"},"functionSelector":"9e95f3fd","id":3577,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolCreatorFeeAmounts","nameLocation":"11689:24:18","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"pool","nameLocation":"11722:4:18","nodeType":"VariableDeclaration","scope":3577,"src":"11714:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3570,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11713:14:18"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"feeAmounts","nameLocation":"11768:10:18","nodeType":"VariableDeclaration","scope":3577,"src":"11751:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"11751:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ArrayTypeName","src":"11751:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11750:29:18"},"scope":3691,"src":"11680:100:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"11786:1445:18","text":" @notice Returns a calculated aggregate percentage from protocol and pool creator fee percentages.\n @dev Not tied to any particular pool; this just performs the low-level \"additive fee\" calculation. Note that\n pool creator fees are calculated based on creatorAndLpFees, and not in totalFees. Since aggregate fees are\n stored in the Vault with 24-bit precision, this will truncate any values that require greater precision.\n It is expected that pool creators will negotiate with the DAO and agree on reasonable values for these fee\n components, but the truncation ensures it will not revert for any valid set of fee percentages.\n See example below:\n tokenOutAmount = 10000; poolSwapFeePct = 10%; protocolFeePct = 40%; creatorFeePct = 60%\n totalFees = tokenOutAmount * poolSwapFeePct = 10000 * 10% = 1000\n protocolFees = totalFees * protocolFeePct = 1000 * 40% = 400\n creatorAndLpFees = totalFees - protocolFees = 1000 - 400 = 600\n creatorFees = creatorAndLpFees * creatorFeePct = 600 * 60% = 360\n lpFees (will stay in the pool) = creatorAndLpFees - creatorFees = 600 - 360 = 240\n @param protocolFeePercentage The protocol portion of the aggregate fee percentage\n @param poolCreatorFeePercentage The pool creator portion of the aggregate fee percentage\n @return aggregateFeePercentage The computed aggregate percentage"},"functionSelector":"0ddd60c6","id":3587,"implemented":false,"kind":"function","modifiers":[],"name":"computeAggregateFeePercentage","nameLocation":"13245:29:18","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"protocolFeePercentage","nameLocation":"13292:21:18","nodeType":"VariableDeclaration","scope":3587,"src":"13284:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"13284:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"poolCreatorFeePercentage","nameLocation":"13331:24:18","nodeType":"VariableDeclaration","scope":3587,"src":"13323:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"13323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13274:87:18"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"aggregateFeePercentage","nameLocation":"13393:22:18","nodeType":"VariableDeclaration","scope":3587,"src":"13385:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"13385:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13384:32:18"},"scope":3691,"src":"13236:181:18","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"13423:398:18","text":" @notice Override the protocol swap fee percentage for a specific pool.\n @dev This is a permissionless call, and will set the pool's fee to the current global fee, if it is different\n from the current value, and the fee is not controlled by governance (i.e., has never been overridden).\n @param pool The pool for which we are setting the protocol swap fee"},"functionSelector":"71ecc8fb","id":3593,"implemented":false,"kind":"function","modifiers":[],"name":"updateProtocolSwapFeePercentage","nameLocation":"13835:31:18","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"pool","nameLocation":"13875:4:18","nodeType":"VariableDeclaration","scope":3593,"src":"13867:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"13867:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13866:14:18"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[],"src":"13889:0:18"},"scope":3691,"src":"13826:64:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"13896:400:18","text":" @notice Override the protocol yield fee percentage for a specific pool.\n @dev This is a permissionless call, and will set the pool's fee to the current global fee, if it is different\n from the current value, and the fee is not controlled by governance (i.e., has never been overridden).\n @param pool The pool for which we are setting the protocol yield fee"},"functionSelector":"71447ea8","id":3599,"implemented":false,"kind":"function","modifiers":[],"name":"updateProtocolYieldFeePercentage","nameLocation":"14310:32:18","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"pool","nameLocation":"14351:4:18","nodeType":"VariableDeclaration","scope":3599,"src":"14343:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3595,"name":"address","nodeType":"ElementaryTypeName","src":"14343:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14342:14:18"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[],"src":"14365:0:18"},"scope":3691,"src":"14301:65:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"14590:826:18","text":" @notice Add pool-specific entries to the protocol swap and yield percentages.\n @dev This must be called from the Vault during pool registration. It will initialize the pool to the global\n protocol fee percentage values (or 0, if the `protocolFeeExempt` flags is set), and return the initial aggregate\n fee percentages, based on an initial pool creator fee of 0.\n @param pool The address of the pool being registered\n @param poolCreator The address of the pool creator (or 0 if there won't be a pool creator fee)\n @param protocolFeeExempt If true, the pool is initially exempt from protocol fees\n @return aggregateSwapFeePercentage The initial aggregate swap fee percentage\n @return aggregateYieldFeePercentage The initial aggregate yield fee percentage"},"functionSelector":"77ff76e7","id":3613,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nameLocation":"15430:12:18","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"pool","nameLocation":"15460:4:18","nodeType":"VariableDeclaration","scope":3613,"src":"15452:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"15452:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"poolCreator","nameLocation":"15482:11:18","nodeType":"VariableDeclaration","scope":3613,"src":"15474:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"15474:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"protocolFeeExempt","nameLocation":"15508:17:18","nodeType":"VariableDeclaration","scope":3613,"src":"15503:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3605,"name":"bool","nodeType":"ElementaryTypeName","src":"15503:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15442:89:18"},"returnParameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"aggregateSwapFeePercentage","nameLocation":"15558:26:18","nodeType":"VariableDeclaration","scope":3613,"src":"15550:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"aggregateYieldFeePercentage","nameLocation":"15594:27:18","nodeType":"VariableDeclaration","scope":3613,"src":"15586:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"15586:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15549:73:18"},"scope":3691,"src":"15421:202:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"15629:175:18","text":" @notice Set the global protocol swap fee percentage, used by standard pools.\n @param newProtocolSwapFeePercentage The new protocol swap fee percentage"},"functionSelector":"8a3c5c69","id":3619,"implemented":false,"kind":"function","modifiers":[],"name":"setGlobalProtocolSwapFeePercentage","nameLocation":"15818:34:18","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"newProtocolSwapFeePercentage","nameLocation":"15861:28:18","nodeType":"VariableDeclaration","scope":3619,"src":"15853:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"15853:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15852:38:18"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[],"src":"15899:0:18"},"scope":3691,"src":"15809:91:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"15906:178:18","text":" @notice Set the global protocol yield fee percentage, used by standard pools.\n @param newProtocolYieldFeePercentage The new protocol yield fee percentage"},"functionSelector":"a93df2a4","id":3625,"implemented":false,"kind":"function","modifiers":[],"name":"setGlobalProtocolYieldFeePercentage","nameLocation":"16098:35:18","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"newProtocolYieldFeePercentage","nameLocation":"16142:29:18","nodeType":"VariableDeclaration","scope":3625,"src":"16134:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"16134:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16133:39:18"},"returnParameters":{"id":3624,"nodeType":"ParameterList","parameters":[],"src":"16181:0:18"},"scope":3691,"src":"16089:93:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"16188:272:18","text":" @notice Override the protocol swap fee percentage for a specific pool.\n @param pool The address of the pool for which we are setting the protocol swap fee\n @param newProtocolSwapFeePercentage The new protocol swap fee percentage for the pool"},"functionSelector":"fd267f39","id":3633,"implemented":false,"kind":"function","modifiers":[],"name":"setProtocolSwapFeePercentage","nameLocation":"16474:28:18","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"pool","nameLocation":"16511:4:18","nodeType":"VariableDeclaration","scope":3633,"src":"16503:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3627,"name":"address","nodeType":"ElementaryTypeName","src":"16503:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"newProtocolSwapFeePercentage","nameLocation":"16525:28:18","nodeType":"VariableDeclaration","scope":3633,"src":"16517:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"16517:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16502:52:18"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[],"src":"16563:0:18"},"scope":3691,"src":"16465:99:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3634,"nodeType":"StructuredDocumentation","src":"16570:276:18","text":" @notice Override the protocol yield fee percentage for a specific pool.\n @param pool The address of the pool for which we are setting the protocol yield fee\n @param newProtocolYieldFeePercentage The new protocol yield fee percentage for the pool"},"functionSelector":"abaa3356","id":3641,"implemented":false,"kind":"function","modifiers":[],"name":"setProtocolYieldFeePercentage","nameLocation":"16860:29:18","nodeType":"FunctionDefinition","parameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"pool","nameLocation":"16898:4:18","nodeType":"VariableDeclaration","scope":3641,"src":"16890:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3635,"name":"address","nodeType":"ElementaryTypeName","src":"16890:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"newProtocolYieldFeePercentage","nameLocation":"16912:29:18","nodeType":"VariableDeclaration","scope":3641,"src":"16904:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"16904:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16889:53:18"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[],"src":"16951:0:18"},"scope":3691,"src":"16851:101:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3642,"nodeType":"StructuredDocumentation","src":"16958:623:18","text":" @notice Assigns a new pool creator swap fee percentage to the specified pool.\n @dev Fees are divided between the protocol, pool creator, and LPs. The pool creator percentage is applied to\n the \"net\" amount after protocol fees, and divides the remainder between the pool creator and LPs. If the\n pool creator fee is near 100%, almost none of the fee amount remains in the pool for LPs.\n @param pool The address of the pool for which the pool creator fee will be changed\n @param poolCreatorSwapFeePercentage The new pool creator swap fee percentage to apply to the pool"},"functionSelector":"1377c16c","id":3649,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolCreatorSwapFeePercentage","nameLocation":"17595:31:18","nodeType":"FunctionDefinition","parameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"pool","nameLocation":"17635:4:18","nodeType":"VariableDeclaration","scope":3649,"src":"17627:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"17627:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"poolCreatorSwapFeePercentage","nameLocation":"17649:28:18","nodeType":"VariableDeclaration","scope":3649,"src":"17641:36:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"17641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17626:52:18"},"returnParameters":{"id":3648,"nodeType":"ParameterList","parameters":[],"src":"17687:0:18"},"scope":3691,"src":"17586:102:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3650,"nodeType":"StructuredDocumentation","src":"17694:626:18","text":" @notice Assigns a new pool creator yield fee percentage to the specified pool.\n @dev Fees are divided between the protocol, pool creator, and LPs. The pool creator percentage is applied to\n the \"net\" amount after protocol fees, and divides the remainder between the pool creator and LPs. If the\n pool creator fee is near 100%, almost none of the fee amount remains in the pool for LPs.\n @param pool The address of the pool for which the pool creator fee will be changed\n @param poolCreatorYieldFeePercentage The new pool creator yield fee percentage to apply to the pool"},"functionSelector":"3af52712","id":3657,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolCreatorYieldFeePercentage","nameLocation":"18334:32:18","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"pool","nameLocation":"18375:4:18","nodeType":"VariableDeclaration","scope":3657,"src":"18367:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"18367:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"poolCreatorYieldFeePercentage","nameLocation":"18389:29:18","nodeType":"VariableDeclaration","scope":3657,"src":"18381:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"18381:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18366:53:18"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"18428:0:18"},"scope":3691,"src":"18325:104:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3658,"nodeType":"StructuredDocumentation","src":"18435:296:18","text":" @notice Withdraw collected protocol fees for a given pool (all tokens). This is a permissioned function.\n @dev Sends swap and yield protocol fees to the recipient.\n @param pool The pool on which fees were collected\n @param recipient Address to send the tokens"},"functionSelector":"cf7b287f","id":3665,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawProtocolFees","nameLocation":"18745:20:18","nodeType":"FunctionDefinition","parameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"pool","nameLocation":"18774:4:18","nodeType":"VariableDeclaration","scope":3665,"src":"18766:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3659,"name":"address","nodeType":"ElementaryTypeName","src":"18766:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"recipient","nameLocation":"18788:9:18","nodeType":"VariableDeclaration","scope":3665,"src":"18780:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"18780:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18765:33:18"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[],"src":"18807:0:18"},"scope":3691,"src":"18736:72:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"18814:339:18","text":" @notice Withdraw collected protocol fees for a given pool and a given token. This is a permissioned function.\n @dev Sends swap and yield protocol fees to the recipient.\n @param pool The pool on which fees were collected\n @param recipient Address to send the tokens\n @param token Token to withdraw"},"functionSelector":"b53a70b2","id":3676,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawProtocolFeesForToken","nameLocation":"19167:28:18","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"pool","nameLocation":"19204:4:18","nodeType":"VariableDeclaration","scope":3676,"src":"19196:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3667,"name":"address","nodeType":"ElementaryTypeName","src":"19196:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"recipient","nameLocation":"19218:9:18","nodeType":"VariableDeclaration","scope":3676,"src":"19210:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3669,"name":"address","nodeType":"ElementaryTypeName","src":"19210:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"token","nameLocation":"19236:5:18","nodeType":"VariableDeclaration","scope":3676,"src":"19229:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3672,"nodeType":"UserDefinedTypeName","pathNode":{"id":3671,"name":"IERC20","nameLocations":["19229:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"19229:6:18"},"referencedDeclaration":337,"src":"19229:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"19195:47:18"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[],"src":"19251:0:18"},"scope":3691,"src":"19158:94:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"19258:291:18","text":" @notice Withdraw collected pool creator fees for a given pool. This is a permissioned function.\n @dev Sends swap and yield pool creator fees to the recipient.\n @param pool The pool on which fees were collected\n @param recipient Address to send the tokens"},"functionSelector":"f7061445","id":3684,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawPoolCreatorFees","nameLocation":"19563:23:18","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"pool","nameLocation":"19595:4:18","nodeType":"VariableDeclaration","scope":3684,"src":"19587:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3678,"name":"address","nodeType":"ElementaryTypeName","src":"19587:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"recipient","nameLocation":"19609:9:18","nodeType":"VariableDeclaration","scope":3684,"src":"19601:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3680,"name":"address","nodeType":"ElementaryTypeName","src":"19601:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19586:33:18"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[],"src":"19628:0:18"},"scope":3691,"src":"19554:75:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"19635:310:18","text":" @notice Withdraw collected pool creator fees for a given pool.\n @dev Sends swap and yield pool creator fees to the registered poolCreator. Since this is a known and immutable\n value, this function is permissionless.\n @param pool The pool on which fees were collected"},"functionSelector":"52f125f0","id":3690,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawPoolCreatorFees","nameLocation":"19959:23:18","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"pool","nameLocation":"19991:4:18","nodeType":"VariableDeclaration","scope":3690,"src":"19983:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"19983:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19982:14:18"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"20005:0:18"},"scope":3691,"src":"19950:56:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3692,"src":"266:19742:18","usedErrors":[3472,3475,3480,3487,3490],"usedEvents":[3365,3370,3377,3384,3391,3398,3408,3418,3430,3442,3451,3460,3469]}],"src":"46:19963:18"},"id":18},"contracts/IRateProvider.sol":{"ast":{"absolutePath":"contracts/IRateProvider.sol","exportedSymbols":{"IRateProvider":[3701]},"id":3702,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3693,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IRateProvider","contractDependencies":[],"contractKind":"interface","documentation":{"id":3694,"nodeType":"StructuredDocumentation","src":"72:56:19","text":"@notice General interface for token exchange rates."},"fullyImplemented":false,"id":3701,"linearizedBaseContracts":[3701],"name":"IRateProvider","nameLocation":"138:13:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"158:573:19","text":" @notice An 18 decimal fixed point number representing the exchange rate of one token to another related token.\n @dev The meaning of this rate depends on the context. Note that there may be an error associated with a token\n rate, and the caller might require a certain rounding direction to ensure correctness. This (legacy) interface\n does not take a rounding direction or return an error, so great care must be taken when interpreting and using\n rates in downstream computations.\n @return rate The current token rate"},"functionSelector":"679aefce","id":3700,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"745:7:19","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[],"src":"752:2:19"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"rate","nameLocation":"786:4:19","nodeType":"VariableDeclaration","scope":3700,"src":"778:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:14:19"},"scope":3701,"src":"736:56:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3702,"src":"128:666:19","usedErrors":[],"usedEvents":[]}],"src":"46:749:19"},"id":19},"contracts/IRouter.sol":{"ast":{"absolutePath":"contracts/IRouter.sol","exportedSymbols":{"AddLiquidityKind":[8439],"IERC20":[337],"IERC4626":[259],"IRouter":[4198],"RemoveLiquidityKind":[8460],"SwapKind":[8367]},"id":4199,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3703,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:20"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":3705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4199,"sourceUnit":260,"src":"72:75:20","symbolAliases":[{"foreign":{"id":3704,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"81:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4199,"sourceUnit":338,"src":"148:72:20","symbolAliases":[{"foreign":{"id":3706,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"157:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":3711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4199,"sourceUnit":8504,"src":"222:83:20","symbolAliases":[{"foreign":{"id":3708,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"231:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3709,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"249:19:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3710,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"270:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":3712,"nodeType":"StructuredDocumentation","src":"307:115:20","text":"@notice User-friendly interface to basic Vault operations: swap, add/remove liquidity, and associated queries."},"fullyImplemented":false,"id":4198,"linearizedBaseContracts":[4198],"name":"IRouter","nameLocation":"432:7:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRouter.InitializeHookParams","documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"661:637:20","text":" @notice Data for the pool initialization hook.\n @param sender Account originating the pool initialization operation\n @param pool Address of the liquidity pool\n @param tokens Pool tokens, in token registration order\n @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n @param minBptAmountOut Minimum amount of pool tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add initial liquidity"},"id":3731,"members":[{"constant":false,"id":3715,"mutability":"mutable","name":"sender","nameLocation":"1349:6:20","nodeType":"VariableDeclaration","scope":3731,"src":"1341:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3714,"name":"address","nodeType":"ElementaryTypeName","src":"1341:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"pool","nameLocation":"1373:4:20","nodeType":"VariableDeclaration","scope":3731,"src":"1365:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3716,"name":"address","nodeType":"ElementaryTypeName","src":"1365:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"tokens","nameLocation":"1396:6:20","nodeType":"VariableDeclaration","scope":3731,"src":"1387:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"IERC20","nameLocations":["1387:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"1387:6:20"},"referencedDeclaration":337,"src":"1387:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":3720,"nodeType":"ArrayTypeName","src":"1387:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"1422:14:20","nodeType":"VariableDeclaration","scope":3731,"src":"1412:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3723,"nodeType":"ArrayTypeName","src":"1412:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"1454:15:20","nodeType":"VariableDeclaration","scope":3731,"src":"1446:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"wethIsEth","nameLocation":"1484:9:20","nodeType":"VariableDeclaration","scope":3731,"src":"1479:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3727,"name":"bool","nodeType":"ElementaryTypeName","src":"1479:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"userData","nameLocation":"1509:8:20","nodeType":"VariableDeclaration","scope":3731,"src":"1503:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3729,"name":"bytes","nodeType":"ElementaryTypeName","src":"1503:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"InitializeHookParams","nameLocation":"1310:20:20","nodeType":"StructDefinition","scope":4198,"src":"1303:221:20","visibility":"public"},{"documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"1530:650:20","text":" @notice Initialize a liquidity pool.\n @param pool Address of the liquidity pool\n @param tokens Pool tokens, in token registration order\n @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n @param minBptAmountOut Minimum amount of pool tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add initial liquidity\n @return bptAmountOut Actual amount of pool tokens minted in exchange for initial liquidity"},"functionSelector":"026b3d95","id":3752,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"2194:10:20","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"pool","nameLocation":"2222:4:20","nodeType":"VariableDeclaration","scope":3752,"src":"2214:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3733,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3738,"mutability":"mutable","name":"tokens","nameLocation":"2252:6:20","nodeType":"VariableDeclaration","scope":3752,"src":"2236:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":3736,"nodeType":"UserDefinedTypeName","pathNode":{"id":3735,"name":"IERC20","nameLocations":["2236:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2236:6:20"},"referencedDeclaration":337,"src":"2236:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":3737,"nodeType":"ArrayTypeName","src":"2236:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"2285:14:20","nodeType":"VariableDeclaration","scope":3752,"src":"2268:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2268:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3740,"nodeType":"ArrayTypeName","src":"2268:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"2317:15:20","nodeType":"VariableDeclaration","scope":3752,"src":"2309:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"wethIsEth","nameLocation":"2347:9:20","nodeType":"VariableDeclaration","scope":3752,"src":"2342:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3744,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"userData","nameLocation":"2379:8:20","nodeType":"VariableDeclaration","scope":3752,"src":"2366:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3746,"name":"bytes","nodeType":"ElementaryTypeName","src":"2366:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2204:189:20"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"bptAmountOut","nameLocation":"2428:12:20","nodeType":"VariableDeclaration","scope":3752,"src":"2420:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2419:22:20"},"scope":4198,"src":"2185:257:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"2660:645:20","text":" @notice Adds liquidity to a pool with proportional token amounts, receiving an exact amount of pool tokens.\n @param pool Address of the liquidity pool\n @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n @param exactBptAmountOut Exact amount of pool tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add liquidity\n @return amountsIn Actual amounts of tokens added, sorted in token registration order"},"functionSelector":"724dba33","id":3770,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityProportional","nameLocation":"3319:24:20","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"pool","nameLocation":"3361:4:20","nodeType":"VariableDeclaration","scope":3770,"src":"3353:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3754,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"3392:12:20","nodeType":"VariableDeclaration","scope":3770,"src":"3375:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ArrayTypeName","src":"3375:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"3422:17:20","nodeType":"VariableDeclaration","scope":3770,"src":"3414:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"wethIsEth","nameLocation":"3454:9:20","nodeType":"VariableDeclaration","scope":3770,"src":"3449:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3761,"name":"bool","nodeType":"ElementaryTypeName","src":"3449:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"userData","nameLocation":"3486:8:20","nodeType":"VariableDeclaration","scope":3770,"src":"3473:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3763,"name":"bytes","nodeType":"ElementaryTypeName","src":"3473:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3343:157:20"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"amountsIn","nameLocation":"3544:9:20","nodeType":"VariableDeclaration","scope":3770,"src":"3527:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3527:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ArrayTypeName","src":"3527:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3526:28:20"},"scope":4198,"src":"3310:245:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"3561:574:20","text":" @notice Adds liquidity to a pool with arbitrary token amounts.\n @param pool Address of the liquidity pool\n @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n @param minBptAmountOut Minimum amount of pool tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add liquidity\n @return bptAmountOut Actual amount of pool tokens received"},"functionSelector":"c08bc851","id":3787,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityUnbalanced","nameLocation":"4149:22:20","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"pool","nameLocation":"4189:4:20","nodeType":"VariableDeclaration","scope":3787,"src":"4181:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3772,"name":"address","nodeType":"ElementaryTypeName","src":"4181:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"4220:14:20","nodeType":"VariableDeclaration","scope":3787,"src":"4203:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"4203:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3775,"nodeType":"ArrayTypeName","src":"4203:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"4252:15:20","nodeType":"VariableDeclaration","scope":3787,"src":"4244:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"4244:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"wethIsEth","nameLocation":"4282:9:20","nodeType":"VariableDeclaration","scope":3787,"src":"4277:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3779,"name":"bool","nodeType":"ElementaryTypeName","src":"4277:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"userData","nameLocation":"4314:8:20","nodeType":"VariableDeclaration","scope":3787,"src":"4301:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3781,"name":"bytes","nodeType":"ElementaryTypeName","src":"4301:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4171:157:20"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"bptAmountOut","nameLocation":"4363:12:20","nodeType":"VariableDeclaration","scope":3787,"src":"4355:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4354:22:20"},"scope":4198,"src":"4140:237:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"4383:605:20","text":" @notice Adds liquidity to a pool in a single token, receiving an exact amount of pool tokens.\n @param pool Address of the liquidity pool\n @param tokenIn Token used to add liquidity\n @param maxAmountIn Maximum amount of tokens to be added\n @param exactBptAmountOut Exact amount of pool tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add liquidity\n @return amountIn Actual amount of tokens added"},"functionSelector":"72657d17","id":3806,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquiditySingleTokenExactOut","nameLocation":"5002:31:20","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"pool","nameLocation":"5051:4:20","nodeType":"VariableDeclaration","scope":3806,"src":"5043:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"5043:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"tokenIn","nameLocation":"5072:7:20","nodeType":"VariableDeclaration","scope":3806,"src":"5065:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3792,"nodeType":"UserDefinedTypeName","pathNode":{"id":3791,"name":"IERC20","nameLocations":["5065:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"5065:6:20"},"referencedDeclaration":337,"src":"5065:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"maxAmountIn","nameLocation":"5097:11:20","nodeType":"VariableDeclaration","scope":3806,"src":"5089:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"5089:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"5126:17:20","nodeType":"VariableDeclaration","scope":3806,"src":"5118:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5118:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"wethIsEth","nameLocation":"5158:9:20","nodeType":"VariableDeclaration","scope":3806,"src":"5153:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3798,"name":"bool","nodeType":"ElementaryTypeName","src":"5153:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"userData","nameLocation":"5190:8:20","nodeType":"VariableDeclaration","scope":3806,"src":"5177:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3800,"name":"bytes","nodeType":"ElementaryTypeName","src":"5177:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5033:171:20"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"amountIn","nameLocation":"5239:8:20","nodeType":"VariableDeclaration","scope":3806,"src":"5231:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5231:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5230:18:20"},"scope":4198,"src":"4993:256:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"5255:530:20","text":" @notice Adds liquidity to a pool by donating the amounts in (no BPT out).\n @dev To support donation, the pool config `enableDonation` flag must be set to true.\n @param pool Address of the liquidity pool\n @param amountsIn Amounts of tokens to be donated, sorted in token registration order\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to donate liquidity"},"functionSelector":"bf6ee3fd","id":3819,"implemented":false,"kind":"function","modifiers":[],"name":"donate","nameLocation":"5799:6:20","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"pool","nameLocation":"5814:4:20","nodeType":"VariableDeclaration","scope":3819,"src":"5806:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"5806:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"amountsIn","nameLocation":"5837:9:20","nodeType":"VariableDeclaration","scope":3819,"src":"5820:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5820:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3811,"nodeType":"ArrayTypeName","src":"5820:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"wethIsEth","nameLocation":"5853:9:20","nodeType":"VariableDeclaration","scope":3819,"src":"5848:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3813,"name":"bool","nodeType":"ElementaryTypeName","src":"5848:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"userData","nameLocation":"5877:8:20","nodeType":"VariableDeclaration","scope":3819,"src":"5864:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"5864:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5805:81:20"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[],"src":"5903:0:20"},"scope":4198,"src":"5790:114:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3820,"nodeType":"StructuredDocumentation","src":"5910:954:20","text":" @notice Adds liquidity to a pool with a custom request.\n @dev The given maximum and minimum amounts given may be interpreted as exact depending on the pool type.\n In any case the caller can expect them to be hard boundaries for the request.\n @param pool Address of the liquidity pool\n @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n @param minBptAmountOut Minimum amount of pool tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add liquidity\n @return amountsIn Actual amounts of tokens added, sorted in token registration order\n @return bptAmountOut Actual amount of pool tokens received\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"0ca078ec","id":3841,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityCustom","nameLocation":"6878:18:20","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"pool","nameLocation":"6914:4:20","nodeType":"VariableDeclaration","scope":3841,"src":"6906:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"6906:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"6945:12:20","nodeType":"VariableDeclaration","scope":3841,"src":"6928:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3824,"nodeType":"ArrayTypeName","src":"6928:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"6975:15:20","nodeType":"VariableDeclaration","scope":3841,"src":"6967:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"6967:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"wethIsEth","nameLocation":"7005:9:20","nodeType":"VariableDeclaration","scope":3841,"src":"7000:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3828,"name":"bool","nodeType":"ElementaryTypeName","src":"7000:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"userData","nameLocation":"7037:8:20","nodeType":"VariableDeclaration","scope":3841,"src":"7024:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3830,"name":"bytes","nodeType":"ElementaryTypeName","src":"7024:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6896:155:20"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"amountsIn","nameLocation":"7095:9:20","nodeType":"VariableDeclaration","scope":3841,"src":"7078:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"7078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ArrayTypeName","src":"7078:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"bptAmountOut","nameLocation":"7114:12:20","nodeType":"VariableDeclaration","scope":3841,"src":"7106:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"7106:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"returnData","nameLocation":"7141:10:20","nodeType":"VariableDeclaration","scope":3841,"src":"7128:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3838,"name":"bytes","nodeType":"ElementaryTypeName","src":"7128:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7077:75:20"},"scope":4198,"src":"6869:284:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"7372:648:20","text":" @notice Removes liquidity with proportional token amounts from a pool, burning an exact pool token amount.\n @param pool Address of the liquidity pool\n @param exactBptAmountIn Exact amount of pool tokens provided\n @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to remove liquidity\n @return amountsOut Actual amounts of tokens received, sorted in token registration order"},"functionSelector":"51682750","id":3859,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityProportional","nameLocation":"8034:27:20","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"pool","nameLocation":"8079:4:20","nodeType":"VariableDeclaration","scope":3859,"src":"8071:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"8071:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"8101:16:20","nodeType":"VariableDeclaration","scope":3859,"src":"8093:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"8093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"minAmountsOut","nameLocation":"8144:13:20","nodeType":"VariableDeclaration","scope":3859,"src":"8127:30:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"8127:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ArrayTypeName","src":"8127:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"wethIsEth","nameLocation":"8172:9:20","nodeType":"VariableDeclaration","scope":3859,"src":"8167:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3850,"name":"bool","nodeType":"ElementaryTypeName","src":"8167:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"userData","nameLocation":"8204:8:20","nodeType":"VariableDeclaration","scope":3859,"src":"8191:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3852,"name":"bytes","nodeType":"ElementaryTypeName","src":"8191:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8061:157:20"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"amountsOut","nameLocation":"8262:10:20","nodeType":"VariableDeclaration","scope":3859,"src":"8245:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"8245:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ArrayTypeName","src":"8245:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8244:29:20"},"scope":4198,"src":"8025:249:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"8280:613:20","text":" @notice Removes liquidity from a pool via a single token, burning an exact pool token amount.\n @param pool Address of the liquidity pool\n @param exactBptAmountIn Exact amount of pool tokens provided\n @param tokenOut Token used to remove liquidity\n @param minAmountOut Minimum amount of tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to remove liquidity\n @return amountOut Actual amount of tokens received"},"functionSelector":"ecb2182c","id":3878,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquiditySingleTokenExactIn","nameLocation":"8907:33:20","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"pool","nameLocation":"8958:4:20","nodeType":"VariableDeclaration","scope":3878,"src":"8950:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"8950:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"8980:16:20","nodeType":"VariableDeclaration","scope":3878,"src":"8972:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"8972:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"tokenOut","nameLocation":"9013:8:20","nodeType":"VariableDeclaration","scope":3878,"src":"9006:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3866,"nodeType":"UserDefinedTypeName","pathNode":{"id":3865,"name":"IERC20","nameLocations":["9006:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"9006:6:20"},"referencedDeclaration":337,"src":"9006:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"minAmountOut","nameLocation":"9039:12:20","nodeType":"VariableDeclaration","scope":3878,"src":"9031:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"wethIsEth","nameLocation":"9066:9:20","nodeType":"VariableDeclaration","scope":3878,"src":"9061:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3870,"name":"bool","nodeType":"ElementaryTypeName","src":"9061:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"userData","nameLocation":"9098:8:20","nodeType":"VariableDeclaration","scope":3878,"src":"9085:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"9085:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8940:172:20"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"amountOut","nameLocation":"9147:9:20","nodeType":"VariableDeclaration","scope":3878,"src":"9139:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"9139:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9138:19:20"},"scope":4198,"src":"8898:260:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"9164:632:20","text":" @notice Removes liquidity from a pool via a single token, specifying the exact amount of tokens to receive.\n @param pool Address of the liquidity pool\n @param maxBptAmountIn Maximum amount of pool tokens provided\n @param tokenOut Token used to remove liquidity\n @param exactAmountOut Exact amount of tokens to be received\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to remove liquidity\n @return bptAmountIn Actual amount of pool tokens burned"},"functionSelector":"e7326def","id":3897,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquiditySingleTokenExactOut","nameLocation":"9810:34:20","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"pool","nameLocation":"9862:4:20","nodeType":"VariableDeclaration","scope":3897,"src":"9854:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"9854:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"9884:14:20","nodeType":"VariableDeclaration","scope":3897,"src":"9876:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"9876:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3886,"mutability":"mutable","name":"tokenOut","nameLocation":"9915:8:20","nodeType":"VariableDeclaration","scope":3897,"src":"9908:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3885,"nodeType":"UserDefinedTypeName","pathNode":{"id":3884,"name":"IERC20","nameLocations":["9908:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"9908:6:20"},"referencedDeclaration":337,"src":"9908:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"exactAmountOut","nameLocation":"9941:14:20","nodeType":"VariableDeclaration","scope":3897,"src":"9933:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"9933:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"wethIsEth","nameLocation":"9970:9:20","nodeType":"VariableDeclaration","scope":3897,"src":"9965:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3889,"name":"bool","nodeType":"ElementaryTypeName","src":"9965:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"userData","nameLocation":"10002:8:20","nodeType":"VariableDeclaration","scope":3897,"src":"9989:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3891,"name":"bytes","nodeType":"ElementaryTypeName","src":"9989:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9844:172:20"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"bptAmountIn","nameLocation":"10051:11:20","nodeType":"VariableDeclaration","scope":3897,"src":"10043:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"10043:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10042:21:20"},"scope":4198,"src":"9801:263:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3898,"nodeType":"StructuredDocumentation","src":"10070:960:20","text":" @notice Removes liquidity from a pool with a custom request.\n @dev The given maximum and minimum amounts given may be interpreted as exact depending on the pool type.\n In any case the caller can expect them to be hard boundaries for the request.\n @param pool Address of the liquidity pool\n @param maxBptAmountIn Maximum amount of pool tokens provided\n @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to remove liquidity\n @return bptAmountIn Actual amount of pool tokens burned\n @return amountsOut Actual amounts of tokens received, sorted in token registration order\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"82bf2b24","id":3919,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityCustom","nameLocation":"11044:21:20","nodeType":"FunctionDefinition","parameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"pool","nameLocation":"11083:4:20","nodeType":"VariableDeclaration","scope":3919,"src":"11075:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"11075:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"11105:14:20","nodeType":"VariableDeclaration","scope":3919,"src":"11097:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"11097:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"minAmountsOut","nameLocation":"11146:13:20","nodeType":"VariableDeclaration","scope":3919,"src":"11129:30:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"11129:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3904,"nodeType":"ArrayTypeName","src":"11129:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"wethIsEth","nameLocation":"11174:9:20","nodeType":"VariableDeclaration","scope":3919,"src":"11169:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3906,"name":"bool","nodeType":"ElementaryTypeName","src":"11169:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"userData","nameLocation":"11206:8:20","nodeType":"VariableDeclaration","scope":3919,"src":"11193:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3908,"name":"bytes","nodeType":"ElementaryTypeName","src":"11193:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11065:155:20"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"bptAmountIn","nameLocation":"11255:11:20","nodeType":"VariableDeclaration","scope":3919,"src":"11247:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"11247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"amountsOut","nameLocation":"11285:10:20","nodeType":"VariableDeclaration","scope":3919,"src":"11268:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"11268:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3914,"nodeType":"ArrayTypeName","src":"11268:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"returnData","nameLocation":"11310:10:20","nodeType":"VariableDeclaration","scope":3919,"src":"11297:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3916,"name":"bytes","nodeType":"ElementaryTypeName","src":"11297:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11246:75:20"},"scope":4198,"src":"11035:287:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3920,"nodeType":"StructuredDocumentation","src":"11328:447:20","text":" @notice Removes liquidity proportionally, burning an exact pool token amount. Only available in Recovery Mode.\n @param pool Address of the liquidity pool\n @param exactBptAmountIn Exact amount of pool tokens provided\n @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n @return amountsOut Actual amounts of tokens received, sorted in token registration order"},"functionSelector":"08c04793","id":3933,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityRecovery","nameLocation":"11789:23:20","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"pool","nameLocation":"11830:4:20","nodeType":"VariableDeclaration","scope":3933,"src":"11822:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"11822:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"11852:16:20","nodeType":"VariableDeclaration","scope":3933,"src":"11844:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"minAmountsOut","nameLocation":"11895:13:20","nodeType":"VariableDeclaration","scope":3933,"src":"11878:30:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"11878:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3926,"nodeType":"ArrayTypeName","src":"11878:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11812:102:20"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"amountsOut","nameLocation":"11958:10:20","nodeType":"VariableDeclaration","scope":3933,"src":"11941:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"11941:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3930,"nodeType":"ArrayTypeName","src":"11941:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11940:29:20"},"scope":4198,"src":"11780:190:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IRouter.SwapSingleTokenHookParams","documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"12184:770:20","text":" @notice Data for the swap hook.\n @param sender Account initiating the swap operation\n @param kind Type of swap (exact in or exact out)\n @param pool Address of the liquidity pool\n @param tokenIn Token to be swapped from\n @param tokenOut Token to be swapped to\n @param amountGiven Amount given based on kind of the swap (e.g., tokenIn for exact in)\n @param limit Maximum or minimum amount based on the kind of swap (e.g., maxAmountIn for exact out)\n @param deadline Deadline for the swap, after which it will revert\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the swap request"},"id":3958,"members":[{"constant":false,"id":3936,"mutability":"mutable","name":"sender","nameLocation":"13010:6:20","nodeType":"VariableDeclaration","scope":3958,"src":"13002:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"13002:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"kind","nameLocation":"13035:4:20","nodeType":"VariableDeclaration","scope":3958,"src":"13026:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"SwapKind","nameLocations":["13026:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":8367,"src":"13026:8:20"},"referencedDeclaration":8367,"src":"13026:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"pool","nameLocation":"13057:4:20","nodeType":"VariableDeclaration","scope":3958,"src":"13049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3940,"name":"address","nodeType":"ElementaryTypeName","src":"13049:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"tokenIn","nameLocation":"13078:7:20","nodeType":"VariableDeclaration","scope":3958,"src":"13071:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3943,"nodeType":"UserDefinedTypeName","pathNode":{"id":3942,"name":"IERC20","nameLocations":["13071:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"13071:6:20"},"referencedDeclaration":337,"src":"13071:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"tokenOut","nameLocation":"13102:8:20","nodeType":"VariableDeclaration","scope":3958,"src":"13095:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3946,"nodeType":"UserDefinedTypeName","pathNode":{"id":3945,"name":"IERC20","nameLocations":["13095:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"13095:6:20"},"referencedDeclaration":337,"src":"13095:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"amountGiven","nameLocation":"13128:11:20","nodeType":"VariableDeclaration","scope":3958,"src":"13120:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"13120:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"limit","nameLocation":"13157:5:20","nodeType":"VariableDeclaration","scope":3958,"src":"13149:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"13149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"deadline","nameLocation":"13180:8:20","nodeType":"VariableDeclaration","scope":3958,"src":"13172:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"13172:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"wethIsEth","nameLocation":"13203:9:20","nodeType":"VariableDeclaration","scope":3958,"src":"13198:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3954,"name":"bool","nodeType":"ElementaryTypeName","src":"13198:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"userData","nameLocation":"13228:8:20","nodeType":"VariableDeclaration","scope":3958,"src":"13222:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3956,"name":"bytes","nodeType":"ElementaryTypeName","src":"13222:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapSingleTokenHookParams","nameLocation":"12966:25:20","nodeType":"StructDefinition","scope":4198,"src":"12959:284:20","visibility":"public"},{"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"13249:744:20","text":" @notice Executes a swap operation specifying an exact input token amount.\n @param pool Address of the liquidity pool\n @param tokenIn Token to be swapped from\n @param tokenOut Token to be swapped to\n @param exactAmountIn Exact amounts of input tokens to send\n @param minAmountOut Minimum amount of tokens to be received\n @param deadline Deadline for the swap, after which it will revert\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the swap request\n @return amountOut Calculated amount of output tokens to be received in exchange for the given input tokens"},"functionSelector":"750283bc","id":3982,"implemented":false,"kind":"function","modifiers":[],"name":"swapSingleTokenExactIn","nameLocation":"14007:22:20","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"pool","nameLocation":"14047:4:20","nodeType":"VariableDeclaration","scope":3982,"src":"14039:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"14039:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"tokenIn","nameLocation":"14068:7:20","nodeType":"VariableDeclaration","scope":3982,"src":"14061:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3963,"nodeType":"UserDefinedTypeName","pathNode":{"id":3962,"name":"IERC20","nameLocations":["14061:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"14061:6:20"},"referencedDeclaration":337,"src":"14061:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"tokenOut","nameLocation":"14092:8:20","nodeType":"VariableDeclaration","scope":3982,"src":"14085:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3966,"nodeType":"UserDefinedTypeName","pathNode":{"id":3965,"name":"IERC20","nameLocations":["14085:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"14085:6:20"},"referencedDeclaration":337,"src":"14085:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"exactAmountIn","nameLocation":"14118:13:20","nodeType":"VariableDeclaration","scope":3982,"src":"14110:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"14110:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"minAmountOut","nameLocation":"14149:12:20","nodeType":"VariableDeclaration","scope":3982,"src":"14141:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"14141:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"deadline","nameLocation":"14179:8:20","nodeType":"VariableDeclaration","scope":3982,"src":"14171:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"14171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3975,"mutability":"mutable","name":"wethIsEth","nameLocation":"14202:9:20","nodeType":"VariableDeclaration","scope":3982,"src":"14197:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3974,"name":"bool","nodeType":"ElementaryTypeName","src":"14197:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"userData","nameLocation":"14236:8:20","nodeType":"VariableDeclaration","scope":3982,"src":"14221:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3976,"name":"bytes","nodeType":"ElementaryTypeName","src":"14221:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14029:221:20"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"amountOut","nameLocation":"14285:9:20","nodeType":"VariableDeclaration","scope":3982,"src":"14277:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"14277:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14276:19:20"},"scope":4198,"src":"13998:298:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3983,"nodeType":"StructuredDocumentation","src":"14302:743:20","text":" @notice Executes a swap operation specifying an exact output token amount.\n @param pool Address of the liquidity pool\n @param tokenIn Token to be swapped from\n @param tokenOut Token to be swapped to\n @param exactAmountOut Exact amounts of input tokens to receive\n @param maxAmountIn Maximum amount of tokens to be sent\n @param deadline Deadline for the swap, after which it will revert\n @param userData Additional (optional) data sent with the swap request\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @return amountIn Calculated amount of input tokens to be sent in exchange for the requested output tokens"},"functionSelector":"94e86ef8","id":4006,"implemented":false,"kind":"function","modifiers":[],"name":"swapSingleTokenExactOut","nameLocation":"15059:23:20","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"pool","nameLocation":"15100:4:20","nodeType":"VariableDeclaration","scope":4006,"src":"15092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"15092:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"tokenIn","nameLocation":"15121:7:20","nodeType":"VariableDeclaration","scope":4006,"src":"15114:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3987,"nodeType":"UserDefinedTypeName","pathNode":{"id":3986,"name":"IERC20","nameLocations":["15114:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"15114:6:20"},"referencedDeclaration":337,"src":"15114:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"tokenOut","nameLocation":"15145:8:20","nodeType":"VariableDeclaration","scope":4006,"src":"15138:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":3990,"nodeType":"UserDefinedTypeName","pathNode":{"id":3989,"name":"IERC20","nameLocations":["15138:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"15138:6:20"},"referencedDeclaration":337,"src":"15138:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"exactAmountOut","nameLocation":"15171:14:20","nodeType":"VariableDeclaration","scope":4006,"src":"15163:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"15163:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"maxAmountIn","nameLocation":"15203:11:20","nodeType":"VariableDeclaration","scope":4006,"src":"15195:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"15195:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"deadline","nameLocation":"15232:8:20","nodeType":"VariableDeclaration","scope":4006,"src":"15224:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"15224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"wethIsEth","nameLocation":"15255:9:20","nodeType":"VariableDeclaration","scope":4006,"src":"15250:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3998,"name":"bool","nodeType":"ElementaryTypeName","src":"15250:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"userData","nameLocation":"15289:8:20","nodeType":"VariableDeclaration","scope":4006,"src":"15274:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4000,"name":"bytes","nodeType":"ElementaryTypeName","src":"15274:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15082:221:20"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"amountIn","nameLocation":"15338:8:20","nodeType":"VariableDeclaration","scope":4006,"src":"15330:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"15330:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15329:18:20"},"scope":4198,"src":"15050:298:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"15563:518:20","text":" @notice Queries an `addLiquidityProportional` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param exactBptAmountOut Exact amount of pool tokens to be received\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountsIn Expected amounts of tokens to add, sorted in token registration order"},"functionSelector":"9de90518","id":4021,"implemented":false,"kind":"function","modifiers":[],"name":"queryAddLiquidityProportional","nameLocation":"16095:29:20","nodeType":"FunctionDefinition","parameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"pool","nameLocation":"16142:4:20","nodeType":"VariableDeclaration","scope":4021,"src":"16134:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4008,"name":"address","nodeType":"ElementaryTypeName","src":"16134:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"16164:17:20","nodeType":"VariableDeclaration","scope":4021,"src":"16156:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"16156:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"sender","nameLocation":"16199:6:20","nodeType":"VariableDeclaration","scope":4021,"src":"16191:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"16191:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4015,"mutability":"mutable","name":"userData","nameLocation":"16228:8:20","nodeType":"VariableDeclaration","scope":4021,"src":"16215:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4014,"name":"bytes","nodeType":"ElementaryTypeName","src":"16215:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16124:118:20"},"returnParameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"amountsIn","nameLocation":"16278:9:20","nodeType":"VariableDeclaration","scope":4021,"src":"16261:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"16261:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ArrayTypeName","src":"16261:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16260:28:20"},"scope":4198,"src":"16086:203:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"16295:517:20","text":" @notice Queries an `addLiquidityUnbalanced` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param exactAmountsIn Exact amounts of tokens to be added, sorted in token registration order\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return bptAmountOut Expected amount of pool tokens to receive"},"functionSelector":"da001f7d","id":4036,"implemented":false,"kind":"function","modifiers":[],"name":"queryAddLiquidityUnbalanced","nameLocation":"16826:27:20","nodeType":"FunctionDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"pool","nameLocation":"16871:4:20","nodeType":"VariableDeclaration","scope":4036,"src":"16863:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"16863:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4027,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"16902:14:20","nodeType":"VariableDeclaration","scope":4036,"src":"16885:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"16885:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4026,"nodeType":"ArrayTypeName","src":"16885:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4029,"mutability":"mutable","name":"sender","nameLocation":"16934:6:20","nodeType":"VariableDeclaration","scope":4036,"src":"16926:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4028,"name":"address","nodeType":"ElementaryTypeName","src":"16926:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"userData","nameLocation":"16963:8:20","nodeType":"VariableDeclaration","scope":4036,"src":"16950:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4030,"name":"bytes","nodeType":"ElementaryTypeName","src":"16950:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16853:124:20"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"bptAmountOut","nameLocation":"17004:12:20","nodeType":"VariableDeclaration","scope":4036,"src":"16996:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"16996:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16995:22:20"},"scope":4198,"src":"16817:201:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"17024:542:20","text":" @notice Queries an `addLiquiditySingleTokenExactOut` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param tokenIn Token used to add liquidity\n @param exactBptAmountOut Expected exact amount of pool tokens to receive\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountIn Expected amount of tokens to add"},"functionSelector":"1d56798d","id":4053,"implemented":false,"kind":"function","modifiers":[],"name":"queryAddLiquiditySingleTokenExactOut","nameLocation":"17580:36:20","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"pool","nameLocation":"17634:4:20","nodeType":"VariableDeclaration","scope":4053,"src":"17626:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4038,"name":"address","nodeType":"ElementaryTypeName","src":"17626:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4042,"mutability":"mutable","name":"tokenIn","nameLocation":"17655:7:20","nodeType":"VariableDeclaration","scope":4053,"src":"17648:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4041,"nodeType":"UserDefinedTypeName","pathNode":{"id":4040,"name":"IERC20","nameLocations":["17648:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"17648:6:20"},"referencedDeclaration":337,"src":"17648:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"17680:17:20","nodeType":"VariableDeclaration","scope":4053,"src":"17672:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"17672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"sender","nameLocation":"17715:6:20","nodeType":"VariableDeclaration","scope":4053,"src":"17707:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4045,"name":"address","nodeType":"ElementaryTypeName","src":"17707:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"userData","nameLocation":"17744:8:20","nodeType":"VariableDeclaration","scope":4053,"src":"17731:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4047,"name":"bytes","nodeType":"ElementaryTypeName","src":"17731:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17616:142:20"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"amountIn","nameLocation":"17785:8:20","nodeType":"VariableDeclaration","scope":4053,"src":"17777:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"17777:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17776:18:20"},"scope":4198,"src":"17571:224:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"17801:779:20","text":" @notice Queries an `addLiquidityCustom` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n @param minBptAmountOut Expected minimum amount of pool tokens to receive\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountsIn Expected amounts of tokens to add, sorted in token registration order\n @return bptAmountOut Expected amount of pool tokens to receive\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"452db952","id":4075,"implemented":false,"kind":"function","modifiers":[],"name":"queryAddLiquidityCustom","nameLocation":"18594:23:20","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"pool","nameLocation":"18635:4:20","nodeType":"VariableDeclaration","scope":4075,"src":"18627:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4055,"name":"address","nodeType":"ElementaryTypeName","src":"18627:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"18666:12:20","nodeType":"VariableDeclaration","scope":4075,"src":"18649:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"18649:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4058,"nodeType":"ArrayTypeName","src":"18649:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"18696:15:20","nodeType":"VariableDeclaration","scope":4075,"src":"18688:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4060,"name":"uint256","nodeType":"ElementaryTypeName","src":"18688:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"sender","nameLocation":"18729:6:20","nodeType":"VariableDeclaration","scope":4075,"src":"18721:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"18721:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4065,"mutability":"mutable","name":"userData","nameLocation":"18758:8:20","nodeType":"VariableDeclaration","scope":4075,"src":"18745:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4064,"name":"bytes","nodeType":"ElementaryTypeName","src":"18745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18617:155:20"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"amountsIn","nameLocation":"18808:9:20","nodeType":"VariableDeclaration","scope":4075,"src":"18791:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"18791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ArrayTypeName","src":"18791:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"bptAmountOut","nameLocation":"18827:12:20","nodeType":"VariableDeclaration","scope":4075,"src":"18819:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"18819:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4073,"mutability":"mutable","name":"returnData","nameLocation":"18854:10:20","nodeType":"VariableDeclaration","scope":4075,"src":"18841:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4072,"name":"bytes","nodeType":"ElementaryTypeName","src":"18841:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18790:75:20"},"scope":4198,"src":"18585:281:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"18872:532:20","text":" @notice Queries a `removeLiquidityProportional` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param exactBptAmountIn Exact amount of pool tokens provided for the query\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountsOut Expected amounts of tokens to receive, sorted in token registration order"},"functionSelector":"0f710888","id":4090,"implemented":false,"kind":"function","modifiers":[],"name":"queryRemoveLiquidityProportional","nameLocation":"19418:32:20","nodeType":"FunctionDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"pool","nameLocation":"19468:4:20","nodeType":"VariableDeclaration","scope":4090,"src":"19460:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4077,"name":"address","nodeType":"ElementaryTypeName","src":"19460:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"19490:16:20","nodeType":"VariableDeclaration","scope":4090,"src":"19482:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"19482:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"sender","nameLocation":"19524:6:20","nodeType":"VariableDeclaration","scope":4090,"src":"19516:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"19516:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"userData","nameLocation":"19553:8:20","nodeType":"VariableDeclaration","scope":4090,"src":"19540:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4083,"name":"bytes","nodeType":"ElementaryTypeName","src":"19540:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19450:117:20"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"amountsOut","nameLocation":"19603:10:20","nodeType":"VariableDeclaration","scope":4090,"src":"19586:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"19586:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ArrayTypeName","src":"19586:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19585:29:20"},"scope":4198,"src":"19409:206:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"19621:554:20","text":" @notice Queries a `removeLiquiditySingleTokenExactIn` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param exactBptAmountIn Exact amount of pool tokens provided for the query\n @param tokenOut Token used to remove liquidity\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountOut Expected amount of tokens to receive"},"functionSelector":"23b39241","id":4107,"implemented":false,"kind":"function","modifiers":[],"name":"queryRemoveLiquiditySingleTokenExactIn","nameLocation":"20189:38:20","nodeType":"FunctionDefinition","parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"pool","nameLocation":"20245:4:20","nodeType":"VariableDeclaration","scope":4107,"src":"20237:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4092,"name":"address","nodeType":"ElementaryTypeName","src":"20237:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"20267:16:20","nodeType":"VariableDeclaration","scope":4107,"src":"20259:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"20259:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"tokenOut","nameLocation":"20300:8:20","nodeType":"VariableDeclaration","scope":4107,"src":"20293:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4097,"nodeType":"UserDefinedTypeName","pathNode":{"id":4096,"name":"IERC20","nameLocations":["20293:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"20293:6:20"},"referencedDeclaration":337,"src":"20293:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"sender","nameLocation":"20326:6:20","nodeType":"VariableDeclaration","scope":4107,"src":"20318:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"20318:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"userData","nameLocation":"20355:8:20","nodeType":"VariableDeclaration","scope":4107,"src":"20342:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4101,"name":"bytes","nodeType":"ElementaryTypeName","src":"20342:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20227:142:20"},"returnParameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"amountOut","nameLocation":"20396:9:20","nodeType":"VariableDeclaration","scope":4107,"src":"20388:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"20388:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20387:19:20"},"scope":4198,"src":"20180:227:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4108,"nodeType":"StructuredDocumentation","src":"20413:549:20","text":" @notice Queries a `removeLiquiditySingleTokenExactOut` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param tokenOut Token used to remove liquidity\n @param exactAmountOut Expected exact amount of tokens to receive\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return bptAmountIn Expected amount of pool tokens to burn"},"functionSelector":"53d0bb98","id":4124,"implemented":false,"kind":"function","modifiers":[],"name":"queryRemoveLiquiditySingleTokenExactOut","nameLocation":"20976:39:20","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"pool","nameLocation":"21033:4:20","nodeType":"VariableDeclaration","scope":4124,"src":"21025:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4109,"name":"address","nodeType":"ElementaryTypeName","src":"21025:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"tokenOut","nameLocation":"21054:8:20","nodeType":"VariableDeclaration","scope":4124,"src":"21047:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4112,"nodeType":"UserDefinedTypeName","pathNode":{"id":4111,"name":"IERC20","nameLocations":["21047:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"21047:6:20"},"referencedDeclaration":337,"src":"21047:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"exactAmountOut","nameLocation":"21080:14:20","nodeType":"VariableDeclaration","scope":4124,"src":"21072:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"21072:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4117,"mutability":"mutable","name":"sender","nameLocation":"21112:6:20","nodeType":"VariableDeclaration","scope":4124,"src":"21104:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4116,"name":"address","nodeType":"ElementaryTypeName","src":"21104:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"userData","nameLocation":"21141:8:20","nodeType":"VariableDeclaration","scope":4124,"src":"21128:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"21128:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21015:140:20"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"bptAmountIn","nameLocation":"21182:11:20","nodeType":"VariableDeclaration","scope":4124,"src":"21174:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"21174:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21173:21:20"},"scope":4198,"src":"20967:228:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"21201:779:20","text":" @notice Queries a `removeLiquidityCustom` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param maxBptAmountIn Maximum amount of pool tokens provided\n @param minAmountsOut Expected minimum amounts of tokens to receive, sorted in token registration order\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return bptAmountIn Expected amount of pool tokens to burn\n @return amountsOut Expected amounts of tokens to receive, sorted in token registration order\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"c330c7be","id":4146,"implemented":false,"kind":"function","modifiers":[],"name":"queryRemoveLiquidityCustom","nameLocation":"21994:26:20","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"pool","nameLocation":"22038:4:20","nodeType":"VariableDeclaration","scope":4146,"src":"22030:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4126,"name":"address","nodeType":"ElementaryTypeName","src":"22030:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4129,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"22060:14:20","nodeType":"VariableDeclaration","scope":4146,"src":"22052:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"22052:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"minAmountsOut","nameLocation":"22101:13:20","nodeType":"VariableDeclaration","scope":4146,"src":"22084:30:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"22084:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4131,"nodeType":"ArrayTypeName","src":"22084:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"sender","nameLocation":"22132:6:20","nodeType":"VariableDeclaration","scope":4146,"src":"22124:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4133,"name":"address","nodeType":"ElementaryTypeName","src":"22124:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"userData","nameLocation":"22161:8:20","nodeType":"VariableDeclaration","scope":4146,"src":"22148:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4135,"name":"bytes","nodeType":"ElementaryTypeName","src":"22148:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22020:155:20"},"returnParameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"bptAmountIn","nameLocation":"22202:11:20","nodeType":"VariableDeclaration","scope":4146,"src":"22194:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"22194:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"amountsOut","nameLocation":"22232:10:20","nodeType":"VariableDeclaration","scope":4146,"src":"22215:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"22215:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4141,"nodeType":"ArrayTypeName","src":"22215:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"returnData","nameLocation":"22257:10:20","nodeType":"VariableDeclaration","scope":4146,"src":"22244:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4143,"name":"bytes","nodeType":"ElementaryTypeName","src":"22244:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22193:75:20"},"scope":4198,"src":"21985:284:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"22275:334:20","text":" @notice Queries a `removeLiquidityRecovery` operation without actually executing it.\n @param pool Address of the liquidity pool\n @param exactBptAmountIn Exact amount of pool tokens provided for the query\n @return amountsOut Expected amounts of tokens to receive, sorted in token registration order"},"functionSelector":"b037ed36","id":4157,"implemented":false,"kind":"function","modifiers":[],"name":"queryRemoveLiquidityRecovery","nameLocation":"22623:28:20","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"pool","nameLocation":"22669:4:20","nodeType":"VariableDeclaration","scope":4157,"src":"22661:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4148,"name":"address","nodeType":"ElementaryTypeName","src":"22661:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"22691:16:20","nodeType":"VariableDeclaration","scope":4157,"src":"22683:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"22683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22651:62:20"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"amountsOut","nameLocation":"22749:10:20","nodeType":"VariableDeclaration","scope":4157,"src":"22732:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"22732:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ArrayTypeName","src":"22732:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22731:29:20"},"scope":4198,"src":"22614:147:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"22767:637:20","text":" @notice Queries a swap operation specifying an exact input token amount without actually executing it.\n @param pool Address of the liquidity pool\n @param tokenIn Token to be swapped from\n @param tokenOut Token to be swapped to\n @param exactAmountIn Exact amounts of input tokens to send\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountOut Calculated amount of output tokens to be received in exchange for the given input tokens"},"functionSelector":"3ebc54e5","id":4177,"implemented":false,"kind":"function","modifiers":[],"name":"querySwapSingleTokenExactIn","nameLocation":"23418:27:20","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"pool","nameLocation":"23463:4:20","nodeType":"VariableDeclaration","scope":4177,"src":"23455:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4159,"name":"address","nodeType":"ElementaryTypeName","src":"23455:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"tokenIn","nameLocation":"23484:7:20","nodeType":"VariableDeclaration","scope":4177,"src":"23477:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4162,"nodeType":"UserDefinedTypeName","pathNode":{"id":4161,"name":"IERC20","nameLocations":["23477:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"23477:6:20"},"referencedDeclaration":337,"src":"23477:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"tokenOut","nameLocation":"23508:8:20","nodeType":"VariableDeclaration","scope":4177,"src":"23501:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4165,"nodeType":"UserDefinedTypeName","pathNode":{"id":4164,"name":"IERC20","nameLocations":["23501:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"23501:6:20"},"referencedDeclaration":337,"src":"23501:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"exactAmountIn","nameLocation":"23534:13:20","nodeType":"VariableDeclaration","scope":4177,"src":"23526:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"23526:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"sender","nameLocation":"23565:6:20","nodeType":"VariableDeclaration","scope":4177,"src":"23557:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4169,"name":"address","nodeType":"ElementaryTypeName","src":"23557:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"userData","nameLocation":"23596:8:20","nodeType":"VariableDeclaration","scope":4177,"src":"23581:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4171,"name":"bytes","nodeType":"ElementaryTypeName","src":"23581:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23445:165:20"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"amountOut","nameLocation":"23637:9:20","nodeType":"VariableDeclaration","scope":4177,"src":"23629:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"23629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23628:19:20"},"scope":4198,"src":"23409:239:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"23654:641:20","text":" @notice Queries a swap operation specifying an exact output token amount without actually executing it.\n @param pool Address of the liquidity pool\n @param tokenIn Token to be swapped from\n @param tokenOut Token to be swapped to\n @param exactAmountOut Exact amounts of input tokens to receive\n @param sender The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\n @param userData Additional (optional) data sent with the query request\n @return amountIn Calculated amount of input tokens to be sent in exchange for the requested output tokens"},"functionSelector":"175d4408","id":4197,"implemented":false,"kind":"function","modifiers":[],"name":"querySwapSingleTokenExactOut","nameLocation":"24309:28:20","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"pool","nameLocation":"24355:4:20","nodeType":"VariableDeclaration","scope":4197,"src":"24347:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"24347:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"tokenIn","nameLocation":"24376:7:20","nodeType":"VariableDeclaration","scope":4197,"src":"24369:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4182,"nodeType":"UserDefinedTypeName","pathNode":{"id":4181,"name":"IERC20","nameLocations":["24369:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"24369:6:20"},"referencedDeclaration":337,"src":"24369:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4186,"mutability":"mutable","name":"tokenOut","nameLocation":"24400:8:20","nodeType":"VariableDeclaration","scope":4197,"src":"24393:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4185,"nodeType":"UserDefinedTypeName","pathNode":{"id":4184,"name":"IERC20","nameLocations":["24393:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"24393:6:20"},"referencedDeclaration":337,"src":"24393:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"exactAmountOut","nameLocation":"24426:14:20","nodeType":"VariableDeclaration","scope":4197,"src":"24418:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"24418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"sender","nameLocation":"24458:6:20","nodeType":"VariableDeclaration","scope":4197,"src":"24450:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4189,"name":"address","nodeType":"ElementaryTypeName","src":"24450:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"userData","nameLocation":"24489:8:20","nodeType":"VariableDeclaration","scope":4197,"src":"24474:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4191,"name":"bytes","nodeType":"ElementaryTypeName","src":"24474:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24337:166:20"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"amountIn","nameLocation":"24530:8:20","nodeType":"VariableDeclaration","scope":4197,"src":"24522:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"24522:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24521:18:20"},"scope":4198,"src":"24300:240:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4199,"src":"422:24120:20","usedErrors":[],"usedEvents":[]}],"src":"46:24497:20"},"id":20},"contracts/IRouterCommon.sol":{"ast":{"absolutePath":"contracts/IRouterCommon.sol","exportedSymbols":{"AddLiquidityKind":[8439],"IAllowanceTransfer":[3080],"IRouterCommon":[4303],"IWETH":[5836],"RemoveLiquidityKind":[8460]},"id":4304,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4200,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:21"},{"absolutePath":"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol","file":"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol","id":4202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4304,"sourceUnit":3081,"src":"72:92:21","symbolAliases":[{"foreign":{"id":4201,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"81:18:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":4205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4304,"sourceUnit":8504,"src":"258:73:21","symbolAliases":[{"foreign":{"id":4203,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"267:16:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4204,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"285:19:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IWETH.sol","file":"./IWETH.sol","id":4207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4304,"sourceUnit":5837,"src":"333:36:21","symbolAliases":[{"foreign":{"id":4206,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"342:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRouterCommon","contractDependencies":[],"contractKind":"interface","documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"371:83:21","text":"@notice Interface for functions shared between the `Router` and `BatchRouter`."},"fullyImplemented":false,"id":4303,"linearizedBaseContracts":[4303],"name":"IRouterCommon","nameLocation":"464:13:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IRouterCommon.AddLiquidityHookParams","documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"484:617:21","text":" @notice Data for the add liquidity hook.\n @param sender Account originating the add liquidity operation\n @param pool Address of the liquidity pool\n @param maxAmountsIn Maximum amounts of tokens to be added, sorted in token registration order\n @param minBptAmountOut Minimum amount of pool tokens to be received\n @param kind Type of join (e.g., single or multi-token)\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to add liquidity"},"id":4226,"members":[{"constant":false,"id":4211,"mutability":"mutable","name":"sender","nameLocation":"1154:6:21","nodeType":"VariableDeclaration","scope":4226,"src":"1146:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4210,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"pool","nameLocation":"1178:4:21","nodeType":"VariableDeclaration","scope":4226,"src":"1170:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"1170:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"1202:12:21","nodeType":"VariableDeclaration","scope":4226,"src":"1192:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1192:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ArrayTypeName","src":"1192:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"1232:15:21","nodeType":"VariableDeclaration","scope":4226,"src":"1224:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"kind","nameLocation":"1274:4:21","nodeType":"VariableDeclaration","scope":4226,"src":"1257:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},"typeName":{"id":4220,"nodeType":"UserDefinedTypeName","pathNode":{"id":4219,"name":"AddLiquidityKind","nameLocations":["1257:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":8439,"src":"1257:16:21"},"referencedDeclaration":8439,"src":"1257:16:21","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"wethIsEth","nameLocation":"1293:9:21","nodeType":"VariableDeclaration","scope":4226,"src":"1288:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4222,"name":"bool","nodeType":"ElementaryTypeName","src":"1288:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"userData","nameLocation":"1318:8:21","nodeType":"VariableDeclaration","scope":4226,"src":"1312:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4224,"name":"bytes","nodeType":"ElementaryTypeName","src":"1312:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"AddLiquidityHookParams","nameLocation":"1113:22:21","nodeType":"StructDefinition","scope":4303,"src":"1106:227:21","visibility":"public"},{"canonicalName":"IRouterCommon.RemoveLiquidityHookParams","documentation":{"id":4227,"nodeType":"StructuredDocumentation","src":"1339:623:21","text":" @notice Data for the remove liquidity hook.\n @param sender Account originating the remove liquidity operation\n @param pool Address of the liquidity pool\n @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n @param maxBptAmountIn Maximum amount of pool tokens provided\n @param kind Type of exit (e.g., single or multi-token)\n @param wethIsEth If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\n @param userData Additional (optional) data sent with the request to remove liquidity"},"id":4244,"members":[{"constant":false,"id":4229,"mutability":"mutable","name":"sender","nameLocation":"2018:6:21","nodeType":"VariableDeclaration","scope":4244,"src":"2010:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"2010:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"pool","nameLocation":"2042:4:21","nodeType":"VariableDeclaration","scope":4244,"src":"2034:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4230,"name":"address","nodeType":"ElementaryTypeName","src":"2034:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"minAmountsOut","nameLocation":"2066:13:21","nodeType":"VariableDeclaration","scope":4244,"src":"2056:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ArrayTypeName","src":"2056:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"2097:14:21","nodeType":"VariableDeclaration","scope":4244,"src":"2089:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"kind","nameLocation":"2141:4:21","nodeType":"VariableDeclaration","scope":4244,"src":"2121:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":4238,"nodeType":"UserDefinedTypeName","pathNode":{"id":4237,"name":"RemoveLiquidityKind","nameLocations":["2121:19:21"],"nodeType":"IdentifierPath","referencedDeclaration":8460,"src":"2121:19:21"},"referencedDeclaration":8460,"src":"2121:19:21","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":4241,"mutability":"mutable","name":"wethIsEth","nameLocation":"2160:9:21","nodeType":"VariableDeclaration","scope":4244,"src":"2155:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4240,"name":"bool","nodeType":"ElementaryTypeName","src":"2155:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"userData","nameLocation":"2185:8:21","nodeType":"VariableDeclaration","scope":4244,"src":"2179:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4242,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RemoveLiquidityHookParams","nameLocation":"1974:25:21","nodeType":"StructDefinition","scope":4303,"src":"1967:233:21","visibility":"public"},{"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"2424:42:21","text":"@notice Returns WETH contract address."},"functionSelector":"107c279f","id":4251,"implemented":false,"kind":"function","modifiers":[],"name":"getWeth","nameLocation":"2480:7:21","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[],"src":"2487:2:21"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"2513:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":4248,"nodeType":"UserDefinedTypeName","pathNode":{"id":4247,"name":"IWETH","nameLocations":["2513:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"2513:5:21"},"referencedDeclaration":5836,"src":"2513:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"2512:7:21"},"scope":4303,"src":"2471:49:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"2526:45:21","text":"@notice Returns Permit2 contract address."},"functionSelector":"1bbf2e23","id":4257,"implemented":false,"kind":"function","modifiers":[],"name":"getPermit2","nameLocation":"2665:10:21","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[],"src":"2675:2:21"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4257,"src":"2701:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4254,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:9:21"},"scope":4303,"src":"2656:54:21","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IRouterCommon.PermitApproval","id":4270,"members":[{"constant":false,"id":4259,"mutability":"mutable","name":"token","nameLocation":"2756:5:21","nodeType":"VariableDeclaration","scope":4270,"src":"2748:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4258,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"owner","nameLocation":"2779:5:21","nodeType":"VariableDeclaration","scope":4270,"src":"2771:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4260,"name":"address","nodeType":"ElementaryTypeName","src":"2771:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"spender","nameLocation":"2802:7:21","nodeType":"VariableDeclaration","scope":4270,"src":"2794:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"2794:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"amount","nameLocation":"2827:6:21","nodeType":"VariableDeclaration","scope":4270,"src":"2819:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"nonce","nameLocation":"2851:5:21","nodeType":"VariableDeclaration","scope":4270,"src":"2843:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2843:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"deadline","nameLocation":"2874:8:21","nodeType":"VariableDeclaration","scope":4270,"src":"2866:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"2866:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitApproval","nameLocation":"2723:14:21","nodeType":"StructDefinition","scope":4303,"src":"2716:173:21","visibility":"public"},{"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"2895:687:21","text":" @notice Permits multiple allowances and executes a batch of function calls on this contract.\n @param permitBatch An array of `PermitApproval` structs, each representing an ERC20 permit request\n @param permitSignatures An array of bytes, corresponding to the permit request signature in `permitBatch`\n @param permit2Batch A batch of permit2 approvals\n @param permit2Signature A permit2 signature for the batch approval\n @param multicallData An array of bytes arrays, each representing an encoded function call on this contract\n @return results Array of bytes arrays, each representing the return data from each function call executed"},"functionSelector":"19c6989f","id":4292,"implemented":false,"kind":"function","modifiers":[],"name":"permitBatchAndCall","nameLocation":"3596:18:21","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"permitBatch","nameLocation":"3650:11:21","nodeType":"VariableDeclaration","scope":4292,"src":"3624:37:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval[]"},"typeName":{"baseType":{"id":4273,"nodeType":"UserDefinedTypeName","pathNode":{"id":4272,"name":"PermitApproval","nameLocations":["3624:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":4270,"src":"3624:14:21"},"referencedDeclaration":4270,"src":"3624:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_storage_ptr","typeString":"struct IRouterCommon.PermitApproval"}},"id":4274,"nodeType":"ArrayTypeName","src":"3624:16:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_storage_$dyn_storage_ptr","typeString":"struct IRouterCommon.PermitApproval[]"}},"visibility":"internal"},{"constant":false,"id":4278,"mutability":"mutable","name":"permitSignatures","nameLocation":"3688:16:21","nodeType":"VariableDeclaration","scope":4292,"src":"3671:33:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4276,"name":"bytes","nodeType":"ElementaryTypeName","src":"3671:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4277,"nodeType":"ArrayTypeName","src":"3671:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"permit2Batch","nameLocation":"3754:12:21","nodeType":"VariableDeclaration","scope":4292,"src":"3714:52:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":4280,"nodeType":"UserDefinedTypeName","pathNode":{"id":4279,"name":"IAllowanceTransfer.PermitBatch","nameLocations":["3714:18:21","3733:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2967,"src":"3714:30:21"},"referencedDeclaration":2967,"src":"3714:30:21","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"permit2Signature","nameLocation":"3791:16:21","nodeType":"VariableDeclaration","scope":4292,"src":"3776:31:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4282,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"multicallData","nameLocation":"3834:13:21","nodeType":"VariableDeclaration","scope":4292,"src":"3817:30:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4284,"name":"bytes","nodeType":"ElementaryTypeName","src":"3817:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4285,"nodeType":"ArrayTypeName","src":"3817:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3614:239:21"},"returnParameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"results","nameLocation":"3895:7:21","nodeType":"VariableDeclaration","scope":4292,"src":"3880:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4288,"name":"bytes","nodeType":"ElementaryTypeName","src":"3880:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4289,"nodeType":"ArrayTypeName","src":"3880:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3879:24:21"},"scope":4303,"src":"3587:317:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":4293,"nodeType":"StructuredDocumentation","src":"3910:264:21","text":" @notice Executes a batch of function calls on this contract.\n @param data Encoded function calls to be executed in the batch.\n @return results Array of bytes arrays, each representing the return data from each function call executed."},"functionSelector":"ac9650d8","id":4302,"implemented":false,"kind":"function","modifiers":[],"name":"multicall","nameLocation":"4188:9:21","nodeType":"FunctionDefinition","parameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"data","nameLocation":"4215:4:21","nodeType":"VariableDeclaration","scope":4302,"src":"4198:21:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4294,"name":"bytes","nodeType":"ElementaryTypeName","src":"4198:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4295,"nodeType":"ArrayTypeName","src":"4198:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4197:23:21"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"results","nameLocation":"4262:7:21","nodeType":"VariableDeclaration","scope":4302,"src":"4247:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4298,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4299,"nodeType":"ArrayTypeName","src":"4247:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4246:24:21"},"scope":4303,"src":"4179:92:21","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":4304,"src":"454:3819:21","usedErrors":[],"usedEvents":[]}],"src":"46:4228:21"},"id":21},"contracts/ISenderGuard.sol":{"ast":{"absolutePath":"contracts/ISenderGuard.sol","exportedSymbols":{"ISenderGuard":[4319]},"id":4320,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4305,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"ISenderGuard","contractDependencies":[],"contractKind":"interface","documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"72:71:22","text":"@notice Interface for functions shared across all trusted routers."},"fullyImplemented":false,"id":4319,"linearizedBaseContracts":[4319],"name":"ISenderGuard","nameLocation":"153:12:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"172:67:22","text":"@notice Incoming ETH transfer from an address that is not WETH."},"errorSelector":"0540ddf6","id":4309,"name":"EthTransfer","nameLocation":"250:11:22","nodeType":"ErrorDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[],"src":"261:2:22"},"src":"244:20:22"},{"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"270:91:22","text":"@notice The swap transaction was not validated before the specified deadline timestamp."},"errorSelector":"e08b8af0","id":4312,"name":"SwapDeadline","nameLocation":"372:12:22","nodeType":"ErrorDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[],"src":"384:2:22"},"src":"366:21:22"},{"documentation":{"id":4313,"nodeType":"StructuredDocumentation","src":"393:133:22","text":" @notice Get the first sender which initialized the call to Router.\n @return sender The address of the sender"},"functionSelector":"5e01eb5a","id":4318,"implemented":false,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"540:9:22","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[],"src":"549:2:22"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"sender","nameLocation":"583:6:22","nodeType":"VariableDeclaration","scope":4318,"src":"575:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"575:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"574:16:22"},"scope":4319,"src":"531:60:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4320,"src":"143:450:22","usedErrors":[4309,4312],"usedEvents":[]}],"src":"46:548:22"},"id":22},"contracts/IVault.sol":{"ast":{"absolutePath":"contracts/IVault.sol","exportedSymbols":{"IAuthentication":[3135],"IVault":[4357],"IVaultAdmin":[4647],"IVaultErrors":[5014],"IVaultEvents":[5253],"IVaultExtension":[5672],"IVaultMain":[5808]},"id":4358,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4321,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:23"},{"absolutePath":"contracts/IAuthentication.sol","file":"./IAuthentication.sol","id":4323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4358,"sourceUnit":3136,"src":"72:56:23","symbolAliases":[{"foreign":{"id":4322,"name":"IAuthentication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"81:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVaultExtension.sol","file":"./IVaultExtension.sol","id":4325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4358,"sourceUnit":5673,"src":"129:56:23","symbolAliases":[{"foreign":{"id":4324,"name":"IVaultExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"138:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVaultErrors.sol","file":"./IVaultErrors.sol","id":4327,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4358,"sourceUnit":5015,"src":"186:50:23","symbolAliases":[{"foreign":{"id":4326,"name":"IVaultErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"195:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVaultEvents.sol","file":"./IVaultEvents.sol","id":4329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4358,"sourceUnit":5254,"src":"237:50:23","symbolAliases":[{"foreign":{"id":4328,"name":"IVaultEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"246:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVaultAdmin.sol","file":"./IVaultAdmin.sol","id":4331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4358,"sourceUnit":4648,"src":"288:48:23","symbolAliases":[{"foreign":{"id":4330,"name":"IVaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"297:11:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVaultMain.sol","file":"./IVaultMain.sol","id":4333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4358,"sourceUnit":5809,"src":"337:46:23","symbolAliases":[{"foreign":{"id":4332,"name":"IVaultMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"346:10:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4335,"name":"IVaultMain","nameLocations":["515:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":5808,"src":"515:10:23"},"id":4336,"nodeType":"InheritanceSpecifier","src":"515:10:23"},{"baseName":{"id":4337,"name":"IVaultExtension","nameLocations":["527:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":5672,"src":"527:15:23"},"id":4338,"nodeType":"InheritanceSpecifier","src":"527:15:23"},{"baseName":{"id":4339,"name":"IVaultAdmin","nameLocations":["544:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4647,"src":"544:11:23"},"id":4340,"nodeType":"InheritanceSpecifier","src":"544:11:23"},{"baseName":{"id":4341,"name":"IVaultErrors","nameLocations":["557:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5014,"src":"557:12:23"},"id":4342,"nodeType":"InheritanceSpecifier","src":"557:12:23"},{"baseName":{"id":4343,"name":"IVaultEvents","nameLocations":["571:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5253,"src":"571:12:23"},"id":4344,"nodeType":"InheritanceSpecifier","src":"571:12:23"},{"baseName":{"id":4345,"name":"IAuthentication","nameLocations":["585:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":3135,"src":"585:15:23"},"id":4346,"nodeType":"InheritanceSpecifier","src":"585:15:23"}],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":4334,"nodeType":"StructuredDocumentation","src":"385:110:23","text":"@notice Composite interface for all Vault operations: swap, add/remove liquidity, and associated queries."},"fullyImplemented":false,"id":4357,"linearizedBaseContracts":[4357,3135,5253,5014,4647,5672,5808],"name":"IVault","nameLocation":"505:6:23","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4375,5276],"documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"607:41:23","text":"@return vault The main Vault address."},"functionSelector":"fbfa77cf","id":4356,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"662:5:23","nodeType":"FunctionDefinition","overrides":{"id":4351,"nodeType":"OverrideSpecifier","overrides":[{"id":4349,"name":"IVaultAdmin","nameLocations":["693:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":4647,"src":"693:11:23"},{"id":4350,"name":"IVaultExtension","nameLocations":["706:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":5672,"src":"706:15:23"}],"src":"684:38:23"},"parameters":{"id":4348,"nodeType":"ParameterList","parameters":[],"src":"667:2:23"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4356,"src":"732:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":4353,"nodeType":"UserDefinedTypeName","pathNode":{"id":4352,"name":"IVault","nameLocations":["732:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"732:6:23"},"referencedDeclaration":4357,"src":"732:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"}],"src":"731:8:23"},"scope":4357,"src":"653:87:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4358,"src":"495:247:23","usedErrors":[3126,4659,4664,4669,4674,4683,4689,4692,4695,4698,4701,4704,4707,4716,4719,4722,4725,4728,4731,4734,4737,4740,4743,4746,4749,4752,4755,4758,4764,4771,4778,4781,4784,4794,4804,4811,4814,4817,4820,4830,4840,4847,4850,4853,4856,4859,4862,4865,4868,4871,4876,4881,4886,4889,4892,4895,4898,4901,4906,4911,4916,4922,4928,4931,4939,4945,4951,4954,4957,4960,4965,4975,4985,4992,4995,4998,5001,5004,5007,5010,5013],"usedEvents":[5052,5057,5076,5088,5100,5118,5136,5141,5144,5147,5154,5161,5168,5175,5182,5188,5194,5206,5216,5226,5238,5243,5252]}],"src":"46:697:23"},"id":23},"contracts/IVaultAdmin.sol":{"ast":{"absolutePath":"contracts/IVaultAdmin.sol","exportedSymbols":{"IAuthorizer":[3151],"IERC4626":[259],"IProtocolFeeController":[3691],"IVault":[4357],"IVaultAdmin":[4647]},"id":4648,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4359,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:24"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":4361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4648,"sourceUnit":260,"src":"72:75:24","symbolAliases":[{"foreign":{"id":4360,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"81:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IProtocolFeeController.sol","file":"./IProtocolFeeController.sol","id":4363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4648,"sourceUnit":3692,"src":"149:70:24","symbolAliases":[{"foreign":{"id":4362,"name":"IProtocolFeeController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"158:22:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IAuthorizer.sol","file":"./IAuthorizer.sol","id":4365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4648,"sourceUnit":3152,"src":"220:48:24","symbolAliases":[{"foreign":{"id":4364,"name":"IAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"229:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":4367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4648,"sourceUnit":4358,"src":"269:38:24","symbolAliases":[{"foreign":{"id":4366,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"278:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultAdmin","contractDependencies":[],"contractKind":"interface","documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"309:276:24","text":" @notice Interface for functions defined on the `VaultAdmin` contract.\n @dev `VaultAdmin` is the Proxy extension of `VaultExtension`, and handles the least critical operations,\n as two delegate calls add gas to each call. Most of the permissioned calls are here."},"fullyImplemented":false,"id":4647,"linearizedBaseContracts":[4647],"name":"IVaultAdmin","nameLocation":"596:11:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4369,"nodeType":"StructuredDocumentation","src":"841:206:24","text":" @notice Returns the main Vault address.\n @dev The main Vault contains the entrypoint and main liquidity operation implementations.\n @return vault The address of the main Vault"},"functionSelector":"fbfa77cf","id":4375,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"1061:5:24","nodeType":"FunctionDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[],"src":"1066:2:24"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4375,"src":"1092:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":4372,"nodeType":"UserDefinedTypeName","pathNode":{"id":4371,"name":"IVault","nameLocations":["1092:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"1092:6:24"},"referencedDeclaration":4357,"src":"1092:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1091:8:24"},"scope":4647,"src":"1052:48:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4376,"nodeType":"StructuredDocumentation","src":"1106:326:24","text":" @notice Returns the Vault's pause window end time.\n @dev This value is immutable, and represents the timestamp after which the Vault can no longer be paused\n by governance. Balancer timestamps are 32 bits.\n @return pauseWindowEndTime The timestamp when the Vault's pause window ends"},"functionSelector":"8a8d123a","id":4381,"implemented":false,"kind":"function","modifiers":[],"name":"getPauseWindowEndTime","nameLocation":"1446:21:24","nodeType":"FunctionDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[],"src":"1467:2:24"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"1500:18:24","nodeType":"VariableDeclaration","scope":4381,"src":"1493:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4378,"name":"uint32","nodeType":"ElementaryTypeName","src":"1493:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1492:27:24"},"scope":4647,"src":"1437:83:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"1526:414:24","text":" @notice Returns the Vault's buffer period duration.\n @dev This value is immutable. It represents the period during which, if paused, the Vault will remain paused.\n This ensures there is time available to address whatever issue caused the Vault to be paused. Balancer\n timestamps are 32 bits.\n @return bufferPeriodDuration The length of the buffer period in seconds"},"functionSelector":"20c1fb7a","id":4387,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferPeriodDuration","nameLocation":"1954:23:24","nodeType":"FunctionDefinition","parameters":{"id":4383,"nodeType":"ParameterList","parameters":[],"src":"1977:2:24"},"returnParameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"bufferPeriodDuration","nameLocation":"2010:20:24","nodeType":"VariableDeclaration","scope":4387,"src":"2003:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4384,"name":"uint32","nodeType":"ElementaryTypeName","src":"2003:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2002:29:24"},"scope":4647,"src":"1945:87:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4388,"nodeType":"StructuredDocumentation","src":"2038:321:24","text":" @notice Returns the Vault's buffer period end time.\n @dev This value is immutable. If already paused, the Vault can be unpaused until this timestamp. Balancer\n timestamps are 32 bits.\n @return bufferPeriodEndTime The timestamp after which the Vault remains permanently unpaused"},"functionSelector":"cd51c12f","id":4393,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferPeriodEndTime","nameLocation":"2373:22:24","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[],"src":"2395:2:24"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"bufferPeriodEndTime","nameLocation":"2428:19:24","nodeType":"VariableDeclaration","scope":4393,"src":"2421:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4390,"name":"uint32","nodeType":"ElementaryTypeName","src":"2421:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2420:28:24"},"scope":4647,"src":"2364:85:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4394,"nodeType":"StructuredDocumentation","src":"2455:193:24","text":" @notice Get the minimum number of tokens in a pool.\n @dev We expect the vast majority of pools to be 2-token.\n @return minTokens The minimum token count of a pool"},"functionSelector":"a8175b27","id":4399,"implemented":false,"kind":"function","modifiers":[],"name":"getMinimumPoolTokens","nameLocation":"2662:20:24","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[],"src":"2682:2:24"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"minTokens","nameLocation":"2716:9:24","nodeType":"VariableDeclaration","scope":4399,"src":"2708:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2707:19:24"},"scope":4647,"src":"2653:74:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"2733:129:24","text":" @notice Get the maximum number of tokens in a pool.\n @return maxTokens The maximum token count of a pool"},"functionSelector":"2e42f4d5","id":4405,"implemented":false,"kind":"function","modifiers":[],"name":"getMaximumPoolTokens","nameLocation":"2876:20:24","nodeType":"FunctionDefinition","parameters":{"id":4401,"nodeType":"ParameterList","parameters":[],"src":"2896:2:24"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"maxTokens","nameLocation":"2930:9:24","nodeType":"VariableDeclaration","scope":4405,"src":"2922:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2922:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2921:19:24"},"scope":4647,"src":"2867:74:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":4406,"nodeType":"StructuredDocumentation","src":"2947:439:24","text":" @notice Get the minimum total supply of pool tokens (BPT) for an initialized pool.\n @dev This prevents pools from being completely drained. When the pool is initialized, this minimum amount of BPT\n is minted to the zero address. This is an 18-decimal floating point number; BPT are always 18 decimals.\n @return poolMinimumTotalSupply The minimum total supply a pool can have after initialization"},"functionSelector":"d0965a6b","id":4411,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolMinimumTotalSupply","nameLocation":"3400:25:24","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[],"src":"3425:2:24"},"returnParameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"poolMinimumTotalSupply","nameLocation":"3459:22:24","nodeType":"VariableDeclaration","scope":4411,"src":"3451:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:32:24"},"scope":4647,"src":"3391:92:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"3489:502:24","text":" @notice Get the minimum total supply of an ERC4626 wrapped token buffer in the Vault.\n @dev This prevents buffers from being completely drained. When the buffer is initialized, this minimum number\n of shares is added to the shares resulting from the initial deposit. Buffer total supply accounting is internal\n to the Vault, as buffers are not tokenized.\n @return bufferMinimumTotalSupply The minimum total supply a buffer can have after initialization"},"functionSelector":"26a8a991","id":4417,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferMinimumTotalSupply","nameLocation":"4005:27:24","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[],"src":"4032:2:24"},"returnParameters":{"id":4416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"bufferMinimumTotalSupply","nameLocation":"4066:24:24","nodeType":"VariableDeclaration","scope":4417,"src":"4058:32:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4058:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4057:34:24"},"scope":4647,"src":"3996:96:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"4098:291:24","text":" @notice Get the minimum trade amount in a pool operation.\n @dev This limit is applied to the 18-decimal \"upscaled\" amount in any operation (swap, add/remove liquidity).\n @return minimumTradeAmount The minimum trade amount as an 18-decimal floating point number"},"functionSelector":"e2cb0ba0","id":4423,"implemented":false,"kind":"function","modifiers":[],"name":"getMinimumTradeAmount","nameLocation":"4403:21:24","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[],"src":"4424:2:24"},"returnParameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"minimumTradeAmount","nameLocation":"4458:18:24","nodeType":"VariableDeclaration","scope":4423,"src":"4450:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:28:24"},"scope":4647,"src":"4394:84:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4424,"nodeType":"StructuredDocumentation","src":"4484:271:24","text":" @notice Get the minimum wrap amount in a buffer operation.\n @dev This limit is applied to the wrap operation amount, in native underlying token decimals.\n @return minimumWrapAmount The minimum wrap amount in native underlying token decimals"},"functionSelector":"53956aa2","id":4429,"implemented":false,"kind":"function","modifiers":[],"name":"getMinimumWrapAmount","nameLocation":"4769:20:24","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[],"src":"4789:2:24"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"minimumWrapAmount","nameLocation":"4823:17:24","nodeType":"VariableDeclaration","scope":4429,"src":"4815:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4814:27:24"},"scope":4647,"src":"4760:82:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4430,"nodeType":"StructuredDocumentation","src":"5069:529:24","text":" @notice Indicates whether the Vault is paused.\n @dev If the Vault is paused, all non-Recovery Mode state-changing operations on pools will revert. Note that\n ERC4626 buffers and the Vault have separate and independent pausing mechanisms. Pausing the Vault does not\n also pause buffers (though we anticipate they would likely be paused and unpaused together). Call\n `areBuffersPaused` to check the pause state of the buffers.\n @return vaultPaused True if the Vault is paused"},"functionSelector":"098401f5","id":4435,"implemented":false,"kind":"function","modifiers":[],"name":"isVaultPaused","nameLocation":"5612:13:24","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[],"src":"5625:2:24"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"vaultPaused","nameLocation":"5656:11:24","nodeType":"VariableDeclaration","scope":4435,"src":"5651:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4432,"name":"bool","nodeType":"ElementaryTypeName","src":"5651:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5650:18:24"},"scope":4647,"src":"5603:66:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"5675:400:24","text":" @notice Returns the paused status, and end times of the Vault's pause window and buffer period.\n @dev Balancer timestamps are 32 bits.\n @return vaultPaused True if the Vault is paused\n @return vaultPauseWindowEndTime The timestamp of the end of the Vault's pause window\n @return vaultBufferPeriodEndTime The timestamp of the end of the Vault's buffer period"},"functionSelector":"85c8c015","id":4445,"implemented":false,"kind":"function","modifiers":[],"name":"getVaultPausedState","nameLocation":"6089:19:24","nodeType":"FunctionDefinition","parameters":{"id":4437,"nodeType":"ParameterList","parameters":[],"src":"6108:2:24"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"vaultPaused","nameLocation":"6163:11:24","nodeType":"VariableDeclaration","scope":4445,"src":"6158:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4438,"name":"bool","nodeType":"ElementaryTypeName","src":"6158:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"vaultPauseWindowEndTime","nameLocation":"6183:23:24","nodeType":"VariableDeclaration","scope":4445,"src":"6176:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4440,"name":"uint32","nodeType":"ElementaryTypeName","src":"6176:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"vaultBufferPeriodEndTime","nameLocation":"6215:24:24","nodeType":"VariableDeclaration","scope":4445,"src":"6208:31:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4442,"name":"uint32","nodeType":"ElementaryTypeName","src":"6208:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6157:83:24"},"scope":4647,"src":"6080:161:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"6247:517:24","text":" @notice Pause the Vault: an emergency action which disables all operational state-changing functions on pools.\n @dev This is a permissioned function that will only work during the Pause Window set during deployment.\n Note that ERC4626 buffer operations have an independent pause mechanism, which is not affected by pausing\n the Vault. Custom routers could still wrap/unwrap using buffers while the Vault is paused, unless buffers\n are also paused (with `pauseVaultBuffers`)."},"functionSelector":"9e0879c2","id":4449,"implemented":false,"kind":"function","modifiers":[],"name":"pauseVault","nameLocation":"6778:10:24","nodeType":"FunctionDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[],"src":"6788:2:24"},"returnParameters":{"id":4448,"nodeType":"ParameterList","parameters":[],"src":"6799:0:24"},"scope":4647,"src":"6769:31:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"6806:569:24","text":" @notice Reverse a `pause` operation, and restore Vault pool operations to normal functionality.\n @dev This is a permissioned function that will only work on a paused Vault within the Buffer Period set during\n deployment. Note that the Vault will automatically unpause after the Buffer Period expires. As noted above,\n ERC4626 buffers and Vault operations on pools are independent. Unpausing the Vault does not reverse\n `pauseVaultBuffers`. If buffers were also paused, they will remain in that state until explicitly unpaused."},"functionSelector":"0b7562be","id":4453,"implemented":false,"kind":"function","modifiers":[],"name":"unpauseVault","nameLocation":"7389:12:24","nodeType":"FunctionDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[],"src":"7401:2:24"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[],"src":"7412:0:24"},"scope":4647,"src":"7380:33:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4454,"nodeType":"StructuredDocumentation","src":"7639:276:24","text":" @notice Pause the Pool: an emergency action which disables all pool functions.\n @dev This is a permissioned function that will only work during the Pause Window set during pool factory\n deployment.\n @param pool The pool being paused"},"functionSelector":"55aca1ec","id":4459,"implemented":false,"kind":"function","modifiers":[],"name":"pausePool","nameLocation":"7929:9:24","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"pool","nameLocation":"7947:4:24","nodeType":"VariableDeclaration","scope":4459,"src":"7939:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"7939:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7938:14:24"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[],"src":"7961:0:24"},"scope":4647,"src":"7920:42:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4460,"nodeType":"StructuredDocumentation","src":"7968:366:24","text":" @notice Reverse a `pause` operation, and restore the Pool to normal functionality.\n @dev This is a permissioned function that will only work on a paused Pool within the Buffer Period set during\n deployment. Note that the Pool will automatically unpause after the Buffer Period expires.\n @param pool The pool being unpaused"},"functionSelector":"f21c38cd","id":4465,"implemented":false,"kind":"function","modifiers":[],"name":"unpausePool","nameLocation":"8348:11:24","nodeType":"FunctionDefinition","parameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"pool","nameLocation":"8368:4:24","nodeType":"VariableDeclaration","scope":4465,"src":"8360:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4461,"name":"address","nodeType":"ElementaryTypeName","src":"8360:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8359:14:24"},"returnParameters":{"id":4464,"nodeType":"ParameterList","parameters":[],"src":"8382:0:24"},"scope":4647,"src":"8339:44:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4466,"nodeType":"StructuredDocumentation","src":"8606:520:24","text":" @notice Assigns a new static swap fee percentage to the specified pool.\n @dev This is a permissioned function, disabled if the pool is paused. The swap fee percentage must be within\n the bounds specified by the pool's implementation of `ISwapFeePercentageBounds`.\n Emits the SwapFeePercentageChanged event.\n @param pool The address of the pool for which the static swap fee will be changed\n @param swapFeePercentage The new swap fee percentage to apply to the pool"},"functionSelector":"d15126ba","id":4473,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticSwapFeePercentage","nameLocation":"9140:26:24","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"pool","nameLocation":"9175:4:24","nodeType":"VariableDeclaration","scope":4473,"src":"9167:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4467,"name":"address","nodeType":"ElementaryTypeName","src":"9167:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"9189:17:24","nodeType":"VariableDeclaration","scope":4473,"src":"9181:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"9181:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9166:41:24"},"returnParameters":{"id":4472,"nodeType":"ParameterList","parameters":[],"src":"9216:0:24"},"scope":4647,"src":"9131:86:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"9223:463:24","text":" @notice Collects accumulated aggregate swap and yield fees for the specified pool.\n @dev Fees are sent to the ProtocolFeeController address.\n @param pool The pool on which all aggregate fees should be collected\n @return swapFeeAmounts An array with the total swap fees collected, sorted in token registration order\n @return yieldFeeAmounts An array with the total yield fees collected, sorted in token registration order"},"functionSelector":"8f4ab9ca","id":4485,"implemented":false,"kind":"function","modifiers":[],"name":"collectAggregateFees","nameLocation":"9700:20:24","nodeType":"FunctionDefinition","parameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"pool","nameLocation":"9738:4:24","nodeType":"VariableDeclaration","scope":4485,"src":"9730:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4475,"name":"address","nodeType":"ElementaryTypeName","src":"9730:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9720:28:24"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"swapFeeAmounts","nameLocation":"9784:14:24","nodeType":"VariableDeclaration","scope":4485,"src":"9767:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"9767:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"nodeType":"ArrayTypeName","src":"9767:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4483,"mutability":"mutable","name":"yieldFeeAmounts","nameLocation":"9817:15:24","nodeType":"VariableDeclaration","scope":4485,"src":"9800:32:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"9800:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4482,"nodeType":"ArrayTypeName","src":"9800:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9766:67:24"},"scope":4647,"src":"9691:143:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"9840:755:24","text":" @notice Update an aggregate swap fee percentage.\n @dev Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee\n for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's\n fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also\n that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol).\n Emits an `AggregateSwapFeePercentageChanged` event.\n @param pool The pool whose swap fee percentage will be updated\n @param newAggregateSwapFeePercentage The new aggregate swap fee percentage"},"functionSelector":"5e0b06f4","id":4493,"implemented":false,"kind":"function","modifiers":[],"name":"updateAggregateSwapFeePercentage","nameLocation":"10609:32:24","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"pool","nameLocation":"10650:4:24","nodeType":"VariableDeclaration","scope":4493,"src":"10642:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4487,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4490,"mutability":"mutable","name":"newAggregateSwapFeePercentage","nameLocation":"10664:29:24","nodeType":"VariableDeclaration","scope":4493,"src":"10656:37:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"10656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10641:53:24"},"returnParameters":{"id":4492,"nodeType":"ParameterList","parameters":[],"src":"10703:0:24"},"scope":4647,"src":"10600:104:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4494,"nodeType":"StructuredDocumentation","src":"10710:760:24","text":" @notice Update an aggregate yield fee percentage.\n @dev Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee\n for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's\n fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also\n that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol).\n Emits an `AggregateYieldFeePercentageChanged` event.\n @param pool The pool whose yield fee percentage will be updated\n @param newAggregateYieldFeePercentage The new aggregate yield fee percentage"},"functionSelector":"e253670a","id":4501,"implemented":false,"kind":"function","modifiers":[],"name":"updateAggregateYieldFeePercentage","nameLocation":"11484:33:24","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"pool","nameLocation":"11526:4:24","nodeType":"VariableDeclaration","scope":4501,"src":"11518:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4495,"name":"address","nodeType":"ElementaryTypeName","src":"11518:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"newAggregateYieldFeePercentage","nameLocation":"11540:30:24","nodeType":"VariableDeclaration","scope":4501,"src":"11532:38:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"11532:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11517:54:24"},"returnParameters":{"id":4500,"nodeType":"ParameterList","parameters":[],"src":"11580:0:24"},"scope":4647,"src":"11475:106:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"11587:249:24","text":" @notice Sets a new Protocol Fee Controller for the Vault.\n @dev This is a permissioned call. Emits a `ProtocolFeeControllerChanged` event.\n @param newProtocolFeeController The address of the new Protocol Fee Controller"},"functionSelector":"2d771389","id":4508,"implemented":false,"kind":"function","modifiers":[],"name":"setProtocolFeeController","nameLocation":"11850:24:24","nodeType":"FunctionDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"newProtocolFeeController","nameLocation":"11898:24:24","nodeType":"VariableDeclaration","scope":4508,"src":"11875:47:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeeController_$3691","typeString":"contract IProtocolFeeController"},"typeName":{"id":4504,"nodeType":"UserDefinedTypeName","pathNode":{"id":4503,"name":"IProtocolFeeController","nameLocations":["11875:22:24"],"nodeType":"IdentifierPath","referencedDeclaration":3691,"src":"11875:22:24"},"referencedDeclaration":3691,"src":"11875:22:24","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeeController_$3691","typeString":"contract IProtocolFeeController"}},"visibility":"internal"}],"src":"11874:49:24"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[],"src":"11932:0:24"},"scope":4647,"src":"11841:92:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4509,"nodeType":"StructuredDocumentation","src":"12160:557:24","text":" @notice Enable recovery mode for a pool.\n @dev This is a permissioned function. It enables a safe proportional withdrawal, with no external calls.\n Since there are no external calls, ensuring that entering Recovery Mode cannot fail, we cannot compute and so\n must forfeit any yield fees between the last operation and enabling Recovery Mode. For the same reason, live\n balances cannot be updated while in Recovery Mode, as doing so might cause withdrawals to fail.\n @param pool The address of the pool"},"functionSelector":"dc3f574e","id":4514,"implemented":false,"kind":"function","modifiers":[],"name":"enableRecoveryMode","nameLocation":"12731:18:24","nodeType":"FunctionDefinition","parameters":{"id":4512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"pool","nameLocation":"12758:4:24","nodeType":"VariableDeclaration","scope":4514,"src":"12750:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4510,"name":"address","nodeType":"ElementaryTypeName","src":"12750:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12749:14:24"},"returnParameters":{"id":4513,"nodeType":"ParameterList","parameters":[],"src":"12772:0:24"},"scope":4647,"src":"12722:51:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"12779:409:24","text":" @notice Disable recovery mode for a pool.\n @dev This is a permissioned function. It re-syncs live balances (which could not be updated during\n Recovery Mode), forfeiting any yield fees that accrued while enabled. It makes external calls, and could\n potentially fail if there is an issue with any associated Rate Providers.\n @param pool The address of the pool"},"functionSelector":"bffb78b2","id":4520,"implemented":false,"kind":"function","modifiers":[],"name":"disableRecoveryMode","nameLocation":"13202:19:24","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"pool","nameLocation":"13230:4:24","nodeType":"VariableDeclaration","scope":4520,"src":"13222:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4516,"name":"address","nodeType":"ElementaryTypeName","src":"13222:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13221:14:24"},"returnParameters":{"id":4519,"nodeType":"ParameterList","parameters":[],"src":"13244:0:24"},"scope":4647,"src":"13193:52:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4521,"nodeType":"StructuredDocumentation","src":"13476:653:24","text":" @notice Disables query functionality on the Vault. Can only be called by governance.\n @dev The query functions rely on a specific EVM feature to detect static calls. Query operations are exempt from\n settlement constraints, so it's critical that no state changes can occur. We retain the ability to disable\n queries in the unlikely event that EVM changes violate its assumptions (perhaps on an L2).\n This function can be acted upon as an emergency measure in ambiguous contexts where it's not 100% clear whether\n disabling queries is completely necessary; queries can still be re-enabled after this call."},"functionSelector":"de1a36a6","id":4524,"implemented":false,"kind":"function","modifiers":[],"name":"disableQuery","nameLocation":"14143:12:24","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[],"src":"14155:2:24"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[],"src":"14166:0:24"},"scope":4647,"src":"14134:33:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4525,"nodeType":"StructuredDocumentation","src":"14173:223:24","text":" @notice Disables query functionality permanently on the Vault. Can only be called by governance.\n @dev Shall only be used when there is no doubt that queries pose a fundamental threat to the system."},"functionSelector":"821440f2","id":4528,"implemented":false,"kind":"function","modifiers":[],"name":"disableQueryPermanently","nameLocation":"14410:23:24","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[],"src":"14433:2:24"},"returnParameters":{"id":4527,"nodeType":"ParameterList","parameters":[],"src":"14444:0:24"},"scope":4647,"src":"14401:44:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4529,"nodeType":"StructuredDocumentation","src":"14451:166:24","text":" @notice Enables query functionality on the Vault. Can only be called by governance.\n @dev Only works if queries are not permanently disabled."},"functionSelector":"e0d55605","id":4532,"implemented":false,"kind":"function","modifiers":[],"name":"enableQuery","nameLocation":"14631:11:24","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[],"src":"14642:2:24"},"returnParameters":{"id":4531,"nodeType":"ParameterList","parameters":[],"src":"14653:0:24"},"scope":4647,"src":"14622:32:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"14881:590:24","text":" @notice Indicates whether the Vault buffers are paused.\n @dev When buffers are paused, all buffer operations (i.e., calls on the Router with `isBuffer` true)\n will revert. Pausing buffers is reversible. Note that ERC4626 buffers and the Vault have separate and\n independent pausing mechanisms. Pausing the Vault does not also pause buffers (though we anticipate they\n would likely be paused and unpaused together). Call `isVaultPaused` to check the pause state of the Vault.\n @return buffersPaused True if the Vault buffers are paused"},"functionSelector":"55cba7fe","id":4538,"implemented":false,"kind":"function","modifiers":[],"name":"areBuffersPaused","nameLocation":"15485:16:24","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[],"src":"15501:2:24"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"buffersPaused","nameLocation":"15532:13:24","nodeType":"VariableDeclaration","scope":4538,"src":"15527:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4535,"name":"bool","nodeType":"ElementaryTypeName","src":"15527:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15526:20:24"},"scope":4647,"src":"15476:71:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4539,"nodeType":"StructuredDocumentation","src":"15553:619:24","text":" @notice Pauses native vault buffers globally.\n @dev When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's\n `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. Currently it's not\n possible to pause vault buffers individually.\n This is a permissioned call, and is reversible (see `unpauseVaultBuffers`). Note that the Vault has a separate\n and independent pausing mechanism. It is possible to pause the Vault (i.e. pool operations), without affecting\n buffers, and vice versa."},"functionSelector":"e085c5a8","id":4542,"implemented":false,"kind":"function","modifiers":[],"name":"pauseVaultBuffers","nameLocation":"16186:17:24","nodeType":"FunctionDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[],"src":"16203:2:24"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[],"src":"16214:0:24"},"scope":4647,"src":"16177:38:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"16221:545:24","text":" @notice Unpauses native vault buffers globally.\n @dev When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's\n `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. As noted above,\n ERC4626 buffers and Vault operations on pools are independent. Unpausing buffers does not reverse `pauseVault`.\n If the Vault was also paused, it will remain in that state until explicitly unpaused.\n This is a permissioned call."},"functionSelector":"b9212b49","id":4546,"implemented":false,"kind":"function","modifiers":[],"name":"unpauseVaultBuffers","nameLocation":"16780:19:24","nodeType":"FunctionDefinition","parameters":{"id":4544,"nodeType":"ParameterList","parameters":[],"src":"16799:2:24"},"returnParameters":{"id":4545,"nodeType":"ParameterList","parameters":[],"src":"16810:0:24"},"scope":4647,"src":"16771:40:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"16817:860:24","text":" @notice Initializes buffer for the given wrapped token.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @param amountUnderlyingRaw Amount of underlying tokens that will be deposited into the buffer\n @param amountWrappedRaw Amount of wrapped tokens that will be deposited into the buffer\n @param minIssuedShares Minimum amount of shares to receive from the buffer, expressed in underlying token\n native decimals\n @param sharesOwner Address that will own the deposited liquidity. Only this address will be able to remove\n liquidity from the buffer\n @return issuedShares the amount of tokens sharesOwner has in the buffer, expressed in underlying token amounts.\n (it is the BPT of an internal ERC4626 buffer). It is expressed in underlying token native decimals."},"functionSelector":"653eb3b0","id":4563,"implemented":false,"kind":"function","modifiers":[],"name":"initializeBuffer","nameLocation":"17691:16:24","nodeType":"FunctionDefinition","parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"wrappedToken","nameLocation":"17726:12:24","nodeType":"VariableDeclaration","scope":4563,"src":"17717:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4549,"nodeType":"UserDefinedTypeName","pathNode":{"id":4548,"name":"IERC4626","nameLocations":["17717:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"17717:8:24"},"referencedDeclaration":259,"src":"17717:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4552,"mutability":"mutable","name":"amountUnderlyingRaw","nameLocation":"17756:19:24","nodeType":"VariableDeclaration","scope":4563,"src":"17748:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"17748:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"amountWrappedRaw","nameLocation":"17793:16:24","nodeType":"VariableDeclaration","scope":4563,"src":"17785:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"17785:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"minIssuedShares","nameLocation":"17827:15:24","nodeType":"VariableDeclaration","scope":4563,"src":"17819:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"17819:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4558,"mutability":"mutable","name":"sharesOwner","nameLocation":"17860:11:24","nodeType":"VariableDeclaration","scope":4563,"src":"17852:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4557,"name":"address","nodeType":"ElementaryTypeName","src":"17852:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17707:170:24"},"returnParameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"issuedShares","nameLocation":"17904:12:24","nodeType":"VariableDeclaration","scope":4563,"src":"17896:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"17896:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17895:22:24"},"scope":4647,"src":"17682:236:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"17924:1010:24","text":" @notice Adds liquidity to an internal ERC4626 buffer in the Vault, proportionally.\n @dev The buffer needs to be initialized beforehand.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @param maxAmountUnderlyingInRaw Maximum amount of underlying tokens to add to the buffer. It is expressed in\n underlying token native decimals\n @param maxAmountWrappedInRaw Maximum amount of wrapped tokens to add to the buffer. It is expressed in wrapped\n token native decimals\n @param exactSharesToIssue The value in underlying tokens that `sharesOwner` wants to add to the buffer,\n in underlying token decimals\n @param sharesOwner Address that will own the deposited liquidity. Only this address will be able to remove\n liquidity from the buffer\n @return amountUnderlyingRaw Amount of underlying tokens deposited into the buffer\n @return amountWrappedRaw Amount of wrapped tokens deposited into the buffer"},"functionSelector":"e2a92b1a","id":4582,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityToBuffer","nameLocation":"18948:20:24","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"wrappedToken","nameLocation":"18987:12:24","nodeType":"VariableDeclaration","scope":4582,"src":"18978:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4566,"nodeType":"UserDefinedTypeName","pathNode":{"id":4565,"name":"IERC4626","nameLocations":["18978:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"18978:8:24"},"referencedDeclaration":259,"src":"18978:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4569,"mutability":"mutable","name":"maxAmountUnderlyingInRaw","nameLocation":"19017:24:24","nodeType":"VariableDeclaration","scope":4582,"src":"19009:32:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint256","nodeType":"ElementaryTypeName","src":"19009:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4571,"mutability":"mutable","name":"maxAmountWrappedInRaw","nameLocation":"19059:21:24","nodeType":"VariableDeclaration","scope":4582,"src":"19051:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"19051:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4573,"mutability":"mutable","name":"exactSharesToIssue","nameLocation":"19098:18:24","nodeType":"VariableDeclaration","scope":4582,"src":"19090:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"19090:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"sharesOwner","nameLocation":"19134:11:24","nodeType":"VariableDeclaration","scope":4582,"src":"19126:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4574,"name":"address","nodeType":"ElementaryTypeName","src":"19126:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18968:183:24"},"returnParameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"amountUnderlyingRaw","nameLocation":"19178:19:24","nodeType":"VariableDeclaration","scope":4582,"src":"19170:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"19170:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4580,"mutability":"mutable","name":"amountWrappedRaw","nameLocation":"19207:16:24","nodeType":"VariableDeclaration","scope":4582,"src":"19199:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"19199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19169:55:24"},"scope":4647,"src":"18939:286:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"19231:1458:24","text":" @notice Removes liquidity from an internal ERC4626 buffer in the Vault.\n @dev Only proportional exits are supported, and the sender has to be the owner of the shares.\n This function unlocks the Vault just for this operation; it does not work with a Router as an entrypoint.\n Pre-conditions:\n - The buffer needs to be initialized.\n - sharesOwner is the original msg.sender, it needs to be checked in the Router. That's why\n   this call is authenticated; only routers approved by the DAO can remove the liquidity of a buffer.\n - The buffer needs to have some liquidity and have its asset registered in `_bufferAssets` storage.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @param sharesToRemove Amount of shares to remove from the buffer. Cannot be greater than sharesOwner's\n total shares. It is expressed in underlying token native decimals\n @param minAmountUnderlyingOutRaw Minimum amount of underlying tokens to receive from the buffer. It is expressed\n in underlying token native decimals\n @param minAmountWrappedOutRaw Minimum amount of wrapped tokens to receive from the buffer. It is expressed in\n wrapped token native decimals\n @return removedUnderlyingBalanceRaw Amount of underlying tokens returned to the user\n @return removedWrappedBalanceRaw Amount of wrapped tokens returned to the user"},"functionSelector":"ebc7955c","id":4599,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityFromBuffer","nameLocation":"20703:25:24","nodeType":"FunctionDefinition","parameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"wrappedToken","nameLocation":"20747:12:24","nodeType":"VariableDeclaration","scope":4599,"src":"20738:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4585,"nodeType":"UserDefinedTypeName","pathNode":{"id":4584,"name":"IERC4626","nameLocations":["20738:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"20738:8:24"},"referencedDeclaration":259,"src":"20738:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4588,"mutability":"mutable","name":"sharesToRemove","nameLocation":"20777:14:24","nodeType":"VariableDeclaration","scope":4599,"src":"20769:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"20769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4590,"mutability":"mutable","name":"minAmountUnderlyingOutRaw","nameLocation":"20809:25:24","nodeType":"VariableDeclaration","scope":4599,"src":"20801:33:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4589,"name":"uint256","nodeType":"ElementaryTypeName","src":"20801:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"minAmountWrappedOutRaw","nameLocation":"20852:22:24","nodeType":"VariableDeclaration","scope":4599,"src":"20844:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"20844:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20728:152:24"},"returnParameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"removedUnderlyingBalanceRaw","nameLocation":"20907:27:24","nodeType":"VariableDeclaration","scope":4599,"src":"20899:35:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"20899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"removedWrappedBalanceRaw","nameLocation":"20944:24:24","nodeType":"VariableDeclaration","scope":4599,"src":"20936:32:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"20936:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20898:71:24"},"scope":4647,"src":"20694:276:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4600,"nodeType":"StructuredDocumentation","src":"20976:382:24","text":" @notice Returns the asset registered for a given wrapped token.\n @dev The asset can never change after buffer initialization.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @return underlyingToken Address of the underlying token registered for the wrapper; `address(0)` if the buffer\n has not been initialized."},"functionSelector":"0387587d","id":4608,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferAsset","nameLocation":"21372:14:24","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"wrappedToken","nameLocation":"21396:12:24","nodeType":"VariableDeclaration","scope":4608,"src":"21387:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4602,"nodeType":"UserDefinedTypeName","pathNode":{"id":4601,"name":"IERC4626","nameLocations":["21387:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"21387:8:24"},"referencedDeclaration":259,"src":"21387:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"21386:23:24"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"underlyingToken","nameLocation":"21441:15:24","nodeType":"VariableDeclaration","scope":4608,"src":"21433:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4605,"name":"address","nodeType":"ElementaryTypeName","src":"21433:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21432:25:24"},"scope":4647,"src":"21363:95:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4609,"nodeType":"StructuredDocumentation","src":"21464:441:24","text":" @notice Returns the shares (internal buffer BPT) of a liquidity owner: a user that deposited assets\n in the buffer.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @param liquidityOwner Address of the user that owns liquidity in the wrapped token's buffer\n @return ownerShares Amount of shares allocated to the liquidity owner, in native underlying token decimals"},"functionSelector":"9385e39a","id":4619,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferOwnerShares","nameLocation":"21919:20:24","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"wrappedToken","nameLocation":"21958:12:24","nodeType":"VariableDeclaration","scope":4619,"src":"21949:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4611,"nodeType":"UserDefinedTypeName","pathNode":{"id":4610,"name":"IERC4626","nameLocations":["21949:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"21949:8:24"},"referencedDeclaration":259,"src":"21949:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"liquidityOwner","nameLocation":"21988:14:24","nodeType":"VariableDeclaration","scope":4619,"src":"21980:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4613,"name":"address","nodeType":"ElementaryTypeName","src":"21980:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21939:69:24"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"ownerShares","nameLocation":"22040:11:24","nodeType":"VariableDeclaration","scope":4619,"src":"22032:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"22032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22031:21:24"},"scope":4647,"src":"21910:143:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"22059:281:24","text":" @notice Returns the supply shares (internal buffer BPT) of the ERC4626 buffer.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @return bufferShares Amount of supply shares of the buffer, in native underlying token decimals"},"functionSelector":"f2784e07","id":4628,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferTotalShares","nameLocation":"22354:20:24","nodeType":"FunctionDefinition","parameters":{"id":4624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"wrappedToken","nameLocation":"22384:12:24","nodeType":"VariableDeclaration","scope":4628,"src":"22375:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4622,"nodeType":"UserDefinedTypeName","pathNode":{"id":4621,"name":"IERC4626","nameLocations":["22375:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"22375:8:24"},"referencedDeclaration":259,"src":"22375:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"22374:23:24"},"returnParameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4626,"mutability":"mutable","name":"bufferShares","nameLocation":"22429:12:24","nodeType":"VariableDeclaration","scope":4628,"src":"22421:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"22421:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22420:22:24"},"scope":4647,"src":"22345:98:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4629,"nodeType":"StructuredDocumentation","src":"22449:521:24","text":" @notice Returns the amount of underlying and wrapped tokens deposited in the internal buffer of the Vault.\n @dev All values are in native token decimals of the wrapped or underlying tokens.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @return underlyingBalanceRaw Amount of underlying tokens deposited into the buffer, in native token decimals\n @return wrappedBalanceRaw Amount of wrapped tokens deposited into the buffer, in native token decimals"},"functionSelector":"4021fe0f","id":4639,"implemented":false,"kind":"function","modifiers":[],"name":"getBufferBalance","nameLocation":"22984:16:24","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"wrappedToken","nameLocation":"23019:12:24","nodeType":"VariableDeclaration","scope":4639,"src":"23010:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4631,"nodeType":"UserDefinedTypeName","pathNode":{"id":4630,"name":"IERC4626","nameLocations":["23010:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"23010:8:24"},"referencedDeclaration":259,"src":"23010:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"23000:37:24"},"returnParameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"underlyingBalanceRaw","nameLocation":"23069:20:24","nodeType":"VariableDeclaration","scope":4639,"src":"23061:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"23061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4637,"mutability":"mutable","name":"wrappedBalanceRaw","nameLocation":"23099:17:24","nodeType":"VariableDeclaration","scope":4639,"src":"23091:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"23091:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23060:57:24"},"scope":4647,"src":"22975:143:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"23342:202:24","text":" @notice Sets a new Authorizer for the Vault.\n @dev This is a permissioned call. Emits an `AuthorizerChanged` event.\n @param newAuthorizer The address of the new authorizer"},"functionSelector":"058a628f","id":4646,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nameLocation":"23558:13:24","nodeType":"FunctionDefinition","parameters":{"id":4644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"newAuthorizer","nameLocation":"23584:13:24","nodeType":"VariableDeclaration","scope":4646,"src":"23572:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$3151","typeString":"contract IAuthorizer"},"typeName":{"id":4642,"nodeType":"UserDefinedTypeName","pathNode":{"id":4641,"name":"IAuthorizer","nameLocations":["23572:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":3151,"src":"23572:11:24"},"referencedDeclaration":3151,"src":"23572:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$3151","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"23571:27:24"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[],"src":"23607:0:24"},"scope":4647,"src":"23549:59:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4648,"src":"586:23024:24","usedErrors":[],"usedEvents":[]}],"src":"46:23565:24"},"id":24},"contracts/IVaultErrors.sol":{"ast":{"absolutePath":"contracts/IVaultErrors.sol","exportedSymbols":{"IERC20":[337],"IERC4626":[259],"IVaultErrors":[5014]},"id":5015,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4649,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:25"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":4651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5015,"sourceUnit":260,"src":"72:75:25","symbolAliases":[{"foreign":{"id":4650,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"81:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5015,"sourceUnit":338,"src":"148:72:25","symbolAliases":[{"foreign":{"id":4652,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"157:6:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultErrors","contractDependencies":[],"contractKind":"interface","documentation":{"id":4654,"nodeType":"StructuredDocumentation","src":"222:94:25","text":"@notice Errors are declared inside an interface (namespace) to improve DX with Typechain."},"fullyImplemented":true,"id":5014,"linearizedBaseContracts":[5014],"name":"IVaultErrors","nameLocation":"326:12:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4655,"nodeType":"StructuredDocumentation","src":"576:149:25","text":" @notice A pool has already been registered. `registerPool` may only be called once.\n @param pool The already registered pool"},"errorSelector":"db771c80","id":4659,"name":"PoolAlreadyRegistered","nameLocation":"736:21:25","nodeType":"ErrorDefinition","parameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"pool","nameLocation":"766:4:25","nodeType":"VariableDeclaration","scope":4659,"src":"758:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4656,"name":"address","nodeType":"ElementaryTypeName","src":"758:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"757:14:25"},"src":"730:42:25"},{"documentation":{"id":4660,"nodeType":"StructuredDocumentation","src":"778:149:25","text":" @notice A pool has already been initialized. `initialize` may only be called once.\n @param pool The already initialized pool"},"errorSelector":"218e3747","id":4664,"name":"PoolAlreadyInitialized","nameLocation":"938:22:25","nodeType":"ErrorDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"pool","nameLocation":"969:4:25","nodeType":"VariableDeclaration","scope":4664,"src":"961:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4661,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"960:14:25"},"src":"932:43:25"},{"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"981:99:25","text":" @notice A pool has not been registered.\n @param pool The unregistered pool"},"errorSelector":"9e51bd5c","id":4669,"name":"PoolNotRegistered","nameLocation":"1091:17:25","nodeType":"ErrorDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"pool","nameLocation":"1117:4:25","nodeType":"VariableDeclaration","scope":4669,"src":"1109:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4666,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1108:14:25"},"src":"1085:38:25"},{"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"1129:112:25","text":" @notice A referenced pool has not been initialized.\n @param pool The uninitialized pool"},"errorSelector":"4bdace13","id":4674,"name":"PoolNotInitialized","nameLocation":"1252:18:25","nodeType":"ErrorDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"pool","nameLocation":"1279:4:25","nodeType":"VariableDeclaration","scope":4674,"src":"1271:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4671,"name":"address","nodeType":"ElementaryTypeName","src":"1271:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1270:14:25"},"src":"1246:39:25"},{"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"1291:274:25","text":" @notice A hook contract rejected a pool on registration.\n @param poolHooksContract Address of the hook contract that rejected the pool registration\n @param pool Address of the rejected pool\n @param poolFactory Address of the pool factory"},"errorSelector":"fa93d814","id":4683,"name":"HookRegistrationFailed","nameLocation":"1576:22:25","nodeType":"ErrorDefinition","parameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"poolHooksContract","nameLocation":"1607:17:25","nodeType":"VariableDeclaration","scope":4683,"src":"1599:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4676,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"pool","nameLocation":"1634:4:25","nodeType":"VariableDeclaration","scope":4683,"src":"1626:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4678,"name":"address","nodeType":"ElementaryTypeName","src":"1626:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"poolFactory","nameLocation":"1648:11:25","nodeType":"VariableDeclaration","scope":4683,"src":"1640:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4680,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1598:62:25"},"src":"1570:91:25"},{"documentation":{"id":4684,"nodeType":"StructuredDocumentation","src":"1667:136:25","text":" @notice A token was already registered (i.e., it is a duplicate in the pool).\n @param token The duplicate token"},"errorSelector":"4f4b634e","id":4689,"name":"TokenAlreadyRegistered","nameLocation":"1814:22:25","nodeType":"ErrorDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"token","nameLocation":"1844:5:25","nodeType":"VariableDeclaration","scope":4689,"src":"1837:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4686,"nodeType":"UserDefinedTypeName","pathNode":{"id":4685,"name":"IERC20","nameLocations":["1837:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"1837:6:25"},"referencedDeclaration":337,"src":"1837:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1836:14:25"},"src":"1808:43:25"},{"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"1857:57:25","text":"@notice The token count is below the minimum allowed."},"errorSelector":"5ed4ba8f","id":4692,"name":"MinTokens","nameLocation":"1925:9:25","nodeType":"ErrorDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[],"src":"1934:2:25"},"src":"1919:18:25"},{"documentation":{"id":4693,"nodeType":"StructuredDocumentation","src":"1943:57:25","text":"@notice The token count is above the maximum allowed."},"errorSelector":"707bdf58","id":4695,"name":"MaxTokens","nameLocation":"2011:9:25","nodeType":"ErrorDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[],"src":"2020:2:25"},"src":"2005:18:25"},{"documentation":{"id":4696,"nodeType":"StructuredDocumentation","src":"2029:61:25","text":"@notice Invalid tokens (e.g., zero) cannot be registered."},"errorSelector":"c1ab6dc1","id":4698,"name":"InvalidToken","nameLocation":"2101:12:25","nodeType":"ErrorDefinition","parameters":{"id":4697,"nodeType":"ParameterList","parameters":[],"src":"2113:2:25"},"src":"2095:21:25"},{"documentation":{"id":4699,"nodeType":"StructuredDocumentation","src":"2122:86:25","text":"@notice The token type given in a TokenConfig during pool registration is invalid."},"errorSelector":"a1e9dd9d","id":4701,"name":"InvalidTokenType","nameLocation":"2219:16:25","nodeType":"ErrorDefinition","parameters":{"id":4700,"nodeType":"ParameterList","parameters":[],"src":"2235:2:25"},"src":"2213:25:25"},{"documentation":{"id":4702,"nodeType":"StructuredDocumentation","src":"2244:76:25","text":"@notice The data in a TokenConfig struct is inconsistent or unsupported."},"errorSelector":"df450632","id":4704,"name":"InvalidTokenConfiguration","nameLocation":"2331:25:25","nodeType":"ErrorDefinition","parameters":{"id":4703,"nodeType":"ParameterList","parameters":[],"src":"2356:2:25"},"src":"2325:34:25"},{"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"2365:64:25","text":"@notice Tokens with more than 18 decimals are not supported."},"errorSelector":"686d3607","id":4707,"name":"InvalidTokenDecimals","nameLocation":"2440:20:25","nodeType":"ErrorDefinition","parameters":{"id":4706,"nodeType":"ParameterList","parameters":[],"src":"2460:2:25"},"src":"2434:29:25"},{"documentation":{"id":4708,"nodeType":"StructuredDocumentation","src":"2469:287:25","text":" @notice The token list passed into an operation does not match the pool tokens in the pool.\n @param pool Address of the pool\n @param expectedToken The correct token at a given index in the pool\n @param actualToken The actual token found at that index"},"errorSelector":"ffe261a1","id":4716,"name":"TokensMismatch","nameLocation":"2767:14:25","nodeType":"ErrorDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"pool","nameLocation":"2790:4:25","nodeType":"VariableDeclaration","scope":4716,"src":"2782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4709,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4712,"mutability":"mutable","name":"expectedToken","nameLocation":"2804:13:25","nodeType":"VariableDeclaration","scope":4716,"src":"2796:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4711,"name":"address","nodeType":"ElementaryTypeName","src":"2796:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"actualToken","nameLocation":"2827:11:25","nodeType":"VariableDeclaration","scope":4716,"src":"2819:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4713,"name":"address","nodeType":"ElementaryTypeName","src":"2819:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2781:58:25"},"src":"2761:79:25"},{"documentation":{"id":4717,"nodeType":"StructuredDocumentation","src":"3071:85:25","text":"@notice A transient accounting operation completed with outstanding token deltas."},"errorSelector":"20f1d86d","id":4719,"name":"BalanceNotSettled","nameLocation":"3167:17:25","nodeType":"ErrorDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[],"src":"3184:2:25"},"src":"3161:26:25"},{"documentation":{"id":4720,"nodeType":"StructuredDocumentation","src":"3193:97:25","text":"@notice A user called a Vault function (swap, add/remove liquidity) outside the lock context."},"errorSelector":"c09ba736","id":4722,"name":"VaultIsNotUnlocked","nameLocation":"3301:18:25","nodeType":"ErrorDefinition","parameters":{"id":4721,"nodeType":"ParameterList","parameters":[],"src":"3319:2:25"},"src":"3295:27:25"},{"documentation":{"id":4723,"nodeType":"StructuredDocumentation","src":"3328:105:25","text":"@notice The pool has returned false to the beforeSwap hook, indicating the transaction should revert."},"errorSelector":"53f976d4","id":4725,"name":"DynamicSwapFeeHookFailed","nameLocation":"3444:24:25","nodeType":"ErrorDefinition","parameters":{"id":4724,"nodeType":"ParameterList","parameters":[],"src":"3468:2:25"},"src":"3438:33:25"},{"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"3477:105:25","text":"@notice The pool has returned false to the beforeSwap hook, indicating the transaction should revert."},"errorSelector":"e91e17e7","id":4728,"name":"BeforeSwapHookFailed","nameLocation":"3593:20:25","nodeType":"ErrorDefinition","parameters":{"id":4727,"nodeType":"ParameterList","parameters":[],"src":"3613:2:25"},"src":"3587:29:25"},{"documentation":{"id":4729,"nodeType":"StructuredDocumentation","src":"3622:104:25","text":"@notice The pool has returned false to the afterSwap hook, indicating the transaction should revert."},"errorSelector":"15a29dec","id":4731,"name":"AfterSwapHookFailed","nameLocation":"3737:19:25","nodeType":"ErrorDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[],"src":"3756:2:25"},"src":"3731:28:25"},{"documentation":{"id":4732,"nodeType":"StructuredDocumentation","src":"3765:111:25","text":"@notice The pool has returned false to the beforeInitialize hook, indicating the transaction should revert."},"errorSelector":"60612925","id":4734,"name":"BeforeInitializeHookFailed","nameLocation":"3887:26:25","nodeType":"ErrorDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[],"src":"3913:2:25"},"src":"3881:35:25"},{"documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"3922:110:25","text":"@notice The pool has returned false to the afterInitialize hook, indicating the transaction should revert."},"errorSelector":"0f23dbc6","id":4737,"name":"AfterInitializeHookFailed","nameLocation":"4043:25:25","nodeType":"ErrorDefinition","parameters":{"id":4736,"nodeType":"ParameterList","parameters":[],"src":"4068:2:25"},"src":"4037:34:25"},{"documentation":{"id":4738,"nodeType":"StructuredDocumentation","src":"4077:113:25","text":"@notice The pool has returned false to the beforeAddLiquidity hook, indicating the transaction should revert."},"errorSelector":"0b2eb652","id":4740,"name":"BeforeAddLiquidityHookFailed","nameLocation":"4201:28:25","nodeType":"ErrorDefinition","parameters":{"id":4739,"nodeType":"ParameterList","parameters":[],"src":"4229:2:25"},"src":"4195:37:25"},{"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"4238:112:25","text":"@notice The pool has returned false to the afterAddLiquidity hook, indicating the transaction should revert."},"errorSelector":"e1249165","id":4743,"name":"AfterAddLiquidityHookFailed","nameLocation":"4361:27:25","nodeType":"ErrorDefinition","parameters":{"id":4742,"nodeType":"ParameterList","parameters":[],"src":"4388:2:25"},"src":"4355:36:25"},{"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"4397:116:25","text":"@notice The pool has returned false to the beforeRemoveLiquidity hook, indicating the transaction should revert."},"errorSelector":"2aaf8866","id":4746,"name":"BeforeRemoveLiquidityHookFailed","nameLocation":"4524:31:25","nodeType":"ErrorDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[],"src":"4555:2:25"},"src":"4518:40:25"},{"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"4564:115:25","text":"@notice The pool has returned false to the afterRemoveLiquidity hook, indicating the transaction should revert."},"errorSelector":"1d3391d8","id":4749,"name":"AfterRemoveLiquidityHookFailed","nameLocation":"4690:30:25","nodeType":"ErrorDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[],"src":"4720:2:25"},"src":"4684:39:25"},{"documentation":{"id":4750,"nodeType":"StructuredDocumentation","src":"4729:115:25","text":"@notice An unauthorized Router tried to call a permissioned function (i.e., using the Vault's token allowance)."},"errorSelector":"e5d185cf","id":4752,"name":"RouterNotTrusted","nameLocation":"4855:16:25","nodeType":"ErrorDefinition","parameters":{"id":4751,"nodeType":"ParameterList","parameters":[],"src":"4871:2:25"},"src":"4849:25:25"},{"documentation":{"id":4753,"nodeType":"StructuredDocumentation","src":"5097:47:25","text":"@notice The user tried to swap zero tokens."},"errorSelector":"57a456b7","id":4755,"name":"AmountGivenZero","nameLocation":"5155:15:25","nodeType":"ErrorDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[],"src":"5170:2:25"},"src":"5149:24:25"},{"documentation":{"id":4756,"nodeType":"StructuredDocumentation","src":"5179:58:25","text":"@notice The user attempted to swap a token for itself."},"errorSelector":"a54b181d","id":4758,"name":"CannotSwapSameToken","nameLocation":"5248:19:25","nodeType":"ErrorDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[],"src":"5267:2:25"},"src":"5242:28:25"},{"documentation":{"id":4759,"nodeType":"StructuredDocumentation","src":"5276:137:25","text":" @notice The user attempted to operate with a token that is not in the pool.\n @param token The unregistered token"},"errorSelector":"ddef98d7","id":4764,"name":"TokenNotRegistered","nameLocation":"5424:18:25","nodeType":"ErrorDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"token","nameLocation":"5450:5:25","nodeType":"VariableDeclaration","scope":4764,"src":"5443:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4761,"nodeType":"UserDefinedTypeName","pathNode":{"id":4760,"name":"IERC20","nameLocations":["5443:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"5443:6:25"},"referencedDeclaration":337,"src":"5443:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"5442:14:25"},"src":"5418:39:25"},{"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"5463:215:25","text":" @notice An amount in or out has exceeded the limit specified in the swap request.\n @param amount The total amount in or out\n @param limit The amount of the limit that has been exceeded"},"errorSelector":"e2ea151b","id":4771,"name":"SwapLimit","nameLocation":"5689:9:25","nodeType":"ErrorDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"amount","nameLocation":"5707:6:25","nodeType":"VariableDeclaration","scope":4771,"src":"5699:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5699:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"limit","nameLocation":"5723:5:25","nodeType":"VariableDeclaration","scope":4771,"src":"5715:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4768,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5698:31:25"},"src":"5683:47:25"},{"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"5736:228:25","text":" @notice A hook adjusted amount in or out has exceeded the limit specified in the swap request.\n @param amount The total amount in or out\n @param limit The amount of the limit that has been exceeded"},"errorSelector":"cc0e4a99","id":4778,"name":"HookAdjustedSwapLimit","nameLocation":"5975:21:25","nodeType":"ErrorDefinition","parameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"amount","nameLocation":"6005:6:25","nodeType":"VariableDeclaration","scope":4778,"src":"5997:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4776,"mutability":"mutable","name":"limit","nameLocation":"6021:5:25","nodeType":"VariableDeclaration","scope":4778,"src":"6013:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5996:31:25"},"src":"5969:59:25"},{"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"6034:87:25","text":"@notice The amount given or calculated for an operation is below the minimum limit."},"errorSelector":"1ed4d118","id":4781,"name":"TradeAmountTooSmall","nameLocation":"6132:19:25","nodeType":"ErrorDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[],"src":"6151:2:25"},"src":"6126:28:25"},{"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"6381:45:25","text":"@notice Add liquidity kind not supported."},"errorSelector":"6c02b395","id":4784,"name":"InvalidAddLiquidityKind","nameLocation":"6437:23:25","nodeType":"ErrorDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[],"src":"6460:2:25"},"src":"6431:32:25"},{"documentation":{"id":4785,"nodeType":"StructuredDocumentation","src":"6469:264:25","text":" @notice A required amountIn exceeds the maximum limit specified for the operation.\n @param tokenIn The incoming token\n @param amountIn The total token amount in\n @param maxAmountIn The amount of the limit that has been exceeded"},"errorSelector":"8eda85e4","id":4794,"name":"AmountInAboveMax","nameLocation":"6744:16:25","nodeType":"ErrorDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"tokenIn","nameLocation":"6768:7:25","nodeType":"VariableDeclaration","scope":4794,"src":"6761:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4787,"nodeType":"UserDefinedTypeName","pathNode":{"id":4786,"name":"IERC20","nameLocations":["6761:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"6761:6:25"},"referencedDeclaration":337,"src":"6761:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"amountIn","nameLocation":"6785:8:25","nodeType":"VariableDeclaration","scope":4794,"src":"6777:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"6777:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"maxAmountIn","nameLocation":"6803:11:25","nodeType":"VariableDeclaration","scope":4794,"src":"6795:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6795:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6760:55:25"},"src":"6738:78:25"},{"documentation":{"id":4795,"nodeType":"StructuredDocumentation","src":"6822:269:25","text":" @notice A hook adjusted amountIn exceeds the maximum limit specified for the operation.\n @param tokenIn The incoming token\n @param amountIn The total token amount in\n @param maxAmountIn The amount of the limit that has been exceeded"},"errorSelector":"cefa3afa","id":4804,"name":"HookAdjustedAmountInAboveMax","nameLocation":"7102:28:25","nodeType":"ErrorDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"tokenIn","nameLocation":"7138:7:25","nodeType":"VariableDeclaration","scope":4804,"src":"7131:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4797,"nodeType":"UserDefinedTypeName","pathNode":{"id":4796,"name":"IERC20","nameLocations":["7131:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"7131:6:25"},"referencedDeclaration":337,"src":"7131:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"amountIn","nameLocation":"7155:8:25","nodeType":"VariableDeclaration","scope":4804,"src":"7147:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"7147:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"maxAmountIn","nameLocation":"7173:11:25","nodeType":"VariableDeclaration","scope":4804,"src":"7165:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"7165:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:55:25"},"src":"7096:90:25"},{"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"7192:245:25","text":" @notice The BPT amount received from adding liquidity is below the minimum specified for the operation.\n @param amountOut The total BPT amount out\n @param minAmountOut The amount of the limit that has been exceeded"},"errorSelector":"8d261d5d","id":4811,"name":"BptAmountOutBelowMin","nameLocation":"7448:20:25","nodeType":"ErrorDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"amountOut","nameLocation":"7477:9:25","nodeType":"VariableDeclaration","scope":4811,"src":"7469:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"7469:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"minAmountOut","nameLocation":"7496:12:25","nodeType":"VariableDeclaration","scope":4811,"src":"7488:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7488:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7468:41:25"},"src":"7442:68:25"},{"documentation":{"id":4812,"nodeType":"StructuredDocumentation","src":"7516:75:25","text":"@notice Pool does not support adding liquidity with a customized input."},"errorSelector":"4876c0bc","id":4814,"name":"DoesNotSupportAddLiquidityCustom","nameLocation":"7602:32:25","nodeType":"ErrorDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[],"src":"7634:2:25"},"src":"7596:41:25"},{"documentation":{"id":4815,"nodeType":"StructuredDocumentation","src":"7643:68:25","text":"@notice Pool does not support adding liquidity through donation."},"errorSelector":"efe0265d","id":4817,"name":"DoesNotSupportDonation","nameLocation":"7722:22:25","nodeType":"ErrorDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[],"src":"7744:2:25"},"src":"7716:31:25"},{"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"7977:48:25","text":"@notice Remove liquidity kind not supported."},"errorSelector":"137a9a39","id":4820,"name":"InvalidRemoveLiquidityKind","nameLocation":"8036:26:25","nodeType":"ErrorDefinition","parameters":{"id":4819,"nodeType":"ParameterList","parameters":[],"src":"8062:2:25"},"src":"8030:35:25"},{"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"8071:269:25","text":" @notice The actual amount out is below the minimum limit specified for the operation.\n @param tokenOut The outgoing token\n @param amountOut The total BPT amount out\n @param minAmountOut The amount of the limit that has been exceeded"},"errorSelector":"2f785e46","id":4830,"name":"AmountOutBelowMin","nameLocation":"8351:17:25","nodeType":"ErrorDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"tokenOut","nameLocation":"8376:8:25","nodeType":"VariableDeclaration","scope":4830,"src":"8369:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4823,"nodeType":"UserDefinedTypeName","pathNode":{"id":4822,"name":"IERC20","nameLocations":["8369:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"8369:6:25"},"referencedDeclaration":337,"src":"8369:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4826,"mutability":"mutable","name":"amountOut","nameLocation":"8394:9:25","nodeType":"VariableDeclaration","scope":4830,"src":"8386:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"8386:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"minAmountOut","nameLocation":"8413:12:25","nodeType":"VariableDeclaration","scope":4830,"src":"8405:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"8405:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8368:58:25"},"src":"8345:82:25"},{"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"8433:276:25","text":" @notice The hook adjusted amount out is below the minimum limit specified for the operation.\n @param tokenOut The outgoing token\n @param amountOut The total BPT amount out\n @param minAmountOut The amount of the limit that has been exceeded"},"errorSelector":"fbd8a724","id":4840,"name":"HookAdjustedAmountOutBelowMin","nameLocation":"8720:29:25","nodeType":"ErrorDefinition","parameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"tokenOut","nameLocation":"8757:8:25","nodeType":"VariableDeclaration","scope":4840,"src":"8750:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":4833,"nodeType":"UserDefinedTypeName","pathNode":{"id":4832,"name":"IERC20","nameLocations":["8750:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"8750:6:25"},"referencedDeclaration":337,"src":"8750:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4836,"mutability":"mutable","name":"amountOut","nameLocation":"8775:9:25","nodeType":"VariableDeclaration","scope":4840,"src":"8767:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"8767:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4838,"mutability":"mutable","name":"minAmountOut","nameLocation":"8794:12:25","nodeType":"VariableDeclaration","scope":4840,"src":"8786:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8786:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8749:58:25"},"src":"8714:94:25"},{"documentation":{"id":4841,"nodeType":"StructuredDocumentation","src":"8814:228:25","text":" @notice The required BPT amount in exceeds the maximum limit specified for the operation.\n @param amountIn The total BPT amount in\n @param maxAmountIn The amount of the limit that has been exceeded"},"errorSelector":"31d38e0b","id":4847,"name":"BptAmountInAboveMax","nameLocation":"9053:19:25","nodeType":"ErrorDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"amountIn","nameLocation":"9081:8:25","nodeType":"VariableDeclaration","scope":4847,"src":"9073:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint256","nodeType":"ElementaryTypeName","src":"9073:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4845,"mutability":"mutable","name":"maxAmountIn","nameLocation":"9099:11:25","nodeType":"VariableDeclaration","scope":4847,"src":"9091:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"9091:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9072:39:25"},"src":"9047:65:25"},{"documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"9118:77:25","text":"@notice Pool does not support removing liquidity with a customized input."},"errorSelector":"cf0a95c0","id":4850,"name":"DoesNotSupportRemoveLiquidityCustom","nameLocation":"9206:35:25","nodeType":"ErrorDefinition","parameters":{"id":4849,"nodeType":"ParameterList","parameters":[],"src":"9241:2:25"},"src":"9200:44:25"},{"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"9463:332:25","text":" @notice Error raised when there is an overflow in the fee calculation.\n @dev This occurs when the sum of the parts (aggregate swap or yield fee) is greater than the whole\n (total swap or yield fee). Also validated when the protocol fee controller updates aggregate fee\n percentages in the Vault."},"errorSelector":"4c69ac5d","id":4853,"name":"ProtocolFeesExceedTotalCollected","nameLocation":"9806:32:25","nodeType":"ErrorDefinition","parameters":{"id":4852,"nodeType":"ParameterList","parameters":[],"src":"9838:2:25"},"src":"9800:41:25"},{"documentation":{"id":4854,"nodeType":"StructuredDocumentation","src":"9847:430:25","text":" @notice Error raised when the swap fee percentage is less than the minimum allowed value.\n @dev The Vault itself does not impose a universal minimum. Rather, it validates against the\n range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error\n if it is below the minimum value returned by the pool.\n Pools with dynamic fees do not check these limits."},"errorSelector":"bfb20688","id":4856,"name":"SwapFeePercentageTooLow","nameLocation":"10288:23:25","nodeType":"ErrorDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[],"src":"10311:2:25"},"src":"10282:32:25"},{"documentation":{"id":4857,"nodeType":"StructuredDocumentation","src":"10320:433:25","text":" @notice Error raised when the swap fee percentage is greater than the maximum allowed value.\n @dev The Vault itself does not impose a universal minimum. Rather, it validates against the\n range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error\n if it is above the maximum value returned by the pool.\n Pools with dynamic fees do not check these limits."},"errorSelector":"7f47834b","id":4859,"name":"SwapFeePercentageTooHigh","nameLocation":"10764:24:25","nodeType":"ErrorDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[],"src":"10788:2:25"},"src":"10758:33:25"},{"documentation":{"id":4860,"nodeType":"StructuredDocumentation","src":"10797:646:25","text":" @notice Primary fee percentages result in an aggregate fee that cannot be stored with the required precision.\n @dev Primary fee percentages are 18-decimal values, stored here in 64 bits, and calculated with full 256-bit\n precision. However, the resulting aggregate fees are stored in the Vault with 24-bit precision, which\n corresponds to 0.00001% resolution (i.e., a fee can be 1%, 1.00001%, 1.00002%, but not 1.000005%).\n Disallow setting fees such that there would be precision loss in the Vault, leading to a discrepancy between\n the aggregate fee calculated here and that stored in the Vault."},"errorSelector":"833fb3ce","id":4862,"name":"FeePrecisionTooHigh","nameLocation":"11454:19:25","nodeType":"ErrorDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[],"src":"11473:2:25"},"src":"11448:28:25"},{"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"11482:107:25","text":"@notice A given percentage is above the maximum (usually a value close to FixedPoint.ONE, or 1e18 wei)."},"errorSelector":"746e5940","id":4865,"name":"PercentageAboveMax","nameLocation":"11600:18:25","nodeType":"ErrorDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[],"src":"11618:2:25"},"src":"11594:27:25"},{"documentation":{"id":4866,"nodeType":"StructuredDocumentation","src":"11842:78:25","text":"@notice A user tried to execute a query operation when they were disabled."},"errorSelector":"7a198886","id":4868,"name":"QueriesDisabled","nameLocation":"11931:15:25","nodeType":"ErrorDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[],"src":"11946:2:25"},"src":"11925:24:25"},{"documentation":{"id":4869,"nodeType":"StructuredDocumentation","src":"11955:84:25","text":"@notice An admin tried to re-enable queries, but they were disabled permanently."},"errorSelector":"069f8cbc","id":4871,"name":"QueriesDisabledPermanently","nameLocation":"12050:26:25","nodeType":"ErrorDefinition","parameters":{"id":4870,"nodeType":"ParameterList","parameters":[],"src":"12076:2:25"},"src":"12044:35:25"},{"documentation":{"id":4872,"nodeType":"StructuredDocumentation","src":"12302:104:25","text":" @notice Cannot enable recovery mode when already enabled.\n @param pool The pool"},"errorSelector":"346d7607","id":4876,"name":"PoolInRecoveryMode","nameLocation":"12417:18:25","nodeType":"ErrorDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"pool","nameLocation":"12444:4:25","nodeType":"VariableDeclaration","scope":4876,"src":"12436:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"12436:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12435:14:25"},"src":"12411:39:25"},{"documentation":{"id":4877,"nodeType":"StructuredDocumentation","src":"12456:101:25","text":" @notice Cannot disable recovery mode when not enabled.\n @param pool The pool"},"errorSelector":"ef029adf","id":4881,"name":"PoolNotInRecoveryMode","nameLocation":"12568:21:25","nodeType":"ErrorDefinition","parameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"pool","nameLocation":"12598:4:25","nodeType":"VariableDeclaration","scope":4881,"src":"12590:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4878,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12589:14:25"},"src":"12562:42:25"},{"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"12828:206:25","text":" @notice Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\n @param sender The account attempting to call a permissioned function"},"errorSelector":"089676d5","id":4886,"name":"SenderIsNotVault","nameLocation":"13045:16:25","nodeType":"ErrorDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"sender","nameLocation":"13070:6:25","nodeType":"VariableDeclaration","scope":4886,"src":"13062:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4883,"name":"address","nodeType":"ElementaryTypeName","src":"13062:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13061:16:25"},"src":"13039:39:25"},{"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"13303:79:25","text":"@notice The caller specified a pause window period longer than the maximum."},"errorSelector":"cc0e8fe5","id":4889,"name":"VaultPauseWindowDurationTooLarge","nameLocation":"13393:32:25","nodeType":"ErrorDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[],"src":"13425:2:25"},"src":"13387:41:25"},{"documentation":{"id":4890,"nodeType":"StructuredDocumentation","src":"13434:73:25","text":"@notice The caller specified a buffer period longer than the maximum."},"errorSelector":"9ea4efee","id":4892,"name":"PauseBufferPeriodDurationTooLarge","nameLocation":"13518:33:25","nodeType":"ErrorDefinition","parameters":{"id":4891,"nodeType":"ParameterList","parameters":[],"src":"13551:2:25"},"src":"13512:42:25"},{"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"13560:76:25","text":"@notice A user tried to perform an operation while the Vault was paused."},"errorSelector":"da9f8b34","id":4895,"name":"VaultPaused","nameLocation":"13647:11:25","nodeType":"ErrorDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[],"src":"13658:2:25"},"src":"13641:20:25"},{"documentation":{"id":4896,"nodeType":"StructuredDocumentation","src":"13667:73:25","text":"@notice Governance tried to unpause the Vault when it was not paused."},"errorSelector":"f7ff4dca","id":4898,"name":"VaultNotPaused","nameLocation":"13751:14:25","nodeType":"ErrorDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[],"src":"13765:2:25"},"src":"13745:23:25"},{"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"13774:79:25","text":"@notice Governance tried to pause the Vault after the pause period expired."},"errorSelector":"0e4460b7","id":4901,"name":"VaultPauseWindowExpired","nameLocation":"13864:23:25","nodeType":"ErrorDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[],"src":"13887:2:25"},"src":"13858:32:25"},{"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"13896:123:25","text":" @notice A user tried to perform an operation involving a paused Pool.\n @param pool The paused pool"},"errorSelector":"d971f597","id":4906,"name":"PoolPaused","nameLocation":"14030:10:25","nodeType":"ErrorDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"pool","nameLocation":"14049:4:25","nodeType":"VariableDeclaration","scope":4906,"src":"14041:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4903,"name":"address","nodeType":"ElementaryTypeName","src":"14041:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14040:14:25"},"src":"14024:31:25"},{"documentation":{"id":4907,"nodeType":"StructuredDocumentation","src":"14061:124:25","text":" @notice Governance tried to unpause the Pool when it was not paused.\n @param pool The unpaused pool"},"errorSelector":"fdcd6894","id":4911,"name":"PoolNotPaused","nameLocation":"14196:13:25","nodeType":"ErrorDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"pool","nameLocation":"14218:4:25","nodeType":"VariableDeclaration","scope":4911,"src":"14210:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4908,"name":"address","nodeType":"ElementaryTypeName","src":"14210:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14209:14:25"},"src":"14190:34:25"},{"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"14230:119:25","text":" @notice Governance tried to pause a Pool after the pause period expired.\n @param pool The pool"},"errorSelector":"eb5a1217","id":4916,"name":"PoolPauseWindowExpired","nameLocation":"14360:22:25","nodeType":"ErrorDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"pool","nameLocation":"14391:4:25","nodeType":"VariableDeclaration","scope":4916,"src":"14383:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4913,"name":"address","nodeType":"ElementaryTypeName","src":"14383:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14382:14:25"},"src":"14354:43:25"},{"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"14628:163:25","text":" @notice The buffer for the given wrapped token was already initialized.\n @param wrappedToken The wrapped token corresponding to the buffer"},"errorSelector":"1690fa40","id":4922,"name":"BufferAlreadyInitialized","nameLocation":"14802:24:25","nodeType":"ErrorDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"wrappedToken","nameLocation":"14836:12:25","nodeType":"VariableDeclaration","scope":4922,"src":"14827:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4919,"nodeType":"UserDefinedTypeName","pathNode":{"id":4918,"name":"IERC4626","nameLocations":["14827:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"14827:8:25"},"referencedDeclaration":259,"src":"14827:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"14826:23:25"},"src":"14796:54:25"},{"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"14856:159:25","text":" @notice The buffer for the given wrapped token was not initialized.\n @param wrappedToken The wrapped token corresponding to the buffer"},"errorSelector":"85f41299","id":4928,"name":"BufferNotInitialized","nameLocation":"15026:20:25","nodeType":"ErrorDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"wrappedToken","nameLocation":"15056:12:25","nodeType":"VariableDeclaration","scope":4928,"src":"15047:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4925,"nodeType":"UserDefinedTypeName","pathNode":{"id":4924,"name":"IERC4626","nameLocations":["15047:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"15047:8:25"},"referencedDeclaration":259,"src":"15047:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"15046:23:25"},"src":"15020:50:25"},{"documentation":{"id":4929,"nodeType":"StructuredDocumentation","src":"15076:90:25","text":"@notice The user is trying to remove more than their allocated shares from the buffer."},"errorSelector":"98c5dbd6","id":4931,"name":"NotEnoughBufferShares","nameLocation":"15177:21:25","nodeType":"ErrorDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[],"src":"15198:2:25"},"src":"15171:30:25"},{"documentation":{"id":4932,"nodeType":"StructuredDocumentation","src":"15207:436:25","text":" @notice The wrapped token asset does not match the underlying token.\n @dev This should never happen, but a malicious wrapper contract might not return the correct address.\n Legitimate wrapper contracts should make the asset a constant or immutable value.\n @param wrappedToken The wrapped token corresponding to the buffer\n @param underlyingToken The underlying token returned by `asset`"},"errorSelector":"36b18d09","id":4939,"name":"WrongUnderlyingToken","nameLocation":"15654:20:25","nodeType":"ErrorDefinition","parameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"wrappedToken","nameLocation":"15684:12:25","nodeType":"VariableDeclaration","scope":4939,"src":"15675:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4934,"nodeType":"UserDefinedTypeName","pathNode":{"id":4933,"name":"IERC4626","nameLocations":["15675:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"15675:8:25"},"referencedDeclaration":259,"src":"15675:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4937,"mutability":"mutable","name":"underlyingToken","nameLocation":"15706:15:25","nodeType":"VariableDeclaration","scope":4939,"src":"15698:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4936,"name":"address","nodeType":"ElementaryTypeName","src":"15698:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15674:48:25"},"src":"15648:75:25"},{"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"15729:322:25","text":" @notice A wrapped token reported the zero address as its underlying token asset.\n @dev This should never happen, but a malicious wrapper contract might do this (e.g., in an attempt to\n re-initialize the buffer).\n @param wrappedToken The wrapped token corresponding to the buffer"},"errorSelector":"d407f9c5","id":4945,"name":"InvalidUnderlyingToken","nameLocation":"16062:22:25","nodeType":"ErrorDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"wrappedToken","nameLocation":"16094:12:25","nodeType":"VariableDeclaration","scope":4945,"src":"16085:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4942,"nodeType":"UserDefinedTypeName","pathNode":{"id":4941,"name":"IERC4626","nameLocations":["16085:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"16085:8:25"},"referencedDeclaration":259,"src":"16085:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"16084:23:25"},"src":"16056:52:25"},{"documentation":{"id":4946,"nodeType":"StructuredDocumentation","src":"16114:183:25","text":" @notice The amount given to wrap/unwrap was too small, which can introduce rounding issues.\n @param wrappedToken The wrapped token corresponding to the buffer"},"errorSelector":"18fe7385","id":4951,"name":"WrapAmountTooSmall","nameLocation":"16308:18:25","nodeType":"ErrorDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"wrappedToken","nameLocation":"16336:12:25","nodeType":"VariableDeclaration","scope":4951,"src":"16327:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4948,"nodeType":"UserDefinedTypeName","pathNode":{"id":4947,"name":"IERC4626","nameLocations":["16327:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"16327:8:25"},"referencedDeclaration":259,"src":"16327:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"16326:23:25"},"src":"16302:48:25"},{"documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"16356:70:25","text":"@notice Buffer operation attempted while vault buffers are paused."},"errorSelector":"0f27df09","id":4954,"name":"VaultBuffersArePaused","nameLocation":"16437:21:25","nodeType":"ErrorDefinition","parameters":{"id":4953,"nodeType":"ParameterList","parameters":[],"src":"16458:2:25"},"src":"16431:30:25"},{"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"16467:58:25","text":"@notice Buffer shares were minted to the zero address."},"errorSelector":"dbe6b10e","id":4957,"name":"BufferSharesInvalidReceiver","nameLocation":"16536:27:25","nodeType":"ErrorDefinition","parameters":{"id":4956,"nodeType":"ParameterList","parameters":[],"src":"16563:2:25"},"src":"16530:36:25"},{"documentation":{"id":4958,"nodeType":"StructuredDocumentation","src":"16572:60:25","text":"@notice Buffer shares were burned from the zero address."},"errorSelector":"586d06df","id":4960,"name":"BufferSharesInvalidOwner","nameLocation":"16643:24:25","nodeType":"ErrorDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[],"src":"16667:2:25"},"src":"16637:33:25"},{"documentation":{"id":4961,"nodeType":"StructuredDocumentation","src":"16676:173:25","text":" @notice The total supply of a buffer can't be lower than the absolute minimum.\n @param totalSupply The total supply value that was below the minimum"},"errorSelector":"34bdbfaa","id":4965,"name":"BufferTotalSupplyTooLow","nameLocation":"16860:23:25","nodeType":"ErrorDefinition","parameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"totalSupply","nameLocation":"16892:11:25","nodeType":"VariableDeclaration","scope":4965,"src":"16884:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"16884:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16883:21:25"},"src":"16854:51:25"},{"documentation":{"id":4966,"nodeType":"StructuredDocumentation","src":"16911:97:25","text":"@dev A wrap/unwrap operation consumed more or returned less underlying tokens than it should."},"errorSelector":"1c6a5375","id":4975,"name":"NotEnoughUnderlying","nameLocation":"17019:19:25","nodeType":"ErrorDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"wrappedToken","nameLocation":"17048:12:25","nodeType":"VariableDeclaration","scope":4975,"src":"17039:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4968,"nodeType":"UserDefinedTypeName","pathNode":{"id":4967,"name":"IERC4626","nameLocations":["17039:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"17039:8:25"},"referencedDeclaration":259,"src":"17039:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"expectedUnderlyingAmount","nameLocation":"17070:24:25","nodeType":"VariableDeclaration","scope":4975,"src":"17062:32:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"17062:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4973,"mutability":"mutable","name":"actualUnderlyingAmount","nameLocation":"17104:22:25","nodeType":"VariableDeclaration","scope":4975,"src":"17096:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"17096:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17038:89:25"},"src":"17013:115:25"},{"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"17134:94:25","text":"@dev A wrap/unwrap operation consumed more or returned less wrapped tokens than it should."},"errorSelector":"1149424d","id":4985,"name":"NotEnoughWrapped","nameLocation":"17239:16:25","nodeType":"ErrorDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"wrappedToken","nameLocation":"17265:12:25","nodeType":"VariableDeclaration","scope":4985,"src":"17256:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":4978,"nodeType":"UserDefinedTypeName","pathNode":{"id":4977,"name":"IERC4626","nameLocations":["17256:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"17256:8:25"},"referencedDeclaration":259,"src":"17256:8:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"expectedWrappedAmount","nameLocation":"17287:21:25","nodeType":"VariableDeclaration","scope":4985,"src":"17279:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"17279:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"actualWrappedAmount","nameLocation":"17318:19:25","nodeType":"VariableDeclaration","scope":4985,"src":"17310:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"17310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17255:83:25"},"src":"17233:106:25"},{"documentation":{"id":4986,"nodeType":"StructuredDocumentation","src":"17345:76:25","text":"@dev Shares issued during initialization are below the requested amount."},"errorSelector":"da0cb07e","id":4992,"name":"IssuedSharesBelowMin","nameLocation":"17432:20:25","nodeType":"ErrorDefinition","parameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"issuedShares","nameLocation":"17461:12:25","nodeType":"VariableDeclaration","scope":4992,"src":"17453:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"17453:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4990,"mutability":"mutable","name":"minIssuedShares","nameLocation":"17483:15:25","nodeType":"VariableDeclaration","scope":4992,"src":"17475:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"17475:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17452:47:25"},"src":"17426:74:25"},{"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"17727:87:25","text":"@notice Pool does not support adding / removing liquidity with an unbalanced input."},"errorSelector":"d4f5779c","id":4995,"name":"DoesNotSupportUnbalancedLiquidity","nameLocation":"17825:33:25","nodeType":"ErrorDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[],"src":"17858:2:25"},"src":"17819:42:25"},{"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"17867:48:25","text":"@notice The contract should not receive ETH."},"errorSelector":"f2238896","id":4998,"name":"CannotReceiveEth","nameLocation":"17926:16:25","nodeType":"ErrorDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[],"src":"17942:2:25"},"src":"17920:25:25"},{"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"17951:156:25","text":" @notice The `VaultExtension` contract was called by an account directly.\n @dev It can only be called by the Vault via delegatecall."},"errorSelector":"9fd25b36","id":5001,"name":"NotVaultDelegateCall","nameLocation":"18118:20:25","nodeType":"ErrorDefinition","parameters":{"id":5000,"nodeType":"ParameterList","parameters":[],"src":"18138:2:25"},"src":"18112:29:25"},{"documentation":{"id":5002,"nodeType":"StructuredDocumentation","src":"18147:89:25","text":"@notice The `VaultExtension` contract was configured with an incorrect Vault address."},"errorSelector":"1ab9d9d0","id":5004,"name":"WrongVaultExtensionDeployment","nameLocation":"18247:29:25","nodeType":"ErrorDefinition","parameters":{"id":5003,"nodeType":"ParameterList","parameters":[],"src":"18276:2:25"},"src":"18241:38:25"},{"documentation":{"id":5005,"nodeType":"StructuredDocumentation","src":"18285:96:25","text":"@notice The `ProtocolFeeController` contract was configured with an incorrect Vault address."},"errorSelector":"1bbe95c7","id":5007,"name":"WrongProtocolFeeControllerDeployment","nameLocation":"18392:36:25","nodeType":"ErrorDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[],"src":"18428:2:25"},"src":"18386:45:25"},{"documentation":{"id":5008,"nodeType":"StructuredDocumentation","src":"18437:85:25","text":"@notice The `VaultAdmin` contract was configured with an incorrect Vault address."},"errorSelector":"82cc28b6","id":5010,"name":"WrongVaultAdminDeployment","nameLocation":"18533:25:25","nodeType":"ErrorDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[],"src":"18558:2:25"},"src":"18527:34:25"},{"documentation":{"id":5011,"nodeType":"StructuredDocumentation","src":"18567:54:25","text":"@notice Quote reverted with a reserved error code."},"errorSelector":"28f95541","id":5013,"name":"QuoteResultSpoofed","nameLocation":"18632:18:25","nodeType":"ErrorDefinition","parameters":{"id":5012,"nodeType":"ParameterList","parameters":[],"src":"18650:2:25"},"src":"18626:27:25"}],"scope":5015,"src":"316:18339:25","usedErrors":[4659,4664,4669,4674,4683,4689,4692,4695,4698,4701,4704,4707,4716,4719,4722,4725,4728,4731,4734,4737,4740,4743,4746,4749,4752,4755,4758,4764,4771,4778,4781,4784,4794,4804,4811,4814,4817,4820,4830,4840,4847,4850,4853,4856,4859,4862,4865,4868,4871,4876,4881,4886,4889,4892,4895,4898,4901,4906,4911,4916,4922,4928,4931,4939,4945,4951,4954,4957,4960,4965,4975,4985,4992,4995,4998,5001,5004,5007,5010,5013],"usedEvents":[]}],"src":"46:18610:25"},"id":25},"contracts/IVaultEvents.sol":{"ast":{"absolutePath":"contracts/IVaultEvents.sol","exportedSymbols":{"AddLiquidityKind":[8439],"AddLiquidityParams":[8455],"AfterSwapParams":[8433],"BufferWrapOrUnwrapParams":[8494],"FEE_BITLENGTH":[8497],"FEE_SCALING_FACTOR":[8500],"HookFlags":[8259],"HooksConfig":[8283],"IAuthorizer":[3151],"IERC20":[337],"IERC4626":[259],"IHooks":[3353],"IProtocolFeeController":[3691],"IRateProvider":[3701],"IVaultEvents":[5253],"LiquidityManagement":[8212],"MAX_FEE_PERCENTAGE":[8503],"PoolConfig":[8237],"PoolConfigBits":[8214],"PoolData":[8361],"PoolRoleAccounts":[8309],"PoolSwapParams":[8404],"RemoveLiquidityKind":[8460],"RemoveLiquidityParams":[8476],"Rounding":[8364],"SwapKind":[8367],"SwapState":[8293],"TokenConfig":[8326],"TokenInfo":[8336],"TokenType":[8313],"VaultState":[8301],"VaultSwapParams":[8386],"WrappingDirection":[8479]},"id":5254,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5016,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:26"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":5018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5254,"sourceUnit":260,"src":"72:75:26","symbolAliases":[{"foreign":{"id":5017,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"81:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5254,"sourceUnit":338,"src":"148:72:26","symbolAliases":[{"foreign":{"id":5019,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"157:6:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IProtocolFeeController.sol","file":"./IProtocolFeeController.sol","id":5022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5254,"sourceUnit":3692,"src":"222:70:26","symbolAliases":[{"foreign":{"id":5021,"name":"IProtocolFeeController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"231:22:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IAuthorizer.sol","file":"./IAuthorizer.sol","id":5024,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5254,"sourceUnit":3152,"src":"293:48:26","symbolAliases":[{"foreign":{"id":5023,"name":"IAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"302:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IHooks.sol","file":"./IHooks.sol","id":5026,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5254,"sourceUnit":3354,"src":"342:38:26","symbolAliases":[{"foreign":{"id":5025,"name":"IHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"351:6:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":5027,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5254,"sourceUnit":8504,"src":"381:26:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":5028,"nodeType":"StructuredDocumentation","src":"409:91:26","text":"@dev Events are declared inside an interface (namespace) to improve DX with Typechain."},"fullyImplemented":true,"id":5253,"linearizedBaseContracts":[5253],"name":"IVaultEvents","nameLocation":"510:12:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5029,"nodeType":"StructuredDocumentation","src":"529:657:26","text":" @notice A Pool was registered by calling `registerPool`.\n @param pool The pool being registered\n @param factory The factory creating the pool\n @param tokenConfig An array of descriptors for the tokens the pool will manage\n @param swapFeePercentage The static swap fee of the pool\n @param pauseWindowEndTime The pool's pause window end time\n @param roleAccounts Addresses the Vault will allow to change certain pool settings\n @param hooksConfig Flags indicating which hooks the pool supports and address of hooks contract\n @param liquidityManagement Supported liquidity management hook flags"},"eventSelector":"bc1561eeab9f40962e2fb827a7ff9c7cdb47a9d7c84caeefa4ed90e043842dad","id":5052,"name":"PoolRegistered","nameLocation":"1197:14:26","nodeType":"EventDefinition","parameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1237:4:26","nodeType":"VariableDeclaration","scope":5052,"src":"1221:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5030,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5033,"indexed":true,"mutability":"mutable","name":"factory","nameLocation":"1267:7:26","nodeType":"VariableDeclaration","scope":5052,"src":"1251:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5032,"name":"address","nodeType":"ElementaryTypeName","src":"1251:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5037,"indexed":false,"mutability":"mutable","name":"tokenConfig","nameLocation":"1298:11:26","nodeType":"VariableDeclaration","scope":5052,"src":"1284:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8326_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig[]"},"typeName":{"baseType":{"id":5035,"nodeType":"UserDefinedTypeName","pathNode":{"id":5034,"name":"TokenConfig","nameLocations":["1284:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":8326,"src":"1284:11:26"},"referencedDeclaration":8326,"src":"1284:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfig_$8326_storage_ptr","typeString":"struct TokenConfig"}},"id":5036,"nodeType":"ArrayTypeName","src":"1284:13:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8326_storage_$dyn_storage_ptr","typeString":"struct TokenConfig[]"}},"visibility":"internal"},{"constant":false,"id":5039,"indexed":false,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"1327:17:26","nodeType":"VariableDeclaration","scope":5052,"src":"1319:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5041,"indexed":false,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"1361:18:26","nodeType":"VariableDeclaration","scope":5052,"src":"1354:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5040,"name":"uint32","nodeType":"ElementaryTypeName","src":"1354:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5044,"indexed":false,"mutability":"mutable","name":"roleAccounts","nameLocation":"1406:12:26","nodeType":"VariableDeclaration","scope":5052,"src":"1389:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRoleAccounts_$8309_memory_ptr","typeString":"struct PoolRoleAccounts"},"typeName":{"id":5043,"nodeType":"UserDefinedTypeName","pathNode":{"id":5042,"name":"PoolRoleAccounts","nameLocations":["1389:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":8309,"src":"1389:16:26"},"referencedDeclaration":8309,"src":"1389:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRoleAccounts_$8309_storage_ptr","typeString":"struct PoolRoleAccounts"}},"visibility":"internal"},{"constant":false,"id":5047,"indexed":false,"mutability":"mutable","name":"hooksConfig","nameLocation":"1440:11:26","nodeType":"VariableDeclaration","scope":5052,"src":"1428:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_HooksConfig_$8283_memory_ptr","typeString":"struct HooksConfig"},"typeName":{"id":5046,"nodeType":"UserDefinedTypeName","pathNode":{"id":5045,"name":"HooksConfig","nameLocations":["1428:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":8283,"src":"1428:11:26"},"referencedDeclaration":8283,"src":"1428:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_HooksConfig_$8283_storage_ptr","typeString":"struct HooksConfig"}},"visibility":"internal"},{"constant":false,"id":5050,"indexed":false,"mutability":"mutable","name":"liquidityManagement","nameLocation":"1481:19:26","nodeType":"VariableDeclaration","scope":5052,"src":"1461:39:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_memory_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":5049,"nodeType":"UserDefinedTypeName","pathNode":{"id":5048,"name":"LiquidityManagement","nameLocations":["1461:19:26"],"nodeType":"IdentifierPath","referencedDeclaration":8212,"src":"1461:19:26"},"referencedDeclaration":8212,"src":"1461:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"}],"src":"1211:295:26"},"src":"1191:316:26"},{"anonymous":false,"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"1513:120:26","text":" @notice A Pool was initialized by calling `initialize`.\n @param pool The pool being initialized"},"eventSelector":"cad8c9d32507393b6508ca4a888b81979919b477510585bde8488f153072d6f3","id":5057,"name":"PoolInitialized","nameLocation":"1644:15:26","nodeType":"EventDefinition","parameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1676:4:26","nodeType":"VariableDeclaration","scope":5057,"src":"1660:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5054,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1659:22:26"},"src":"1638:44:26"},{"anonymous":false,"documentation":{"id":5058,"nodeType":"StructuredDocumentation","src":"1688:478:26","text":" @notice A swap has occurred.\n @param pool The pool with the tokens being swapped\n @param tokenIn The token entering the Vault (balance increases)\n @param tokenOut The token leaving the Vault (balance decreases)\n @param amountIn Number of tokenIn tokens\n @param amountOut Number of tokenOut tokens\n @param swapFeePercentage Swap fee percentage applied (can differ if dynamic)\n @param swapFeeAmount Swap fee amount paid"},"eventSelector":"0874b2d545cb271cdbda4e093020c452328b24af12382ed62c4d00f5c26709db","id":5076,"name":"Swap","nameLocation":"2177:4:26","nodeType":"EventDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2207:4:26","nodeType":"VariableDeclaration","scope":5076,"src":"2191:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5059,"name":"address","nodeType":"ElementaryTypeName","src":"2191:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5063,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"2236:7:26","nodeType":"VariableDeclaration","scope":5076,"src":"2221:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5062,"nodeType":"UserDefinedTypeName","pathNode":{"id":5061,"name":"IERC20","nameLocations":["2221:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2221:6:26"},"referencedDeclaration":337,"src":"2221:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5066,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"2268:8:26","nodeType":"VariableDeclaration","scope":5076,"src":"2253:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5065,"nodeType":"UserDefinedTypeName","pathNode":{"id":5064,"name":"IERC20","nameLocations":["2253:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2253:6:26"},"referencedDeclaration":337,"src":"2253:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5068,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2294:8:26","nodeType":"VariableDeclaration","scope":5076,"src":"2286:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2286:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5070,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2320:9:26","nodeType":"VariableDeclaration","scope":5076,"src":"2312:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5072,"indexed":false,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"2347:17:26","nodeType":"VariableDeclaration","scope":5076,"src":"2339:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2339:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5074,"indexed":false,"mutability":"mutable","name":"swapFeeAmount","nameLocation":"2382:13:26","nodeType":"VariableDeclaration","scope":5076,"src":"2374:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2374:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2181:220:26"},"src":"2171:231:26"},{"anonymous":false,"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"2408:352:26","text":" @notice A wrap operation has occurred.\n @param wrappedToken The wrapped token address\n @param depositedUnderlying Number of underlying tokens deposited\n @param mintedShares Number of shares (wrapped tokens) minted\n @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)"},"eventSelector":"3771d13c67011e31e12031c54bb59b0bf544a80b81d280a3711e172aa8b7f47b","id":5088,"name":"Wrap","nameLocation":"2771:4:26","nodeType":"EventDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"indexed":true,"mutability":"mutable","name":"wrappedToken","nameLocation":"2802:12:26","nodeType":"VariableDeclaration","scope":5088,"src":"2785:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5079,"nodeType":"UserDefinedTypeName","pathNode":{"id":5078,"name":"IERC4626","nameLocations":["2785:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"2785:8:26"},"referencedDeclaration":259,"src":"2785:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":5082,"indexed":false,"mutability":"mutable","name":"depositedUnderlying","nameLocation":"2832:19:26","nodeType":"VariableDeclaration","scope":5088,"src":"2824:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5084,"indexed":false,"mutability":"mutable","name":"mintedShares","nameLocation":"2869:12:26","nodeType":"VariableDeclaration","scope":5088,"src":"2861:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5086,"indexed":false,"mutability":"mutable","name":"bufferBalances","nameLocation":"2899:14:26","nodeType":"VariableDeclaration","scope":5088,"src":"2891:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2891:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2775:144:26"},"src":"2765:155:26"},{"anonymous":false,"documentation":{"id":5089,"nodeType":"StructuredDocumentation","src":"2926:355:26","text":" @notice An unwrap operation has occurred.\n @param wrappedToken The wrapped token address\n @param burnedShares Number of shares (wrapped tokens) burned\n @param withdrawnUnderlying Number of underlying tokens withdrawn\n @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)"},"eventSelector":"eeb740c90bf2b18c9532eb7d473137767036d893dff3e009f32718f821b2a4c0","id":5100,"name":"Unwrap","nameLocation":"3292:6:26","nodeType":"EventDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"indexed":true,"mutability":"mutable","name":"wrappedToken","nameLocation":"3325:12:26","nodeType":"VariableDeclaration","scope":5100,"src":"3308:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5091,"nodeType":"UserDefinedTypeName","pathNode":{"id":5090,"name":"IERC4626","nameLocations":["3308:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"3308:8:26"},"referencedDeclaration":259,"src":"3308:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":5094,"indexed":false,"mutability":"mutable","name":"burnedShares","nameLocation":"3355:12:26","nodeType":"VariableDeclaration","scope":5100,"src":"3347:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3347:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5096,"indexed":false,"mutability":"mutable","name":"withdrawnUnderlying","nameLocation":"3385:19:26","nodeType":"VariableDeclaration","scope":5100,"src":"3377:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5098,"indexed":false,"mutability":"mutable","name":"bufferBalances","nameLocation":"3422:14:26","nodeType":"VariableDeclaration","scope":5100,"src":"3414:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3414:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3298:144:26"},"src":"3286:157:26"},{"anonymous":false,"documentation":{"id":5101,"nodeType":"StructuredDocumentation","src":"3449:562:26","text":" @notice Liquidity has been added to a pool (including initialization).\n @param pool The pool with liquidity added\n @param liquidityProvider The user performing the operation\n @param kind The add liquidity operation type (e.g., proportional, custom)\n @param totalSupply The total supply of the pool after the operation\n @param amountsAddedRaw The amount of each token that was added, sorted in token registration order\n @param swapFeeAmountsRaw The total swap fees charged, sorted in token registration order"},"eventSelector":"a26a52d8d53702bba7f137907b8e1f99ff87f6d450144270ca25e72481cca871","id":5118,"name":"LiquidityAdded","nameLocation":"4022:14:26","nodeType":"EventDefinition","parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"4062:4:26","nodeType":"VariableDeclaration","scope":5118,"src":"4046:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5102,"name":"address","nodeType":"ElementaryTypeName","src":"4046:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5105,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"4092:17:26","nodeType":"VariableDeclaration","scope":5118,"src":"4076:33:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5104,"name":"address","nodeType":"ElementaryTypeName","src":"4076:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5108,"indexed":true,"mutability":"mutable","name":"kind","nameLocation":"4144:4:26","nodeType":"VariableDeclaration","scope":5118,"src":"4119:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},"typeName":{"id":5107,"nodeType":"UserDefinedTypeName","pathNode":{"id":5106,"name":"AddLiquidityKind","nameLocations":["4119:16:26"],"nodeType":"IdentifierPath","referencedDeclaration":8439,"src":"4119:16:26"},"referencedDeclaration":8439,"src":"4119:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":5110,"indexed":false,"mutability":"mutable","name":"totalSupply","nameLocation":"4166:11:26","nodeType":"VariableDeclaration","scope":5118,"src":"4158:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"4158:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5113,"indexed":false,"mutability":"mutable","name":"amountsAddedRaw","nameLocation":"4197:15:26","nodeType":"VariableDeclaration","scope":5118,"src":"4187:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4187:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5112,"nodeType":"ArrayTypeName","src":"4187:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5116,"indexed":false,"mutability":"mutable","name":"swapFeeAmountsRaw","nameLocation":"4232:17:26","nodeType":"VariableDeclaration","scope":5118,"src":"4222:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5114,"name":"uint256","nodeType":"ElementaryTypeName","src":"4222:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ArrayTypeName","src":"4222:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4036:219:26"},"src":"4016:240:26"},{"anonymous":false,"documentation":{"id":5119,"nodeType":"StructuredDocumentation","src":"4262:548:26","text":" @notice Liquidity has been removed from a pool.\n @param pool The pool with liquidity removed\n @param liquidityProvider The user performing the operation\n @param kind The remove liquidity operation type (e.g., proportional, custom)\n @param totalSupply The total supply of the pool after the operation\n @param amountsRemovedRaw The amount of each token that was removed, sorted in token registration order\n @param swapFeeAmountsRaw The total swap fees charged, sorted in token registration order"},"eventSelector":"fbe5b0d79fb94f1e81c0a92bf86ae9d3a19e9d1bf6202c0d3e75120f65d5d8a5","id":5136,"name":"LiquidityRemoved","nameLocation":"4821:16:26","nodeType":"EventDefinition","parameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"4863:4:26","nodeType":"VariableDeclaration","scope":5136,"src":"4847:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5120,"name":"address","nodeType":"ElementaryTypeName","src":"4847:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5123,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"4893:17:26","nodeType":"VariableDeclaration","scope":5136,"src":"4877:33:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5122,"name":"address","nodeType":"ElementaryTypeName","src":"4877:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5126,"indexed":true,"mutability":"mutable","name":"kind","nameLocation":"4948:4:26","nodeType":"VariableDeclaration","scope":5136,"src":"4920:32:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":5125,"nodeType":"UserDefinedTypeName","pathNode":{"id":5124,"name":"RemoveLiquidityKind","nameLocations":["4920:19:26"],"nodeType":"IdentifierPath","referencedDeclaration":8460,"src":"4920:19:26"},"referencedDeclaration":8460,"src":"4920:19:26","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":5128,"indexed":false,"mutability":"mutable","name":"totalSupply","nameLocation":"4970:11:26","nodeType":"VariableDeclaration","scope":5136,"src":"4962:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"4962:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"indexed":false,"mutability":"mutable","name":"amountsRemovedRaw","nameLocation":"5001:17:26","nodeType":"VariableDeclaration","scope":5136,"src":"4991:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4991:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5130,"nodeType":"ArrayTypeName","src":"4991:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5134,"indexed":false,"mutability":"mutable","name":"swapFeeAmountsRaw","nameLocation":"5038:17:26","nodeType":"VariableDeclaration","scope":5136,"src":"5028:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5132,"name":"uint256","nodeType":"ElementaryTypeName","src":"5028:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5133,"nodeType":"ArrayTypeName","src":"5028:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4837:224:26"},"src":"4815:247:26"},{"anonymous":false,"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"5068:114:26","text":" @notice The Vault's pause status has changed.\n @param paused True if the Vault was paused"},"eventSelector":"e0629fe656e45ad7fd63a24b899da368690024c07043b88e57aee5095b1d3d02","id":5141,"name":"VaultPausedStateChanged","nameLocation":"5193:23:26","nodeType":"EventDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"5222:6:26","nodeType":"VariableDeclaration","scope":5141,"src":"5217:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5138,"name":"bool","nodeType":"ElementaryTypeName","src":"5217:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5216:13:26"},"src":"5187:43:26"},{"anonymous":false,"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"5236:87:26","text":"@notice `disableQuery` has been called on the Vault, disabling query functionality."},"eventSelector":"bd204090fd387f08e3076528bf09b4fc99d8100d749eace96c06002d3fedc625","id":5144,"name":"VaultQueriesDisabled","nameLocation":"5334:20:26","nodeType":"EventDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[],"src":"5354:2:26"},"src":"5328:29:26"},{"anonymous":false,"documentation":{"id":5145,"nodeType":"StructuredDocumentation","src":"5363:85:26","text":"@notice `enableQuery` has been called on the Vault, enabling query functionality."},"eventSelector":"91d7478835f2b5adc315f5aad920f4a7f0a02f7fddf3042d17b2c80168ea17f5","id":5147,"name":"VaultQueriesEnabled","nameLocation":"5459:19:26","nodeType":"EventDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[],"src":"5478:2:26"},"src":"5453:28:26"},{"anonymous":false,"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"5487:171:26","text":" @notice A Pool's pause status has changed.\n @param pool The pool that was just paused or unpaused\n @param paused True if the pool was paused"},"eventSelector":"57e20448028297190122571be7cb6c1b1ef85730c673f7c72f533c8662419aa7","id":5154,"name":"PoolPausedStateChanged","nameLocation":"5669:22:26","nodeType":"EventDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"5708:4:26","nodeType":"VariableDeclaration","scope":5154,"src":"5692:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5149,"name":"address","nodeType":"ElementaryTypeName","src":"5692:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5152,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"5719:6:26","nodeType":"VariableDeclaration","scope":5154,"src":"5714:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5151,"name":"bool","nodeType":"ElementaryTypeName","src":"5714:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5691:35:26"},"src":"5663:64:26"},{"anonymous":false,"documentation":{"id":5155,"nodeType":"StructuredDocumentation","src":"5733:158:26","text":" @notice Emitted when the swap fee percentage of a pool is updated.\n @param swapFeePercentage The new swap fee percentage for the pool"},"eventSelector":"89d41522342fabac1471ca6073a5623e5caf367b03ca6e9a001478d0cf8be4a1","id":5161,"name":"SwapFeePercentageChanged","nameLocation":"5902:24:26","nodeType":"EventDefinition","parameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"5943:4:26","nodeType":"VariableDeclaration","scope":5161,"src":"5927:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5156,"name":"address","nodeType":"ElementaryTypeName","src":"5927:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5159,"indexed":false,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"5957:17:26","nodeType":"VariableDeclaration","scope":5161,"src":"5949:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5158,"name":"uint256","nodeType":"ElementaryTypeName","src":"5949:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5926:49:26"},"src":"5896:80:26"},{"anonymous":false,"documentation":{"id":5162,"nodeType":"StructuredDocumentation","src":"5982:170:26","text":" @notice Recovery mode has been enabled or disabled for a pool.\n @param pool The pool\n @param recoveryMode True if recovery mode was enabled"},"eventSelector":"c2354cc2f78ea57777e55ddd43a7f22b112ce98868596880edaeb22b4f9c73a9","id":5168,"name":"PoolRecoveryModeStateChanged","nameLocation":"6163:28:26","nodeType":"EventDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"6208:4:26","nodeType":"VariableDeclaration","scope":5168,"src":"6192:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5163,"name":"address","nodeType":"ElementaryTypeName","src":"6192:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5166,"indexed":false,"mutability":"mutable","name":"recoveryMode","nameLocation":"6219:12:26","nodeType":"VariableDeclaration","scope":5168,"src":"6214:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5165,"name":"bool","nodeType":"ElementaryTypeName","src":"6214:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6191:41:26"},"src":"6157:76:26"},{"anonymous":false,"documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"6239:353:26","text":" @notice A protocol or pool creator fee has changed, causing an update to the aggregate swap fee.\n @dev The `ProtocolFeeController` will emit an event with the underlying change.\n @param pool The pool whose aggregate swap fee percentage changed\n @param aggregateSwapFeePercentage The new aggregate swap fee percentage"},"eventSelector":"e4d371097beea42453a37406e2aef4c04f3c548f84ac50e72578662c0dcd7354","id":5175,"name":"AggregateSwapFeePercentageChanged","nameLocation":"6603:33:26","nodeType":"EventDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"6653:4:26","nodeType":"VariableDeclaration","scope":5175,"src":"6637:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5170,"name":"address","nodeType":"ElementaryTypeName","src":"6637:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5173,"indexed":false,"mutability":"mutable","name":"aggregateSwapFeePercentage","nameLocation":"6667:26:26","nodeType":"VariableDeclaration","scope":5175,"src":"6659:34:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"6659:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6636:58:26"},"src":"6597:98:26"},{"anonymous":false,"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"6701:357:26","text":" @notice A protocol or pool creator fee has changed, causing an update to the aggregate yield fee.\n @dev The `ProtocolFeeController` will emit an event with the underlying change.\n @param pool The pool whose aggregate yield fee percentage changed\n @param aggregateYieldFeePercentage The new aggregate yield fee percentage"},"eventSelector":"606eb97d83164bd6b200d638cd49c14c65d94d4f2c674cfd85e24e0e202c3ca5","id":5182,"name":"AggregateYieldFeePercentageChanged","nameLocation":"7069:34:26","nodeType":"EventDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"7120:4:26","nodeType":"VariableDeclaration","scope":5182,"src":"7104:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5177,"name":"address","nodeType":"ElementaryTypeName","src":"7104:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5180,"indexed":false,"mutability":"mutable","name":"aggregateYieldFeePercentage","nameLocation":"7134:27:26","nodeType":"VariableDeclaration","scope":5182,"src":"7126:35:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"7126:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7103:59:26"},"src":"7063:100:26"},{"anonymous":false,"documentation":{"id":5183,"nodeType":"StructuredDocumentation","src":"7169:132:26","text":" @notice A new authorizer is set by `setAuthorizer`.\n @param newAuthorizer The address of the new authorizer"},"eventSelector":"94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef","id":5188,"name":"AuthorizerChanged","nameLocation":"7312:17:26","nodeType":"EventDefinition","parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nameLocation":"7350:13:26","nodeType":"VariableDeclaration","scope":5188,"src":"7330:33:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$3151","typeString":"contract IAuthorizer"},"typeName":{"id":5185,"nodeType":"UserDefinedTypeName","pathNode":{"id":5184,"name":"IAuthorizer","nameLocations":["7330:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3151,"src":"7330:11:26"},"referencedDeclaration":3151,"src":"7330:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$3151","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"7329:35:26"},"src":"7306:59:26"},{"anonymous":false,"documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"7371:180:26","text":" @notice A new protocol fee controller is set by `setProtocolFeeController`.\n @param newProtocolFeeController The address of the new protocol fee controller"},"eventSelector":"280a60b1e63c1774d397d35cce80eb80e51408ead755fb446e6f744ce98e5df0","id":5194,"name":"ProtocolFeeControllerChanged","nameLocation":"7562:28:26","nodeType":"EventDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"indexed":true,"mutability":"mutable","name":"newProtocolFeeController","nameLocation":"7622:24:26","nodeType":"VariableDeclaration","scope":5194,"src":"7591:55:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeeController_$3691","typeString":"contract IProtocolFeeController"},"typeName":{"id":5191,"nodeType":"UserDefinedTypeName","pathNode":{"id":5190,"name":"IProtocolFeeController","nameLocations":["7591:22:26"],"nodeType":"IdentifierPath","referencedDeclaration":3691,"src":"7591:22:26"},"referencedDeclaration":3691,"src":"7591:22:26","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeeController_$3691","typeString":"contract IProtocolFeeController"}},"visibility":"internal"}],"src":"7590:57:26"},"src":"7556:92:26"},{"anonymous":false,"documentation":{"id":5195,"nodeType":"StructuredDocumentation","src":"7654:553:26","text":" @notice Liquidity was added to an ERC4626 buffer corresponding to the given wrapped token.\n @dev The underlying token can be derived from the wrapped token, so it's not included here.\n @param wrappedToken The wrapped token that identifies the buffer\n @param amountUnderlying The amount of the underlying token that was deposited\n @param amountWrapped The amount of the wrapped token that was deposited\n @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)"},"eventSelector":"75c4dc5f23640eeba7d404d9165f515fc3d9e23a5c8b6e2d09b4b9da56ff00a9","id":5206,"name":"LiquidityAddedToBuffer","nameLocation":"8218:22:26","nodeType":"EventDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"indexed":true,"mutability":"mutable","name":"wrappedToken","nameLocation":"8267:12:26","nodeType":"VariableDeclaration","scope":5206,"src":"8250:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5197,"nodeType":"UserDefinedTypeName","pathNode":{"id":5196,"name":"IERC4626","nameLocations":["8250:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"8250:8:26"},"referencedDeclaration":259,"src":"8250:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":5200,"indexed":false,"mutability":"mutable","name":"amountUnderlying","nameLocation":"8297:16:26","nodeType":"VariableDeclaration","scope":5206,"src":"8289:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"8289:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5202,"indexed":false,"mutability":"mutable","name":"amountWrapped","nameLocation":"8331:13:26","nodeType":"VariableDeclaration","scope":5206,"src":"8323:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5201,"name":"uint256","nodeType":"ElementaryTypeName","src":"8323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5204,"indexed":false,"mutability":"mutable","name":"bufferBalances","nameLocation":"8362:14:26","nodeType":"VariableDeclaration","scope":5206,"src":"8354:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8354:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8240:142:26"},"src":"8212:171:26"},{"anonymous":false,"documentation":{"id":5207,"nodeType":"StructuredDocumentation","src":"8389:570:26","text":" @notice Buffer shares were minted for an ERC4626 buffer corresponding to a given wrapped token.\n @dev The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares`\n retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the\n \"totalSupply\" of a buffer.\n @param wrappedToken The wrapped token that identifies the buffer\n @param to The owner of the minted shares\n @param issuedShares The amount of \"internal BPT\" shares created"},"eventSelector":"d66f031d33381c6408f0b32c884461e5de3df8808399b6f3a3d86b1368f8ec34","id":5216,"name":"BufferSharesMinted","nameLocation":"8970:18:26","nodeType":"EventDefinition","parameters":{"id":5215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"indexed":true,"mutability":"mutable","name":"wrappedToken","nameLocation":"9006:12:26","nodeType":"VariableDeclaration","scope":5216,"src":"8989:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5209,"nodeType":"UserDefinedTypeName","pathNode":{"id":5208,"name":"IERC4626","nameLocations":["8989:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"8989:8:26"},"referencedDeclaration":259,"src":"8989:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":5212,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"9036:2:26","nodeType":"VariableDeclaration","scope":5216,"src":"9020:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5211,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5214,"indexed":false,"mutability":"mutable","name":"issuedShares","nameLocation":"9048:12:26","nodeType":"VariableDeclaration","scope":5216,"src":"9040:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5213,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8988:73:26"},"src":"8964:98:26"},{"anonymous":false,"documentation":{"id":5217,"nodeType":"StructuredDocumentation","src":"9068:571:26","text":" @notice Buffer shares were burned for an ERC4626 buffer corresponding to a given wrapped token.\n @dev The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares`\n retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the\n \"totalSupply\" of a buffer.\n @param wrappedToken The wrapped token that identifies the buffer\n @param from The owner of the burned shares\n @param burnedShares The amount of \"internal BPT\" shares burned"},"eventSelector":"4e09f7f7fc37ce2897800e2c2a9099565edb0a133d19d84a6871b3530af8846b","id":5226,"name":"BufferSharesBurned","nameLocation":"9650:18:26","nodeType":"EventDefinition","parameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"indexed":true,"mutability":"mutable","name":"wrappedToken","nameLocation":"9686:12:26","nodeType":"VariableDeclaration","scope":5226,"src":"9669:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5219,"nodeType":"UserDefinedTypeName","pathNode":{"id":5218,"name":"IERC4626","nameLocations":["9669:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"9669:8:26"},"referencedDeclaration":259,"src":"9669:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":5222,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"9716:4:26","nodeType":"VariableDeclaration","scope":5226,"src":"9700:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5221,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5224,"indexed":false,"mutability":"mutable","name":"burnedShares","nameLocation":"9730:12:26","nodeType":"VariableDeclaration","scope":5226,"src":"9722:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5223,"name":"uint256","nodeType":"ElementaryTypeName","src":"9722:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9668:75:26"},"src":"9644:100:26"},{"anonymous":false,"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"9750:509:26","text":" @notice Liquidity was removed from an ERC4626 buffer.\n @dev The underlying token can be derived from the wrapped token, so it's not included here.\n @param wrappedToken The wrapped token that identifies the buffer\n @param amountUnderlying The amount of the underlying token that was withdrawn\n @param amountWrapped The amount of the wrapped token that was withdrawn\n @param bufferBalances The final buffer balances, packed in 128-bit words (underlying, wrapped)"},"eventSelector":"44d97b36e99b590b3d2875aad3b167b1d7fb1e063f3f1325a1eeac76caee5113","id":5238,"name":"LiquidityRemovedFromBuffer","nameLocation":"10270:26:26","nodeType":"EventDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"indexed":true,"mutability":"mutable","name":"wrappedToken","nameLocation":"10323:12:26","nodeType":"VariableDeclaration","scope":5238,"src":"10306:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5229,"nodeType":"UserDefinedTypeName","pathNode":{"id":5228,"name":"IERC4626","nameLocations":["10306:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"10306:8:26"},"referencedDeclaration":259,"src":"10306:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":5232,"indexed":false,"mutability":"mutable","name":"amountUnderlying","nameLocation":"10353:16:26","nodeType":"VariableDeclaration","scope":5238,"src":"10345:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"10345:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5234,"indexed":false,"mutability":"mutable","name":"amountWrapped","nameLocation":"10387:13:26","nodeType":"VariableDeclaration","scope":5238,"src":"10379:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"10379:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5236,"indexed":false,"mutability":"mutable","name":"bufferBalances","nameLocation":"10418:14:26","nodeType":"VariableDeclaration","scope":5238,"src":"10410:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10410:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10296:142:26"},"src":"10264:175:26"},{"anonymous":false,"documentation":{"id":5239,"nodeType":"StructuredDocumentation","src":"10445:278:26","text":" @notice The Vault buffers pause status has changed.\n @dev If buffers all paused, all buffer operations (i.e., all calls through the Router with `isBuffer`\n set to true) will revert.\n @param paused True if the Vault buffers were paused"},"eventSelector":"300c7ca619eb846386aa0a6e5916ac2a41406448b0a2e99ba9ccafeb899015a5","id":5243,"name":"VaultBuffersPausedStateChanged","nameLocation":"10734:30:26","nodeType":"EventDefinition","parameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"10770:6:26","nodeType":"VariableDeclaration","scope":5243,"src":"10765:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5240,"name":"bool","nodeType":"ElementaryTypeName","src":"10765:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10764:13:26"},"src":"10728:50:26"},{"anonymous":false,"documentation":{"id":5244,"nodeType":"StructuredDocumentation","src":"10784:194:26","text":" @notice Pools can use this event to emit event data from the Vault.\n @param pool Pool address\n @param eventKey Event key\n @param eventData Encoded event data"},"eventSelector":"4bc4412e210115456903c65b5277d299a505e79f2eb852b92b1ca52d85856428","id":5252,"name":"VaultAuxiliary","nameLocation":"10989:14:26","nodeType":"EventDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"11020:4:26","nodeType":"VariableDeclaration","scope":5252,"src":"11004:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5245,"name":"address","nodeType":"ElementaryTypeName","src":"11004:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5248,"indexed":true,"mutability":"mutable","name":"eventKey","nameLocation":"11042:8:26","nodeType":"VariableDeclaration","scope":5252,"src":"11026:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11026:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5250,"indexed":false,"mutability":"mutable","name":"eventData","nameLocation":"11058:9:26","nodeType":"VariableDeclaration","scope":5252,"src":"11052:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5249,"name":"bytes","nodeType":"ElementaryTypeName","src":"11052:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11003:65:26"},"src":"10983:86:26"}],"scope":5254,"src":"500:10571:26","usedErrors":[],"usedEvents":[5052,5057,5076,5088,5100,5118,5136,5141,5144,5147,5154,5161,5168,5175,5182,5188,5194,5206,5216,5226,5238,5243,5252]}],"src":"46:11026:26"},"id":26},"contracts/IVaultExtension.sol":{"ast":{"absolutePath":"contracts/IVaultExtension.sol","exportedSymbols":{"AddLiquidityKind":[8439],"AddLiquidityParams":[8455],"AfterSwapParams":[8433],"BufferWrapOrUnwrapParams":[8494],"FEE_BITLENGTH":[8497],"FEE_SCALING_FACTOR":[8500],"HookFlags":[8259],"HooksConfig":[8283],"IAuthorizer":[3151],"IERC20":[337],"IERC4626":[259],"IHooks":[3353],"IProtocolFeeController":[3691],"IRateProvider":[3701],"IVault":[4357],"IVaultExtension":[5672],"LiquidityManagement":[8212],"MAX_FEE_PERCENTAGE":[8503],"PoolConfig":[8237],"PoolConfigBits":[8214],"PoolData":[8361],"PoolRoleAccounts":[8309],"PoolSwapParams":[8404],"RemoveLiquidityKind":[8460],"RemoveLiquidityParams":[8476],"Rounding":[8364],"SwapKind":[8367],"SwapState":[8293],"TokenConfig":[8326],"TokenInfo":[8336],"TokenType":[8313],"VaultState":[8301],"VaultSwapParams":[8386],"WrappingDirection":[8479]},"id":5673,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5255,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:27"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":5257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":260,"src":"72:75:27","symbolAliases":[{"foreign":{"id":5256,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"81:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":338,"src":"148:72:27","symbolAliases":[{"foreign":{"id":5258,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"157:6:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IAuthorizer.sol","file":"./IAuthorizer.sol","id":5261,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":3152,"src":"222:48:27","symbolAliases":[{"foreign":{"id":5260,"name":"IAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"231:11:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IProtocolFeeController.sol","file":"./IProtocolFeeController.sol","id":5263,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":3692,"src":"271:70:27","symbolAliases":[{"foreign":{"id":5262,"name":"IProtocolFeeController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"280:22:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":5265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":4358,"src":"342:38:27","symbolAliases":[{"foreign":{"id":5264,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"351:6:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IHooks.sol","file":"./IHooks.sol","id":5267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":3354,"src":"381:38:27","symbolAliases":[{"foreign":{"id":5266,"name":"IHooks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"390:6:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":5268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5673,"sourceUnit":8504,"src":"420:26:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultExtension","contractDependencies":[],"contractKind":"interface","documentation":{"id":5269,"nodeType":"StructuredDocumentation","src":"448:318:27","text":" @notice Interface for functions defined on the `VaultExtension` contract.\n @dev `VaultExtension` handles less critical or frequently used functions, since delegate calls through\n the Vault are more expensive than direct calls. The main Vault contains the core code for swaps and\n liquidity operations."},"fullyImplemented":false,"id":5672,"linearizedBaseContracts":[5672],"name":"IVaultExtension","nameLocation":"777:15:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5270,"nodeType":"StructuredDocumentation","src":"1025:206:27","text":" @notice Returns the main Vault address.\n @dev The main Vault contains the entrypoint and main liquidity operation implementations.\n @return vault The address of the main Vault"},"functionSelector":"fbfa77cf","id":5276,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"1245:5:27","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[],"src":"1250:2:27"},"returnParameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5276,"src":"1276:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":5273,"nodeType":"UserDefinedTypeName","pathNode":{"id":5272,"name":"IVault","nameLocations":["1276:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"1276:6:27"},"referencedDeclaration":4357,"src":"1276:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1275:8:27"},"scope":5672,"src":"1236:48:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5277,"nodeType":"StructuredDocumentation","src":"1290:202:27","text":" @notice Returns the VaultAdmin contract address.\n @dev The VaultAdmin contract mostly implements permissioned functions.\n @return vaultAdmin The address of the Vault admin"},"functionSelector":"1ba0ae45","id":5282,"implemented":false,"kind":"function","modifiers":[],"name":"getVaultAdmin","nameLocation":"1506:13:27","nodeType":"FunctionDefinition","parameters":{"id":5278,"nodeType":"ParameterList","parameters":[],"src":"1519:2:27"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"vaultAdmin","nameLocation":"1553:10:27","nodeType":"VariableDeclaration","scope":5282,"src":"1545:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5279,"name":"address","nodeType":"ElementaryTypeName","src":"1545:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1544:20:27"},"scope":5672,"src":"1497:68:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"1793:254:27","text":" @notice Returns whether the Vault is unlocked (i.e., executing an operation).\n @dev The Vault must be unlocked to perform state-changing liquidity operations.\n @return unlocked True if the Vault is unlocked, false otherwise"},"functionSelector":"8380edb7","id":5288,"implemented":false,"kind":"function","modifiers":[],"name":"isUnlocked","nameLocation":"2061:10:27","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[],"src":"2071:2:27"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"unlocked","nameLocation":"2102:8:27","nodeType":"VariableDeclaration","scope":5288,"src":"2097:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5285,"name":"bool","nodeType":"ElementaryTypeName","src":"2097:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2096:15:27"},"scope":5672,"src":"2052:60:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"2118:141:27","text":"  @notice Returns the count of non-zero deltas.\n  @return nonzeroDeltaCount The current value of `_nonzeroDeltaCount`"},"functionSelector":"db817187","id":5294,"implemented":false,"kind":"function","modifiers":[],"name":"getNonzeroDeltaCount","nameLocation":"2273:20:27","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[],"src":"2293:2:27"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"nonzeroDeltaCount","nameLocation":"2327:17:27","nodeType":"VariableDeclaration","scope":5294,"src":"2319:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:27:27"},"scope":5672,"src":"2264:82:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"2352:284:27","text":" @notice Retrieves the token delta for a specific token.\n @dev This function allows reading the value from the `_tokenDeltas` mapping.\n @param token The token for which the delta is being fetched\n @return tokenDelta The delta of the specified token"},"functionSelector":"9e825ff5","id":5303,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenDelta","nameLocation":"2650:13:27","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"token","nameLocation":"2671:5:27","nodeType":"VariableDeclaration","scope":5303,"src":"2664:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5297,"nodeType":"UserDefinedTypeName","pathNode":{"id":5296,"name":"IERC20","nameLocations":["2664:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2664:6:27"},"referencedDeclaration":337,"src":"2664:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2663:14:27"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"tokenDelta","nameLocation":"2708:10:27","nodeType":"VariableDeclaration","scope":5303,"src":"2701:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5300,"name":"int256","nodeType":"ElementaryTypeName","src":"2701:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2700:19:27"},"scope":5672,"src":"2641:79:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"2726:230:27","text":" @notice Retrieves the reserve (i.e., total Vault balance) of a given token.\n @param token The token for which to retrieve the reserve\n @return reserveAmount The amount of reserves for the given token"},"functionSelector":"96787092","id":5312,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesOf","nameLocation":"2970:13:27","nodeType":"FunctionDefinition","parameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"token","nameLocation":"2991:5:27","nodeType":"VariableDeclaration","scope":5312,"src":"2984:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5306,"nodeType":"UserDefinedTypeName","pathNode":{"id":5305,"name":"IERC20","nameLocations":["2984:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2984:6:27"},"referencedDeclaration":337,"src":"2984:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2983:14:27"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"reserveAmount","nameLocation":"3029:13:27","nodeType":"VariableDeclaration","scope":5312,"src":"3021:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3020:23:27"},"scope":5672,"src":"2961:83:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"3050:944:27","text":" @notice This flag is used to detect and tax \"round-trip\" interactions (adding and removing liquidity in the\n same pool).\n @dev Taxing remove liquidity proportional whenever liquidity was added in the same `unlock` call adds an extra\n layer of security, discouraging operations that try to undo others for profit. Remove liquidity proportional\n is the only standard way to exit a position without fees, and this flag is used to enable fees in that case.\n It also discourages indirect swaps via unbalanced add and remove proportional, as they are expected to be worse\n than a simple swap for every pool type.\n @param pool Address of the pool to check\n @return liquidityAdded True if liquidity has been added to this pool in the current transaction\n Note that there is no `sessionId` argument; it always returns the value for the current (i.e., latest) session."},"functionSelector":"ace9b89b","id":5320,"implemented":false,"kind":"function","modifiers":[],"name":"getAddLiquidityCalledFlag","nameLocation":"4008:25:27","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"pool","nameLocation":"4042:4:27","nodeType":"VariableDeclaration","scope":5320,"src":"4034:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5314,"name":"address","nodeType":"ElementaryTypeName","src":"4034:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4033:14:27"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"liquidityAdded","nameLocation":"4076:14:27","nodeType":"VariableDeclaration","scope":5320,"src":"4071:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5317,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:21:27"},"scope":5672,"src":"3999:93:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5321,"nodeType":"StructuredDocumentation","src":"4323:1604:27","text":" @notice Registers a pool, associating it with its factory and the tokens it manages.\n @dev A pool can opt-out of pausing by providing a zero value for the pause window, or allow pausing indefinitely\n by providing a large value. (Pool pause windows are not limited by the Vault maximums.) The vault defines an\n additional buffer period during which a paused pool will stay paused. After the buffer period passes, a paused\n pool will automatically unpause. Balancer timestamps are 32 bits.\n A pool can opt out of Balancer governance pausing by providing a custom `pauseManager`. This might be a\n multi-sig contract or an arbitrary smart contract with its own access controls, that forwards calls to\n the Vault.\n If the zero address is provided for the `pauseManager`, permissions for pausing the pool will default to the\n authorizer.\n @param pool The address of the pool being registered\n @param tokenConfig An array of descriptors for the tokens the pool will manage\n @param swapFeePercentage The initial static swap fee percentage of the pool\n @param pauseWindowEndTime The timestamp after which it is no longer possible to pause the pool\n @param protocolFeeExempt If true, the pool's initial aggregate fees will be set to 0\n @param roleAccounts Addresses the Vault will allow to change certain pool settings\n @param poolHooksContract Contract that implements the hooks for the pool\n @param liquidityManagement Liquidity management flags with implemented methods"},"functionSelector":"eeec802f","id":5344,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nameLocation":"5941:12:27","nodeType":"FunctionDefinition","parameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"pool","nameLocation":"5971:4:27","nodeType":"VariableDeclaration","scope":5344,"src":"5963:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5322,"name":"address","nodeType":"ElementaryTypeName","src":"5963:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"tokenConfig","nameLocation":"6006:11:27","nodeType":"VariableDeclaration","scope":5344,"src":"5985:32:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8326_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenConfig[]"},"typeName":{"baseType":{"id":5325,"nodeType":"UserDefinedTypeName","pathNode":{"id":5324,"name":"TokenConfig","nameLocations":["5985:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":8326,"src":"5985:11:27"},"referencedDeclaration":8326,"src":"5985:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfig_$8326_storage_ptr","typeString":"struct TokenConfig"}},"id":5326,"nodeType":"ArrayTypeName","src":"5985:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenConfig_$8326_storage_$dyn_storage_ptr","typeString":"struct TokenConfig[]"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"6035:17:27","nodeType":"VariableDeclaration","scope":5344,"src":"6027:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"6027:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5331,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"6069:18:27","nodeType":"VariableDeclaration","scope":5344,"src":"6062:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5330,"name":"uint32","nodeType":"ElementaryTypeName","src":"6062:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5333,"mutability":"mutable","name":"protocolFeeExempt","nameLocation":"6102:17:27","nodeType":"VariableDeclaration","scope":5344,"src":"6097:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5332,"name":"bool","nodeType":"ElementaryTypeName","src":"6097:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5336,"mutability":"mutable","name":"roleAccounts","nameLocation":"6155:12:27","nodeType":"VariableDeclaration","scope":5344,"src":"6129:38:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRoleAccounts_$8309_calldata_ptr","typeString":"struct PoolRoleAccounts"},"typeName":{"id":5335,"nodeType":"UserDefinedTypeName","pathNode":{"id":5334,"name":"PoolRoleAccounts","nameLocations":["6129:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":8309,"src":"6129:16:27"},"referencedDeclaration":8309,"src":"6129:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRoleAccounts_$8309_storage_ptr","typeString":"struct PoolRoleAccounts"}},"visibility":"internal"},{"constant":false,"id":5338,"mutability":"mutable","name":"poolHooksContract","nameLocation":"6185:17:27","nodeType":"VariableDeclaration","scope":5344,"src":"6177:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5337,"name":"address","nodeType":"ElementaryTypeName","src":"6177:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5341,"mutability":"mutable","name":"liquidityManagement","nameLocation":"6241:19:27","nodeType":"VariableDeclaration","scope":5344,"src":"6212:48:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_calldata_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":5340,"nodeType":"UserDefinedTypeName","pathNode":{"id":5339,"name":"LiquidityManagement","nameLocations":["6212:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":8212,"src":"6212:19:27"},"referencedDeclaration":8212,"src":"6212:19:27","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"}],"src":"5953:313:27"},"returnParameters":{"id":5343,"nodeType":"ParameterList","parameters":[],"src":"6275:0:27"},"scope":5672,"src":"5932:344:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5345,"nodeType":"StructuredDocumentation","src":"6282:185:27","text":" @notice Checks whether a pool is registered.\n @param pool Address of the pool to check\n @return registered True if the pool is registered, false otherwise"},"functionSelector":"c673bdaf","id":5352,"implemented":false,"kind":"function","modifiers":[],"name":"isPoolRegistered","nameLocation":"6481:16:27","nodeType":"FunctionDefinition","parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"pool","nameLocation":"6506:4:27","nodeType":"VariableDeclaration","scope":5352,"src":"6498:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5346,"name":"address","nodeType":"ElementaryTypeName","src":"6498:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6497:14:27"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"registered","nameLocation":"6540:10:27","nodeType":"VariableDeclaration","scope":5352,"src":"6535:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5349,"name":"bool","nodeType":"ElementaryTypeName","src":"6535:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6534:17:27"},"scope":5672,"src":"6472:80:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"6558:589:27","text":" @notice Initializes a registered pool by adding liquidity; mints BPT tokens for the first time in exchange.\n @param pool Address of the pool to initialize\n @param to Address that will receive the output BPT\n @param tokens Tokens used to seed the pool (must match the registered tokens)\n @param exactAmountsIn Exact amounts of input tokens\n @param minBptAmountOut Minimum amount of output pool tokens\n @param userData Additional (optional) data required for adding initial liquidity\n @return bptAmountOut Output pool token amount"},"functionSelector":"ba8a2be0","id":5373,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"7161:10:27","nodeType":"FunctionDefinition","parameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"pool","nameLocation":"7189:4:27","nodeType":"VariableDeclaration","scope":5373,"src":"7181:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5354,"name":"address","nodeType":"ElementaryTypeName","src":"7181:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5357,"mutability":"mutable","name":"to","nameLocation":"7211:2:27","nodeType":"VariableDeclaration","scope":5373,"src":"7203:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5356,"name":"address","nodeType":"ElementaryTypeName","src":"7203:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5361,"mutability":"mutable","name":"tokens","nameLocation":"7239:6:27","nodeType":"VariableDeclaration","scope":5373,"src":"7223:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5359,"nodeType":"UserDefinedTypeName","pathNode":{"id":5358,"name":"IERC20","nameLocations":["7223:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"7223:6:27"},"referencedDeclaration":337,"src":"7223:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":5360,"nodeType":"ArrayTypeName","src":"7223:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"7272:14:27","nodeType":"VariableDeclaration","scope":5373,"src":"7255:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"7255:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5363,"nodeType":"ArrayTypeName","src":"7255:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5366,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"7304:15:27","nodeType":"VariableDeclaration","scope":5373,"src":"7296:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5365,"name":"uint256","nodeType":"ElementaryTypeName","src":"7296:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5368,"mutability":"mutable","name":"userData","nameLocation":"7342:8:27","nodeType":"VariableDeclaration","scope":5373,"src":"7329:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5367,"name":"bytes","nodeType":"ElementaryTypeName","src":"7329:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7171:185:27"},"returnParameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"bptAmountOut","nameLocation":"7383:12:27","nodeType":"VariableDeclaration","scope":5373,"src":"7375:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7374:22:27"},"scope":5672,"src":"7152:245:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5374,"nodeType":"StructuredDocumentation","src":"7627:258:27","text":" @notice Checks whether a pool is initialized.\n @dev An initialized pool can be considered registered as well.\n @param pool Address of the pool to check\n @return initialized True if the pool is initialized, false otherwise"},"functionSelector":"532cec7c","id":5381,"implemented":false,"kind":"function","modifiers":[],"name":"isPoolInitialized","nameLocation":"7899:17:27","nodeType":"FunctionDefinition","parameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"pool","nameLocation":"7925:4:27","nodeType":"VariableDeclaration","scope":5381,"src":"7917:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5375,"name":"address","nodeType":"ElementaryTypeName","src":"7917:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7916:14:27"},"returnParameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"initialized","nameLocation":"7959:11:27","nodeType":"VariableDeclaration","scope":5381,"src":"7954:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5378,"name":"bool","nodeType":"ElementaryTypeName","src":"7954:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7953:18:27"},"scope":5672,"src":"7890:82:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5382,"nodeType":"StructuredDocumentation","src":"7978:152:27","text":" @notice Gets the tokens registered to a pool.\n @param pool Address of the pool\n @return tokens List of tokens in the pool"},"functionSelector":"ca4f2803","id":5391,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nameLocation":"8144:13:27","nodeType":"FunctionDefinition","parameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"pool","nameLocation":"8166:4:27","nodeType":"VariableDeclaration","scope":5391,"src":"8158:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5383,"name":"address","nodeType":"ElementaryTypeName","src":"8158:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8157:14:27"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"tokens","nameLocation":"8211:6:27","nodeType":"VariableDeclaration","scope":5391,"src":"8195:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5387,"nodeType":"UserDefinedTypeName","pathNode":{"id":5386,"name":"IERC20","nameLocations":["8195:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"8195:6:27"},"referencedDeclaration":337,"src":"8195:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":5388,"nodeType":"ArrayTypeName","src":"8195:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"8194:24:27"},"scope":5672,"src":"8135:84:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5392,"nodeType":"StructuredDocumentation","src":"8225:512:27","text":" @notice Gets pool token rates.\n @dev This function performs external calls if tokens are yield-bearing. All returned arrays are in token\n registration order.\n @param pool Address of the pool\n @return decimalScalingFactors Conversion factor used to adjust for token decimals for uniform precision in\n calculations. FP(1) for 18-decimal tokens\n @return tokenRates 18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens"},"functionSelector":"7e361bde","id":5403,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenRates","nameLocation":"8751:17:27","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"pool","nameLocation":"8786:4:27","nodeType":"VariableDeclaration","scope":5403,"src":"8778:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5393,"name":"address","nodeType":"ElementaryTypeName","src":"8778:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8768:28:27"},"returnParameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"decimalScalingFactors","nameLocation":"8837:21:27","nodeType":"VariableDeclaration","scope":5403,"src":"8820:38:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"8820:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ArrayTypeName","src":"8820:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"tokenRates","nameLocation":"8877:10:27","nodeType":"VariableDeclaration","scope":5403,"src":"8860:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8860:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5400,"nodeType":"ArrayTypeName","src":"8860:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8819:69:27"},"scope":5672,"src":"8742:147:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5404,"nodeType":"StructuredDocumentation","src":"8895:287:27","text":" @notice Returns comprehensive pool data for the given pool.\n @dev This contains the pool configuration (flags), tokens and token types, rates, scaling factors, and balances.\n @param pool The address of the pool\n @return poolData The `PoolData` result"},"functionSelector":"13d21cdf","id":5412,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolData","nameLocation":"9196:11:27","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"pool","nameLocation":"9216:4:27","nodeType":"VariableDeclaration","scope":5412,"src":"9208:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5405,"name":"address","nodeType":"ElementaryTypeName","src":"9208:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9207:14:27"},"returnParameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"poolData","nameLocation":"9261:8:27","nodeType":"VariableDeclaration","scope":5412,"src":"9245:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolData_$8361_memory_ptr","typeString":"struct PoolData"},"typeName":{"id":5409,"nodeType":"UserDefinedTypeName","pathNode":{"id":5408,"name":"PoolData","nameLocations":["9245:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8361,"src":"9245:8:27"},"referencedDeclaration":8361,"src":"9245:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolData_$8361_storage_ptr","typeString":"struct PoolData"}},"visibility":"internal"}],"src":"9244:26:27"},"scope":5672,"src":"9187:84:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5413,"nodeType":"StructuredDocumentation","src":"9277:531:27","text":" @notice Gets the raw data for a pool: tokens, raw balances, scaling factors.\n @param pool Address of the pool\n @return tokens The pool tokens, sorted in registration order\n @return tokenInfo Token info structs (type, rate provider, yield flag), sorted in token registration order\n @return balancesRaw Current native decimal balances of the pool tokens, sorted in token registration order\n @return lastBalancesLiveScaled18 Last saved live balances, sorted in token registration order"},"functionSelector":"67e0e076","id":5432,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nameLocation":"9822:16:27","nodeType":"FunctionDefinition","parameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"pool","nameLocation":"9856:4:27","nodeType":"VariableDeclaration","scope":5432,"src":"9848:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5414,"name":"address","nodeType":"ElementaryTypeName","src":"9848:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9838:28:27"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"tokens","nameLocation":"9943:6:27","nodeType":"VariableDeclaration","scope":5432,"src":"9927:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5418,"nodeType":"UserDefinedTypeName","pathNode":{"id":5417,"name":"IERC20","nameLocations":["9927:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"9927:6:27"},"referencedDeclaration":337,"src":"9927:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":5419,"nodeType":"ArrayTypeName","src":"9927:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":5424,"mutability":"mutable","name":"tokenInfo","nameLocation":"9982:9:27","nodeType":"VariableDeclaration","scope":5432,"src":"9963:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$8336_memory_ptr_$dyn_memory_ptr","typeString":"struct TokenInfo[]"},"typeName":{"baseType":{"id":5422,"nodeType":"UserDefinedTypeName","pathNode":{"id":5421,"name":"TokenInfo","nameLocations":["9963:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":8336,"src":"9963:9:27"},"referencedDeclaration":8336,"src":"9963:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$8336_storage_ptr","typeString":"struct TokenInfo"}},"id":5423,"nodeType":"ArrayTypeName","src":"9963:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$8336_storage_$dyn_storage_ptr","typeString":"struct TokenInfo[]"}},"visibility":"internal"},{"constant":false,"id":5427,"mutability":"mutable","name":"balancesRaw","nameLocation":"10022:11:27","nodeType":"VariableDeclaration","scope":5432,"src":"10005:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5426,"nodeType":"ArrayTypeName","src":"10005:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"lastBalancesLiveScaled18","nameLocation":"10064:24:27","nodeType":"VariableDeclaration","scope":5432,"src":"10047:41:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"10047:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5429,"nodeType":"ArrayTypeName","src":"10047:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9913:185:27"},"scope":5672,"src":"9813:286:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5433,"nodeType":"StructuredDocumentation","src":"10105:312:27","text":" @notice Gets current live balances of a given pool (fixed-point, 18 decimals), corresponding to its tokens in\n registration order.\n @param pool Address of the pool\n @return balancesLiveScaled18 Token balances after paying yield fees, applying decimal scaling and rates"},"functionSelector":"535cfd8a","id":5441,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentLiveBalances","nameLocation":"10431:22:27","nodeType":"FunctionDefinition","parameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"pool","nameLocation":"10462:4:27","nodeType":"VariableDeclaration","scope":5441,"src":"10454:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5434,"name":"address","nodeType":"ElementaryTypeName","src":"10454:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10453:14:27"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"balancesLiveScaled18","nameLocation":"10508:20:27","nodeType":"VariableDeclaration","scope":5441,"src":"10491:37:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10491:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5438,"nodeType":"ArrayTypeName","src":"10491:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10490:39:27"},"scope":5672,"src":"10422:108:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5442,"nodeType":"StructuredDocumentation","src":"10536:301:27","text":" @notice Gets the configuration parameters of a pool.\n @dev The `PoolConfig` contains liquidity management and other state flags, fee percentages, the pause window.\n @param pool Address of the pool\n @return poolConfig The pool configuration as a `PoolConfig` struct"},"functionSelector":"f29486a1","id":5450,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfig","nameLocation":"10851:13:27","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"pool","nameLocation":"10873:4:27","nodeType":"VariableDeclaration","scope":5450,"src":"10865:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5443,"name":"address","nodeType":"ElementaryTypeName","src":"10865:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10864:14:27"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"poolConfig","nameLocation":"10920:10:27","nodeType":"VariableDeclaration","scope":5450,"src":"10902:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolConfig_$8237_memory_ptr","typeString":"struct PoolConfig"},"typeName":{"id":5447,"nodeType":"UserDefinedTypeName","pathNode":{"id":5446,"name":"PoolConfig","nameLocations":["10902:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":8237,"src":"10902:10:27"},"referencedDeclaration":8237,"src":"10902:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolConfig_$8237_storage_ptr","typeString":"struct PoolConfig"}},"visibility":"internal"}],"src":"10901:30:27"},"scope":5672,"src":"10842:90:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5451,"nodeType":"StructuredDocumentation","src":"10938:283:27","text":" @notice Gets the hooks configuration parameters of a pool.\n @dev The `HooksConfig` contains flags indicating which pool hooks are implemented.\n @param pool Address of the pool\n @return hooksConfig The hooks configuration as a `HooksConfig` struct"},"functionSelector":"ce8630d4","id":5459,"implemented":false,"kind":"function","modifiers":[],"name":"getHooksConfig","nameLocation":"11235:14:27","nodeType":"FunctionDefinition","parameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"pool","nameLocation":"11258:4:27","nodeType":"VariableDeclaration","scope":5459,"src":"11250:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5452,"name":"address","nodeType":"ElementaryTypeName","src":"11250:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11249:14:27"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"hooksConfig","nameLocation":"11306:11:27","nodeType":"VariableDeclaration","scope":5459,"src":"11287:30:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_HooksConfig_$8283_memory_ptr","typeString":"struct HooksConfig"},"typeName":{"id":5456,"nodeType":"UserDefinedTypeName","pathNode":{"id":5455,"name":"HooksConfig","nameLocations":["11287:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":8283,"src":"11287:11:27"},"referencedDeclaration":8283,"src":"11287:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_HooksConfig_$8283_storage_ptr","typeString":"struct HooksConfig"}},"visibility":"internal"}],"src":"11286:32:27"},"scope":5672,"src":"11226:93:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"11325:160:27","text":" @notice The current rate of a pool token (BPT) = invariant / totalSupply.\n @param pool Address of the pool\n @return rate BPT rate"},"functionSelector":"4f037ee7","id":5467,"implemented":false,"kind":"function","modifiers":[],"name":"getBptRate","nameLocation":"11499:10:27","nodeType":"FunctionDefinition","parameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"pool","nameLocation":"11518:4:27","nodeType":"VariableDeclaration","scope":5467,"src":"11510:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5461,"name":"address","nodeType":"ElementaryTypeName","src":"11510:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11509:14:27"},"returnParameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"rate","nameLocation":"11555:4:27","nodeType":"VariableDeclaration","scope":5467,"src":"11547:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"11547:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11546:14:27"},"scope":5672,"src":"11490:71:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"11792:168:27","text":" @notice Gets the total supply of a given ERC20 token.\n @param token The token address\n @return tokenTotalSupply Total supply of the token"},"functionSelector":"e4dc2aa4","id":5475,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"11974:11:27","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"token","nameLocation":"11994:5:27","nodeType":"VariableDeclaration","scope":5475,"src":"11986:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5469,"name":"address","nodeType":"ElementaryTypeName","src":"11986:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11985:15:27"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"tokenTotalSupply","nameLocation":"12032:16:27","nodeType":"VariableDeclaration","scope":5475,"src":"12024:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"12024:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12023:26:27"},"scope":5672,"src":"11965:85:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"12056:225:27","text":" @notice Gets the balance of an account for a given ERC20 token.\n @param token Address of the token\n @param account Address of the account\n @return tokenBalance Token balance of the account"},"functionSelector":"f7888aec","id":5485,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"12295:9:27","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"token","nameLocation":"12313:5:27","nodeType":"VariableDeclaration","scope":5485,"src":"12305:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5477,"name":"address","nodeType":"ElementaryTypeName","src":"12305:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5480,"mutability":"mutable","name":"account","nameLocation":"12328:7:27","nodeType":"VariableDeclaration","scope":5485,"src":"12320:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5479,"name":"address","nodeType":"ElementaryTypeName","src":"12320:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12304:32:27"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"tokenBalance","nameLocation":"12368:12:27","nodeType":"VariableDeclaration","scope":5485,"src":"12360:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"12360:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12359:22:27"},"scope":5672,"src":"12286:96:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"12388:299:27","text":" @notice Gets the allowance of a spender for a given ERC20 token and owner.\n @param token Address of the token\n @param owner Address of the owner\n @param spender Address of the spender\n @return tokenAllowance Amount of tokens the spender is allowed to spend"},"functionSelector":"927da105","id":5497,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"12701:9:27","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"token","nameLocation":"12719:5:27","nodeType":"VariableDeclaration","scope":5497,"src":"12711:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5487,"name":"address","nodeType":"ElementaryTypeName","src":"12711:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"owner","nameLocation":"12734:5:27","nodeType":"VariableDeclaration","scope":5497,"src":"12726:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5489,"name":"address","nodeType":"ElementaryTypeName","src":"12726:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5492,"mutability":"mutable","name":"spender","nameLocation":"12749:7:27","nodeType":"VariableDeclaration","scope":5497,"src":"12741:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5491,"name":"address","nodeType":"ElementaryTypeName","src":"12741:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12710:47:27"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"tokenAllowance","nameLocation":"12789:14:27","nodeType":"VariableDeclaration","scope":5497,"src":"12781:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"12781:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:24:27"},"scope":5672,"src":"12692:113:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"12811:475:27","text":" @notice Approves a spender to spend pool tokens on behalf of sender.\n @dev Notice that the pool token address is not included in the params. This function is exclusively called by\n the pool contract, so msg.sender is used as the token address.\n @param owner Address of the owner\n @param spender Address of the spender\n @param amount Amount of tokens to approve\n @return success True if successful, false otherwise"},"functionSelector":"e1f21c67","id":5509,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"13300:7:27","nodeType":"FunctionDefinition","parameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"owner","nameLocation":"13316:5:27","nodeType":"VariableDeclaration","scope":5509,"src":"13308:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5499,"name":"address","nodeType":"ElementaryTypeName","src":"13308:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"spender","nameLocation":"13331:7:27","nodeType":"VariableDeclaration","scope":5509,"src":"13323:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5501,"name":"address","nodeType":"ElementaryTypeName","src":"13323:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5504,"mutability":"mutable","name":"amount","nameLocation":"13348:6:27","nodeType":"VariableDeclaration","scope":5509,"src":"13340:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13340:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13307:48:27"},"returnParameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5507,"mutability":"mutable","name":"success","nameLocation":"13379:7:27","nodeType":"VariableDeclaration","scope":5509,"src":"13374:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5506,"name":"bool","nodeType":"ElementaryTypeName","src":"13374:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13373:14:27"},"scope":5672,"src":"13291:97:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"13615:251:27","text":" @notice Indicates whether a pool is paused.\n @dev If a pool is paused, all non-Recovery Mode state-changing operations will revert.\n @param pool The pool to be checked\n @return poolPaused True if the pool is paused"},"functionSelector":"6c9bc732","id":5517,"implemented":false,"kind":"function","modifiers":[],"name":"isPoolPaused","nameLocation":"13880:12:27","nodeType":"FunctionDefinition","parameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"pool","nameLocation":"13901:4:27","nodeType":"VariableDeclaration","scope":5517,"src":"13893:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5511,"name":"address","nodeType":"ElementaryTypeName","src":"13893:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13892:14:27"},"returnParameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"poolPaused","nameLocation":"13935:10:27","nodeType":"VariableDeclaration","scope":5517,"src":"13930:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5514,"name":"bool","nodeType":"ElementaryTypeName","src":"13930:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13929:17:27"},"scope":5672,"src":"13871:76:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"13953:648:27","text":" @notice Returns the paused status, and end times of the Pool's pause window and buffer period.\n @dev Note that even when set to a paused state, the pool will automatically unpause at the end of\n the buffer period. Balancer timestamps are 32 bits.\n @param pool The pool whose data is requested\n @return poolPaused True if the Pool is paused\n @return poolPauseWindowEndTime The timestamp of the end of the Pool's pause window\n @return poolBufferPeriodEndTime The timestamp after which the Pool unpauses itself (if paused)\n @return pauseManager The pause manager, or the zero address"},"functionSelector":"15e32046","id":5531,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolPausedState","nameLocation":"14615:18:27","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"pool","nameLocation":"14651:4:27","nodeType":"VariableDeclaration","scope":5531,"src":"14643:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5519,"name":"address","nodeType":"ElementaryTypeName","src":"14643:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14633:28:27"},"returnParameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"poolPaused","nameLocation":"14714:10:27","nodeType":"VariableDeclaration","scope":5531,"src":"14709:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5522,"name":"bool","nodeType":"ElementaryTypeName","src":"14709:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5525,"mutability":"mutable","name":"poolPauseWindowEndTime","nameLocation":"14733:22:27","nodeType":"VariableDeclaration","scope":5531,"src":"14726:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5524,"name":"uint32","nodeType":"ElementaryTypeName","src":"14726:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"poolBufferPeriodEndTime","nameLocation":"14764:23:27","nodeType":"VariableDeclaration","scope":5531,"src":"14757:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5526,"name":"uint32","nodeType":"ElementaryTypeName","src":"14757:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5529,"mutability":"mutable","name":"pauseManager","nameLocation":"14797:12:27","nodeType":"VariableDeclaration","scope":5531,"src":"14789:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5528,"name":"address","nodeType":"ElementaryTypeName","src":"14789:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14708:102:27"},"scope":5672,"src":"14606:205:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"15039:332:27","text":" @notice Checks if the wrapped token has an initialized buffer in the Vault.\n @dev An initialized buffer should have an asset registered in the Vault.\n @param wrappedToken Address of the wrapped token that implements IERC4626\n @return isBufferInitialized True if the ERC4626 buffer is initialized"},"functionSelector":"6844846b","id":5540,"implemented":false,"kind":"function","modifiers":[],"name":"isERC4626BufferInitialized","nameLocation":"15385:26:27","nodeType":"FunctionDefinition","parameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"wrappedToken","nameLocation":"15421:12:27","nodeType":"VariableDeclaration","scope":5540,"src":"15412:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5534,"nodeType":"UserDefinedTypeName","pathNode":{"id":5533,"name":"IERC4626","nameLocations":["15412:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"15412:8:27"},"referencedDeclaration":259,"src":"15412:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"15411:23:27"},"returnParameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"isBufferInitialized","nameLocation":"15463:19:27","nodeType":"VariableDeclaration","scope":5540,"src":"15458:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5537,"name":"bool","nodeType":"ElementaryTypeName","src":"15458:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15457:26:27"},"scope":5672,"src":"15376:108:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5541,"nodeType":"StructuredDocumentation","src":"15490:477:27","text":" @notice Gets the registered asset for a given buffer.\n @dev To avoid malicious wrappers (e.g., that might potentially change their asset after deployment), routers\n should never call `wrapper.asset()` directly, at least without checking it against the asset registered with\n the Vault on initialization.\n @param wrappedToken The wrapped token specifying the buffer\n @return asset The underlying asset of the wrapped token"},"functionSelector":"4afbaf5a","id":5549,"implemented":false,"kind":"function","modifiers":[],"name":"getERC4626BufferAsset","nameLocation":"15981:21:27","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"wrappedToken","nameLocation":"16012:12:27","nodeType":"VariableDeclaration","scope":5549,"src":"16003:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":5543,"nodeType":"UserDefinedTypeName","pathNode":{"id":5542,"name":"IERC4626","nameLocations":["16003:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"16003:8:27"},"referencedDeclaration":259,"src":"16003:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"}],"src":"16002:23:27"},"returnParameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"asset","nameLocation":"16057:5:27","nodeType":"VariableDeclaration","scope":5549,"src":"16049:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5546,"name":"address","nodeType":"ElementaryTypeName","src":"16049:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16048:15:27"},"scope":5672,"src":"15972:92:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5550,"nodeType":"StructuredDocumentation","src":"16288:379:27","text":" @notice Returns the accumulated swap fees (including aggregate fees) in `token` collected by the pool.\n @param pool The address of the pool for which aggregate fees have been collected\n @param token The address of the token in which fees have been accumulated\n @return swapFeeAmount The total amount of fees accumulated in the specified token"},"functionSelector":"85e0b999","id":5560,"implemented":false,"kind":"function","modifiers":[],"name":"getAggregateSwapFeeAmount","nameLocation":"16681:25:27","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"pool","nameLocation":"16715:4:27","nodeType":"VariableDeclaration","scope":5560,"src":"16707:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5551,"name":"address","nodeType":"ElementaryTypeName","src":"16707:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5555,"mutability":"mutable","name":"token","nameLocation":"16728:5:27","nodeType":"VariableDeclaration","scope":5560,"src":"16721:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5554,"nodeType":"UserDefinedTypeName","pathNode":{"id":5553,"name":"IERC20","nameLocations":["16721:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"16721:6:27"},"referencedDeclaration":337,"src":"16721:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"16706:28:27"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"swapFeeAmount","nameLocation":"16766:13:27","nodeType":"VariableDeclaration","scope":5560,"src":"16758:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"16758:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16757:23:27"},"scope":5672,"src":"16672:109:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5561,"nodeType":"StructuredDocumentation","src":"16787:381:27","text":" @notice Returns the accumulated yield fees (including aggregate fees) in `token` collected by the pool.\n @param pool The address of the pool for which aggregate fees have been collected\n @param token The address of the token in which fees have been accumulated\n @return yieldFeeAmount The total amount of fees accumulated in the specified token"},"functionSelector":"00fdfa13","id":5571,"implemented":false,"kind":"function","modifiers":[],"name":"getAggregateYieldFeeAmount","nameLocation":"17182:26:27","nodeType":"FunctionDefinition","parameters":{"id":5567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5563,"mutability":"mutable","name":"pool","nameLocation":"17217:4:27","nodeType":"VariableDeclaration","scope":5571,"src":"17209:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5562,"name":"address","nodeType":"ElementaryTypeName","src":"17209:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"token","nameLocation":"17230:5:27","nodeType":"VariableDeclaration","scope":5571,"src":"17223:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5565,"nodeType":"UserDefinedTypeName","pathNode":{"id":5564,"name":"IERC20","nameLocations":["17223:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"17223:6:27"},"referencedDeclaration":337,"src":"17223:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"17208:28:27"},"returnParameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"yieldFeeAmount","nameLocation":"17268:14:27","nodeType":"VariableDeclaration","scope":5571,"src":"17260:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5568,"name":"uint256","nodeType":"ElementaryTypeName","src":"17260:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17259:24:27"},"scope":5672,"src":"17173:111:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5572,"nodeType":"StructuredDocumentation","src":"17290:271:27","text":" @notice Fetches the static swap fee percentage for a given pool.\n @param pool The address of the pool whose static swap fee percentage is being queried\n @return swapFeePercentage The current static swap fee percentage for the specified pool"},"functionSelector":"b45090f9","id":5579,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticSwapFeePercentage","nameLocation":"17575:26:27","nodeType":"FunctionDefinition","parameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"pool","nameLocation":"17610:4:27","nodeType":"VariableDeclaration","scope":5579,"src":"17602:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5573,"name":"address","nodeType":"ElementaryTypeName","src":"17602:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17601:14:27"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"17647:17:27","nodeType":"VariableDeclaration","scope":5579,"src":"17639:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"17639:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17638:27:27"},"scope":5672,"src":"17566:100:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5580,"nodeType":"StructuredDocumentation","src":"17672:286:27","text":" @notice Fetches the role accounts for a given pool (pause manager, swap manager, pool creator)\n @param pool The address of the pool whose roles are being queried\n @return roleAccounts A struct containing the role accounts for the pool (or 0 if unassigned)"},"functionSelector":"e9ddeb26","id":5588,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolRoleAccounts","nameLocation":"17972:19:27","nodeType":"FunctionDefinition","parameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"pool","nameLocation":"18000:4:27","nodeType":"VariableDeclaration","scope":5588,"src":"17992:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5581,"name":"address","nodeType":"ElementaryTypeName","src":"17992:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17991:14:27"},"returnParameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"roleAccounts","nameLocation":"18053:12:27","nodeType":"VariableDeclaration","scope":5588,"src":"18029:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRoleAccounts_$8309_memory_ptr","typeString":"struct PoolRoleAccounts"},"typeName":{"id":5585,"nodeType":"UserDefinedTypeName","pathNode":{"id":5584,"name":"PoolRoleAccounts","nameLocations":["18029:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":8309,"src":"18029:16:27"},"referencedDeclaration":8309,"src":"18029:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRoleAccounts_$8309_storage_ptr","typeString":"struct PoolRoleAccounts"}},"visibility":"internal"}],"src":"18028:38:27"},"scope":5672,"src":"17963:104:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5589,"nodeType":"StructuredDocumentation","src":"18073:363:27","text":" @notice Query the current dynamic swap fee percentage of a pool, given a set of swap parameters.\n @dev Reverts if the hook doesn't return the success flag set to `true`.\n @param pool The pool\n @param swapParams The swap parameters used to compute the fee\n @return dynamicSwapFeePercentage The dynamic swap fee percentage"},"functionSelector":"4d472bdd","id":5599,"implemented":false,"kind":"function","modifiers":[],"name":"computeDynamicSwapFeePercentage","nameLocation":"18450:31:27","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"pool","nameLocation":"18499:4:27","nodeType":"VariableDeclaration","scope":5599,"src":"18491:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5590,"name":"address","nodeType":"ElementaryTypeName","src":"18491:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5594,"mutability":"mutable","name":"swapParams","nameLocation":"18535:10:27","nodeType":"VariableDeclaration","scope":5599,"src":"18513:32:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8404_memory_ptr","typeString":"struct PoolSwapParams"},"typeName":{"id":5593,"nodeType":"UserDefinedTypeName","pathNode":{"id":5592,"name":"PoolSwapParams","nameLocations":["18513:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":8404,"src":"18513:14:27"},"referencedDeclaration":8404,"src":"18513:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolSwapParams_$8404_storage_ptr","typeString":"struct PoolSwapParams"}},"visibility":"internal"}],"src":"18481:70:27"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"dynamicSwapFeePercentage","nameLocation":"18583:24:27","nodeType":"VariableDeclaration","scope":5599,"src":"18575:32:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5596,"name":"uint256","nodeType":"ElementaryTypeName","src":"18575:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18574:34:27"},"scope":5672,"src":"18441:168:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5600,"nodeType":"StructuredDocumentation","src":"18615:145:27","text":" @notice Returns the Protocol Fee Controller address.\n @return protocolFeeController Address of the ProtocolFeeController"},"functionSelector":"85f2dbd4","id":5606,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeeController","nameLocation":"18774:24:27","nodeType":"FunctionDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[],"src":"18798:2:27"},"returnParameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"protocolFeeController","nameLocation":"18847:21:27","nodeType":"VariableDeclaration","scope":5606,"src":"18824:44:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeeController_$3691","typeString":"contract IProtocolFeeController"},"typeName":{"id":5603,"nodeType":"UserDefinedTypeName","pathNode":{"id":5602,"name":"IProtocolFeeController","nameLocations":["18824:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":3691,"src":"18824:22:27"},"referencedDeclaration":3691,"src":"18824:22:27","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeeController_$3691","typeString":"contract IProtocolFeeController"}},"visibility":"internal"}],"src":"18823:46:27"},"scope":5672,"src":"18765:105:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5607,"nodeType":"StructuredDocumentation","src":"19098:296:27","text":" @notice Checks whether a pool is in Recovery Mode.\n @dev Recovery Mode enables a safe proportional withdrawal path, with no external calls.\n @param pool Address of the pool to check\n @return inRecoveryMode True if the pool is in Recovery Mode, false otherwise"},"functionSelector":"be7d628a","id":5614,"implemented":false,"kind":"function","modifiers":[],"name":"isPoolInRecoveryMode","nameLocation":"19408:20:27","nodeType":"FunctionDefinition","parameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5609,"mutability":"mutable","name":"pool","nameLocation":"19437:4:27","nodeType":"VariableDeclaration","scope":5614,"src":"19429:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5608,"name":"address","nodeType":"ElementaryTypeName","src":"19429:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19428:14:27"},"returnParameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"inRecoveryMode","nameLocation":"19471:14:27","nodeType":"VariableDeclaration","scope":5614,"src":"19466:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5611,"name":"bool","nodeType":"ElementaryTypeName","src":"19466:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19465:21:27"},"scope":5672,"src":"19399:88:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5615,"nodeType":"StructuredDocumentation","src":"19493:679:27","text":" @notice Remove liquidity from a pool specifying exact pool tokens in, with proportional token amounts out.\n The request is implemented by the Vault without any interaction with the pool, ensuring that\n it works the same for all pools, and cannot be disabled by a new pool type.\n @param pool Address of the pool\n @param from Address of user to burn pool tokens from\n @param exactBptAmountIn Input pool token amount\n @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n @return amountsOut Actual calculated amounts of output tokens, sorted in token registration order"},"functionSelector":"a07d6040","id":5630,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityRecovery","nameLocation":"20186:23:27","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"pool","nameLocation":"20227:4:27","nodeType":"VariableDeclaration","scope":5630,"src":"20219:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5616,"name":"address","nodeType":"ElementaryTypeName","src":"20219:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5619,"mutability":"mutable","name":"from","nameLocation":"20249:4:27","nodeType":"VariableDeclaration","scope":5630,"src":"20241:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5618,"name":"address","nodeType":"ElementaryTypeName","src":"20241:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"20271:16:27","nodeType":"VariableDeclaration","scope":5630,"src":"20263:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"20263:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"minAmountsOut","nameLocation":"20314:13:27","nodeType":"VariableDeclaration","scope":5630,"src":"20297:30:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"20297:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5623,"nodeType":"ArrayTypeName","src":"20297:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20209:124:27"},"returnParameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"amountsOut","nameLocation":"20369:10:27","nodeType":"VariableDeclaration","scope":5630,"src":"20352:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"20352:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5627,"nodeType":"ArrayTypeName","src":"20352:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20351:29:27"},"scope":5672,"src":"20177:204:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5631,"nodeType":"StructuredDocumentation","src":"20602:699:27","text":" @notice Performs a callback on msg.sender with arguments provided in `data`.\n @dev Used to query a set of operations on the Vault. Only off-chain eth_call are allowed,\n anything else will revert.\n Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier.\n Allows the external calling of a function via the Vault contract to\n access Vault's functions guarded by `onlyWhenUnlocked`.\n `transient` modifier ensuring balances changes within the Vault are settled.\n @param data Contains function signature and args to be passed to the msg.sender\n @return result Resulting data from the call"},"functionSelector":"edfa3568","id":5638,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"21315:5:27","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"data","nameLocation":"21336:4:27","nodeType":"VariableDeclaration","scope":5638,"src":"21321:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5632,"name":"bytes","nodeType":"ElementaryTypeName","src":"21321:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21320:21:27"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"result","nameLocation":"21373:6:27","nodeType":"VariableDeclaration","scope":5638,"src":"21360:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5635,"name":"bytes","nodeType":"ElementaryTypeName","src":"21360:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21359:21:27"},"scope":5672,"src":"21306:75:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5639,"nodeType":"StructuredDocumentation","src":"21387:731:27","text":" @notice Performs a callback on msg.sender with arguments provided in `data`.\n @dev Used to query a set of operations on the Vault. Only off-chain eth_call are allowed,\n anything else will revert.\n Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier.\n Allows the external calling of a function via the Vault contract to\n access Vault's functions guarded by `onlyWhenUnlocked`.\n `transient` modifier ensuring balances changes within the Vault are settled.\n This call always reverts, returning the result in the revert reason.\n @param data Contains function signature and args to be passed to the msg.sender"},"functionSelector":"757d64b3","id":5644,"implemented":false,"kind":"function","modifiers":[],"name":"quoteAndRevert","nameLocation":"22132:14:27","nodeType":"FunctionDefinition","parameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"data","nameLocation":"22162:4:27","nodeType":"VariableDeclaration","scope":5644,"src":"22147:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5640,"name":"bytes","nodeType":"ElementaryTypeName","src":"22147:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22146:21:27"},"returnParameters":{"id":5643,"nodeType":"ParameterList","parameters":[],"src":"22176:0:27"},"scope":5672,"src":"22123:54:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5645,"nodeType":"StructuredDocumentation","src":"22183:239:27","text":" @notice Returns true if queries are disabled on the Vault.\n @dev If true, queries might either be disabled temporarily or permanently.\n @return queryDisabled True if query functionality is reversibly disabled"},"functionSelector":"b4aef0ab","id":5650,"implemented":false,"kind":"function","modifiers":[],"name":"isQueryDisabled","nameLocation":"22436:15:27","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[],"src":"22451:2:27"},"returnParameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"queryDisabled","nameLocation":"22482:13:27","nodeType":"VariableDeclaration","scope":5650,"src":"22477:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5647,"name":"bool","nodeType":"ElementaryTypeName","src":"22477:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22476:20:27"},"scope":5672,"src":"22427:70:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5651,"nodeType":"StructuredDocumentation","src":"22503:302:27","text":" @notice Returns true if queries are disabled permanently; false if they are enabled.\n @dev This is a one-way switch. Once queries are disabled permanently, they can never be re-enabled.\n @return queryDisabledPermanently True if query functionality is permanently disabled"},"functionSelector":"13ef8a5d","id":5656,"implemented":false,"kind":"function","modifiers":[],"name":"isQueryDisabledPermanently","nameLocation":"22819:26:27","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[],"src":"22845:2:27"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"queryDisabledPermanently","nameLocation":"22876:24:27","nodeType":"VariableDeclaration","scope":5656,"src":"22871:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5653,"name":"bool","nodeType":"ElementaryTypeName","src":"22871:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22870:31:27"},"scope":5672,"src":"22810:92:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5657,"nodeType":"StructuredDocumentation","src":"22908:162:27","text":" @notice Pools can use this event to emit event data from the Vault.\n @param eventKey Event key\n @param eventData Encoded event data"},"functionSelector":"c8088247","id":5664,"implemented":false,"kind":"function","modifiers":[],"name":"emitAuxiliaryEvent","nameLocation":"23084:18:27","nodeType":"FunctionDefinition","parameters":{"id":5662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5659,"mutability":"mutable","name":"eventKey","nameLocation":"23111:8:27","nodeType":"VariableDeclaration","scope":5664,"src":"23103:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23103:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5661,"mutability":"mutable","name":"eventData","nameLocation":"23136:9:27","nodeType":"VariableDeclaration","scope":5664,"src":"23121:24:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5660,"name":"bytes","nodeType":"ElementaryTypeName","src":"23121:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23102:44:27"},"returnParameters":{"id":5663,"nodeType":"ParameterList","parameters":[],"src":"23155:0:27"},"scope":5672,"src":"23075:81:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5665,"nodeType":"StructuredDocumentation","src":"23380:284:27","text":" @notice Returns the Authorizer address.\n @dev The authorizer holds the permissions granted by governance. It is set on Vault deployment,\n and can be changed through a permissioned call.\n @return authorizer Address of the authorizer contract"},"functionSelector":"aaabadc5","id":5671,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"23678:13:27","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[],"src":"23691:2:27"},"returnParameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"authorizer","nameLocation":"23729:10:27","nodeType":"VariableDeclaration","scope":5671,"src":"23717:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$3151","typeString":"contract IAuthorizer"},"typeName":{"id":5668,"nodeType":"UserDefinedTypeName","pathNode":{"id":5667,"name":"IAuthorizer","nameLocations":["23717:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":3151,"src":"23717:11:27"},"referencedDeclaration":3151,"src":"23717:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$3151","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"23716:24:27"},"scope":5672,"src":"23669:72:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5673,"src":"767:22976:27","usedErrors":[],"usedEvents":[]}],"src":"46:23698:27"},"id":27},"contracts/IVaultMain.sol":{"ast":{"absolutePath":"contracts/IVaultMain.sol","exportedSymbols":{"AddLiquidityKind":[8439],"AddLiquidityParams":[8455],"AfterSwapParams":[8433],"BufferWrapOrUnwrapParams":[8494],"FEE_BITLENGTH":[8497],"FEE_SCALING_FACTOR":[8500],"HookFlags":[8259],"HooksConfig":[8283],"IERC20":[337],"IERC4626":[259],"IRateProvider":[3701],"IVaultMain":[5808],"LiquidityManagement":[8212],"MAX_FEE_PERCENTAGE":[8503],"PoolConfig":[8237],"PoolConfigBits":[8214],"PoolData":[8361],"PoolRoleAccounts":[8309],"PoolSwapParams":[8404],"RemoveLiquidityKind":[8460],"RemoveLiquidityParams":[8476],"Rounding":[8364],"SwapKind":[8367],"SwapState":[8293],"TokenConfig":[8326],"TokenInfo":[8336],"TokenType":[8313],"VaultState":[8301],"VaultSwapParams":[8386],"WrappingDirection":[8479]},"id":5809,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5674,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5809,"sourceUnit":338,"src":"72:72:28","symbolAliases":[{"foreign":{"id":5675,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"81:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":5677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5809,"sourceUnit":8504,"src":"146:26:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultMain","contractDependencies":[],"contractKind":"interface","documentation":{"id":5678,"nodeType":"StructuredDocumentation","src":"174:232:28","text":" @notice Interface for functions defined on the main Vault contract.\n @dev These are generally \"critical path\" functions (swap, add/remove liquidity) that are in the main contract\n for technical or performance reasons."},"fullyImplemented":false,"id":5808,"linearizedBaseContracts":[5808],"name":"IVaultMain","nameLocation":"417:10:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"656:431:28","text":" @notice Creates a context for a sequence of operations (i.e., \"unlocks\" the Vault).\n @dev Performs a callback on msg.sender with arguments provided in `data`. The Callback is `transient`,\n meaning all balances for the caller have to be settled at the end.\n @param data Contains function signature and args to be passed to the msg.sender\n @return result Resulting data from the call"},"functionSelector":"48c89491","id":5686,"implemented":false,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"1101:6:28","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"data","nameLocation":"1123:4:28","nodeType":"VariableDeclaration","scope":5686,"src":"1108:19:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5680,"name":"bytes","nodeType":"ElementaryTypeName","src":"1108:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1107:21:28"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"result","nameLocation":"1160:6:28","nodeType":"VariableDeclaration","scope":5686,"src":"1147:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5683,"name":"bytes","nodeType":"ElementaryTypeName","src":"1147:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1146:21:28"},"scope":5808,"src":"1092:76:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"1174:1291:28","text":" @notice Settles deltas for a token; must be successful for the current lock to be released.\n @dev Protects the caller against leftover dust in the Vault for the token being settled. The caller\n should know in advance how many tokens were paid to the Vault, so it can provide it as a hint to discard any\n excess in the Vault balance.\n If the given hint is equal to or higher than the difference in reserves, the difference in reserves is given as\n credit to the caller. If it's higher, the caller sent fewer tokens than expected, so settlement would fail.\n If the given hint is lower than the difference in reserves, the hint is given as credit to the caller.\n In this case, the excess would be absorbed by the Vault (and reflected correctly in the reserves), but would\n not affect settlement.\n The credit supplied by the Vault can be calculated as `min(reserveDifference, amountHint)`, where the reserve\n difference equals current balance of the token minus existing reserves of the token when the function is called.\n @param token Address of the token\n @param amountHint Amount paid as reported by the caller\n @return credit Credit received in return of the payment"},"functionSelector":"15afd409","id":5697,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"2479:6:28","nodeType":"FunctionDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"token","nameLocation":"2493:5:28","nodeType":"VariableDeclaration","scope":5697,"src":"2486:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5689,"nodeType":"UserDefinedTypeName","pathNode":{"id":5688,"name":"IERC20","nameLocations":["2486:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2486:6:28"},"referencedDeclaration":337,"src":"2486:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5692,"mutability":"mutable","name":"amountHint","nameLocation":"2508:10:28","nodeType":"VariableDeclaration","scope":5697,"src":"2500:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:34:28"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"credit","nameLocation":"2546:6:28","nodeType":"VariableDeclaration","scope":5697,"src":"2538:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2538:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2537:16:28"},"scope":5808,"src":"2470:84:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5698,"nodeType":"StructuredDocumentation","src":"2560:315:28","text":" @notice Sends tokens to a recipient.\n @dev There is no inverse operation for this function. Transfer funds to the Vault and call `settle` to cancel\n debts.\n @param token Address of the token\n @param to Recipient address\n @param amount Amount of tokens to send"},"functionSelector":"ae639329","id":5708,"implemented":false,"kind":"function","modifiers":[],"name":"sendTo","nameLocation":"2889:6:28","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"token","nameLocation":"2903:5:28","nodeType":"VariableDeclaration","scope":5708,"src":"2896:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5700,"nodeType":"UserDefinedTypeName","pathNode":{"id":5699,"name":"IERC20","nameLocations":["2896:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2896:6:28"},"referencedDeclaration":337,"src":"2896:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5703,"mutability":"mutable","name":"to","nameLocation":"2918:2:28","nodeType":"VariableDeclaration","scope":5708,"src":"2910:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5702,"name":"address","nodeType":"ElementaryTypeName","src":"2910:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"amount","nameLocation":"2930:6:28","nodeType":"VariableDeclaration","scope":5708,"src":"2922:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2922:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2895:42:28"},"returnParameters":{"id":5707,"nodeType":"ParameterList","parameters":[],"src":"2946:0:28"},"scope":5808,"src":"2880:67:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5709,"nodeType":"StructuredDocumentation","src":"3161:412:28","text":" @notice Swaps tokens based on provided parameters.\n @dev All parameters are given in raw token decimal encoding.\n @param vaultSwapParams Parameters for the swap (see above for struct definition)\n @return amountCalculatedRaw Calculated swap amount\n @return amountInRaw Amount of input tokens for the swap\n @return amountOutRaw Amount of output tokens from the swap"},"functionSelector":"2bfb780c","id":5721,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3587:4:28","nodeType":"FunctionDefinition","parameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"vaultSwapParams","nameLocation":"3624:15:28","nodeType":"VariableDeclaration","scope":5721,"src":"3601:38:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSwapParams_$8386_memory_ptr","typeString":"struct VaultSwapParams"},"typeName":{"id":5711,"nodeType":"UserDefinedTypeName","pathNode":{"id":5710,"name":"VaultSwapParams","nameLocations":["3601:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":8386,"src":"3601:15:28"},"referencedDeclaration":8386,"src":"3601:15:28","typeDescriptions":{"typeIdentifier":"t_struct$_VaultSwapParams_$8386_storage_ptr","typeString":"struct VaultSwapParams"}},"visibility":"internal"}],"src":"3591:54:28"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"amountCalculatedRaw","nameLocation":"3672:19:28","nodeType":"VariableDeclaration","scope":5721,"src":"3664:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5717,"mutability":"mutable","name":"amountInRaw","nameLocation":"3701:11:28","nodeType":"VariableDeclaration","scope":5721,"src":"3693:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3693:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5719,"mutability":"mutable","name":"amountOutRaw","nameLocation":"3722:12:28","nodeType":"VariableDeclaration","scope":5721,"src":"3714:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3663:72:28"},"scope":5808,"src":"3578:158:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"3954:523:28","text":" @notice Adds liquidity to a pool.\n @dev Caution should be exercised when adding liquidity because the Vault has the capability\n to transfer tokens from any user, given that it holds all allowances.\n @param params Parameters for the add liquidity (see above for struct definition)\n @return amountsIn Actual amounts of input tokens\n @return bptAmountOut Output pool token amount\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"4af29ec4","id":5735,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"4491:12:28","nodeType":"FunctionDefinition","parameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5725,"mutability":"mutable","name":"params","nameLocation":"4539:6:28","nodeType":"VariableDeclaration","scope":5735,"src":"4513:32:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityParams_$8455_memory_ptr","typeString":"struct AddLiquidityParams"},"typeName":{"id":5724,"nodeType":"UserDefinedTypeName","pathNode":{"id":5723,"name":"AddLiquidityParams","nameLocations":["4513:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":8455,"src":"4513:18:28"},"referencedDeclaration":8455,"src":"4513:18:28","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityParams_$8455_storage_ptr","typeString":"struct AddLiquidityParams"}},"visibility":"internal"}],"src":"4503:48:28"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"amountsIn","nameLocation":"4587:9:28","nodeType":"VariableDeclaration","scope":5735,"src":"4570:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4570:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ArrayTypeName","src":"4570:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5731,"mutability":"mutable","name":"bptAmountOut","nameLocation":"4606:12:28","nodeType":"VariableDeclaration","scope":5735,"src":"4598:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4598:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"returnData","nameLocation":"4633:10:28","nodeType":"VariableDeclaration","scope":5735,"src":"4620:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5732,"name":"bytes","nodeType":"ElementaryTypeName","src":"4620:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4569:75:28"},"scope":5808,"src":"4482:163:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"4864:644:28","text":" @notice Removes liquidity from a pool.\n @dev Trusted routers can burn pool tokens belonging to any user and require no prior approval from the user.\n Untrusted routers require prior approval from the user. This is the only function allowed to call\n _queryModeBalanceIncrease (and only in a query context).\n @param params Parameters for the remove liquidity (see above for struct definition)\n @return bptAmountIn Actual amount of BPT burned\n @return amountsOut Actual amounts of output tokens\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"21457897","id":5749,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"5522:15:28","nodeType":"FunctionDefinition","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"params","nameLocation":"5576:6:28","nodeType":"VariableDeclaration","scope":5749,"src":"5547:35:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityParams_$8476_memory_ptr","typeString":"struct RemoveLiquidityParams"},"typeName":{"id":5738,"nodeType":"UserDefinedTypeName","pathNode":{"id":5737,"name":"RemoveLiquidityParams","nameLocations":["5547:21:28"],"nodeType":"IdentifierPath","referencedDeclaration":8476,"src":"5547:21:28"},"referencedDeclaration":8476,"src":"5547:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityParams_$8476_storage_ptr","typeString":"struct RemoveLiquidityParams"}},"visibility":"internal"}],"src":"5537:51:28"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"bptAmountIn","nameLocation":"5615:11:28","nodeType":"VariableDeclaration","scope":5749,"src":"5607:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5607:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5745,"mutability":"mutable","name":"amountsOut","nameLocation":"5645:10:28","nodeType":"VariableDeclaration","scope":5749,"src":"5628:27:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5628:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5744,"nodeType":"ArrayTypeName","src":"5628:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5747,"mutability":"mutable","name":"returnData","nameLocation":"5670:10:28","nodeType":"VariableDeclaration","scope":5749,"src":"5657:23:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5746,"name":"bytes","nodeType":"ElementaryTypeName","src":"5657:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5606:75:28"},"scope":5808,"src":"5513:169:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5750,"nodeType":"StructuredDocumentation","src":"5912:385:28","text":" @notice Gets the index of a token in a given pool.\n @dev Reverts if the pool is not registered, or if the token does not belong to the pool.\n @param pool Address of the pool\n @param token Address of the token\n @return tokenCount Number of tokens in the pool\n @return index Index corresponding to the given token in the pool's token list"},"functionSelector":"c9c1661b","id":5762,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenCountAndIndexOfToken","nameLocation":"6311:32:28","nodeType":"FunctionDefinition","parameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"pool","nameLocation":"6361:4:28","nodeType":"VariableDeclaration","scope":5762,"src":"6353:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5751,"name":"address","nodeType":"ElementaryTypeName","src":"6353:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5755,"mutability":"mutable","name":"token","nameLocation":"6382:5:28","nodeType":"VariableDeclaration","scope":5762,"src":"6375:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":5754,"nodeType":"UserDefinedTypeName","pathNode":{"id":5753,"name":"IERC20","nameLocations":["6375:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"6375:6:28"},"referencedDeclaration":337,"src":"6375:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"6343:50:28"},"returnParameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"mutability":"mutable","name":"tokenCount","nameLocation":"6425:10:28","nodeType":"VariableDeclaration","scope":5762,"src":"6417:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5757,"name":"uint256","nodeType":"ElementaryTypeName","src":"6417:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5760,"mutability":"mutable","name":"index","nameLocation":"6445:5:28","nodeType":"VariableDeclaration","scope":5762,"src":"6437:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6437:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6416:35:28"},"scope":5808,"src":"6302:150:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5763,"nodeType":"StructuredDocumentation","src":"6683:460:28","text":" @notice Transfers pool token from owner to a recipient.\n @dev Notice that the pool token address is not included in the params. This function is exclusively called by\n the pool contract, so msg.sender is used as the token address.\n @param owner Address of the owner\n @param to Address of the recipient\n @param amount Amount of tokens to transfer\n @return success True if successful, false otherwise"},"functionSelector":"beabacc8","id":5774,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"7157:8:28","nodeType":"FunctionDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"owner","nameLocation":"7174:5:28","nodeType":"VariableDeclaration","scope":5774,"src":"7166:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5764,"name":"address","nodeType":"ElementaryTypeName","src":"7166:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5767,"mutability":"mutable","name":"to","nameLocation":"7189:2:28","nodeType":"VariableDeclaration","scope":5774,"src":"7181:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5766,"name":"address","nodeType":"ElementaryTypeName","src":"7181:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5769,"mutability":"mutable","name":"amount","nameLocation":"7201:6:28","nodeType":"VariableDeclaration","scope":5774,"src":"7193:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5768,"name":"uint256","nodeType":"ElementaryTypeName","src":"7193:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7165:43:28"},"returnParameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5774,"src":"7227:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5771,"name":"bool","nodeType":"ElementaryTypeName","src":"7227:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7226:6:28"},"scope":5808,"src":"7148:85:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5775,"nodeType":"StructuredDocumentation","src":"7239:544:28","text":" @notice Transfers pool token from a sender to a recipient using an allowance.\n @dev Notice that the pool token address is not included in the params. This function is exclusively called by\n the pool contract, so msg.sender is used as the token address.\n @param spender Address allowed to perform the transfer\n @param from Address of the sender\n @param to Address of the recipient\n @param amount Amount of tokens to transfer\n @return success True if successful, false otherwise"},"functionSelector":"15dacbea","id":5788,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"7797:12:28","nodeType":"FunctionDefinition","parameters":{"id":5784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"spender","nameLocation":"7818:7:28","nodeType":"VariableDeclaration","scope":5788,"src":"7810:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5776,"name":"address","nodeType":"ElementaryTypeName","src":"7810:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5779,"mutability":"mutable","name":"from","nameLocation":"7835:4:28","nodeType":"VariableDeclaration","scope":5788,"src":"7827:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5778,"name":"address","nodeType":"ElementaryTypeName","src":"7827:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5781,"mutability":"mutable","name":"to","nameLocation":"7849:2:28","nodeType":"VariableDeclaration","scope":5788,"src":"7841:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5780,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5783,"mutability":"mutable","name":"amount","nameLocation":"7861:6:28","nodeType":"VariableDeclaration","scope":5788,"src":"7853:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"7853:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7809:59:28"},"returnParameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"success","nameLocation":"7892:7:28","nodeType":"VariableDeclaration","scope":5788,"src":"7887:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5785,"name":"bool","nodeType":"ElementaryTypeName","src":"7887:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7886:14:28"},"scope":5808,"src":"7788:113:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"8128:575:28","text":" @notice Wraps/unwraps tokens based on the parameters provided.\n @dev All parameters are given in raw token decimal encoding. It requires the buffer to be initialized,\n and uses the internal wrapped token buffer when it has enough liquidity to avoid external calls.\n @param params Parameters for the wrap/unwrap operation (see struct definition)\n @return amountCalculatedRaw Calculated swap amount\n @return amountInRaw Amount of input tokens for the swap\n @return amountOutRaw Amount of output tokens from the swap"},"functionSelector":"43583be5","id":5801,"implemented":false,"kind":"function","modifiers":[],"name":"erc4626BufferWrapOrUnwrap","nameLocation":"8717:25:28","nodeType":"FunctionDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"params","nameLocation":"8784:6:28","nodeType":"VariableDeclaration","scope":5801,"src":"8752:38:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferWrapOrUnwrapParams_$8494_memory_ptr","typeString":"struct BufferWrapOrUnwrapParams"},"typeName":{"id":5791,"nodeType":"UserDefinedTypeName","pathNode":{"id":5790,"name":"BufferWrapOrUnwrapParams","nameLocations":["8752:24:28"],"nodeType":"IdentifierPath","referencedDeclaration":8494,"src":"8752:24:28"},"referencedDeclaration":8494,"src":"8752:24:28","typeDescriptions":{"typeIdentifier":"t_struct$_BufferWrapOrUnwrapParams_$8494_storage_ptr","typeString":"struct BufferWrapOrUnwrapParams"}},"visibility":"internal"}],"src":"8742:54:28"},"returnParameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"amountCalculatedRaw","nameLocation":"8823:19:28","nodeType":"VariableDeclaration","scope":5801,"src":"8815:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"8815:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"amountInRaw","nameLocation":"8852:11:28","nodeType":"VariableDeclaration","scope":5801,"src":"8844:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"8844:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5799,"mutability":"mutable","name":"amountOutRaw","nameLocation":"8873:12:28","nodeType":"VariableDeclaration","scope":5801,"src":"8865:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5798,"name":"uint256","nodeType":"ElementaryTypeName","src":"8865:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8814:72:28"},"scope":5808,"src":"8708:179:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5802,"nodeType":"StructuredDocumentation","src":"9115:345:28","text":" @notice Returns the VaultExtension contract address.\n @dev Function is in the main Vault contract. The VaultExtension handles less critical or frequently used\n functions, since delegate calls through the Vault are more expensive than direct calls.\n @return vaultExtension Address of the VaultExtension"},"functionSelector":"b9a8effa","id":5807,"implemented":false,"kind":"function","modifiers":[],"name":"getVaultExtension","nameLocation":"9474:17:28","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[],"src":"9491:2:28"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"vaultExtension","nameLocation":"9525:14:28","nodeType":"VariableDeclaration","scope":5807,"src":"9517:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5804,"name":"address","nodeType":"ElementaryTypeName","src":"9517:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9516:24:28"},"scope":5808,"src":"9465:76:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5809,"src":"407:9136:28","usedErrors":[],"usedEvents":[]}],"src":"46:9498:28"},"id":28},"contracts/IVersion.sol":{"ast":{"absolutePath":"contracts/IVersion.sol","exportedSymbols":{"IVersion":[5818]},"id":5819,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5810,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"IVersion","contractDependencies":[],"contractKind":"interface","documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"72:77:29","text":"@notice Simple interface to retrieve the version of a deployed contract."},"fullyImplemented":false,"id":5818,"linearizedBaseContracts":[5818],"name":"IVersion","nameLocation":"159:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5812,"nodeType":"StructuredDocumentation","src":"174:418:29","text":" @notice Return arbitrary text representing the version of a contract.\n @dev For standard Balancer contracts, returns a JSON representation of the contract version containing name,\n version number and task ID. See real examples in the deployment repo; local tests just use plain text strings.\n @return version The version string corresponding to the current deployed contract"},"functionSelector":"54fd4d50","id":5817,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"606:7:29","nodeType":"FunctionDefinition","parameters":{"id":5813,"nodeType":"ParameterList","parameters":[],"src":"613:2:29"},"returnParameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5817,"src":"639:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5814,"name":"string","nodeType":"ElementaryTypeName","src":"639:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"638:15:29"},"scope":5818,"src":"597:57:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5819,"src":"149:507:29","usedErrors":[],"usedEvents":[]}],"src":"46:611:29"},"id":29},"contracts/IWETH.sol":{"ast":{"absolutePath":"contracts/IWETH.sol","exportedSymbols":{"IERC20":[337],"IWETH":[5836]},"id":5837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5820,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5837,"sourceUnit":338,"src":"59:72:30","symbolAliases":[{"foreign":{"id":5821,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"68:6:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5824,"name":"IERC20","nameLocations":["306:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"306:6:30"},"id":5825,"nodeType":"InheritanceSpecifier","src":"306:6:30"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","documentation":{"id":5823,"nodeType":"StructuredDocumentation","src":"133:153:30","text":" @notice Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":5836,"linearizedBaseContracts":[5836,337],"name":"IWETH","nameLocation":"297:5:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"319:90:30","text":" @notice \"wrap\" native ETH to WETH.\n @dev The amount is msg.value."},"functionSelector":"d0e30db0","id":5829,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"423:7:30","nodeType":"FunctionDefinition","parameters":{"id":5827,"nodeType":"ParameterList","parameters":[],"src":"430:2:30"},"returnParameters":{"id":5828,"nodeType":"ParameterList","parameters":[],"src":"449:0:30"},"scope":5836,"src":"414:36:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"456:99:30","text":" @notice \"unwrap\" WETH to native ETH.\n @param amount The amount to withdraw"},"functionSelector":"2e1a7d4d","id":5835,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"569:8:30","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"amount","nameLocation":"586:6:30","nodeType":"VariableDeclaration","scope":5835,"src":"578:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:16:30"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[],"src":"602:0:30"},"scope":5836,"src":"560:43:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5837,"src":"287:318:30","usedErrors":[],"usedEvents":[271,280]}],"src":"33:573:30"},"id":30},"contracts/InputHelpers.sol":{"ast":{"absolutePath":"contracts/InputHelpers.sol","exportedSymbols":{"CastingHelpers":[3120],"IERC20":[337],"InputHelpers":[6137]},"id":6138,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5838,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6138,"sourceUnit":338,"src":"72:72:31","symbolAliases":[{"foreign":{"id":5839,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"81:6:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/CastingHelpers.sol","file":"./CastingHelpers.sol","id":5842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6138,"sourceUnit":3121,"src":"146:54:31","symbolAliases":[{"foreign":{"id":5841,"name":"CastingHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"155:14:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"InputHelpers","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6137,"linearizedBaseContracts":[6137],"name":"InputHelpers","nameLocation":"210:12:31","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5843,"nodeType":"StructuredDocumentation","src":"229:91:31","text":"@notice Arrays passed to a function and intended to be parallel have different lengths."},"errorSelector":"aaad13f7","id":5845,"name":"InputLengthMismatch","nameLocation":"331:19:31","nodeType":"ErrorDefinition","parameters":{"id":5844,"nodeType":"ParameterList","parameters":[],"src":"350:2:31"},"src":"325:28:31"},{"documentation":{"id":5846,"nodeType":"StructuredDocumentation","src":"359:332:31","text":" @notice More than one non-zero value was given for a single token operation.\n @dev Input arrays for single token add/remove liquidity operations are expected to have only one non-zero value,\n corresponding to the token being added or removed. This error results if there are multiple non-zero entries."},"errorSelector":"6b8c3be5","id":5848,"name":"MultipleNonZeroInputs","nameLocation":"702:21:31","nodeType":"ErrorDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[],"src":"723:2:31"},"src":"696:30:31"},{"documentation":{"id":5849,"nodeType":"StructuredDocumentation","src":"732:298:31","text":" @notice No valid input was given for a single token operation.\n @dev Input arrays for single token add/remove liquidity operations are expected to have one non-zero value,\n corresponding to the token being added or removed. This error results if all entries are zero."},"errorSelector":"7e46bddc","id":5851,"name":"AllZeroInputs","nameLocation":"1041:13:31","nodeType":"ErrorDefinition","parameters":{"id":5850,"nodeType":"ParameterList","parameters":[],"src":"1054:2:31"},"src":"1035:22:31"},{"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"1063:320:31","text":" @notice The tokens supplied to an array argument were not sorted in numerical order.\n @dev Tokens are not sorted by address on registration. This is an optimization so that off-chain processes can\n predict the token order without having to query the Vault. (It is also legacy v2 behavior.)"},"errorSelector":"6e8f1947","id":5854,"name":"TokensNotSorted","nameLocation":"1394:15:31","nodeType":"ErrorDefinition","parameters":{"id":5853,"nodeType":"ParameterList","parameters":[],"src":"1409:2:31"},"src":"1388:24:31"},{"body":{"id":5869,"nodeType":"Block","src":"1486:81:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"1500:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5862,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"1505:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1500:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"IfStatement","src":"1496:65:31","trueBody":{"id":5867,"nodeType":"Block","src":"1508:53:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5864,"name":"InputLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"1529:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1529:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5866,"nodeType":"RevertStatement","src":"1522:28:31"}]}}]},"id":5870,"implemented":true,"kind":"function","modifiers":[],"name":"ensureInputLengthMatch","nameLocation":"1427:22:31","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"a","nameLocation":"1458:1:31","nodeType":"VariableDeclaration","scope":5870,"src":"1450:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5858,"mutability":"mutable","name":"b","nameLocation":"1469:1:31","nodeType":"VariableDeclaration","scope":5870,"src":"1461:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1449:22:31"},"returnParameters":{"id":5860,"nodeType":"ParameterList","parameters":[],"src":"1486:0:31"},"scope":6137,"src":"1418:149:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5891,"nodeType":"Block","src":"1652:91:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"1666:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1671:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1666:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1676:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5883,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"1681:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1676:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1666:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5890,"nodeType":"IfStatement","src":"1662:75:31","trueBody":{"id":5889,"nodeType":"Block","src":"1684:53:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5886,"name":"InputLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"1705:19:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1705:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5888,"nodeType":"RevertStatement","src":"1698:28:31"}]}}]},"id":5892,"implemented":true,"kind":"function","modifiers":[],"name":"ensureInputLengthMatch","nameLocation":"1582:22:31","nodeType":"FunctionDefinition","parameters":{"id":5877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"a","nameLocation":"1613:1:31","nodeType":"VariableDeclaration","scope":5892,"src":"1605:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5874,"mutability":"mutable","name":"b","nameLocation":"1624:1:31","nodeType":"VariableDeclaration","scope":5892,"src":"1616:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5876,"mutability":"mutable","name":"c","nameLocation":"1635:1:31","nodeType":"VariableDeclaration","scope":5892,"src":"1627:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1627:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1604:33:31"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[],"src":"1652:0:31"},"scope":6137,"src":"1573:170:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5950,"nodeType":"Block","src":"1938:451:31","statements":[{"assignments":[5901],"declarations":[{"constant":false,"id":5901,"mutability":"mutable","name":"length","nameLocation":"1956:6:31","nodeType":"VariableDeclaration","scope":5950,"src":"1948:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1948:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5904,"initialValue":{"expression":{"id":5902,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"1965:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1978:6:31","memberName":"length","nodeType":"MemberAccess","src":"1965:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1948:36:31"},{"expression":{"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5905,"name":"inputIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"1994:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5906,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2007:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1994:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5908,"nodeType":"ExpressionStatement","src":"1994:19:31"},{"body":{"id":5938,"nodeType":"Block","src":"2061:211:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5919,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"2079:12:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5921,"indexExpression":{"id":5920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2092:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2079:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2098:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2079:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5937,"nodeType":"IfStatement","src":"2075:187:31","trueBody":{"id":5936,"nodeType":"Block","src":"2101:161:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"inputIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"2123:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5925,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2137:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2123:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5931,"nodeType":"IfStatement","src":"2119:97:31","trueBody":{"id":5930,"nodeType":"Block","src":"2145:71:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5927,"name":"MultipleNonZeroInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"2174:21:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5929,"nodeType":"RevertStatement","src":"2167:30:31"}]}},{"expression":{"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5932,"name":"inputIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"2233:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2246:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5935,"nodeType":"ExpressionStatement","src":"2233:14:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2044:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5914,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2048:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2044:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5939,"initializationExpression":{"assignments":[5910],"declarations":[{"constant":false,"id":5910,"mutability":"mutable","name":"i","nameLocation":"2037:1:31","nodeType":"VariableDeclaration","scope":5939,"src":"2029:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5912,"initialValue":{"hexValue":"30","id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2041:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2029:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2056:3:31","subExpression":{"id":5916,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"2058:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5918,"nodeType":"ExpressionStatement","src":"2056:3:31"},"nodeType":"ForStatement","src":"2024:248:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"inputIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"2286:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5941,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2300:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2286:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5947,"nodeType":"IfStatement","src":"2282:73:31","trueBody":{"id":5946,"nodeType":"Block","src":"2308:47:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5943,"name":"AllZeroInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"2329:13:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2329:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5945,"nodeType":"RevertStatement","src":"2322:22:31"}]}},{"expression":{"id":5948,"name":"inputIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"2372:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5899,"id":5949,"nodeType":"Return","src":"2365:17:31"}]},"id":5951,"implemented":true,"kind":"function","modifiers":[],"name":"getSingleInputIndex","nameLocation":"1844:19:31","nodeType":"FunctionDefinition","parameters":{"id":5896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5895,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"1881:12:31","nodeType":"VariableDeclaration","scope":5951,"src":"1864:29:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5894,"nodeType":"ArrayTypeName","src":"1864:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1863:31:31"},"returnParameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"inputIndex","nameLocation":"1926:10:31","nodeType":"VariableDeclaration","scope":5951,"src":"1918:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1917:20:31"},"scope":6137,"src":"1835:554:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6028,"nodeType":"Block","src":"3138:376:31","statements":[{"body":{"id":6024,"nodeType":"Block","src":"3196:288:31","statements":[{"body":{"id":6022,"nodeType":"Block","src":"3262:212:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5991,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3284:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":5993,"indexExpression":{"id":5992,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3291:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3284:9:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":5994,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3296:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":5998,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3303:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3307:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3303:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3296:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"src":"3284:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6021,"nodeType":"IfStatement","src":"3280:180:31","trueBody":{"id":6020,"nodeType":"Block","src":"3311:149:31","statements":[{"expression":{"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"baseExpression":{"id":6000,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3387:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6002,"indexExpression":{"id":6001,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3394:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3387:9:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"baseExpression":{"id":6003,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3398:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6007,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6004,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3405:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3409:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3405:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3398:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"id":6008,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3386:26:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$337_$_t_contract$_IERC20_$337_$","typeString":"tuple(contract IERC20,contract IERC20)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"baseExpression":{"id":6009,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3416:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6013,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3423:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3427:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3423:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3416:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"baseExpression":{"id":6014,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3431:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6016,"indexExpression":{"id":6015,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3438:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:9:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"id":6017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3415:26:31","typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$337_$_t_contract$_IERC20_$337_$","typeString":"tuple(contract IERC20,contract IERC20)"}},"src":"3386:55:31","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6019,"nodeType":"ExpressionStatement","src":"3386:55:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3230:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5981,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3234:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3241:6:31","memberName":"length","nodeType":"MemberAccess","src":"3234:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"3250:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3234:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3254:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3234:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3230:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"initializationExpression":{"assignments":[5977],"declarations":[{"constant":false,"id":5977,"mutability":"mutable","name":"j","nameLocation":"3223:1:31","nodeType":"VariableDeclaration","scope":6023,"src":"3215:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"3215:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5979,"initialValue":{"hexValue":"30","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3227:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3215:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3257:3:31","subExpression":{"id":5988,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"3259:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5990,"nodeType":"ExpressionStatement","src":"3257:3:31"},"nodeType":"ForStatement","src":"3210:264:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"3168:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5968,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3172:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:6:31","memberName":"length","nodeType":"MemberAccess","src":"3172:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3188:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3172:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3168:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6025,"initializationExpression":{"assignments":[5964],"declarations":[{"constant":false,"id":5964,"mutability":"mutable","name":"i","nameLocation":"3161:1:31","nodeType":"VariableDeclaration","scope":6025,"src":"3153:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3153:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5966,"initialValue":{"hexValue":"30","id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3165:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3153:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3191:3:31","subExpression":{"id":5973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"3193:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5975,"nodeType":"ExpressionStatement","src":"3191:3:31"},"nodeType":"ForStatement","src":"3148:336:31"},{"expression":{"id":6026,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"3501:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"functionReturnParameters":5962,"id":6027,"nodeType":"Return","src":"3494:13:31"}]},"documentation":{"id":5952,"nodeType":"StructuredDocumentation","src":"2395:654:31","text":" @dev Sort an array of tokens, mutating in place (and also returning them).\n This assumes the tokens have been (or will be) validated elsewhere for length\n and non-duplication. All this does is the sorting.\n A bubble sort should be gas- and bytecode-efficient enough for such small arrays.\n Could have also done \"manual\" comparisons for each of the cases, but this is\n about the same number of operations, and more concise.\n This is less efficient for larger token count (i.e., above 4), but such pools should\n be rare. And in any case, sorting is only done on-chain in test code."},"id":6029,"implemented":true,"kind":"function","modifiers":[],"name":"sortTokens","nameLocation":"3063:10:31","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"tokens","nameLocation":"3090:6:31","nodeType":"VariableDeclaration","scope":6029,"src":"3074:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5954,"nodeType":"UserDefinedTypeName","pathNode":{"id":5953,"name":"IERC20","nameLocations":["3074:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3074:6:31"},"referencedDeclaration":337,"src":"3074:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":5955,"nodeType":"ArrayTypeName","src":"3074:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"3073:24:31"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6029,"src":"3121:15:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":5959,"nodeType":"UserDefinedTypeName","pathNode":{"id":5958,"name":"IERC20","nameLocations":["3121:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3121:6:31"},"referencedDeclaration":337,"src":"3121:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":5960,"nodeType":"ArrayTypeName","src":"3121:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"3120:17:31"},"scope":6137,"src":"3054:460:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6083,"nodeType":"Block","src":"3686:341:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6037,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3700:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3707:6:31","memberName":"length","nodeType":"MemberAccess","src":"3700:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3716:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3700:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"nodeType":"IfStatement","src":"3696:54:31","trueBody":{"id":6042,"nodeType":"Block","src":"3719:31:31","statements":[{"functionReturnParameters":6036,"id":6041,"nodeType":"Return","src":"3733:7:31"}]}},{"assignments":[6046],"declarations":[{"constant":false,"id":6046,"mutability":"mutable","name":"previous","nameLocation":"3767:8:31","nodeType":"VariableDeclaration","scope":6083,"src":"3760:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":6045,"nodeType":"UserDefinedTypeName","pathNode":{"id":6044,"name":"IERC20","nameLocations":["3760:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3760:6:31"},"referencedDeclaration":337,"src":"3760:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6050,"initialValue":{"baseExpression":{"id":6047,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3778:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6049,"indexExpression":{"hexValue":"30","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3785:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3778:9:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"3760:27:31"},{"body":{"id":6081,"nodeType":"Block","src":"3842:179:31","statements":[{"assignments":[6064],"declarations":[{"constant":false,"id":6064,"mutability":"mutable","name":"current","nameLocation":"3863:7:31","nodeType":"VariableDeclaration","scope":6081,"src":"3856:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":6063,"nodeType":"UserDefinedTypeName","pathNode":{"id":6062,"name":"IERC20","nameLocations":["3856:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3856:6:31"},"referencedDeclaration":337,"src":"3856:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6068,"initialValue":{"baseExpression":{"id":6065,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3873:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6067,"indexExpression":{"id":6066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"3880:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3873:9:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"3856:26:31"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3901:8:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6070,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"3912:7:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"src":"3901:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6076,"nodeType":"IfStatement","src":"3897:81:31","trueBody":{"id":6075,"nodeType":"Block","src":"3921:57:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6072,"name":"TokensNotSorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"3946:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6074,"nodeType":"RevertStatement","src":"3939:24:31"}]}},{"expression":{"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6077,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3992:8:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6078,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"4003:7:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"src":"3992:18:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":6080,"nodeType":"ExpressionStatement","src":"3992:18:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"3818:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6056,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3822:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3829:6:31","memberName":"length","nodeType":"MemberAccess","src":"3822:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3818:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6082,"initializationExpression":{"assignments":[6052],"declarations":[{"constant":false,"id":6052,"mutability":"mutable","name":"i","nameLocation":"3811:1:31","nodeType":"VariableDeclaration","scope":6082,"src":"3803:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3803:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6054,"initialValue":{"hexValue":"31","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3815:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3803:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3837:3:31","subExpression":{"id":6059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"3839:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6061,"nodeType":"ExpressionStatement","src":"3837:3:31"},"nodeType":"ForStatement","src":"3798:223:31"}]},"documentation":{"id":6030,"nodeType":"StructuredDocumentation","src":"3520:95:31","text":"@dev Ensure an array of tokens is sorted. As above, does not validate length or uniqueness."},"id":6084,"implemented":true,"kind":"function","modifiers":[],"name":"ensureSortedTokens","nameLocation":"3629:18:31","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"tokens","nameLocation":"3664:6:31","nodeType":"VariableDeclaration","scope":6084,"src":"3648:22:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":6032,"nodeType":"UserDefinedTypeName","pathNode":{"id":6031,"name":"IERC20","nameLocations":["3648:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3648:6:31"},"referencedDeclaration":337,"src":"3648:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":6033,"nodeType":"ArrayTypeName","src":"3648:8:31","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"3647:24:31"},"returnParameters":{"id":6036,"nodeType":"ParameterList","parameters":[],"src":"3686:0:31"},"scope":6137,"src":"3620:407:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6135,"nodeType":"Block","src":"4203:347:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6091,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"4217:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:6:31","memberName":"length","nodeType":"MemberAccess","src":"4217:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4234:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4217:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6097,"nodeType":"IfStatement","src":"4213:55:31","trueBody":{"id":6096,"nodeType":"Block","src":"4237:31:31","statements":[{"functionReturnParameters":6090,"id":6095,"nodeType":"Return","src":"4251:7:31"}]}},{"assignments":[6099],"declarations":[{"constant":false,"id":6099,"mutability":"mutable","name":"previous","nameLocation":"4286:8:31","nodeType":"VariableDeclaration","scope":6135,"src":"4278:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4278:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6103,"initialValue":{"baseExpression":{"id":6100,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"4297:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6102,"indexExpression":{"hexValue":"30","id":6101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4297:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4278:29:31"},{"body":{"id":6133,"nodeType":"Block","src":"4363:181:31","statements":[{"assignments":[6116],"declarations":[{"constant":false,"id":6116,"mutability":"mutable","name":"current","nameLocation":"4385:7:31","nodeType":"VariableDeclaration","scope":6133,"src":"4377:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6115,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6120,"initialValue":{"baseExpression":{"id":6117,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"4395:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6119,"indexExpression":{"id":6118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"4403:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4395:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4377:28:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"4424:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6122,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"4435:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4424:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"4420:81:31","trueBody":{"id":6127,"nodeType":"Block","src":"4444:57:31","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6124,"name":"TokensNotSorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"4469:15:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6126,"nodeType":"RevertStatement","src":"4462:24:31"}]}},{"expression":{"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6129,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"4515:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6130,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"4526:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6132,"nodeType":"ExpressionStatement","src":"4515:18:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"4338:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6109,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"4342:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4350:6:31","memberName":"length","nodeType":"MemberAccess","src":"4342:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4338:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6134,"initializationExpression":{"assignments":[6105],"declarations":[{"constant":false,"id":6105,"mutability":"mutable","name":"i","nameLocation":"4331:1:31","nodeType":"VariableDeclaration","scope":6134,"src":"4323:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6104,"name":"uint256","nodeType":"ElementaryTypeName","src":"4323:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6107,"initialValue":{"hexValue":"31","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4335:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"4323:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4358:3:31","subExpression":{"id":6112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"4360:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6114,"nodeType":"ExpressionStatement","src":"4358:3:31"},"nodeType":"ForStatement","src":"4318:226:31"}]},"documentation":{"id":6085,"nodeType":"StructuredDocumentation","src":"4033:96:31","text":"@dev Ensure an array of amounts is sorted. As above, does not validate length or uniqueness."},"id":6136,"implemented":true,"kind":"function","modifiers":[],"name":"ensureSortedAmounts","nameLocation":"4143:19:31","nodeType":"FunctionDefinition","parameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"amounts","nameLocation":"4180:7:31","nodeType":"VariableDeclaration","scope":6136,"src":"4163:24:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"4163:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6087,"nodeType":"ArrayTypeName","src":"4163:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4162:26:31"},"returnParameters":{"id":6090,"nodeType":"ParameterList","parameters":[],"src":"4203:0:31"},"scope":6137,"src":"4134:416:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6138,"src":"202:4350:31","usedErrors":[5845,5848,5851,5854],"usedEvents":[]}],"src":"46:4507:31"},"id":31},"contracts/ReentrancyGuardTransient.sol":{"ast":{"absolutePath":"contracts/ReentrancyGuardTransient.sol","exportedSymbols":{"ReentrancyGuardTransient":[6206],"StorageSlotExtension":[7551]},"id":6207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6139,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:32"},{"absolutePath":"contracts/StorageSlotExtension.sol","file":"./StorageSlotExtension.sol","id":6141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6207,"sourceUnit":7552,"src":"59:66:32","symbolAliases":[{"foreign":{"id":6140,"name":"StorageSlotExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"68:20:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuardTransient","contractDependencies":[],"contractKind":"contract","documentation":{"id":6142,"nodeType":"StructuredDocumentation","src":"127:155:32","text":" @notice Variant of {ReentrancyGuard} that uses transient storage.\n @dev NOTE: This variant only works on networks where EIP-1153 is available."},"fullyImplemented":true,"id":6206,"linearizedBaseContracts":[6206],"name":"ReentrancyGuardTransient","nameLocation":"301:24:32","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6144,"libraryName":{"id":6143,"name":"StorageSlotExtension","nameLocations":["338:20:32"],"nodeType":"IdentifierPath","referencedDeclaration":7551,"src":"338:20:32"},"nodeType":"UsingForDirective","src":"332:33:32"},{"constant":true,"id":6147,"mutability":"constant","name":"_REENTRANCY_GUARD_STORAGE","nameLocation":"515:25:32","nodeType":"VariableDeclaration","scope":6206,"src":"490:127:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"490:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"551:66:32","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"documentation":{"id":6148,"nodeType":"StructuredDocumentation","src":"624:40:32","text":"@notice Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":6150,"name":"ReentrancyGuardReentrantCall","nameLocation":"675:28:32","nodeType":"ErrorDefinition","parameters":{"id":6149,"nodeType":"ParameterList","parameters":[],"src":"703:2:32"},"src":"669:37:32"},{"body":{"id":6160,"nodeType":"Block","src":"1107:79:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6153,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"1117:19:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:21:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6155,"nodeType":"ExpressionStatement","src":"1117:21:32"},{"id":6156,"nodeType":"PlaceholderStatement","src":"1148:1:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6157,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"1159:18:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6159,"nodeType":"ExpressionStatement","src":"1159:20:32"}]},"documentation":{"id":6151,"nodeType":"StructuredDocumentation","src":"712:366:32","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":6161,"name":"nonReentrant","nameLocation":"1092:12:32","nodeType":"ModifierDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[],"src":"1104:2:32"},"src":"1083:103:32","virtual":false,"visibility":"internal"},{"body":{"id":6179,"nodeType":"Block","src":"1231:310:32","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":6164,"name":"_reentrancyGuardEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"1320:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1320:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"1316:93:32","trueBody":{"id":6169,"nodeType":"Block","src":"1347:62:32","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6166,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"1368:28:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1368:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6168,"nodeType":"RevertStatement","src":"1361:37:32"}]}},{"expression":{"arguments":[{"hexValue":"74727565","id":6176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1529:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6171,"name":"_REENTRANCY_GUARD_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"1484:25:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1510:9:32","memberName":"asBoolean","nodeType":"MemberAccess","referencedDeclaration":7389,"src":"1484:35:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1522:6:32","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7484,"src":"1484:44:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlotType_$7374_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType,bool)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:50:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6178,"nodeType":"ExpressionStatement","src":"1484:50:32"}]},"id":6180,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"1201:19:32","nodeType":"FunctionDefinition","parameters":{"id":6162,"nodeType":"ParameterList","parameters":[],"src":"1220:2:32"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[],"src":"1231:0:32"},"scope":6206,"src":"1192:349:32","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6191,"nodeType":"Block","src":"1585:68:32","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1640:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6183,"name":"_REENTRANCY_GUARD_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"1595:25:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1621:9:32","memberName":"asBoolean","nodeType":"MemberAccess","referencedDeclaration":7389,"src":"1595:35:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1633:6:32","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7484,"src":"1595:44:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlotType_$7374_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType,bool)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:51:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6190,"nodeType":"ExpressionStatement","src":"1595:51:32"}]},"id":6192,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"1556:18:32","nodeType":"FunctionDefinition","parameters":{"id":6181,"nodeType":"ParameterList","parameters":[],"src":"1574:2:32"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[],"src":"1585:0:32"},"scope":6206,"src":"1547:106:32","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6204,"nodeType":"Block","src":"1896:69:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6198,"name":"_REENTRANCY_GUARD_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"1913:25:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1939:9:32","memberName":"asBoolean","nodeType":"MemberAccess","referencedDeclaration":7389,"src":"1913:35:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1951:5:32","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"1913:43:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_BooleanSlotType_$7374_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType) view returns (bool)"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:45:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6197,"id":6203,"nodeType":"Return","src":"1906:52:32"}]},"documentation":{"id":6193,"nodeType":"StructuredDocumentation","src":"1659:168:32","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"1841:23:32","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[],"src":"1864:2:32"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"1890:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6195,"name":"bool","nodeType":"ElementaryTypeName","src":"1890:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1889:6:32"},"scope":6206,"src":"1832:133:32","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6207,"src":"283:1684:32","usedErrors":[6150],"usedEvents":[]}],"src":"33:1935:32"},"id":32},"contracts/RevertCodec.sol":{"ast":{"absolutePath":"contracts/RevertCodec.sol","exportedSymbols":{"RevertCodec":[6296]},"id":6297,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6208,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:33"},{"abstract":false,"baseContracts":[],"canonicalName":"RevertCodec","contractDependencies":[],"contractKind":"library","documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"111:120:33","text":"@notice Support `quoteAndRevert`: a v2-style query which always reverts, and returns the result in the return data."},"fullyImplemented":true,"id":6296,"linearizedBaseContracts":[6296],"name":"RevertCodec","nameLocation":"239:11:33","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6210,"nodeType":"StructuredDocumentation","src":"257:183:33","text":" @notice On success of the primary operation in a `quoteAndRevert`, this error is thrown with the return data.\n @param result The result of the query operation"},"errorSelector":"5ab64fb8","id":6214,"name":"Result","nameLocation":"451:6:33","nodeType":"ErrorDefinition","parameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"result","nameLocation":"464:6:33","nodeType":"VariableDeclaration","scope":6214,"src":"458:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6211,"name":"bytes","nodeType":"ElementaryTypeName","src":"458:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"457:14:33"},"src":"445:27:33"},{"documentation":{"id":6215,"nodeType":"StructuredDocumentation","src":"478:79:33","text":"@notice Handle the \"reverted without a reason\" case (i.e., no return data)."},"errorSelector":"a7285689","id":6217,"name":"ErrorSelectorNotFound","nameLocation":"568:21:33","nodeType":"ErrorDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[],"src":"589:2:33"},"src":"562:30:33"},{"body":{"id":6257,"nodeType":"Block","src":"687:559:33","statements":[{"assignments":[6225],"declarations":[{"constant":false,"id":6225,"mutability":"mutable","name":"errorSelector","nameLocation":"704:13:33","nodeType":"VariableDeclaration","scope":6257,"src":"697:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6224,"name":"bytes4","nodeType":"ElementaryTypeName","src":"697:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":6230,"initialValue":{"arguments":[{"id":6228,"name":"resultRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"746:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6226,"name":"RevertCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"720:11:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertCodec_$6296_$","typeString":"type(library RevertCodec)"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"732:13:33","memberName":"parseSelector","nodeType":"MemberAccess","referencedDeclaration":6277,"src":"720:25:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes memory) pure returns (bytes4)"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"697:59:33"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"errorSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"770:13:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6232,"name":"Result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"787:6:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$_t_error_$","typeString":"function (bytes memory) pure returns (error)"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"794:8:33","memberName":"selector","nodeType":"MemberAccess","src":"787:15:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"770:32:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"766:185:33","trueBody":{"id":6241,"nodeType":"Block","src":"804:147:33","statements":[{"expression":{"arguments":[{"id":6238,"name":"resultRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"930:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6235,"name":"RevertCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"903:11:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertCodec_$6296_$","typeString":"type(library RevertCodec)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"915:14:33","memberName":"bubbleUpRevert","nodeType":"MemberAccess","referencedDeclaration":6295,"src":"903:26:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6240,"nodeType":"ExpressionStatement","src":"903:37:33"}]}},{"assignments":[6244],"declarations":[{"constant":false,"id":6244,"mutability":"mutable","name":"resultRawLength","nameLocation":"969:15:33","nodeType":"VariableDeclaration","scope":6257,"src":"961:23:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6243,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6247,"initialValue":{"expression":{"id":6245,"name":"resultRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"987:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"997:6:33","memberName":"length","nodeType":"MemberAccess","src":"987:16:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"961:42:33"},{"AST":{"nativeSrc":"1038:154:33","nodeType":"YulBlock","src":"1038:154:33","statements":[{"nativeSrc":"1052:33:33","nodeType":"YulAssignment","src":"1052:33:33","value":{"arguments":[{"name":"resultRaw","nativeSrc":"1069:9:33","nodeType":"YulIdentifier","src":"1069:9:33"},{"kind":"number","nativeSrc":"1080:4:33","nodeType":"YulLiteral","src":"1080:4:33","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"1065:3:33","nodeType":"YulIdentifier","src":"1065:3:33"},"nativeSrc":"1065:20:33","nodeType":"YulFunctionCall","src":"1065:20:33"},"variableNames":[{"name":"resultRaw","nativeSrc":"1052:9:33","nodeType":"YulIdentifier","src":"1052:9:33"}]},{"expression":{"arguments":[{"name":"resultRaw","nativeSrc":"1126:9:33","nodeType":"YulIdentifier","src":"1126:9:33"},{"arguments":[{"name":"resultRawLength","nativeSrc":"1141:15:33","nodeType":"YulIdentifier","src":"1141:15:33"},{"kind":"number","nativeSrc":"1158:1:33","nodeType":"YulLiteral","src":"1158:1:33","type":"","value":"4"}],"functionName":{"name":"sub","nativeSrc":"1137:3:33","nodeType":"YulIdentifier","src":"1137:3:33"},"nativeSrc":"1137:23:33","nodeType":"YulFunctionCall","src":"1137:23:33"}],"functionName":{"name":"mstore","nativeSrc":"1119:6:33","nodeType":"YulIdentifier","src":"1119:6:33"},"nativeSrc":"1119:42:33","nodeType":"YulFunctionCall","src":"1119:42:33"},"nativeSrc":"1119:42:33","nodeType":"YulExpressionStatement","src":"1119:42:33"}]},"evmVersion":"cancun","externalReferences":[{"declaration":6219,"isOffset":false,"isSlot":false,"src":"1052:9:33","valueSize":1},{"declaration":6219,"isOffset":false,"isSlot":false,"src":"1069:9:33","valueSize":1},{"declaration":6219,"isOffset":false,"isSlot":false,"src":"1126:9:33","valueSize":1},{"declaration":6244,"isOffset":false,"isSlot":false,"src":"1141:15:33","valueSize":1}],"flags":["memory-safe"],"id":6248,"nodeType":"InlineAssembly","src":"1013:179:33"},{"expression":{"arguments":[{"id":6251,"name":"resultRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"1220:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1232:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6252,"name":"bytes","nodeType":"ElementaryTypeName","src":"1232:5:33","typeDescriptions":{}}}],"id":6254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1231:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"}],"expression":{"id":6249,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1209:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1213:6:33","memberName":"decode","nodeType":"MemberAccess","src":"1209:10:33","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6223,"id":6256,"nodeType":"Return","src":"1202:37:33"}]},"id":6258,"implemented":true,"kind":"function","modifiers":[],"name":"catchEncodedResult","nameLocation":"607:18:33","nodeType":"FunctionDefinition","parameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"resultRaw","nameLocation":"639:9:33","nodeType":"VariableDeclaration","scope":6258,"src":"626:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6218,"name":"bytes","nodeType":"ElementaryTypeName","src":"626:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"625:24:33"},"returnParameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6258,"src":"673:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6221,"name":"bytes","nodeType":"ElementaryTypeName","src":"673:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"672:14:33"},"scope":6296,"src":"598:648:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"1429:258:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6266,"name":"callResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"1443:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1454:6:33","memberName":"length","nodeType":"MemberAccess","src":"1443:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:1:33","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1443:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6274,"nodeType":"IfStatement","src":"1439:82:33","trueBody":{"id":6273,"nodeType":"Block","src":"1466:55:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6270,"name":"ErrorSelectorNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"1487:21:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6272,"nodeType":"RevertStatement","src":"1480:30:33"}]}},{"AST":{"nativeSrc":"1555:126:33","nodeType":"YulBlock","src":"1555:126:33","statements":[{"nativeSrc":"1569:45:33","nodeType":"YulAssignment","src":"1569:45:33","value":{"arguments":[{"arguments":[{"name":"callResult","nativeSrc":"1596:10:33","nodeType":"YulIdentifier","src":"1596:10:33"},{"kind":"number","nativeSrc":"1608:4:33","nodeType":"YulLiteral","src":"1608:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1592:3:33","nodeType":"YulIdentifier","src":"1592:3:33"},"nativeSrc":"1592:21:33","nodeType":"YulFunctionCall","src":"1592:21:33"}],"functionName":{"name":"mload","nativeSrc":"1586:5:33","nodeType":"YulIdentifier","src":"1586:5:33"},"nativeSrc":"1586:28:33","nodeType":"YulFunctionCall","src":"1586:28:33"},"variableNames":[{"name":"errorSelector","nativeSrc":"1569:13:33","nodeType":"YulIdentifier","src":"1569:13:33"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6261,"isOffset":false,"isSlot":false,"src":"1596:10:33","valueSize":1},{"declaration":6264,"isOffset":false,"isSlot":false,"src":"1569:13:33","valueSize":1}],"flags":["memory-safe"],"id":6275,"nodeType":"InlineAssembly","src":"1530:151:33"}]},"documentation":{"id":6259,"nodeType":"StructuredDocumentation","src":"1252:79:33","text":"@dev Returns the first 4 bytes in an array, reverting if the length is < 4."},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"parseSelector","nameLocation":"1345:13:33","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"callResult","nameLocation":"1372:10:33","nodeType":"VariableDeclaration","scope":6277,"src":"1359:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6260,"name":"bytes","nodeType":"ElementaryTypeName","src":"1359:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1358:25:33"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"errorSelector","nameLocation":"1414:13:33","nodeType":"VariableDeclaration","scope":6277,"src":"1407:20:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6263,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1407:6:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1406:22:33"},"scope":6296,"src":"1336:351:33","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6294,"nodeType":"Block","src":"1804:441:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6283,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"1881:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:6:33","memberName":"length","nodeType":"MemberAccess","src":"1881:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1901:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1881:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6292,"nodeType":"Block","src":"2184:55:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6289,"name":"ErrorSelectorNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"2205:21:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6291,"nodeType":"RevertStatement","src":"2198:30:33"}]},"id":6293,"nodeType":"IfStatement","src":"1877:362:33","trueBody":{"id":6288,"nodeType":"Block","src":"1904:274:33","statements":[{"AST":{"nativeSrc":"2033:135:33","nodeType":"YulBlock","src":"2033:135:33","statements":[{"nativeSrc":"2051:41:33","nodeType":"YulVariableDeclaration","src":"2051:41:33","value":{"arguments":[{"name":"returnData","nativeSrc":"2081:10:33","nodeType":"YulIdentifier","src":"2081:10:33"}],"functionName":{"name":"mload","nativeSrc":"2075:5:33","nodeType":"YulIdentifier","src":"2075:5:33"},"nativeSrc":"2075:17:33","nodeType":"YulFunctionCall","src":"2075:17:33"},"variables":[{"name":"return_data_size","nativeSrc":"2055:16:33","nodeType":"YulTypedName","src":"2055:16:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2120:2:33","nodeType":"YulLiteral","src":"2120:2:33","type":"","value":"32"},{"name":"returnData","nativeSrc":"2124:10:33","nodeType":"YulIdentifier","src":"2124:10:33"}],"functionName":{"name":"add","nativeSrc":"2116:3:33","nodeType":"YulIdentifier","src":"2116:3:33"},"nativeSrc":"2116:19:33","nodeType":"YulFunctionCall","src":"2116:19:33"},{"name":"return_data_size","nativeSrc":"2137:16:33","nodeType":"YulIdentifier","src":"2137:16:33"}],"functionName":{"name":"revert","nativeSrc":"2109:6:33","nodeType":"YulIdentifier","src":"2109:6:33"},"nativeSrc":"2109:45:33","nodeType":"YulFunctionCall","src":"2109:45:33"},"nativeSrc":"2109:45:33","nodeType":"YulExpressionStatement","src":"2109:45:33"}]},"evmVersion":"cancun","externalReferences":[{"declaration":6280,"isOffset":false,"isSlot":false,"src":"2081:10:33","valueSize":1},{"declaration":6280,"isOffset":false,"isSlot":false,"src":"2124:10:33","valueSize":1}],"flags":["memory-safe"],"id":6287,"nodeType":"InlineAssembly","src":"2008:160:33"}]}}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"1693:43:33","text":"@dev Taken from Openzeppelin's Address."},"id":6295,"implemented":true,"kind":"function","modifiers":[],"name":"bubbleUpRevert","nameLocation":"1750:14:33","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"returnData","nameLocation":"1778:10:33","nodeType":"VariableDeclaration","scope":6295,"src":"1765:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6279,"name":"bytes","nodeType":"ElementaryTypeName","src":"1765:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1764:25:33"},"returnParameters":{"id":6282,"nodeType":"ParameterList","parameters":[],"src":"1804:0:33"},"scope":6296,"src":"1741:504:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6297,"src":"231:2016:33","usedErrors":[6214,6217],"usedEvents":[]}],"src":"46:2202:33"},"id":33},"contracts/RouterCommon.sol":{"ast":{"absolutePath":"contracts/RouterCommon.sol","exportedSymbols":{"Address":[1069],"IAllowanceTransfer":[3080],"IERC20":[337],"IERC20Permit":[399],"IRouterCommon":[4303],"IVault":[4357],"IWETH":[5836],"InputHelpers":[6137],"ReentrancyGuardTransient":[6206],"RevertCodec":[6296],"RouterCommon":[6962],"RouterWethLib":[7078],"SafeCast":[2868],"SafeERC20":[810],"SenderGuard":[7208],"StorageSlotExtension":[7551],"TransientStorageHelpers":[8145],"VaultGuard":[8194],"Version":[8543]},"id":6963,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6298,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:34"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":6300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":400,"src":"72:95:34","symbolAliases":[{"foreign":{"id":6299,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"81:12:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":811,"src":"168:84:34","symbolAliases":[{"foreign":{"id":6301,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"177:9:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":6304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":2869,"src":"253:75:34","symbolAliases":[{"foreign":{"id":6303,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"262:8:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":338,"src":"329:72:34","symbolAliases":[{"foreign":{"id":6305,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"338:6:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":6308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":1070,"src":"402:68:34","symbolAliases":[{"foreign":{"id":6307,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"411:7:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IRouterCommon.sol","file":"./IRouterCommon.sol","id":6310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":4304,"src":"565:52:34","symbolAliases":[{"foreign":{"id":6309,"name":"IRouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"574:13:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IWETH.sol","file":"./IWETH.sol","id":6312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":5837,"src":"618:36:34","symbolAliases":[{"foreign":{"id":6311,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"627:5:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol","file":"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol","id":6314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":3081,"src":"655:92:34","symbolAliases":[{"foreign":{"id":6313,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"664:18:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":6316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":4358,"src":"748:38:34","symbolAliases":[{"foreign":{"id":6315,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"757:6:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/InputHelpers.sol","file":"./InputHelpers.sol","id":6318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":6138,"src":"788:50:34","symbolAliases":[{"foreign":{"id":6317,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"797:12:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/RevertCodec.sol","file":"./RevertCodec.sol","id":6320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":6297,"src":"839:48:34","symbolAliases":[{"foreign":{"id":6319,"name":"RevertCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"848:11:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Version.sol","file":"./Version.sol","id":6322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":8544,"src":"888:40:34","symbolAliases":[{"foreign":{"id":6321,"name":"Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"897:7:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/ReentrancyGuardTransient.sol","file":"./ReentrancyGuardTransient.sol","id":6324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":6207,"src":"929:78:34","symbolAliases":[{"foreign":{"id":6323,"name":"ReentrancyGuardTransient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"942:24:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/StorageSlotExtension.sol","file":"./StorageSlotExtension.sol","id":6326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":7552,"src":"1008:66:34","symbolAliases":[{"foreign":{"id":6325,"name":"StorageSlotExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"1017:20:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/TransientStorageHelpers.sol","file":"./TransientStorageHelpers.sol","id":6328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":8146,"src":"1075:76:34","symbolAliases":[{"foreign":{"id":6327,"name":"TransientStorageHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"1088:23:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/SenderGuard.sol","file":"./SenderGuard.sol","id":6330,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":7209,"src":"1153:48:34","symbolAliases":[{"foreign":{"id":6329,"name":"SenderGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"1162:11:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/RouterWethLib.sol","file":"./RouterWethLib.sol","id":6332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":7079,"src":"1202:52:34","symbolAliases":[{"foreign":{"id":6331,"name":"RouterWethLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"1211:13:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultGuard.sol","file":"./VaultGuard.sol","id":6334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6963,"sourceUnit":8195,"src":"1255:46:34","symbolAliases":[{"foreign":{"id":6333,"name":"VaultGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"1264:10:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6336,"name":"IRouterCommon","nameLocations":["1712:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":4303,"src":"1712:13:34"},"id":6337,"nodeType":"InheritanceSpecifier","src":"1712:13:34"},{"baseName":{"id":6338,"name":"SenderGuard","nameLocations":["1727:11:34"],"nodeType":"IdentifierPath","referencedDeclaration":7208,"src":"1727:11:34"},"id":6339,"nodeType":"InheritanceSpecifier","src":"1727:11:34"},{"baseName":{"id":6340,"name":"VaultGuard","nameLocations":["1740:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"1740:10:34"},"id":6341,"nodeType":"InheritanceSpecifier","src":"1740:10:34"},{"baseName":{"id":6342,"name":"ReentrancyGuardTransient","nameLocations":["1752:24:34"],"nodeType":"IdentifierPath","referencedDeclaration":6206,"src":"1752:24:34"},"id":6343,"nodeType":"InheritanceSpecifier","src":"1752:24:34"},{"baseName":{"id":6344,"name":"Version","nameLocations":["1778:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":8543,"src":"1778:7:34"},"id":6345,"nodeType":"InheritanceSpecifier","src":"1778:7:34"}],"canonicalName":"RouterCommon","contractDependencies":[],"contractKind":"contract","documentation":{"id":6335,"nodeType":"StructuredDocumentation","src":"1303:374:34","text":" @notice Abstract base contract for functions shared among all Routers.\n @dev Common functionality includes access to the sender (which would normally be obscured, since msg.sender in the\n Vault is the Router contract itself, not the account that invoked the Router), versioning, and the external\n invocation functions (`permitBatchAndCall` and `multicall`)."},"fullyImplemented":true,"id":6962,"linearizedBaseContracts":[6962,8543,5818,6206,8194,7208,4319,4303],"name":"RouterCommon","nameLocation":"1696:12:34","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6348,"libraryName":{"id":6346,"name":"Address","nameLocations":["1798:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"1798:7:34"},"nodeType":"UsingForDirective","src":"1792:34:34","typeName":{"id":6347,"name":"address","nodeType":"ElementaryTypeName","src":"1810:15:34","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"global":false,"id":6350,"libraryName":{"id":6349,"name":"StorageSlotExtension","nameLocations":["1837:20:34"],"nodeType":"IdentifierPath","referencedDeclaration":7551,"src":"1837:20:34"},"nodeType":"UsingForDirective","src":"1831:33:34"},{"global":false,"id":6354,"libraryName":{"id":6351,"name":"RouterWethLib","nameLocations":["1875:13:34"],"nodeType":"IdentifierPath","referencedDeclaration":7078,"src":"1875:13:34"},"nodeType":"UsingForDirective","src":"1869:30:34","typeName":{"id":6353,"nodeType":"UserDefinedTypeName","pathNode":{"id":6352,"name":"IWETH","nameLocations":["1893:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"1893:5:34"},"referencedDeclaration":5836,"src":"1893:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}},{"global":false,"id":6356,"libraryName":{"id":6355,"name":"SafeCast","nameLocations":["1910:8:34"],"nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"1910:8:34"},"nodeType":"UsingForDirective","src":"1904:21:34"},{"constant":false,"id":6366,"mutability":"immutable","name":"_IS_RETURN_ETH_LOCKED_SLOT","nameLocation":"2346:26:34","nodeType":"VariableDeclaration","scope":6962,"src":"2320:146:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2320:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"expression":{"arguments":[{"id":6361,"name":"RouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"2426:12:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RouterCommon_$6962_$","typeString":"type(contract RouterCommon)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_RouterCommon_$6962_$","typeString":"type(contract RouterCommon)"}],"id":6360,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2421:4:34","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_RouterCommon_$6962","typeString":"type(contract RouterCommon)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2440:4:34","memberName":"name","nodeType":"MemberAccess","src":"2421:23:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"697352657475726e4574684c6f636b6564","id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2446:19:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_d19a96da6e3f3f787797bbfe15fd8b17146f21fdc2ef9455ab3d06a368e101f1","typeString":"literal_string \"isReturnEthLocked\""},"value":"isReturnEthLocked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_d19a96da6e3f3f787797bbfe15fd8b17146f21fdc2ef9455ab3d06a368e101f1","typeString":"literal_string \"isReturnEthLocked\""}],"expression":{"id":6358,"name":"TransientStorageHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"2383:23:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransientStorageHelpers_$8145_$","typeString":"type(library TransientStorageHelpers)"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2407:13:34","memberName":"calculateSlot","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"2383:37:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory,string memory) pure returns (bytes32)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2383:83:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6369,"mutability":"immutable","name":"_weth","nameLocation":"2550:5:34","nodeType":"VariableDeclaration","scope":6962,"src":"2525:30:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":6368,"nodeType":"UserDefinedTypeName","pathNode":{"id":6367,"name":"IWETH","nameLocations":["2525:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"2525:5:34"},"referencedDeclaration":5836,"src":"2525:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"},{"body":{"id":6416,"nodeType":"Block","src":"2832:557:34","statements":[{"assignments":[6373],"declarations":[{"constant":false,"id":6373,"mutability":"mutable","name":"isExternalSender","nameLocation":"2847:16:34","nodeType":"VariableDeclaration","scope":6416,"src":"2842:21:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6372,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6378,"initialValue":{"arguments":[{"expression":{"id":6375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2878:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:34","memberName":"sender","nodeType":"MemberAccess","src":"2878:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6374,"name":"_saveSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"2866:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:23:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2842:47:34"},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6379,"name":"_isReturnEthLockedSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"2996:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function () view returns (StorageSlotExtension.BooleanSlotType)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2996:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3021:5:34","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"2996:30:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_BooleanSlotType_$7374_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType) view returns (bool)"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2996:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6387,"nodeType":"IfStatement","src":"2992:100:34","trueBody":{"id":6386,"nodeType":"Block","src":"3030:62:34","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6383,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"3051:28:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:30:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6385,"nodeType":"RevertStatement","src":"3044:37:34"}]}},{"expression":{"arguments":[{"hexValue":"74727565","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3185:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6388,"name":"_isReturnEthLockedSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"3153:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function () view returns (StorageSlotExtension.BooleanSlotType)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3178:6:34","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7484,"src":"3153:31:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlotType_$7374_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType,bool)"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6393,"nodeType":"ExpressionStatement","src":"3153:37:34"},{"id":6394,"nodeType":"PlaceholderStatement","src":"3200:1:34"},{"expression":{"arguments":[{"hexValue":"66616c7365","id":6398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3243:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6395,"name":"_isReturnEthLockedSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"3211:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function () view returns (StorageSlotExtension.BooleanSlotType)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3211:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3236:6:34","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7484,"src":"3211:31:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlotType_$7374_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType,bool)"}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3211:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6400,"nodeType":"ExpressionStatement","src":"3211:38:34"},{"assignments":[6402],"declarations":[{"constant":false,"id":6402,"mutability":"mutable","name":"sender","nameLocation":"3268:6:34","nodeType":"VariableDeclaration","scope":6416,"src":"3260:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6401,"name":"address","nodeType":"ElementaryTypeName","src":"3260:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6407,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6403,"name":"_getSenderSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"3277:14:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function () view returns (StorageSlotExtension.AddressSlotType)"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:16:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3294:5:34","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"3277:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressSlotType_$7357_$returns$_t_address_$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType) view returns (address)"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3260:41:34"},{"expression":{"arguments":[{"id":6409,"name":"isExternalSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"3336:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6408,"name":"_discardSenderIfRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3311:24:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6411,"nodeType":"ExpressionStatement","src":"3311:42:34"},{"expression":{"arguments":[{"id":6413,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"3375:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6412,"name":"_returnEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"3364:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3364:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6415,"nodeType":"ExpressionStatement","src":"3364:18:34"}]},"documentation":{"id":6370,"nodeType":"StructuredDocumentation","src":"2625:168:34","text":" @notice Locks the return of excess ETH to the sender until the end of the function.\n @dev This also encompasses the `saveSender` functionality."},"id":6417,"name":"saveSenderAndManageEth","nameLocation":"2807:22:34","nodeType":"ModifierDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[],"src":"2829:2:34"},"src":"2798:591:34","virtual":false,"visibility":"internal"},{"body":{"id":6440,"nodeType":"Block","src":"3593:76:34","statements":[{"expression":{"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6436,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"3603:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6437,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"3611:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"src":"3603:12:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":6439,"nodeType":"ExpressionStatement","src":"3603:12:34"}]},"id":6441,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":6428,"kind":"baseConstructorSpecifier","modifierName":{"id":6427,"name":"SenderGuard","nameLocations":["3538:11:34"],"nodeType":"IdentifierPath","referencedDeclaration":7208,"src":"3538:11:34"},"nodeType":"ModifierInvocation","src":"3538:13:34"},{"arguments":[{"id":6430,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"3563:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}}],"id":6431,"kind":"baseConstructorSpecifier","modifierName":{"id":6429,"name":"VaultGuard","nameLocations":["3552:10:34"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"3552:10:34"},"nodeType":"ModifierInvocation","src":"3552:17:34"},{"arguments":[{"id":6433,"name":"routerVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"3578:13:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6434,"kind":"baseConstructorSpecifier","modifierName":{"id":6432,"name":"Version","nameLocations":["3570:7:34"],"nodeType":"IdentifierPath","referencedDeclaration":8543,"src":"3570:7:34"},"nodeType":"ModifierInvocation","src":"3570:22:34"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"vault","nameLocation":"3423:5:34","nodeType":"VariableDeclaration","scope":6441,"src":"3416:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":6419,"nodeType":"UserDefinedTypeName","pathNode":{"id":6418,"name":"IVault","nameLocations":["3416:6:34"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"3416:6:34"},"referencedDeclaration":4357,"src":"3416:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":6423,"mutability":"mutable","name":"weth","nameLocation":"3444:4:34","nodeType":"VariableDeclaration","scope":6441,"src":"3438:10:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":6422,"nodeType":"UserDefinedTypeName","pathNode":{"id":6421,"name":"IWETH","nameLocations":["3438:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"3438:5:34"},"referencedDeclaration":5836,"src":"3438:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":6425,"mutability":"mutable","name":"routerVersion","nameLocation":"3518:13:34","nodeType":"VariableDeclaration","scope":6441,"src":"3504:27:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6424,"name":"string","nodeType":"ElementaryTypeName","src":"3504:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3406:131:34"},"returnParameters":{"id":6435,"nodeType":"ParameterList","parameters":[],"src":"3593:0:34"},"scope":6962,"src":"3395:274:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4251],"body":{"id":6450,"nodeType":"Block","src":"3758:29:34","statements":[{"expression":{"id":6448,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"3775:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"functionReturnParameters":6447,"id":6449,"nodeType":"Return","src":"3768:12:34"}]},"documentation":{"id":6442,"nodeType":"StructuredDocumentation","src":"3675:29:34","text":"@inheritdoc IRouterCommon"},"functionSelector":"107c279f","id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"getWeth","nameLocation":"3718:7:34","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[],"src":"3725:2:34"},"returnParameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"3751:5:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":6445,"nodeType":"UserDefinedTypeName","pathNode":{"id":6444,"name":"IWETH","nameLocations":["3751:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"3751:5:34"},"referencedDeclaration":5836,"src":"3751:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"3750:7:34"},"scope":6962,"src":"3709:78:34","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4257],"body":{"id":6462,"nodeType":"Block","src":"3962:80:34","statements":[{"expression":{"arguments":[{"hexValue":"30","id":6459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4032:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4024:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6457,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:34","typeDescriptions":{}}},"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4024:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6456,"id":6461,"nodeType":"Return","src":"4017:17:34"}]},"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"3793:29:34","text":"@inheritdoc IRouterCommon"},"functionSelector":"1bbf2e23","id":6463,"implemented":true,"kind":"function","modifiers":[],"name":"getPermit2","nameLocation":"3917:10:34","nodeType":"FunctionDefinition","parameters":{"id":6453,"nodeType":"ParameterList","parameters":[],"src":"3927:2:34"},"returnParameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6463,"src":"3953:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:9:34"},"scope":6962,"src":"3908:134:34","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"RouterCommon.SignatureParts","id":6470,"members":[{"constant":false,"id":6465,"mutability":"mutable","name":"r","nameLocation":"4307:1:34","nodeType":"VariableDeclaration","scope":6470,"src":"4299:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4299:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6467,"mutability":"mutable","name":"s","nameLocation":"4326:1:34","nodeType":"VariableDeclaration","scope":6470,"src":"4318:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4318:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6469,"mutability":"mutable","name":"v","nameLocation":"4343:1:34","nodeType":"VariableDeclaration","scope":6470,"src":"4337:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6468,"name":"uint8","nodeType":"ElementaryTypeName","src":"4337:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"SignatureParts","nameLocation":"4274:14:34","nodeType":"StructDefinition","scope":6962,"src":"4267:84:34","visibility":"public"},{"baseFunctions":[4292],"body":{"id":6503,"nodeType":"Block","src":"4716:217:34","statements":[{"expression":{"arguments":[{"id":6493,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"4739:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval calldata[] calldata"}},{"id":6494,"name":"permitSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"4752:16:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},{"id":6495,"name":"permit2Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"4770:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitBatch calldata"}},{"id":6496,"name":"permit2Signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"4784:16:34","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval calldata[] calldata"},{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"},{"typeIdentifier":"t_struct$_PermitBatch_$2967_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitBatch calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6492,"name":"_permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"4726:12:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$_t_struct$_PermitBatch_$2967_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct IRouterCommon.PermitApproval calldata[] calldata,bytes calldata[] calldata,struct IAllowanceTransfer.PermitBatch calldata,bytes calldata)"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4726:75:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6498,"nodeType":"ExpressionStatement","src":"4726:75:34"},{"expression":{"arguments":[{"id":6500,"name":"multicallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"4912:13:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"id":6499,"name":"multicall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"4902:9:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes calldata[] calldata) returns (bytes memory[] memory)"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4902:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":6491,"id":6502,"nodeType":"Return","src":"4895:31:34"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"4357:29:34","text":"@inheritdoc IRouterCommon"},"functionSelector":"19c6989f","id":6504,"implemented":true,"kind":"function","modifiers":[],"name":"permitBatchAndCall","nameLocation":"4400:18:34","nodeType":"FunctionDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"permitBatch","nameLocation":"4454:11:34","nodeType":"VariableDeclaration","scope":6504,"src":"4428:37:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval[]"},"typeName":{"baseType":{"id":6473,"nodeType":"UserDefinedTypeName","pathNode":{"id":6472,"name":"PermitApproval","nameLocations":["4428:14:34"],"nodeType":"IdentifierPath","referencedDeclaration":4270,"src":"4428:14:34"},"referencedDeclaration":4270,"src":"4428:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_storage_ptr","typeString":"struct IRouterCommon.PermitApproval"}},"id":6474,"nodeType":"ArrayTypeName","src":"4428:16:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_storage_$dyn_storage_ptr","typeString":"struct IRouterCommon.PermitApproval[]"}},"visibility":"internal"},{"constant":false,"id":6478,"mutability":"mutable","name":"permitSignatures","nameLocation":"4492:16:34","nodeType":"VariableDeclaration","scope":6504,"src":"4475:33:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6476,"name":"bytes","nodeType":"ElementaryTypeName","src":"4475:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6477,"nodeType":"ArrayTypeName","src":"4475:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":6481,"mutability":"mutable","name":"permit2Batch","nameLocation":"4558:12:34","nodeType":"VariableDeclaration","scope":6504,"src":"4518:52:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":6480,"nodeType":"UserDefinedTypeName","pathNode":{"id":6479,"name":"IAllowanceTransfer.PermitBatch","nameLocations":["4518:18:34","4537:11:34"],"nodeType":"IdentifierPath","referencedDeclaration":2967,"src":"4518:30:34"},"referencedDeclaration":2967,"src":"4518:30:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"},{"constant":false,"id":6483,"mutability":"mutable","name":"permit2Signature","nameLocation":"4595:16:34","nodeType":"VariableDeclaration","scope":6504,"src":"4580:31:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6482,"name":"bytes","nodeType":"ElementaryTypeName","src":"4580:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6486,"mutability":"mutable","name":"multicallData","nameLocation":"4638:13:34","nodeType":"VariableDeclaration","scope":6504,"src":"4621:30:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6484,"name":"bytes","nodeType":"ElementaryTypeName","src":"4621:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6485,"nodeType":"ArrayTypeName","src":"4621:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4418:239:34"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"results","nameLocation":"4707:7:34","nodeType":"VariableDeclaration","scope":6504,"src":"4692:22:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6488,"name":"bytes","nodeType":"ElementaryTypeName","src":"4692:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6489,"nodeType":"ArrayTypeName","src":"4692:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4691:24:34"},"scope":6962,"src":"4391:542:34","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":6623,"nodeType":"Block","src":"5182:2566:34","statements":[{"expression":{"arguments":[{"expression":{"id":6524,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"5228:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval calldata[] calldata"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5240:6:34","memberName":"length","nodeType":"MemberAccess","src":"5228:18:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6526,"name":"permitSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"5248:16:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5265:6:34","memberName":"length","nodeType":"MemberAccess","src":"5248:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6521,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"5192:12:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$6137_$","typeString":"type(library InputHelpers)"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5205:22:34","memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":5870,"src":"5192:35:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:80:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6529,"nodeType":"ExpressionStatement","src":"5192:80:34"},{"body":{"id":6614,"nodeType":"Block","src":"5473:1322:34","statements":[{"assignments":[6542],"declarations":[{"constant":false,"id":6542,"mutability":"mutable","name":"signature","nameLocation":"5500:9:34","nodeType":"VariableDeclaration","scope":6614,"src":"5487:22:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6541,"name":"bytes","nodeType":"ElementaryTypeName","src":"5487:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6546,"initialValue":{"baseExpression":{"id":6543,"name":"permitSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"5512:16:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6545,"indexExpression":{"id":6544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"5529:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5512:19:34","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"5487:44:34"},{"assignments":[6549],"declarations":[{"constant":false,"id":6549,"mutability":"mutable","name":"signatureParts","nameLocation":"5568:14:34","nodeType":"VariableDeclaration","scope":6614,"src":"5546:36:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts"},"typeName":{"id":6548,"nodeType":"UserDefinedTypeName","pathNode":{"id":6547,"name":"SignatureParts","nameLocations":["5546:14:34"],"nodeType":"IdentifierPath","referencedDeclaration":6470,"src":"5546:14:34"},"referencedDeclaration":6470,"src":"5546:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_storage_ptr","typeString":"struct RouterCommon.SignatureParts"}},"visibility":"internal"}],"id":6553,"initialValue":{"arguments":[{"id":6551,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"5604:9:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6550,"name":"_getSignatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"5585:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_SignatureParts_$6470_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RouterCommon.SignatureParts memory)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5585:29:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"nodeType":"VariableDeclarationStatement","src":"5546:68:34"},{"assignments":[6556],"declarations":[{"constant":false,"id":6556,"mutability":"mutable","name":"permitApproval","nameLocation":"5650:14:34","nodeType":"VariableDeclaration","scope":6614,"src":"5628:36:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval"},"typeName":{"id":6555,"nodeType":"UserDefinedTypeName","pathNode":{"id":6554,"name":"PermitApproval","nameLocations":["5628:14:34"],"nodeType":"IdentifierPath","referencedDeclaration":4270,"src":"5628:14:34"},"referencedDeclaration":4270,"src":"5628:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_storage_ptr","typeString":"struct IRouterCommon.PermitApproval"}},"visibility":"internal"}],"id":6560,"initialValue":{"baseExpression":{"id":6557,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"5667:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval calldata[] calldata"}},"id":6559,"indexExpression":{"id":6558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"5679:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5667:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval calldata"}},"nodeType":"VariableDeclarationStatement","src":"5628:53:34"},{"clauses":[{"block":{"id":6583,"nodeType":"Block","src":"6067:113:34","statements":[]},"errorName":"","id":6584,"nodeType":"TryCatchClause","src":"6067:113:34"},{"block":{"id":6611,"nodeType":"Block","src":"6213:572:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6593,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"6493:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6508:5:34","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4261,"src":"6493:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6597,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6523:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}],"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6515:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6595,"name":"address","nodeType":"ElementaryTypeName","src":"6515:7:34","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6515:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":6589,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"6461:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6476:5:34","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"6461:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6588,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6454:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$337_$","typeString":"type(contract IERC20)"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6454:28:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6483:9:34","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":314,"src":"6454:38:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6454:75:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6600,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"6533:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:34","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4265,"src":"6533:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6454:100:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6610,"nodeType":"IfStatement","src":"6429:342:34","trueBody":{"id":6609,"nodeType":"Block","src":"6573:198:34","statements":[{"expression":{"arguments":[{"id":6606,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"6741:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6603,"name":"RevertCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"6714:11:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RevertCodec_$6296_$","typeString":"type(library RevertCodec)"}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6726:14:34","memberName":"bubbleUpRevert","nodeType":"MemberAccess","referencedDeclaration":6295,"src":"6714:26:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6714:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6608,"nodeType":"ExpressionStatement","src":"6714:38:34"}]}}]},"errorName":"","id":6612,"nodeType":"TryCatchClause","parameters":{"id":6587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"mutability":"mutable","name":"returnData","nameLocation":"6201:10:34","nodeType":"VariableDeclaration","scope":6612,"src":"6188:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6585,"name":"bytes","nodeType":"ElementaryTypeName","src":"6188:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6187:25:34"},"src":"6181:604:34"}],"externalCall":{"arguments":[{"expression":{"id":6566,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"5779:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5794:5:34","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4261,"src":"5779:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6570,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5829:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}],"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5821:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6568,"name":"address","nodeType":"ElementaryTypeName","src":"5821:7:34","typeDescriptions":{}}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5821:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6572,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"5856:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5871:6:34","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":4265,"src":"5856:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6574,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"5899:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5914:8:34","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"5899:23:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6576,"name":"signatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"5944:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"id":6577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5959:1:34","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":6469,"src":"5944:16:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":6578,"name":"signatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"5982:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"id":6579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5997:1:34","memberName":"r","nodeType":"MemberAccess","referencedDeclaration":6465,"src":"5982:16:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6580,"name":"signatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"6020:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"id":6581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6035:1:34","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":6467,"src":"6020:16:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"expression":{"id":6562,"name":"permitApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"5729:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_memory_ptr","typeString":"struct IRouterCommon.PermitApproval memory"}},"id":6563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5744:5:34","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"5729:20:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6561,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5716:12:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$399_$","typeString":"type(contract IERC20Permit)"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:34:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$399","typeString":"contract IERC20Permit"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5751:6:34","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":384,"src":"5716:41:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:338:34","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6613,"nodeType":"TryStatement","src":"5696:1089:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"5444:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6535,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"5448:11:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval calldata[] calldata"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5460:6:34","memberName":"length","nodeType":"MemberAccess","src":"5448:18:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5444:22:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6615,"initializationExpression":{"assignments":[6531],"declarations":[{"constant":false,"id":6531,"mutability":"mutable","name":"i","nameLocation":"5437:1:34","nodeType":"VariableDeclaration","scope":6615,"src":"5429:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6530,"name":"uint256","nodeType":"ElementaryTypeName","src":"5429:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6533,"initialValue":{"hexValue":"30","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5441:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5429:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5468:3:34","subExpression":{"id":6538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"5470:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6540,"nodeType":"ExpressionStatement","src":"5468:3:34"},"nodeType":"ForStatement","src":"5424:1371:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6616,"name":"permit2Batch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"6866:12:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitBatch calldata"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:34","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"6866:20:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$2948_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitDetails calldata[] calldata"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6887:6:34","memberName":"length","nodeType":"MemberAccess","src":"6866:27:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6866:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"6862:880:34","trueBody":{"id":6621,"nodeType":"Block","src":"6899:843:34","statements":[]}}]},"id":6624,"implemented":true,"kind":"function","modifiers":[{"id":6519,"kind":"modifierInvocation","modifierName":{"id":6518,"name":"nonReentrant","nameLocations":["5169:12:34"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"5169:12:34"},"nodeType":"ModifierInvocation","src":"5169:12:34"}],"name":"_permitBatch","nameLocation":"4948:12:34","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"permitBatch","nameLocation":"4996:11:34","nodeType":"VariableDeclaration","scope":6624,"src":"4970:37:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IRouterCommon.PermitApproval[]"},"typeName":{"baseType":{"id":6506,"nodeType":"UserDefinedTypeName","pathNode":{"id":6505,"name":"PermitApproval","nameLocations":["4970:14:34"],"nodeType":"IdentifierPath","referencedDeclaration":4270,"src":"4970:14:34"},"referencedDeclaration":4270,"src":"4970:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitApproval_$4270_storage_ptr","typeString":"struct IRouterCommon.PermitApproval"}},"id":6507,"nodeType":"ArrayTypeName","src":"4970:16:34","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitApproval_$4270_storage_$dyn_storage_ptr","typeString":"struct IRouterCommon.PermitApproval[]"}},"visibility":"internal"},{"constant":false,"id":6511,"mutability":"mutable","name":"permitSignatures","nameLocation":"5034:16:34","nodeType":"VariableDeclaration","scope":6624,"src":"5017:33:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6509,"name":"bytes","nodeType":"ElementaryTypeName","src":"5017:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6510,"nodeType":"ArrayTypeName","src":"5017:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":6514,"mutability":"mutable","name":"permit2Batch","nameLocation":"5100:12:34","nodeType":"VariableDeclaration","scope":6624,"src":"5060:52:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_calldata_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":6513,"nodeType":"UserDefinedTypeName","pathNode":{"id":6512,"name":"IAllowanceTransfer.PermitBatch","nameLocations":["5060:18:34","5079:11:34"],"nodeType":"IdentifierPath","referencedDeclaration":2967,"src":"5060:30:34"},"referencedDeclaration":2967,"src":"5060:30:34","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$2967_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"},{"constant":false,"id":6516,"mutability":"mutable","name":"permit2Signature","nameLocation":"5137:16:34","nodeType":"VariableDeclaration","scope":6624,"src":"5122:31:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6515,"name":"bytes","nodeType":"ElementaryTypeName","src":"5122:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4960:199:34"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[],"src":"5182:0:34"},"scope":6962,"src":"4939:2809:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4302],"body":{"id":6675,"nodeType":"Block","src":"7923:216:34","statements":[{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6636,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"7933:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6640,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"7955:4:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7960:6:34","memberName":"length","nodeType":"MemberAccess","src":"7955:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7943:11:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":6637,"name":"bytes","nodeType":"ElementaryTypeName","src":"7947:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6638,"nodeType":"ArrayTypeName","src":"7947:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7943:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"7933:34:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":6644,"nodeType":"ExpressionStatement","src":"7933:34:34"},{"body":{"id":6671,"nodeType":"Block","src":"8019:90:34","statements":[{"expression":{"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6656,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"8033:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":6658,"indexExpression":{"id":6657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"8041:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8033:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6663,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8083:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}],"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8075:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6661,"name":"address","nodeType":"ElementaryTypeName","src":"8075:7:34","typeDescriptions":{}}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8075:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6665,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"8090:4:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6667,"indexExpression":{"id":6666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"8095:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8090:7:34","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6659,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"8046:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1069_$","typeString":"type(library Address)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8054:20:34","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":986,"src":"8046:28:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"8033:65:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6670,"nodeType":"ExpressionStatement","src":"8033:65:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"7997:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6650,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"8001:4:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8006:6:34","memberName":"length","nodeType":"MemberAccess","src":"8001:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:15:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6672,"initializationExpression":{"assignments":[6646],"declarations":[{"constant":false,"id":6646,"mutability":"mutable","name":"i","nameLocation":"7990:1:34","nodeType":"VariableDeclaration","scope":6672,"src":"7982:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6645,"name":"uint256","nodeType":"ElementaryTypeName","src":"7982:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6648,"initialValue":{"hexValue":"30","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7994:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7982:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8014:3:34","subExpression":{"id":6653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"8016:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6655,"nodeType":"ExpressionStatement","src":"8014:3:34"},"nodeType":"ForStatement","src":"7977:132:34"},{"expression":{"id":6673,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"8125:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":6635,"id":6674,"nodeType":"Return","src":"8118:14:34"}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"7754:29:34","text":"@inheritdoc IRouterCommon"},"functionSelector":"ac9650d8","id":6676,"implemented":true,"kind":"function","modifiers":[{"id":6631,"kind":"modifierInvocation","modifierName":{"id":6630,"name":"saveSenderAndManageEth","nameLocations":["7867:22:34"],"nodeType":"IdentifierPath","referencedDeclaration":6417,"src":"7867:22:34"},"nodeType":"ModifierInvocation","src":"7867:22:34"}],"name":"multicall","nameLocation":"7797:9:34","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6628,"mutability":"mutable","name":"data","nameLocation":"7833:4:34","nodeType":"VariableDeclaration","scope":6676,"src":"7816:21:34","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6626,"name":"bytes","nodeType":"ElementaryTypeName","src":"7816:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6627,"nodeType":"ArrayTypeName","src":"7816:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"7806:37:34"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"results","nameLocation":"7914:7:34","nodeType":"VariableDeclaration","scope":6676,"src":"7899:22:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6632,"name":"bytes","nodeType":"ElementaryTypeName","src":"7899:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6633,"nodeType":"ArrayTypeName","src":"7899:7:34","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"7898:24:34"},"scope":6962,"src":"7788:351:34","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":6712,"nodeType":"Block","src":"8257:399:34","statements":[{"assignments":[6685],"declarations":[{"constant":false,"id":6685,"mutability":"mutable","name":"r","nameLocation":"8275:1:34","nodeType":"VariableDeclaration","scope":6712,"src":"8267:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8267:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6686,"nodeType":"VariableDeclarationStatement","src":"8267:9:34"},{"assignments":[6688],"declarations":[{"constant":false,"id":6688,"mutability":"mutable","name":"s","nameLocation":"8294:1:34","nodeType":"VariableDeclaration","scope":6712,"src":"8286:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8286:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6689,"nodeType":"VariableDeclarationStatement","src":"8286:9:34"},{"assignments":[6691],"declarations":[{"constant":false,"id":6691,"mutability":"mutable","name":"v","nameLocation":"8311:1:34","nodeType":"VariableDeclaration","scope":6712,"src":"8305:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6690,"name":"uint8","nodeType":"ElementaryTypeName","src":"8305:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6692,"nodeType":"VariableDeclarationStatement","src":"8305:7:34"},{"AST":{"nativeSrc":"8404:155:34","nodeType":"YulBlock","src":"8404:155:34","statements":[{"nativeSrc":"8418:32:34","nodeType":"YulAssignment","src":"8418:32:34","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"8433:9:34","nodeType":"YulIdentifier","src":"8433:9:34"},{"kind":"number","nativeSrc":"8444:4:34","nodeType":"YulLiteral","src":"8444:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8429:3:34","nodeType":"YulIdentifier","src":"8429:3:34"},"nativeSrc":"8429:20:34","nodeType":"YulFunctionCall","src":"8429:20:34"}],"functionName":{"name":"mload","nativeSrc":"8423:5:34","nodeType":"YulIdentifier","src":"8423:5:34"},"nativeSrc":"8423:27:34","nodeType":"YulFunctionCall","src":"8423:27:34"},"variableNames":[{"name":"r","nativeSrc":"8418:1:34","nodeType":"YulIdentifier","src":"8418:1:34"}]},{"nativeSrc":"8463:32:34","nodeType":"YulAssignment","src":"8463:32:34","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"8478:9:34","nodeType":"YulIdentifier","src":"8478:9:34"},{"kind":"number","nativeSrc":"8489:4:34","nodeType":"YulLiteral","src":"8489:4:34","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"8474:3:34","nodeType":"YulIdentifier","src":"8474:3:34"},"nativeSrc":"8474:20:34","nodeType":"YulFunctionCall","src":"8474:20:34"}],"functionName":{"name":"mload","nativeSrc":"8468:5:34","nodeType":"YulIdentifier","src":"8468:5:34"},"nativeSrc":"8468:27:34","nodeType":"YulFunctionCall","src":"8468:27:34"},"variableNames":[{"name":"s","nativeSrc":"8463:1:34","nodeType":"YulIdentifier","src":"8463:1:34"}]},{"nativeSrc":"8508:41:34","nodeType":"YulAssignment","src":"8508:41:34","value":{"arguments":[{"kind":"number","nativeSrc":"8518:1:34","nodeType":"YulLiteral","src":"8518:1:34","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"8531:9:34","nodeType":"YulIdentifier","src":"8531:9:34"},{"kind":"number","nativeSrc":"8542:4:34","nodeType":"YulLiteral","src":"8542:4:34","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"8527:3:34","nodeType":"YulIdentifier","src":"8527:3:34"},"nativeSrc":"8527:20:34","nodeType":"YulFunctionCall","src":"8527:20:34"}],"functionName":{"name":"mload","nativeSrc":"8521:5:34","nodeType":"YulIdentifier","src":"8521:5:34"},"nativeSrc":"8521:27:34","nodeType":"YulFunctionCall","src":"8521:27:34"}],"functionName":{"name":"byte","nativeSrc":"8513:4:34","nodeType":"YulIdentifier","src":"8513:4:34"},"nativeSrc":"8513:36:34","nodeType":"YulFunctionCall","src":"8513:36:34"},"variableNames":[{"name":"v","nativeSrc":"8508:1:34","nodeType":"YulIdentifier","src":"8508:1:34"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6685,"isOffset":false,"isSlot":false,"src":"8418:1:34","valueSize":1},{"declaration":6688,"isOffset":false,"isSlot":false,"src":"8463:1:34","valueSize":1},{"declaration":6678,"isOffset":false,"isSlot":false,"src":"8433:9:34","valueSize":1},{"declaration":6678,"isOffset":false,"isSlot":false,"src":"8478:9:34","valueSize":1},{"declaration":6678,"isOffset":false,"isSlot":false,"src":"8531:9:34","valueSize":1},{"declaration":6691,"isOffset":false,"isSlot":false,"src":"8508:1:34","valueSize":1}],"flags":["memory-safe"],"id":6693,"nodeType":"InlineAssembly","src":"8379:180:34"},{"expression":{"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6694,"name":"signatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"8569:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"id":6696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8584:1:34","memberName":"r","nodeType":"MemberAccess","referencedDeclaration":6465,"src":"8569:16:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6697,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"8588:1:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8569:20:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6699,"nodeType":"ExpressionStatement","src":"8569:20:34"},{"expression":{"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6700,"name":"signatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"8599:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"id":6702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8614:1:34","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":6467,"src":"8599:16:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6703,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"8618:1:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8599:20:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6705,"nodeType":"ExpressionStatement","src":"8599:20:34"},{"expression":{"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6706,"name":"signatureParts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"8629:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts memory"}},"id":6708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8644:1:34","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":6469,"src":"8629:16:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6709,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"8648:1:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8629:20:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6711,"nodeType":"ExpressionStatement","src":"8629:20:34"}]},"id":6713,"implemented":true,"kind":"function","modifiers":[],"name":"_getSignatureParts","nameLocation":"8154:18:34","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"signature","nameLocation":"8186:9:34","nodeType":"VariableDeclaration","scope":6713,"src":"8173:22:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6677,"name":"bytes","nodeType":"ElementaryTypeName","src":"8173:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8172:24:34"},"returnParameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"signatureParts","nameLocation":"8241:14:34","nodeType":"VariableDeclaration","scope":6713,"src":"8219:36:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_memory_ptr","typeString":"struct RouterCommon.SignatureParts"},"typeName":{"id":6681,"nodeType":"UserDefinedTypeName","pathNode":{"id":6680,"name":"SignatureParts","nameLocations":["8219:14:34"],"nodeType":"IdentifierPath","referencedDeclaration":6470,"src":"8219:14:34"},"referencedDeclaration":6470,"src":"8219:14:34","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureParts_$6470_storage_ptr","typeString":"struct RouterCommon.SignatureParts"}},"visibility":"internal"}],"src":"8218:38:34"},"scope":6962,"src":"8145:511:34","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6748,"nodeType":"Block","src":"9383:539:34","statements":[{"assignments":[6720],"declarations":[{"constant":false,"id":6720,"mutability":"mutable","name":"excess","nameLocation":"9565:6:34","nodeType":"VariableDeclaration","scope":6748,"src":"9557:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9557:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6726,"initialValue":{"expression":{"arguments":[{"id":6723,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9582:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouterCommon_$6962","typeString":"contract RouterCommon"}],"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9574:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6721,"name":"address","nodeType":"ElementaryTypeName","src":"9574:7:34","typeDescriptions":{}}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9574:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:34","memberName":"balance","nodeType":"MemberAccess","src":"9574:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9557:38:34"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"excess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"9609:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9619:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9609:11:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6732,"nodeType":"IfStatement","src":"9605:48:34","trueBody":{"id":6731,"nodeType":"Block","src":"9622:31:34","statements":[{"functionReturnParameters":6718,"id":6730,"nodeType":"Return","src":"9636:7:34"}]}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6733,"name":"_isReturnEthLockedSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"9807:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function () view returns (StorageSlotExtension.BooleanSlotType)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9832:5:34","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"9807:30:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_BooleanSlotType_$7374_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType) view returns (bool)"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6739,"nodeType":"IfStatement","src":"9803:69:34","trueBody":{"id":6738,"nodeType":"Block","src":"9841:31:34","statements":[{"functionReturnParameters":6718,"id":6737,"nodeType":"Return","src":"9855:7:34"}]}},{"expression":{"arguments":[{"id":6745,"name":"excess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"9908:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6742,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9890:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9882:8:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6740,"name":"address","nodeType":"ElementaryTypeName","src":"9882:8:34","stateMutability":"payable","typeDescriptions":{}}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9882:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9898:9:34","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":867,"src":"9882:25:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9882:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6747,"nodeType":"ExpressionStatement","src":"9882:33:34"}]},"documentation":{"id":6714,"nodeType":"StructuredDocumentation","src":"8662:671:34","text":" @dev Returns excess ETH back to the contract caller. Checks for sufficient ETH balance are made right before\n each deposit, ensuring it will revert with a friendly custom error. If there is any balance remaining when\n `_returnEth` is called, return it to the sender.\n Because the caller might not know exactly how much ETH a Vault action will require, they may send extra.\n Note that this excess value is returned *to the contract caller* (msg.sender). If caller and e.g. swap sender\n are not the same (because the caller is a relayer for the sender), then it is up to the caller to manage this\n returned ETH."},"id":6749,"implemented":true,"kind":"function","modifiers":[],"name":"_returnEth","nameLocation":"9347:10:34","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"sender","nameLocation":"9366:6:34","nodeType":"VariableDeclaration","scope":6749,"src":"9358:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6715,"name":"address","nodeType":"ElementaryTypeName","src":"9358:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9357:16:34"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[],"src":"9383:0:34"},"scope":6962,"src":"9338:584:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6792,"nodeType":"Block","src":"10398:219:34","statements":[{"assignments":[6766],"declarations":[{"constant":false,"id":6766,"mutability":"mutable","name":"numTokens","nameLocation":"10416:9:34","nodeType":"VariableDeclaration","scope":6792,"src":"10408:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"10408:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6767,"nodeType":"VariableDeclarationStatement","src":"10408:17:34"},{"expression":{"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6768,"name":"numTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"10436:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6769,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"10447:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6770,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10435:23:34","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6773,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"10501:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6774,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"10507:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"expression":{"id":6771,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"10461:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10468:32:34","memberName":"getPoolTokenCountAndIndexOfToken","nodeType":"MemberAccess","referencedDeclaration":5762,"src":"10461:39:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_contract$_IERC20_$337_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,contract IERC20) view external returns (uint256,uint256)"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10461:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"10435:78:34","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6777,"nodeType":"ExpressionStatement","src":"10435:78:34"},{"expression":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6778,"name":"amountsGiven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"10523:12:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6782,"name":"numTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"10552:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10538:13:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6779,"name":"uint256","nodeType":"ElementaryTypeName","src":"10542:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6780,"nodeType":"ArrayTypeName","src":"10542:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10538:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"10523:39:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6785,"nodeType":"ExpressionStatement","src":"10523:39:34"},{"expression":{"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6786,"name":"amountsGiven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"10572:12:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6788,"indexExpression":{"id":6787,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"10585:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10572:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6789,"name":"amountGiven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"10599:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10572:38:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6791,"nodeType":"ExpressionStatement","src":"10572:38:34"}]},"documentation":{"id":6750,"nodeType":"StructuredDocumentation","src":"9928:269:34","text":" @dev Returns an array with `amountGiven` at `tokenIndex`, and 0 for every other index.\n The returned array length matches the number of tokens in the pool.\n Reverts if the given index is greater than or equal to the pool number of tokens."},"id":6793,"implemented":true,"kind":"function","modifiers":[],"name":"_getSingleInputArrayAndTokenIndex","nameLocation":"10211:33:34","nodeType":"FunctionDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"pool","nameLocation":"10262:4:34","nodeType":"VariableDeclaration","scope":6793,"src":"10254:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6751,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"token","nameLocation":"10283:5:34","nodeType":"VariableDeclaration","scope":6793,"src":"10276:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":6754,"nodeType":"UserDefinedTypeName","pathNode":{"id":6753,"name":"IERC20","nameLocations":["10276:6:34"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"10276:6:34"},"referencedDeclaration":337,"src":"10276:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6757,"mutability":"mutable","name":"amountGiven","nameLocation":"10306:11:34","nodeType":"VariableDeclaration","scope":6793,"src":"10298:19:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10298:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10244:79:34"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"amountsGiven","nameLocation":"10364:12:34","nodeType":"VariableDeclaration","scope":6793,"src":"10347:29:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"10347:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6760,"nodeType":"ArrayTypeName","src":"10347:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6763,"mutability":"mutable","name":"tokenIndex","nameLocation":"10386:10:34","nodeType":"VariableDeclaration","scope":6793,"src":"10378:18:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10378:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10346:51:34"},"scope":6962,"src":"10202:415:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6846,"nodeType":"Block","src":"10720:569:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6805,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"10800:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6806,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"10813:7:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6807,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"10824:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"src":"10813:16:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10800:29:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6844,"nodeType":"Block","src":"10902:381:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6818,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"10920:8:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10931:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10920:12:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6843,"nodeType":"IfStatement","src":"10916:357:34","trueBody":{"id":6842,"nodeType":"Block","src":"10934:339:34","statements":[{"expression":{"arguments":[{"id":6825,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"11162:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6828,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11178:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}],"id":6827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11170:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6826,"name":"address","nodeType":"ElementaryTypeName","src":"11170:7:34","typeDescriptions":{}}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11170:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6830,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"11187:8:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11196:9:34","memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"11187:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11187:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"arguments":[{"id":6822,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"11140:7:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":6821,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"11133:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$337_$","typeString":"type(contract IERC20)"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:15:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11149:12:34","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":336,"src":"11133:28:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:75:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6834,"nodeType":"ExpressionStatement","src":"11133:75:34"},{"expression":{"arguments":[{"id":6838,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"11240:7:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":6839,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"11249:8:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6835,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11226:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11233:6:34","memberName":"settle","nodeType":"MemberAccess","referencedDeclaration":5697,"src":"11226:13:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract IERC20,uint256) external returns (uint256)"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11226:32:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6841,"nodeType":"ExpressionStatement","src":"11226:32:34"}]}}]},"id":6845,"nodeType":"IfStatement","src":"10796:487:34","trueBody":{"id":6817,"nodeType":"Block","src":"10831:65:34","statements":[{"expression":{"arguments":[{"id":6813,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"10868:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},{"id":6814,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"10876:8:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6810,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"10845:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10851:16:34","memberName":"wrapEthAndSettle","nodeType":"MemberAccess","referencedDeclaration":7038,"src":"10845:22:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$5836_$_t_contract$_IVault_$4357_$_t_uint256_$returns$__$attached_to$_t_contract$_IWETH_$5836_$","typeString":"function (contract IWETH,contract IVault,uint256)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:40:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6816,"nodeType":"ExpressionStatement","src":"10845:40:34"}]}}]},"id":6847,"implemented":true,"kind":"function","modifiers":[],"name":"_takeTokenIn","nameLocation":"10632:12:34","nodeType":"FunctionDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"sender","nameLocation":"10653:6:34","nodeType":"VariableDeclaration","scope":6847,"src":"10645:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6794,"name":"address","nodeType":"ElementaryTypeName","src":"10645:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6798,"mutability":"mutable","name":"tokenIn","nameLocation":"10668:7:34","nodeType":"VariableDeclaration","scope":6847,"src":"10661:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":6797,"nodeType":"UserDefinedTypeName","pathNode":{"id":6796,"name":"IERC20","nameLocations":["10661:6:34"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"10661:6:34"},"referencedDeclaration":337,"src":"10661:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6800,"mutability":"mutable","name":"amountIn","nameLocation":"10685:8:34","nodeType":"VariableDeclaration","scope":6847,"src":"10677:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"10677:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6802,"mutability":"mutable","name":"wethIsEth","nameLocation":"10700:9:34","nodeType":"VariableDeclaration","scope":6847,"src":"10695:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6801,"name":"bool","nodeType":"ElementaryTypeName","src":"10695:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10644:66:34"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[],"src":"10720:0:34"},"scope":6962,"src":"10623:666:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"11395:389:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"11409:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11409:14:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6864,"nodeType":"IfStatement","src":"11405:51:34","trueBody":{"id":6863,"nodeType":"Block","src":"11425:31:34","statements":[{"functionReturnParameters":6858,"id":6862,"nodeType":"Return","src":"11439:7:34"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6865,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"11539:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"11552:8:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6867,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"11564:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"src":"11552:17:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11539:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6887,"nodeType":"Block","src":"11664:114:34","statements":[{"expression":{"arguments":[{"id":6882,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"11739:8:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":6883,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"11749:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6884,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"11757:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6879,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11725:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11732:6:34","memberName":"sendTo","nodeType":"MemberAccess","referencedDeclaration":5708,"src":"11725:13:34","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256) external"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11725:42:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6886,"nodeType":"ExpressionStatement","src":"11725:42:34"}]},"id":6888,"nodeType":"IfStatement","src":"11535:243:34","trueBody":{"id":6878,"nodeType":"Block","src":"11571:87:34","statements":[{"expression":{"arguments":[{"id":6873,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11621:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},{"id":6874,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"11629:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6875,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"11637:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6870,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"11585:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11591:29:34","memberName":"unwrapWethAndTransferToSender","nodeType":"MemberAccess","referencedDeclaration":7077,"src":"11585:35:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$5836_$_t_contract$_IVault_$4357_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IWETH_$5836_$","typeString":"function (contract IWETH,contract IVault,address,uint256)"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:62:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6877,"nodeType":"ExpressionStatement","src":"11585:62:34"}]}}]},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"_sendTokenOut","nameLocation":"11304:13:34","nodeType":"FunctionDefinition","parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"sender","nameLocation":"11326:6:34","nodeType":"VariableDeclaration","scope":6890,"src":"11318:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6848,"name":"address","nodeType":"ElementaryTypeName","src":"11318:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6852,"mutability":"mutable","name":"tokenOut","nameLocation":"11341:8:34","nodeType":"VariableDeclaration","scope":6890,"src":"11334:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":6851,"nodeType":"UserDefinedTypeName","pathNode":{"id":6850,"name":"IERC20","nameLocations":["11334:6:34"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"11334:6:34"},"referencedDeclaration":337,"src":"11334:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6854,"mutability":"mutable","name":"amountOut","nameLocation":"11359:9:34","nodeType":"VariableDeclaration","scope":6890,"src":"11351:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"11351:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6856,"mutability":"mutable","name":"wethIsEth","nameLocation":"11375:9:34","nodeType":"VariableDeclaration","scope":6890,"src":"11370:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6855,"name":"bool","nodeType":"ElementaryTypeName","src":"11370:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11317:68:34"},"returnParameters":{"id":6858,"nodeType":"ParameterList","parameters":[],"src":"11395:0:34"},"scope":6962,"src":"11295:489:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6932,"nodeType":"Block","src":"11880:216:34","statements":[{"assignments":[6899],"declarations":[{"constant":false,"id":6899,"mutability":"mutable","name":"numTokens","nameLocation":"11898:9:34","nodeType":"VariableDeclaration","scope":6932,"src":"11890:17:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6898,"name":"uint256","nodeType":"ElementaryTypeName","src":"11890:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6905,"initialValue":{"expression":{"arguments":[{"id":6902,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6892,"src":"11931:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6900,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11910:6:34","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11917:13:34","memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"11910:20:34","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$","typeString":"function (address) view external returns (contract IERC20[] memory)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11910:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11937:6:34","memberName":"length","nodeType":"MemberAccess","src":"11910:33:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11890:53:34"},{"expression":{"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6906,"name":"maxLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"11953:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6910,"name":"numTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"11979:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11965:13:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"11969:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6908,"nodeType":"ArrayTypeName","src":"11969:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11965:24:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"11953:36:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6913,"nodeType":"ExpressionStatement","src":"11953:36:34"},{"body":{"id":6930,"nodeType":"Block","src":"12039:51:34","statements":[{"expression":{"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6924,"name":"maxLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"12053:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6926,"indexExpression":{"id":6925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"12063:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12053:12:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6927,"name":"_MAX_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"12068:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12053:26:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6929,"nodeType":"ExpressionStatement","src":"12053:26:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"12019:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6919,"name":"numTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"12023:9:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12019:13:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6931,"initializationExpression":{"assignments":[6915],"declarations":[{"constant":false,"id":6915,"mutability":"mutable","name":"i","nameLocation":"12012:1:34","nodeType":"VariableDeclaration","scope":6931,"src":"12004:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"12004:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6917,"initialValue":{"hexValue":"30","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12016:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12004:13:34"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12034:3:34","subExpression":{"id":6921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"12036:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6923,"nodeType":"ExpressionStatement","src":"12034:3:34"},"nodeType":"ForStatement","src":"11999:91:34"}]},"id":6933,"implemented":true,"kind":"function","modifiers":[],"name":"_maxTokenLimits","nameLocation":"11799:15:34","nodeType":"FunctionDefinition","parameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"pool","nameLocation":"11823:4:34","nodeType":"VariableDeclaration","scope":6933,"src":"11815:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6891,"name":"address","nodeType":"ElementaryTypeName","src":"11815:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11814:14:34"},"returnParameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"maxLimits","nameLocation":"11869:9:34","nodeType":"VariableDeclaration","scope":6933,"src":"11852:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"11852:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6895,"nodeType":"ArrayTypeName","src":"11852:9:34","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11851:28:34"},"scope":6962,"src":"11790:306:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6943,"nodeType":"Block","src":"12197:62:34","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6939,"name":"_IS_RETURN_ETH_LOCKED_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"12214:26:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12241:9:34","memberName":"asBoolean","nodeType":"MemberAccess","referencedDeclaration":7389,"src":"12214:36:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:38:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"functionReturnParameters":6938,"id":6942,"nodeType":"Return","src":"12207:45:34"}]},"id":6944,"implemented":true,"kind":"function","modifiers":[],"name":"_isReturnEthLockedSlot","nameLocation":"12111:22:34","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[],"src":"12133:2:34"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6944,"src":"12159:36:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"},"typeName":{"id":6936,"nodeType":"UserDefinedTypeName","pathNode":{"id":6935,"name":"StorageSlotExtension.BooleanSlotType","nameLocations":["12159:20:34","12180:15:34"],"nodeType":"IdentifierPath","referencedDeclaration":7374,"src":"12159:36:34"},"referencedDeclaration":7374,"src":"12159:36:34","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"visibility":"internal"}],"src":"12158:38:34"},"scope":6962,"src":"12102:157:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6960,"nodeType":"Block","src":"12957:95:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12971:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12975:6:34","memberName":"sender","nodeType":"MemberAccess","src":"12971:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":6952,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"12993:5:34","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}],"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12985:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6950,"name":"address","nodeType":"ElementaryTypeName","src":"12985:7:34","typeDescriptions":{}}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12985:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12971:28:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6959,"nodeType":"IfStatement","src":"12967:79:34","trueBody":{"id":6958,"nodeType":"Block","src":"13001:45:34","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6955,"name":"EthTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"13022:11:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6957,"nodeType":"RevertStatement","src":"13015:20:34"}]}}]},"documentation":{"id":6945,"nodeType":"StructuredDocumentation","src":"12265:660:34","text":" @dev Enables the Router to receive ETH. This is required for it to be able to unwrap WETH, which sends ETH to the\n caller.\n Any ETH sent to the Router outside of the WETH unwrapping mechanism would be forever locked inside the Router, so\n we prevent that from happening. Other mechanisms used to send ETH to the Router (such as being the recipient of\n an ETH swap, Pool exit or withdrawal, contract self-destruction, or receiving the block mining reward) will\n result in locked funds, but are not otherwise a security or soundness issue. This check only exists as an attempt\n to prevent user error."},"id":6961,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[],"src":"12937:2:34"},"returnParameters":{"id":6947,"nodeType":"ParameterList","parameters":[],"src":"12957:0:34"},"scope":6962,"src":"12930:122:34","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":6963,"src":"1678:11376:34","usedErrors":[820,1079,1082,4309,4312,5845,6150,6217],"usedEvents":[]}],"src":"46:13009:34"},"id":34},"contracts/RouterWethLib.sol":{"ast":{"absolutePath":"contracts/RouterWethLib.sol","exportedSymbols":{"Address":[1069],"IERC20":[337],"IVault":[4357],"IWETH":[5836],"RouterWethLib":[7078],"SafeERC20":[810],"StorageSlotExtension":[7551],"TransientStorageHelpers":[8145]},"id":7079,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6964,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:35"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":811,"src":"72:84:35","symbolAliases":[{"foreign":{"id":6965,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"81:9:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":338,"src":"157:72:35","symbolAliases":[{"foreign":{"id":6967,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"166:6:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":6970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":1070,"src":"230:68:35","symbolAliases":[{"foreign":{"id":6969,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"239:7:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IWETH.sol","file":"./IWETH.sol","id":6972,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":5837,"src":"300:36:35","symbolAliases":[{"foreign":{"id":6971,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"309:5:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":6974,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":4358,"src":"337:38:35","symbolAliases":[{"foreign":{"id":6973,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"346:6:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/StorageSlotExtension.sol","file":"./StorageSlotExtension.sol","id":6976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":7552,"src":"377:66:35","symbolAliases":[{"foreign":{"id":6975,"name":"StorageSlotExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"386:20:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/TransientStorageHelpers.sol","file":"./TransientStorageHelpers.sol","id":6978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7079,"sourceUnit":8146,"src":"444:76:35","symbolAliases":[{"foreign":{"id":6977,"name":"TransientStorageHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"457:23:35","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RouterWethLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7078,"linearizedBaseContracts":[7078],"name":"RouterWethLib","nameLocation":"530:13:35","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6981,"libraryName":{"id":6979,"name":"Address","nameLocations":["556:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"556:7:35"},"nodeType":"UsingForDirective","src":"550:34:35","typeName":{"id":6980,"name":"address","nodeType":"ElementaryTypeName","src":"568:15:35","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"global":false,"id":6983,"libraryName":{"id":6982,"name":"StorageSlotExtension","nameLocations":["595:20:35"],"nodeType":"IdentifierPath","referencedDeclaration":7551,"src":"595:20:35"},"nodeType":"UsingForDirective","src":"589:33:35"},{"global":false,"id":6987,"libraryName":{"id":6984,"name":"SafeERC20","nameLocations":["633:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":810,"src":"633:9:35"},"nodeType":"UsingForDirective","src":"627:26:35","typeName":{"id":6986,"nodeType":"UserDefinedTypeName","pathNode":{"id":6985,"name":"IWETH","nameLocations":["647:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"647:5:35"},"referencedDeclaration":5836,"src":"647:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}},{"documentation":{"id":6988,"nodeType":"StructuredDocumentation","src":"659:78:35","text":"@notice The amount of ETH paid is insufficient to complete this operation."},"errorSelector":"a01a9df6","id":6990,"name":"InsufficientEth","nameLocation":"748:15:35","nodeType":"ErrorDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[],"src":"763:2:35"},"src":"742:24:35"},{"body":{"id":7037,"nodeType":"Block","src":"857:363:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7003,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"879:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_RouterWethLib_$7078","typeString":"library RouterWethLib"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouterWethLib_$7078","typeString":"library RouterWethLib"}],"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"871:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7001,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:35","typeDescriptions":{}}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"871:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"885:7:35","memberName":"balance","nodeType":"MemberAccess","src":"871:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7006,"name":"amountToSettle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"895:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"871:38:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7012,"nodeType":"IfStatement","src":"867:93:35","trueBody":{"id":7011,"nodeType":"Block","src":"911:49:35","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7008,"name":"InsufficientEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"932:15:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:17:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7010,"nodeType":"RevertStatement","src":"925:24:35"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":7013,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"1004:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1009:7:35","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"1004:12:35","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7016,"name":"amountToSettle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"1025:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1004:37:35","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1004:39:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7019,"nodeType":"ExpressionStatement","src":"1004:39:35"},{"expression":{"arguments":[{"arguments":[{"id":7025,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"1110:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}],"id":7024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1102:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7023,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:35","typeDescriptions":{}}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:14:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7027,"name":"amountToSettle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"1118:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7020,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"1084:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1089:12:35","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":446,"src":"1084:17:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$337_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1084:49:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7029,"nodeType":"ExpressionStatement","src":"1084:49:35"},{"expression":{"arguments":[{"id":7033,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"1192:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},{"id":7034,"name":"amountToSettle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"1198:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7030,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"1179:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1185:6:35","memberName":"settle","nodeType":"MemberAccess","referencedDeclaration":5697,"src":"1179:12:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract IERC20,uint256) external returns (uint256)"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1179:34:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7036,"nodeType":"ExpressionStatement","src":"1179:34:35"}]},"id":7038,"implemented":true,"kind":"function","modifiers":[],"name":"wrapEthAndSettle","nameLocation":"781:16:35","nodeType":"FunctionDefinition","parameters":{"id":6999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"weth","nameLocation":"804:4:35","nodeType":"VariableDeclaration","scope":7038,"src":"798:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":6992,"nodeType":"UserDefinedTypeName","pathNode":{"id":6991,"name":"IWETH","nameLocations":["798:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"798:5:35"},"referencedDeclaration":5836,"src":"798:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":6996,"mutability":"mutable","name":"vault","nameLocation":"817:5:35","nodeType":"VariableDeclaration","scope":7038,"src":"810:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":6995,"nodeType":"UserDefinedTypeName","pathNode":{"id":6994,"name":"IVault","nameLocations":["810:6:35"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"810:6:35"},"referencedDeclaration":4357,"src":"810:6:35","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":6998,"mutability":"mutable","name":"amountToSettle","nameLocation":"832:14:35","nodeType":"VariableDeclaration","scope":7038,"src":"824:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6997,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"797:50:35"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[],"src":"857:0:35"},"scope":7078,"src":"772:448:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7076,"nodeType":"Block","src":"1338:253:35","statements":[{"expression":{"arguments":[{"id":7054,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"1400:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},{"arguments":[{"id":7057,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1414:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_RouterWethLib_$7078","typeString":"library RouterWethLib"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouterWethLib_$7078","typeString":"library RouterWethLib"}],"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1406:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7055,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:35","typeDescriptions":{}}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7059,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"1421:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7051,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"1387:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1393:6:35","memberName":"sendTo","nodeType":"MemberAccess","referencedDeclaration":5708,"src":"1387:12:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256) external"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1387:47:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7061,"nodeType":"ExpressionStatement","src":"1387:47:35"},{"expression":{"arguments":[{"id":7065,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"1491:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7062,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"1477:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1482:8:35","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":5835,"src":"1477:13:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1477:27:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7067,"nodeType":"ExpressionStatement","src":"1477:27:35"},{"expression":{"arguments":[{"id":7073,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"1571:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7070,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"1553:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1545:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7068,"name":"address","nodeType":"ElementaryTypeName","src":"1545:8:35","stateMutability":"payable","typeDescriptions":{}}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:15:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1561:9:35","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":867,"src":"1545:25:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:39:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7075,"nodeType":"ExpressionStatement","src":"1545:39:35"}]},"id":7077,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapWethAndTransferToSender","nameLocation":"1235:29:35","nodeType":"FunctionDefinition","parameters":{"id":7049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"weth","nameLocation":"1271:4:35","nodeType":"VariableDeclaration","scope":7077,"src":"1265:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":7040,"nodeType":"UserDefinedTypeName","pathNode":{"id":7039,"name":"IWETH","nameLocations":["1265:5:35"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"1265:5:35"},"referencedDeclaration":5836,"src":"1265:5:35","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":7044,"mutability":"mutable","name":"vault","nameLocation":"1284:5:35","nodeType":"VariableDeclaration","scope":7077,"src":"1277:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":7043,"nodeType":"UserDefinedTypeName","pathNode":{"id":7042,"name":"IVault","nameLocations":["1277:6:35"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"1277:6:35"},"referencedDeclaration":4357,"src":"1277:6:35","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":7046,"mutability":"mutable","name":"sender","nameLocation":"1299:6:35","nodeType":"VariableDeclaration","scope":7077,"src":"1291:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7045,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7048,"mutability":"mutable","name":"amountToSend","nameLocation":"1315:12:35","nodeType":"VariableDeclaration","scope":7077,"src":"1307:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1264:64:35"},"returnParameters":{"id":7050,"nodeType":"ParameterList","parameters":[],"src":"1338:0:35"},"scope":7078,"src":"1226:365:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7079,"src":"522:1071:35","usedErrors":[6990],"usedEvents":[]}],"src":"46:1548:35"},"id":35},"contracts/SenderGuard.sol":{"ast":{"absolutePath":"contracts/SenderGuard.sol","exportedSymbols":{"ISenderGuard":[4319],"IVault":[4357],"IWETH":[5836],"SenderGuard":[7208],"StorageSlotExtension":[7551],"TransientStorageHelpers":[8145]},"id":7209,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":7080,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:36"},{"absolutePath":"contracts/IWETH.sol","file":"./IWETH.sol","id":7082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7209,"sourceUnit":5837,"src":"72:36:36","symbolAliases":[{"foreign":{"id":7081,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"81:5:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/ISenderGuard.sol","file":"./ISenderGuard.sol","id":7084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7209,"sourceUnit":4320,"src":"109:50:36","symbolAliases":[{"foreign":{"id":7083,"name":"ISenderGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"118:12:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":7086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7209,"sourceUnit":4358,"src":"160:38:36","symbolAliases":[{"foreign":{"id":7085,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"169:6:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/StorageSlotExtension.sol","file":"./StorageSlotExtension.sol","id":7088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7209,"sourceUnit":7552,"src":"200:66:36","symbolAliases":[{"foreign":{"id":7087,"name":"StorageSlotExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"209:20:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/TransientStorageHelpers.sol","file":"./TransientStorageHelpers.sol","id":7090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7209,"sourceUnit":8146,"src":"267:76:36","symbolAliases":[{"foreign":{"id":7089,"name":"TransientStorageHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"280:23:36","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7092,"name":"ISenderGuard","nameLocations":["753:12:36"],"nodeType":"IdentifierPath","referencedDeclaration":4319,"src":"753:12:36"},"id":7093,"nodeType":"InheritanceSpecifier","src":"753:12:36"}],"canonicalName":"SenderGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":7091,"nodeType":"StructuredDocumentation","src":"345:374:36","text":" @notice Abstract base contract for functions shared among all Routers.\n @dev Common functionality includes access to the sender (which would normally be obscured, since msg.sender in the\n Vault is the Router contract itself, not the account that invoked the Router), versioning, and the external\n invocation functions (`permitBatchAndCall` and `multicall`)."},"fullyImplemented":true,"id":7208,"linearizedBaseContracts":[7208,4319],"name":"SenderGuard","nameLocation":"738:11:36","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7095,"libraryName":{"id":7094,"name":"StorageSlotExtension","nameLocations":["778:20:36"],"nodeType":"IdentifierPath","referencedDeclaration":7551,"src":"778:20:36"},"nodeType":"UsingForDirective","src":"772:33:36"},{"constant":false,"id":7105,"mutability":"immutable","name":"_SENDER_SLOT","nameLocation":"1226:12:36","nodeType":"VariableDeclaration","scope":7208,"src":"1200:112:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1200:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"expression":{"arguments":[{"id":7100,"name":"SenderGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"1284:11:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SenderGuard_$7208_$","typeString":"type(contract SenderGuard)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_SenderGuard_$7208_$","typeString":"type(contract SenderGuard)"}],"id":7099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1279:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:17:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_SenderGuard_$7208","typeString":"type(contract SenderGuard)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1297:4:36","memberName":"name","nodeType":"MemberAccess","src":"1279:22:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"73656e646572","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1303:8:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_168e92ce035ba45e59a0314b0ed9a9e619b284aed8f6e5ab0a596efd5c9f5cf9","typeString":"literal_string \"sender\""},"value":"sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_168e92ce035ba45e59a0314b0ed9a9e619b284aed8f6e5ab0a596efd5c9f5cf9","typeString":"literal_string \"sender\""}],"expression":{"id":7097,"name":"TransientStorageHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"1241:23:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransientStorageHelpers_$8145_$","typeString":"type(library TransientStorageHelpers)"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1265:13:36","memberName":"calculateSlot","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"1241:37:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory,string memory) pure returns (bytes32)"}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1241:71:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":7112,"mutability":"constant","name":"_MAX_AMOUNT","nameLocation":"1560:11:36","nodeType":"VariableDeclaration","scope":7208,"src":"1534:57:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1579:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7108,"name":"uint128","nodeType":"ElementaryTypeName","src":"1579:7:36","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1574:4:36","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1574:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1588:3:36","memberName":"max","nodeType":"MemberAccess","src":"1574:17:36","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"body":{"id":7128,"nodeType":"Block","src":"3319:123:36","statements":[{"assignments":[7118],"declarations":[{"constant":false,"id":7118,"mutability":"mutable","name":"isExternalSender","nameLocation":"3334:16:36","nodeType":"VariableDeclaration","scope":7128,"src":"3329:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7117,"name":"bool","nodeType":"ElementaryTypeName","src":"3329:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7122,"initialValue":{"arguments":[{"id":7120,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"3365:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7119,"name":"_saveSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"3353:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:19:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3329:43:36"},{"id":7123,"nodeType":"PlaceholderStatement","src":"3382:1:36"},{"expression":{"arguments":[{"id":7125,"name":"isExternalSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"3418:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7124,"name":"_discardSenderIfRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3393:24:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7127,"nodeType":"ExpressionStatement","src":"3393:42:36"}]},"documentation":{"id":7113,"nodeType":"StructuredDocumentation","src":"1598:1680:36","text":" @notice Saves the user or contract that initiated the current operation.\n @dev It is possible to nest router calls (e.g., with reentrant hooks), but the sender returned by the Router's\n `getSender` function will always be the \"outermost\" caller. Some transactions require the Router to identify\n multiple senders. Consider the following example:\n - ContractA has a function that calls the Router, then calls ContractB with the output. ContractB in turn\n calls back into the Router.\n - Imagine further that ContractA is a pool with a \"before\" hook that also calls the Router.\n When the user calls the function on ContractA, there are three calls to the Router in the same transaction:\n - 1st call: When ContractA calls the Router directly, to initiate an operation on the pool (say, a swap).\n             (Sender is contractA, initiator of the operation.)\n - 2nd call: When the pool operation invokes a hook (say onBeforeSwap), which calls back into the Router.\n             This is a \"nested\" call within the original pool operation. The nested call returns, then the\n             before hook returns, the Router completes the operation, and finally returns back to ContractA\n             with the result (e.g., a calculated amount of tokens).\n             (Nested call; sender is still ContractA through all of this.)\n - 3rd call: When the first operation is complete, ContractA calls ContractB, which in turn calls the Router.\n             (Not nested, as the original router call from contractA has returned. Sender is now ContractB.)"},"id":7129,"name":"saveSender","nameLocation":"3292:10:36","nodeType":"ModifierDefinition","parameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"sender","nameLocation":"3311:6:36","nodeType":"VariableDeclaration","scope":7129,"src":"3303:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7114,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3302:16:36"},"src":"3283:159:36","virtual":false,"visibility":"internal"},{"body":{"id":7161,"nodeType":"Block","src":"3526:273:36","statements":[{"assignments":[7137],"declarations":[{"constant":false,"id":7137,"mutability":"mutable","name":"savedSender","nameLocation":"3544:11:36","nodeType":"VariableDeclaration","scope":7161,"src":"3536:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7136,"name":"address","nodeType":"ElementaryTypeName","src":"3536:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7142,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7138,"name":"_getSenderSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"3558:14:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function () view returns (StorageSlotExtension.AddressSlotType)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:5:36","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"3558:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressSlotType_$7357_$returns$_t_address_$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType) view returns (address)"}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3536:46:36"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7143,"name":"savedSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"3673:11:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3696:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3688:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7144,"name":"address","nodeType":"ElementaryTypeName","src":"3688:7:36","typeDescriptions":{}}},"id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3688:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3673:25:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7160,"nodeType":"IfStatement","src":"3669:124:36","trueBody":{"id":7159,"nodeType":"Block","src":"3700:93:36","statements":[{"expression":{"arguments":[{"id":7152,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"3738:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7149,"name":"_getSenderSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"3714:14:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function () view returns (StorageSlotExtension.AddressSlotType)"}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3731:6:36","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"3714:23:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_AddressSlotType_$7357_$_t_address_$returns$__$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType,address)"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:31:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7154,"nodeType":"ExpressionStatement","src":"3714:31:36"},{"expression":{"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7155,"name":"isExternalSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"3759:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3778:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3759:23:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7158,"nodeType":"ExpressionStatement","src":"3759:23:36"}]}}]},"id":7162,"implemented":true,"kind":"function","modifiers":[],"name":"_saveSender","nameLocation":"3457:11:36","nodeType":"FunctionDefinition","parameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"sender","nameLocation":"3477:6:36","nodeType":"VariableDeclaration","scope":7162,"src":"3469:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7130,"name":"address","nodeType":"ElementaryTypeName","src":"3469:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3468:16:36"},"returnParameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"mutability":"mutable","name":"isExternalSender","nameLocation":"3508:16:36","nodeType":"VariableDeclaration","scope":7162,"src":"3503:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7133,"name":"bool","nodeType":"ElementaryTypeName","src":"3503:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3502:23:36"},"scope":7208,"src":"3448:351:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7179,"nodeType":"Block","src":"3871:253:36","statements":[{"condition":{"id":7167,"name":"isExternalSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"4040:16:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7178,"nodeType":"IfStatement","src":"4036:82:36","trueBody":{"id":7177,"nodeType":"Block","src":"4058:60:36","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":7173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4104:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4096:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7171,"name":"address","nodeType":"ElementaryTypeName","src":"4096:7:36","typeDescriptions":{}}},"id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4096:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7168,"name":"_getSenderSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"4072:14:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function () view returns (StorageSlotExtension.AddressSlotType)"}},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4072:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4089:6:36","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"4072:23:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_AddressSlotType_$7357_$_t_address_$returns$__$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType,address)"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4072:35:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7176,"nodeType":"ExpressionStatement","src":"4072:35:36"}]}}]},"id":7180,"implemented":true,"kind":"function","modifiers":[],"name":"_discardSenderIfRequired","nameLocation":"3814:24:36","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"isExternalSender","nameLocation":"3844:16:36","nodeType":"VariableDeclaration","scope":7180,"src":"3839:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7163,"name":"bool","nodeType":"ElementaryTypeName","src":"3839:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3838:23:36"},"returnParameters":{"id":7166,"nodeType":"ParameterList","parameters":[],"src":"3871:0:36"},"scope":7208,"src":"3805:319:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7183,"nodeType":"Block","src":"4144:64:36","statements":[]},"id":7184,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7181,"nodeType":"ParameterList","parameters":[],"src":"4141:2:36"},"returnParameters":{"id":7182,"nodeType":"ParameterList","parameters":[],"src":"4144:0:36"},"scope":7208,"src":"4130:78:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4318],"body":{"id":7195,"nodeType":"Block","src":"4300:48:36","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7190,"name":"_getSenderSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7207,"src":"4317:14:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function () view returns (StorageSlotExtension.AddressSlotType)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:16:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4334:5:36","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"4317:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressSlotType_$7357_$returns$_t_address_$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType) view returns (address)"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7189,"id":7194,"nodeType":"Return","src":"4310:31:36"}]},"documentation":{"id":7185,"nodeType":"StructuredDocumentation","src":"4214:28:36","text":"@inheritdoc ISenderGuard"},"functionSelector":"5e01eb5a","id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"4256:9:36","nodeType":"FunctionDefinition","parameters":{"id":7186,"nodeType":"ParameterList","parameters":[],"src":"4265:2:36"},"returnParameters":{"id":7189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7196,"src":"4291:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7187,"name":"address","nodeType":"ElementaryTypeName","src":"4291:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4290:9:36"},"scope":7208,"src":"4247:101:36","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7206,"nodeType":"Block","src":"4441:48:36","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7202,"name":"_SENDER_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"4458:12:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4471:9:36","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"4458:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4458:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"functionReturnParameters":7201,"id":7205,"nodeType":"Return","src":"4451:31:36"}]},"id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"_getSenderSlot","nameLocation":"4363:14:36","nodeType":"FunctionDefinition","parameters":{"id":7197,"nodeType":"ParameterList","parameters":[],"src":"4377:2:36"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7207,"src":"4403:36:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"},"typeName":{"id":7199,"nodeType":"UserDefinedTypeName","pathNode":{"id":7198,"name":"StorageSlotExtension.AddressSlotType","nameLocations":["4403:20:36","4424:15:36"],"nodeType":"IdentifierPath","referencedDeclaration":7357,"src":"4403:36:36"},"referencedDeclaration":7357,"src":"4403:36:36","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"visibility":"internal"}],"src":"4402:38:36"},"scope":7208,"src":"4354:135:36","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7209,"src":"720:3771:36","usedErrors":[4309,4312],"usedEvents":[]}],"src":"46:4446:36"},"id":36},"contracts/SlotDerivation.sol":{"ast":{"absolutePath":"contracts/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[7338]},"id":7339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7210,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"277:24:37"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":7211,"nodeType":"StructuredDocumentation","src":"303:1348:37","text":" @notice Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns.\n @dev The derivation method for array and mapping matches the storage layout used by the solidity language/compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library."},"fullyImplemented":true,"id":7338,"linearizedBaseContracts":[7338],"name":"SlotDerivation","nameLocation":"1660:14:37","nodeType":"ContractDefinition","nodes":[{"body":{"id":7220,"nodeType":"Block","src":"1828:221:37","statements":[{"AST":{"nativeSrc":"1890:153:37","nodeType":"YulBlock","src":"1890:153:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1911:4:37","nodeType":"YulLiteral","src":"1911:4:37","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1935:9:37","nodeType":"YulIdentifier","src":"1935:9:37"},{"kind":"number","nativeSrc":"1946:4:37","nodeType":"YulLiteral","src":"1946:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1931:3:37","nodeType":"YulIdentifier","src":"1931:3:37"},"nativeSrc":"1931:20:37","nodeType":"YulFunctionCall","src":"1931:20:37"},{"arguments":[{"name":"namespace","nativeSrc":"1959:9:37","nodeType":"YulIdentifier","src":"1959:9:37"}],"functionName":{"name":"mload","nativeSrc":"1953:5:37","nodeType":"YulIdentifier","src":"1953:5:37"},"nativeSrc":"1953:16:37","nodeType":"YulFunctionCall","src":"1953:16:37"}],"functionName":{"name":"keccak256","nativeSrc":"1921:9:37","nodeType":"YulIdentifier","src":"1921:9:37"},"nativeSrc":"1921:49:37","nodeType":"YulFunctionCall","src":"1921:49:37"},{"kind":"number","nativeSrc":"1972:1:37","nodeType":"YulLiteral","src":"1972:1:37","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1917:3:37","nodeType":"YulIdentifier","src":"1917:3:37"},"nativeSrc":"1917:57:37","nodeType":"YulFunctionCall","src":"1917:57:37"}],"functionName":{"name":"mstore","nativeSrc":"1904:6:37","nodeType":"YulIdentifier","src":"1904:6:37"},"nativeSrc":"1904:71:37","nodeType":"YulFunctionCall","src":"1904:71:37"},"nativeSrc":"1904:71:37","nodeType":"YulExpressionStatement","src":"1904:71:37"},{"nativeSrc":"1988:45:37","nodeType":"YulAssignment","src":"1988:45:37","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2010:4:37","nodeType":"YulLiteral","src":"2010:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2016:4:37","nodeType":"YulLiteral","src":"2016:4:37","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2000:9:37","nodeType":"YulIdentifier","src":"2000:9:37"},"nativeSrc":"2000:21:37","nodeType":"YulFunctionCall","src":"2000:21:37"},{"arguments":[{"kind":"number","nativeSrc":"2027:4:37","nodeType":"YulLiteral","src":"2027:4:37","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"2023:3:37","nodeType":"YulIdentifier","src":"2023:3:37"},"nativeSrc":"2023:9:37","nodeType":"YulFunctionCall","src":"2023:9:37"}],"functionName":{"name":"and","nativeSrc":"1996:3:37","nodeType":"YulIdentifier","src":"1996:3:37"},"nativeSrc":"1996:37:37","nodeType":"YulFunctionCall","src":"1996:37:37"},"variableNames":[{"name":"slot","nativeSrc":"1988:4:37","nodeType":"YulIdentifier","src":"1988:4:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7214,"isOffset":false,"isSlot":false,"src":"1935:9:37","valueSize":1},{"declaration":7214,"isOffset":false,"isSlot":false,"src":"1959:9:37","valueSize":1},{"declaration":7217,"isOffset":false,"isSlot":false,"src":"1988:4:37","valueSize":1}],"id":7219,"nodeType":"InlineAssembly","src":"1881:162:37"}]},"documentation":{"id":7212,"nodeType":"StructuredDocumentation","src":"1681:59:37","text":"@dev Derive an ERC-7201 slot from a string (namespace)."},"id":7221,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1754:11:37","nodeType":"FunctionDefinition","parameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"namespace","nameLocation":"1780:9:37","nodeType":"VariableDeclaration","scope":7221,"src":"1766:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7213,"name":"string","nodeType":"ElementaryTypeName","src":"1766:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1765:25:37"},"returnParameters":{"id":7218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7217,"mutability":"mutable","name":"slot","nameLocation":"1822:4:37","nodeType":"VariableDeclaration","scope":7221,"src":"1814:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1814:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1813:14:37"},"scope":7338,"src":"1745:304:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7242,"nodeType":"Block","src":"2226:86:37","statements":[{"id":7241,"nodeType":"UncheckedBlock","src":"2236:70:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7235,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"2283:4:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2275:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2275:7:37","typeDescriptions":{}}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7237,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"2291:3:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2275:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2267:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2267:7:37","typeDescriptions":{}}},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:28:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7230,"id":7240,"nodeType":"Return","src":"2260:35:37"}]}]},"documentation":{"id":7222,"nodeType":"StructuredDocumentation","src":"2055:84:37","text":"@dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":7243,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2153:6:37","nodeType":"FunctionDefinition","parameters":{"id":7227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7224,"mutability":"mutable","name":"slot","nameLocation":"2168:4:37","nodeType":"VariableDeclaration","scope":7243,"src":"2160:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7226,"mutability":"mutable","name":"pos","nameLocation":"2182:3:37","nodeType":"VariableDeclaration","scope":7243,"src":"2174:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2174:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2159:27:37"},"returnParameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"result","nameLocation":"2218:6:37","nodeType":"VariableDeclaration","scope":7243,"src":"2210:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:16:37"},"scope":7338,"src":"2144:168:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7252,"nodeType":"Block","src":"2500:154:37","statements":[{"AST":{"nativeSrc":"2562:86:37","nodeType":"YulBlock","src":"2562:86:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2583:4:37","nodeType":"YulLiteral","src":"2583:4:37","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2589:4:37","nodeType":"YulIdentifier","src":"2589:4:37"}],"functionName":{"name":"mstore","nativeSrc":"2576:6:37","nodeType":"YulIdentifier","src":"2576:6:37"},"nativeSrc":"2576:18:37","nodeType":"YulFunctionCall","src":"2576:18:37"},"nativeSrc":"2576:18:37","nodeType":"YulExpressionStatement","src":"2576:18:37"},{"nativeSrc":"2607:31:37","nodeType":"YulAssignment","src":"2607:31:37","value":{"arguments":[{"kind":"number","nativeSrc":"2627:4:37","nodeType":"YulLiteral","src":"2627:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2633:4:37","nodeType":"YulLiteral","src":"2633:4:37","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2617:9:37","nodeType":"YulIdentifier","src":"2617:9:37"},"nativeSrc":"2617:21:37","nodeType":"YulFunctionCall","src":"2617:21:37"},"variableNames":[{"name":"result","nativeSrc":"2607:6:37","nodeType":"YulIdentifier","src":"2607:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7249,"isOffset":false,"isSlot":false,"src":"2607:6:37","valueSize":1},{"declaration":7246,"isOffset":false,"isSlot":false,"src":"2589:4:37","valueSize":1}],"id":7251,"nodeType":"InlineAssembly","src":"2553:95:37"}]},"documentation":{"id":7244,"nodeType":"StructuredDocumentation","src":"2318:103:37","text":"@dev Derive the location of the first element in an array from the slot where the length is stored."},"id":7253,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2435:11:37","nodeType":"FunctionDefinition","parameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"slot","nameLocation":"2455:4:37","nodeType":"VariableDeclaration","scope":7253,"src":"2447:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2446:14:37"},"returnParameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"result","nameLocation":"2492:6:37","nodeType":"VariableDeclaration","scope":7253,"src":"2484:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2483:16:37"},"scope":7338,"src":"2426:228:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7264,"nodeType":"Block","src":"2817:184:37","statements":[{"AST":{"nativeSrc":"2879:116:37","nodeType":"YulBlock","src":"2879:116:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2900:4:37","nodeType":"YulLiteral","src":"2900:4:37","type":"","value":"0x00"},{"name":"key","nativeSrc":"2906:3:37","nodeType":"YulIdentifier","src":"2906:3:37"}],"functionName":{"name":"mstore","nativeSrc":"2893:6:37","nodeType":"YulIdentifier","src":"2893:6:37"},"nativeSrc":"2893:17:37","nodeType":"YulFunctionCall","src":"2893:17:37"},"nativeSrc":"2893:17:37","nodeType":"YulExpressionStatement","src":"2893:17:37"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2930:4:37","nodeType":"YulLiteral","src":"2930:4:37","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2936:4:37","nodeType":"YulIdentifier","src":"2936:4:37"}],"functionName":{"name":"mstore","nativeSrc":"2923:6:37","nodeType":"YulIdentifier","src":"2923:6:37"},"nativeSrc":"2923:18:37","nodeType":"YulFunctionCall","src":"2923:18:37"},"nativeSrc":"2923:18:37","nodeType":"YulExpressionStatement","src":"2923:18:37"},{"nativeSrc":"2954:31:37","nodeType":"YulAssignment","src":"2954:31:37","value":{"arguments":[{"kind":"number","nativeSrc":"2974:4:37","nodeType":"YulLiteral","src":"2974:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2980:4:37","nodeType":"YulLiteral","src":"2980:4:37","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2964:9:37","nodeType":"YulIdentifier","src":"2964:9:37"},"nativeSrc":"2964:21:37","nodeType":"YulFunctionCall","src":"2964:21:37"},"variableNames":[{"name":"result","nativeSrc":"2954:6:37","nodeType":"YulIdentifier","src":"2954:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7258,"isOffset":false,"isSlot":false,"src":"2906:3:37","valueSize":1},{"declaration":7261,"isOffset":false,"isSlot":false,"src":"2954:6:37","valueSize":1},{"declaration":7256,"isOffset":false,"isSlot":false,"src":"2936:4:37","valueSize":1}],"id":7263,"nodeType":"InlineAssembly","src":"2870:125:37"}]},"documentation":{"id":7254,"nodeType":"StructuredDocumentation","src":"2660:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7265,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2737:13:37","nodeType":"FunctionDefinition","parameters":{"id":7259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7256,"mutability":"mutable","name":"slot","nameLocation":"2759:4:37","nodeType":"VariableDeclaration","scope":7265,"src":"2751:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2751:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7258,"mutability":"mutable","name":"key","nameLocation":"2773:3:37","nodeType":"VariableDeclaration","scope":7265,"src":"2765:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7257,"name":"address","nodeType":"ElementaryTypeName","src":"2765:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2750:27:37"},"returnParameters":{"id":7262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7261,"mutability":"mutable","name":"result","nameLocation":"2809:6:37","nodeType":"VariableDeclaration","scope":7265,"src":"2801:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2801:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2800:16:37"},"scope":7338,"src":"2728:273:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7276,"nodeType":"Block","src":"3161:184:37","statements":[{"AST":{"nativeSrc":"3223:116:37","nodeType":"YulBlock","src":"3223:116:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3244:4:37","nodeType":"YulLiteral","src":"3244:4:37","type":"","value":"0x00"},{"name":"key","nativeSrc":"3250:3:37","nodeType":"YulIdentifier","src":"3250:3:37"}],"functionName":{"name":"mstore","nativeSrc":"3237:6:37","nodeType":"YulIdentifier","src":"3237:6:37"},"nativeSrc":"3237:17:37","nodeType":"YulFunctionCall","src":"3237:17:37"},"nativeSrc":"3237:17:37","nodeType":"YulExpressionStatement","src":"3237:17:37"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3274:4:37","nodeType":"YulLiteral","src":"3274:4:37","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3280:4:37","nodeType":"YulIdentifier","src":"3280:4:37"}],"functionName":{"name":"mstore","nativeSrc":"3267:6:37","nodeType":"YulIdentifier","src":"3267:6:37"},"nativeSrc":"3267:18:37","nodeType":"YulFunctionCall","src":"3267:18:37"},"nativeSrc":"3267:18:37","nodeType":"YulExpressionStatement","src":"3267:18:37"},{"nativeSrc":"3298:31:37","nodeType":"YulAssignment","src":"3298:31:37","value":{"arguments":[{"kind":"number","nativeSrc":"3318:4:37","nodeType":"YulLiteral","src":"3318:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3324:4:37","nodeType":"YulLiteral","src":"3324:4:37","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3308:9:37","nodeType":"YulIdentifier","src":"3308:9:37"},"nativeSrc":"3308:21:37","nodeType":"YulFunctionCall","src":"3308:21:37"},"variableNames":[{"name":"result","nativeSrc":"3298:6:37","nodeType":"YulIdentifier","src":"3298:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7270,"isOffset":false,"isSlot":false,"src":"3250:3:37","valueSize":1},{"declaration":7273,"isOffset":false,"isSlot":false,"src":"3298:6:37","valueSize":1},{"declaration":7268,"isOffset":false,"isSlot":false,"src":"3280:4:37","valueSize":1}],"id":7275,"nodeType":"InlineAssembly","src":"3214:125:37"}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"3007:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7277,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3084:13:37","nodeType":"FunctionDefinition","parameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"slot","nameLocation":"3106:4:37","nodeType":"VariableDeclaration","scope":7277,"src":"3098:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7270,"mutability":"mutable","name":"key","nameLocation":"3117:3:37","nodeType":"VariableDeclaration","scope":7277,"src":"3112:8:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7269,"name":"bool","nodeType":"ElementaryTypeName","src":"3112:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3097:24:37"},"returnParameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"result","nameLocation":"3153:6:37","nodeType":"VariableDeclaration","scope":7277,"src":"3145:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3145:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3144:16:37"},"scope":7338,"src":"3075:270:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7288,"nodeType":"Block","src":"3508:184:37","statements":[{"AST":{"nativeSrc":"3570:116:37","nodeType":"YulBlock","src":"3570:116:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3591:4:37","nodeType":"YulLiteral","src":"3591:4:37","type":"","value":"0x00"},{"name":"key","nativeSrc":"3597:3:37","nodeType":"YulIdentifier","src":"3597:3:37"}],"functionName":{"name":"mstore","nativeSrc":"3584:6:37","nodeType":"YulIdentifier","src":"3584:6:37"},"nativeSrc":"3584:17:37","nodeType":"YulFunctionCall","src":"3584:17:37"},"nativeSrc":"3584:17:37","nodeType":"YulExpressionStatement","src":"3584:17:37"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3621:4:37","nodeType":"YulLiteral","src":"3621:4:37","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3627:4:37","nodeType":"YulIdentifier","src":"3627:4:37"}],"functionName":{"name":"mstore","nativeSrc":"3614:6:37","nodeType":"YulIdentifier","src":"3614:6:37"},"nativeSrc":"3614:18:37","nodeType":"YulFunctionCall","src":"3614:18:37"},"nativeSrc":"3614:18:37","nodeType":"YulExpressionStatement","src":"3614:18:37"},{"nativeSrc":"3645:31:37","nodeType":"YulAssignment","src":"3645:31:37","value":{"arguments":[{"kind":"number","nativeSrc":"3665:4:37","nodeType":"YulLiteral","src":"3665:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3671:4:37","nodeType":"YulLiteral","src":"3671:4:37","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3655:9:37","nodeType":"YulIdentifier","src":"3655:9:37"},"nativeSrc":"3655:21:37","nodeType":"YulFunctionCall","src":"3655:21:37"},"variableNames":[{"name":"result","nativeSrc":"3645:6:37","nodeType":"YulIdentifier","src":"3645:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7282,"isOffset":false,"isSlot":false,"src":"3597:3:37","valueSize":1},{"declaration":7285,"isOffset":false,"isSlot":false,"src":"3645:6:37","valueSize":1},{"declaration":7280,"isOffset":false,"isSlot":false,"src":"3627:4:37","valueSize":1}],"id":7287,"nodeType":"InlineAssembly","src":"3561:125:37"}]},"documentation":{"id":7278,"nodeType":"StructuredDocumentation","src":"3351:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7289,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3428:13:37","nodeType":"FunctionDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"slot","nameLocation":"3450:4:37","nodeType":"VariableDeclaration","scope":7289,"src":"3442:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3442:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7282,"mutability":"mutable","name":"key","nameLocation":"3464:3:37","nodeType":"VariableDeclaration","scope":7289,"src":"3456:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3441:27:37"},"returnParameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"result","nameLocation":"3500:6:37","nodeType":"VariableDeclaration","scope":7289,"src":"3492:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3492:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3491:16:37"},"scope":7338,"src":"3419:273:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7300,"nodeType":"Block","src":"3855:184:37","statements":[{"AST":{"nativeSrc":"3917:116:37","nodeType":"YulBlock","src":"3917:116:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3938:4:37","nodeType":"YulLiteral","src":"3938:4:37","type":"","value":"0x00"},{"name":"key","nativeSrc":"3944:3:37","nodeType":"YulIdentifier","src":"3944:3:37"}],"functionName":{"name":"mstore","nativeSrc":"3931:6:37","nodeType":"YulIdentifier","src":"3931:6:37"},"nativeSrc":"3931:17:37","nodeType":"YulFunctionCall","src":"3931:17:37"},"nativeSrc":"3931:17:37","nodeType":"YulExpressionStatement","src":"3931:17:37"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3968:4:37","nodeType":"YulLiteral","src":"3968:4:37","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3974:4:37","nodeType":"YulIdentifier","src":"3974:4:37"}],"functionName":{"name":"mstore","nativeSrc":"3961:6:37","nodeType":"YulIdentifier","src":"3961:6:37"},"nativeSrc":"3961:18:37","nodeType":"YulFunctionCall","src":"3961:18:37"},"nativeSrc":"3961:18:37","nodeType":"YulExpressionStatement","src":"3961:18:37"},{"nativeSrc":"3992:31:37","nodeType":"YulAssignment","src":"3992:31:37","value":{"arguments":[{"kind":"number","nativeSrc":"4012:4:37","nodeType":"YulLiteral","src":"4012:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4018:4:37","nodeType":"YulLiteral","src":"4018:4:37","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4002:9:37","nodeType":"YulIdentifier","src":"4002:9:37"},"nativeSrc":"4002:21:37","nodeType":"YulFunctionCall","src":"4002:21:37"},"variableNames":[{"name":"result","nativeSrc":"3992:6:37","nodeType":"YulIdentifier","src":"3992:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7294,"isOffset":false,"isSlot":false,"src":"3944:3:37","valueSize":1},{"declaration":7297,"isOffset":false,"isSlot":false,"src":"3992:6:37","valueSize":1},{"declaration":7292,"isOffset":false,"isSlot":false,"src":"3974:4:37","valueSize":1}],"id":7299,"nodeType":"InlineAssembly","src":"3908:125:37"}]},"documentation":{"id":7290,"nodeType":"StructuredDocumentation","src":"3698:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3775:13:37","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"slot","nameLocation":"3797:4:37","nodeType":"VariableDeclaration","scope":7301,"src":"3789:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3789:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7294,"mutability":"mutable","name":"key","nameLocation":"3811:3:37","nodeType":"VariableDeclaration","scope":7301,"src":"3803:11:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3803:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3788:27:37"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"result","nameLocation":"3847:6:37","nodeType":"VariableDeclaration","scope":7301,"src":"3839:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3838:16:37"},"scope":7338,"src":"3766:273:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7312,"nodeType":"Block","src":"4201:184:37","statements":[{"AST":{"nativeSrc":"4263:116:37","nodeType":"YulBlock","src":"4263:116:37","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4284:4:37","nodeType":"YulLiteral","src":"4284:4:37","type":"","value":"0x00"},{"name":"key","nativeSrc":"4290:3:37","nodeType":"YulIdentifier","src":"4290:3:37"}],"functionName":{"name":"mstore","nativeSrc":"4277:6:37","nodeType":"YulIdentifier","src":"4277:6:37"},"nativeSrc":"4277:17:37","nodeType":"YulFunctionCall","src":"4277:17:37"},"nativeSrc":"4277:17:37","nodeType":"YulExpressionStatement","src":"4277:17:37"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4314:4:37","nodeType":"YulLiteral","src":"4314:4:37","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4320:4:37","nodeType":"YulIdentifier","src":"4320:4:37"}],"functionName":{"name":"mstore","nativeSrc":"4307:6:37","nodeType":"YulIdentifier","src":"4307:6:37"},"nativeSrc":"4307:18:37","nodeType":"YulFunctionCall","src":"4307:18:37"},"nativeSrc":"4307:18:37","nodeType":"YulExpressionStatement","src":"4307:18:37"},{"nativeSrc":"4338:31:37","nodeType":"YulAssignment","src":"4338:31:37","value":{"arguments":[{"kind":"number","nativeSrc":"4358:4:37","nodeType":"YulLiteral","src":"4358:4:37","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4364:4:37","nodeType":"YulLiteral","src":"4364:4:37","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4348:9:37","nodeType":"YulIdentifier","src":"4348:9:37"},"nativeSrc":"4348:21:37","nodeType":"YulFunctionCall","src":"4348:21:37"},"variableNames":[{"name":"result","nativeSrc":"4338:6:37","nodeType":"YulIdentifier","src":"4338:6:37"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7306,"isOffset":false,"isSlot":false,"src":"4290:3:37","valueSize":1},{"declaration":7309,"isOffset":false,"isSlot":false,"src":"4338:6:37","valueSize":1},{"declaration":7304,"isOffset":false,"isSlot":false,"src":"4320:4:37","valueSize":1}],"id":7311,"nodeType":"InlineAssembly","src":"4254:125:37"}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"4045:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7313,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4122:13:37","nodeType":"FunctionDefinition","parameters":{"id":7307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"slot","nameLocation":"4144:4:37","nodeType":"VariableDeclaration","scope":7313,"src":"4136:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4136:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7306,"mutability":"mutable","name":"key","nameLocation":"4157:3:37","nodeType":"VariableDeclaration","scope":7313,"src":"4150:10:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7305,"name":"int256","nodeType":"ElementaryTypeName","src":"4150:6:37","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4135:26:37"},"returnParameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"result","nameLocation":"4193:6:37","nodeType":"VariableDeclaration","scope":7313,"src":"4185:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4185:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4184:16:37"},"scope":7338,"src":"4113:272:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7324,"nodeType":"Block","src":"4554:353:37","statements":[{"AST":{"nativeSrc":"4616:285:37","nodeType":"YulBlock","src":"4616:285:37","statements":[{"nativeSrc":"4630:24:37","nodeType":"YulVariableDeclaration","src":"4630:24:37","value":{"arguments":[{"name":"key","nativeSrc":"4650:3:37","nodeType":"YulIdentifier","src":"4650:3:37"}],"functionName":{"name":"mload","nativeSrc":"4644:5:37","nodeType":"YulIdentifier","src":"4644:5:37"},"nativeSrc":"4644:10:37","nodeType":"YulFunctionCall","src":"4644:10:37"},"variables":[{"name":"length","nativeSrc":"4634:6:37","nodeType":"YulTypedName","src":"4634:6:37","type":""}]},{"nativeSrc":"4667:27:37","nodeType":"YulVariableDeclaration","src":"4667:27:37","value":{"arguments":[{"name":"key","nativeSrc":"4684:3:37","nodeType":"YulIdentifier","src":"4684:3:37"},{"kind":"number","nativeSrc":"4689:4:37","nodeType":"YulLiteral","src":"4689:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4680:3:37","nodeType":"YulIdentifier","src":"4680:3:37"},"nativeSrc":"4680:14:37","nodeType":"YulFunctionCall","src":"4680:14:37"},"variables":[{"name":"begin","nativeSrc":"4671:5:37","nodeType":"YulTypedName","src":"4671:5:37","type":""}]},{"nativeSrc":"4707:29:37","nodeType":"YulVariableDeclaration","src":"4707:29:37","value":{"arguments":[{"name":"begin","nativeSrc":"4722:5:37","nodeType":"YulIdentifier","src":"4722:5:37"},{"name":"length","nativeSrc":"4729:6:37","nodeType":"YulIdentifier","src":"4729:6:37"}],"functionName":{"name":"add","nativeSrc":"4718:3:37","nodeType":"YulIdentifier","src":"4718:3:37"},"nativeSrc":"4718:18:37","nodeType":"YulFunctionCall","src":"4718:18:37"},"variables":[{"name":"end","nativeSrc":"4711:3:37","nodeType":"YulTypedName","src":"4711:3:37","type":""}]},{"nativeSrc":"4749:23:37","nodeType":"YulVariableDeclaration","src":"4749:23:37","value":{"arguments":[{"name":"end","nativeSrc":"4768:3:37","nodeType":"YulIdentifier","src":"4768:3:37"}],"functionName":{"name":"mload","nativeSrc":"4762:5:37","nodeType":"YulIdentifier","src":"4762:5:37"},"nativeSrc":"4762:10:37","nodeType":"YulFunctionCall","src":"4762:10:37"},"variables":[{"name":"cache","nativeSrc":"4753:5:37","nodeType":"YulTypedName","src":"4753:5:37","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4792:3:37","nodeType":"YulIdentifier","src":"4792:3:37"},{"name":"slot","nativeSrc":"4797:4:37","nodeType":"YulIdentifier","src":"4797:4:37"}],"functionName":{"name":"mstore","nativeSrc":"4785:6:37","nodeType":"YulIdentifier","src":"4785:6:37"},"nativeSrc":"4785:17:37","nodeType":"YulFunctionCall","src":"4785:17:37"},"nativeSrc":"4785:17:37","nodeType":"YulExpressionStatement","src":"4785:17:37"},{"nativeSrc":"4815:45:37","nodeType":"YulAssignment","src":"4815:45:37","value":{"arguments":[{"name":"begin","nativeSrc":"4835:5:37","nodeType":"YulIdentifier","src":"4835:5:37"},{"arguments":[{"name":"length","nativeSrc":"4846:6:37","nodeType":"YulIdentifier","src":"4846:6:37"},{"kind":"number","nativeSrc":"4854:4:37","nodeType":"YulLiteral","src":"4854:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4842:3:37","nodeType":"YulIdentifier","src":"4842:3:37"},"nativeSrc":"4842:17:37","nodeType":"YulFunctionCall","src":"4842:17:37"}],"functionName":{"name":"keccak256","nativeSrc":"4825:9:37","nodeType":"YulIdentifier","src":"4825:9:37"},"nativeSrc":"4825:35:37","nodeType":"YulFunctionCall","src":"4825:35:37"},"variableNames":[{"name":"result","nativeSrc":"4815:6:37","nodeType":"YulIdentifier","src":"4815:6:37"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4880:3:37","nodeType":"YulIdentifier","src":"4880:3:37"},{"name":"cache","nativeSrc":"4885:5:37","nodeType":"YulIdentifier","src":"4885:5:37"}],"functionName":{"name":"mstore","nativeSrc":"4873:6:37","nodeType":"YulIdentifier","src":"4873:6:37"},"nativeSrc":"4873:18:37","nodeType":"YulFunctionCall","src":"4873:18:37"},"nativeSrc":"4873:18:37","nodeType":"YulExpressionStatement","src":"4873:18:37"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7318,"isOffset":false,"isSlot":false,"src":"4650:3:37","valueSize":1},{"declaration":7318,"isOffset":false,"isSlot":false,"src":"4684:3:37","valueSize":1},{"declaration":7321,"isOffset":false,"isSlot":false,"src":"4815:6:37","valueSize":1},{"declaration":7316,"isOffset":false,"isSlot":false,"src":"4797:4:37","valueSize":1}],"id":7323,"nodeType":"InlineAssembly","src":"4607:294:37"}]},"documentation":{"id":7314,"nodeType":"StructuredDocumentation","src":"4391:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7325,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4468:13:37","nodeType":"FunctionDefinition","parameters":{"id":7319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"slot","nameLocation":"4490:4:37","nodeType":"VariableDeclaration","scope":7325,"src":"4482:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4482:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7318,"mutability":"mutable","name":"key","nameLocation":"4510:3:37","nodeType":"VariableDeclaration","scope":7325,"src":"4496:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7317,"name":"string","nodeType":"ElementaryTypeName","src":"4496:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4481:33:37"},"returnParameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7321,"mutability":"mutable","name":"result","nameLocation":"4546:6:37","nodeType":"VariableDeclaration","scope":7325,"src":"4538:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4538:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4537:16:37"},"scope":7338,"src":"4459:448:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7336,"nodeType":"Block","src":"5075:353:37","statements":[{"AST":{"nativeSrc":"5137:285:37","nodeType":"YulBlock","src":"5137:285:37","statements":[{"nativeSrc":"5151:24:37","nodeType":"YulVariableDeclaration","src":"5151:24:37","value":{"arguments":[{"name":"key","nativeSrc":"5171:3:37","nodeType":"YulIdentifier","src":"5171:3:37"}],"functionName":{"name":"mload","nativeSrc":"5165:5:37","nodeType":"YulIdentifier","src":"5165:5:37"},"nativeSrc":"5165:10:37","nodeType":"YulFunctionCall","src":"5165:10:37"},"variables":[{"name":"length","nativeSrc":"5155:6:37","nodeType":"YulTypedName","src":"5155:6:37","type":""}]},{"nativeSrc":"5188:27:37","nodeType":"YulVariableDeclaration","src":"5188:27:37","value":{"arguments":[{"name":"key","nativeSrc":"5205:3:37","nodeType":"YulIdentifier","src":"5205:3:37"},{"kind":"number","nativeSrc":"5210:4:37","nodeType":"YulLiteral","src":"5210:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5201:3:37","nodeType":"YulIdentifier","src":"5201:3:37"},"nativeSrc":"5201:14:37","nodeType":"YulFunctionCall","src":"5201:14:37"},"variables":[{"name":"begin","nativeSrc":"5192:5:37","nodeType":"YulTypedName","src":"5192:5:37","type":""}]},{"nativeSrc":"5228:29:37","nodeType":"YulVariableDeclaration","src":"5228:29:37","value":{"arguments":[{"name":"begin","nativeSrc":"5243:5:37","nodeType":"YulIdentifier","src":"5243:5:37"},{"name":"length","nativeSrc":"5250:6:37","nodeType":"YulIdentifier","src":"5250:6:37"}],"functionName":{"name":"add","nativeSrc":"5239:3:37","nodeType":"YulIdentifier","src":"5239:3:37"},"nativeSrc":"5239:18:37","nodeType":"YulFunctionCall","src":"5239:18:37"},"variables":[{"name":"end","nativeSrc":"5232:3:37","nodeType":"YulTypedName","src":"5232:3:37","type":""}]},{"nativeSrc":"5270:23:37","nodeType":"YulVariableDeclaration","src":"5270:23:37","value":{"arguments":[{"name":"end","nativeSrc":"5289:3:37","nodeType":"YulIdentifier","src":"5289:3:37"}],"functionName":{"name":"mload","nativeSrc":"5283:5:37","nodeType":"YulIdentifier","src":"5283:5:37"},"nativeSrc":"5283:10:37","nodeType":"YulFunctionCall","src":"5283:10:37"},"variables":[{"name":"cache","nativeSrc":"5274:5:37","nodeType":"YulTypedName","src":"5274:5:37","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5313:3:37","nodeType":"YulIdentifier","src":"5313:3:37"},{"name":"slot","nativeSrc":"5318:4:37","nodeType":"YulIdentifier","src":"5318:4:37"}],"functionName":{"name":"mstore","nativeSrc":"5306:6:37","nodeType":"YulIdentifier","src":"5306:6:37"},"nativeSrc":"5306:17:37","nodeType":"YulFunctionCall","src":"5306:17:37"},"nativeSrc":"5306:17:37","nodeType":"YulExpressionStatement","src":"5306:17:37"},{"nativeSrc":"5336:45:37","nodeType":"YulAssignment","src":"5336:45:37","value":{"arguments":[{"name":"begin","nativeSrc":"5356:5:37","nodeType":"YulIdentifier","src":"5356:5:37"},{"arguments":[{"name":"length","nativeSrc":"5367:6:37","nodeType":"YulIdentifier","src":"5367:6:37"},{"kind":"number","nativeSrc":"5375:4:37","nodeType":"YulLiteral","src":"5375:4:37","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5363:3:37","nodeType":"YulIdentifier","src":"5363:3:37"},"nativeSrc":"5363:17:37","nodeType":"YulFunctionCall","src":"5363:17:37"}],"functionName":{"name":"keccak256","nativeSrc":"5346:9:37","nodeType":"YulIdentifier","src":"5346:9:37"},"nativeSrc":"5346:35:37","nodeType":"YulFunctionCall","src":"5346:35:37"},"variableNames":[{"name":"result","nativeSrc":"5336:6:37","nodeType":"YulIdentifier","src":"5336:6:37"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5401:3:37","nodeType":"YulIdentifier","src":"5401:3:37"},{"name":"cache","nativeSrc":"5406:5:37","nodeType":"YulIdentifier","src":"5406:5:37"}],"functionName":{"name":"mstore","nativeSrc":"5394:6:37","nodeType":"YulIdentifier","src":"5394:6:37"},"nativeSrc":"5394:18:37","nodeType":"YulFunctionCall","src":"5394:18:37"},"nativeSrc":"5394:18:37","nodeType":"YulExpressionStatement","src":"5394:18:37"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7330,"isOffset":false,"isSlot":false,"src":"5171:3:37","valueSize":1},{"declaration":7330,"isOffset":false,"isSlot":false,"src":"5205:3:37","valueSize":1},{"declaration":7333,"isOffset":false,"isSlot":false,"src":"5336:6:37","valueSize":1},{"declaration":7328,"isOffset":false,"isSlot":false,"src":"5318:4:37","valueSize":1}],"id":7335,"nodeType":"InlineAssembly","src":"5128:294:37"}]},"documentation":{"id":7326,"nodeType":"StructuredDocumentation","src":"4913:63:37","text":"@dev Derive the location of a mapping element from the key."},"id":7337,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4990:13:37","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7328,"mutability":"mutable","name":"slot","nameLocation":"5012:4:37","nodeType":"VariableDeclaration","scope":7337,"src":"5004:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5004:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7330,"mutability":"mutable","name":"key","nameLocation":"5031:3:37","nodeType":"VariableDeclaration","scope":7337,"src":"5018:16:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7329,"name":"bytes","nodeType":"ElementaryTypeName","src":"5018:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5003:32:37"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"result","nameLocation":"5067:6:37","nodeType":"VariableDeclaration","scope":7337,"src":"5059:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5059:7:37","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5058:16:37"},"scope":7338,"src":"4981:447:37","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7339,"src":"1652:3778:37","usedErrors":[],"usedEvents":[]}],"src":"277:5153:37"},"id":37},"contracts/StorageSlotExtension.sol":{"ast":{"absolutePath":"contracts/StorageSlotExtension.sol","exportedSymbols":{"StorageSlotExtension":[7551]},"id":7552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7340,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:38"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotExtension","contractDependencies":[],"contractKind":"library","documentation":{"id":7341,"nodeType":"StructuredDocumentation","src":"59:218:38","text":" @notice Library for reading and writing primitive types to specific storage slots. Based on OpenZeppelin; just adding support for int256.\n @dev TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":7551,"linearizedBaseContracts":[7551],"name":"StorageSlotExtension","nameLocation":"286:20:38","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotExtension.Int256Slot","id":7344,"members":[{"constant":false,"id":7343,"mutability":"mutable","name":"value","nameLocation":"348:5:38","nodeType":"VariableDeclaration","scope":7344,"src":"341:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7342,"name":"int256","nodeType":"ElementaryTypeName","src":"341:6:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"320:10:38","nodeType":"StructDefinition","scope":7551,"src":"313:47:38","visibility":"public"},{"body":{"id":7354,"nodeType":"Block","src":"524:106:38","statements":[{"AST":{"nativeSrc":"586:38:38","nodeType":"YulBlock","src":"586:38:38","statements":[{"nativeSrc":"600:14:38","nodeType":"YulAssignment","src":"600:14:38","value":{"name":"slot","nativeSrc":"610:4:38","nodeType":"YulIdentifier","src":"610:4:38"},"variableNames":[{"name":"r.slot","nativeSrc":"600:6:38","nodeType":"YulIdentifier","src":"600:6:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7351,"isOffset":false,"isSlot":true,"src":"600:6:38","suffix":"slot","valueSize":1},{"declaration":7347,"isOffset":false,"isSlot":false,"src":"610:4:38","valueSize":1}],"id":7353,"nodeType":"InlineAssembly","src":"577:47:38"}]},"documentation":{"id":7345,"nodeType":"StructuredDocumentation","src":"366:71:38","text":"@dev Returns an `Int256Slot` with member `value` located at `slot`."},"id":7355,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"451:13:38","nodeType":"FunctionDefinition","parameters":{"id":7348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"mutability":"mutable","name":"slot","nameLocation":"473:4:38","nodeType":"VariableDeclaration","scope":7355,"src":"465:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"464:14:38"},"returnParameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7351,"mutability":"mutable","name":"r","nameLocation":"521:1:38","nodeType":"VariableDeclaration","scope":7355,"src":"502:20:38","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$7344_storage_ptr","typeString":"struct StorageSlotExtension.Int256Slot"},"typeName":{"id":7350,"nodeType":"UserDefinedTypeName","pathNode":{"id":7349,"name":"Int256Slot","nameLocations":["502:10:38"],"nodeType":"IdentifierPath","referencedDeclaration":7344,"src":"502:10:38"},"referencedDeclaration":7344,"src":"502:10:38","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$7344_storage_ptr","typeString":"struct StorageSlotExtension.Int256Slot"}},"visibility":"internal"}],"src":"501:22:38"},"scope":7551,"src":"442:188:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"canonicalName":"StorageSlotExtension.AddressSlotType","id":7357,"name":"AddressSlotType","nameLocation":"709:15:38","nodeType":"UserDefinedValueTypeDefinition","src":"704:32:38","underlyingType":{"id":7356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"728:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":7371,"nodeType":"Block","src":"873:50:38","statements":[{"expression":{"arguments":[{"id":7368,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"911:4:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7366,"name":"AddressSlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"890:15:38","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"type(StorageSlotExtension.AddressSlotType)"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:4:38","memberName":"wrap","nodeType":"MemberAccess","src":"890:20:38","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"890:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"functionReturnParameters":7365,"id":7370,"nodeType":"Return","src":"883:33:38"}]},"documentation":{"id":7358,"nodeType":"StructuredDocumentation","src":"742:53:38","text":"@dev Cast an arbitrary slot to a AddressSlotType."},"id":7372,"implemented":true,"kind":"function","modifiers":[],"name":"asAddress","nameLocation":"809:9:38","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"slot","nameLocation":"827:4:38","nodeType":"VariableDeclaration","scope":7372,"src":"819:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:14:38"},"returnParameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7372,"src":"856:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"},"typeName":{"id":7363,"nodeType":"UserDefinedTypeName","pathNode":{"id":7362,"name":"AddressSlotType","nameLocations":["856:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7357,"src":"856:15:38"},"referencedDeclaration":7357,"src":"856:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"visibility":"internal"}],"src":"855:17:38"},"scope":7551,"src":"800:123:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"canonicalName":"StorageSlotExtension.BooleanSlotType","id":7374,"name":"BooleanSlotType","nameLocation":"1001:15:38","nodeType":"UserDefinedValueTypeDefinition","src":"996:32:38","underlyingType":{"id":7373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1020:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":7388,"nodeType":"Block","src":"1165:50:38","statements":[{"expression":{"arguments":[{"id":7385,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7377,"src":"1203:4:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7383,"name":"BooleanSlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"1182:15:38","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"type(StorageSlotExtension.BooleanSlotType)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1198:4:38","memberName":"wrap","nodeType":"MemberAccess","src":"1182:20:38","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1182:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"functionReturnParameters":7382,"id":7387,"nodeType":"Return","src":"1175:33:38"}]},"documentation":{"id":7375,"nodeType":"StructuredDocumentation","src":"1034:53:38","text":"@dev Cast an arbitrary slot to a BooleanSlotType."},"id":7389,"implemented":true,"kind":"function","modifiers":[],"name":"asBoolean","nameLocation":"1101:9:38","nodeType":"FunctionDefinition","parameters":{"id":7378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7377,"mutability":"mutable","name":"slot","nameLocation":"1119:4:38","nodeType":"VariableDeclaration","scope":7389,"src":"1111:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1111:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1110:14:38"},"returnParameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7389,"src":"1148:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"},"typeName":{"id":7380,"nodeType":"UserDefinedTypeName","pathNode":{"id":7379,"name":"BooleanSlotType","nameLocations":["1148:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7374,"src":"1148:15:38"},"referencedDeclaration":7374,"src":"1148:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"visibility":"internal"}],"src":"1147:17:38"},"scope":7551,"src":"1092:123:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"canonicalName":"StorageSlotExtension.Bytes32SlotType","id":7391,"name":"Bytes32SlotType","nameLocation":"1293:15:38","nodeType":"UserDefinedValueTypeDefinition","src":"1288:32:38","underlyingType":{"id":7390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1312:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":7405,"nodeType":"Block","src":"1457:50:38","statements":[{"expression":{"arguments":[{"id":7402,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7394,"src":"1495:4:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7400,"name":"Bytes32SlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"1474:15:38","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Bytes32SlotType_$7391_$","typeString":"type(StorageSlotExtension.Bytes32SlotType)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1490:4:38","memberName":"wrap","nodeType":"MemberAccess","src":"1474:20:38","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Bytes32SlotType_$7391_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Bytes32SlotType)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"}},"functionReturnParameters":7399,"id":7404,"nodeType":"Return","src":"1467:33:38"}]},"documentation":{"id":7392,"nodeType":"StructuredDocumentation","src":"1326:53:38","text":"@dev Cast an arbitrary slot to a Bytes32SlotType."},"id":7406,"implemented":true,"kind":"function","modifiers":[],"name":"asBytes32","nameLocation":"1393:9:38","nodeType":"FunctionDefinition","parameters":{"id":7395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7394,"mutability":"mutable","name":"slot","nameLocation":"1411:4:38","nodeType":"VariableDeclaration","scope":7406,"src":"1403:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1403:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1402:14:38"},"returnParameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7406,"src":"1440:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"},"typeName":{"id":7397,"nodeType":"UserDefinedTypeName","pathNode":{"id":7396,"name":"Bytes32SlotType","nameLocations":["1440:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"1440:15:38"},"referencedDeclaration":7391,"src":"1440:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"}},"visibility":"internal"}],"src":"1439:17:38"},"scope":7551,"src":"1384:123:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"canonicalName":"StorageSlotExtension.Uint256SlotType","id":7408,"name":"Uint256SlotType","nameLocation":"1585:15:38","nodeType":"UserDefinedValueTypeDefinition","src":"1580:32:38","underlyingType":{"id":7407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":7422,"nodeType":"Block","src":"1749:50:38","statements":[{"expression":{"arguments":[{"id":7419,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"1787:4:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7417,"name":"Uint256SlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"1766:15:38","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"type(StorageSlotExtension.Uint256SlotType)"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1782:4:38","memberName":"wrap","nodeType":"MemberAccess","src":"1766:20:38","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"functionReturnParameters":7416,"id":7421,"nodeType":"Return","src":"1759:33:38"}]},"documentation":{"id":7409,"nodeType":"StructuredDocumentation","src":"1618:53:38","text":"@dev Cast an arbitrary slot to a Uint256SlotType."},"id":7423,"implemented":true,"kind":"function","modifiers":[],"name":"asUint256","nameLocation":"1685:9:38","nodeType":"FunctionDefinition","parameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"slot","nameLocation":"1703:4:38","nodeType":"VariableDeclaration","scope":7423,"src":"1695:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1695:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1694:14:38"},"returnParameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"1732:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"},"typeName":{"id":7414,"nodeType":"UserDefinedTypeName","pathNode":{"id":7413,"name":"Uint256SlotType","nameLocations":["1732:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7408,"src":"1732:15:38"},"referencedDeclaration":7408,"src":"1732:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"visibility":"internal"}],"src":"1731:17:38"},"scope":7551,"src":"1676:123:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"canonicalName":"StorageSlotExtension.Int256SlotType","id":7425,"name":"Int256SlotType","nameLocation":"1877:14:38","nodeType":"UserDefinedValueTypeDefinition","src":"1872:31:38","underlyingType":{"id":7424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1895:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":7439,"nodeType":"Block","src":"2038:49:38","statements":[{"expression":{"arguments":[{"id":7436,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"2075:4:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7434,"name":"Int256SlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"2055:14:38","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Int256SlotType_$7425_$","typeString":"type(StorageSlotExtension.Int256SlotType)"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2070:4:38","memberName":"wrap","nodeType":"MemberAccess","src":"2055:19:38","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Int256SlotType_$7425_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Int256SlotType)"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2055:25:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"}},"functionReturnParameters":7433,"id":7438,"nodeType":"Return","src":"2048:32:38"}]},"documentation":{"id":7426,"nodeType":"StructuredDocumentation","src":"1909:53:38","text":"@dev Cast an arbitrary slot to an Int256SlotType."},"id":7440,"implemented":true,"kind":"function","modifiers":[],"name":"asInt256","nameLocation":"1976:8:38","nodeType":"FunctionDefinition","parameters":{"id":7429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"slot","nameLocation":"1993:4:38","nodeType":"VariableDeclaration","scope":7440,"src":"1985:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1984:14:38"},"returnParameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7440,"src":"2022:14:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"},"typeName":{"id":7431,"nodeType":"UserDefinedTypeName","pathNode":{"id":7430,"name":"Int256SlotType","nameLocations":["2022:14:38"],"nodeType":"IdentifierPath","referencedDeclaration":7425,"src":"2022:14:38"},"referencedDeclaration":7425,"src":"2022:14:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"}},"visibility":"internal"}],"src":"2021:16:38"},"scope":7551,"src":"1967:120:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7450,"nodeType":"Block","src":"2242:165:38","statements":[{"AST":{"nativeSrc":"2304:97:38","nodeType":"YulBlock","src":"2304:97:38","statements":[{"nativeSrc":"2318:21:38","nodeType":"YulAssignment","src":"2318:21:38","value":{"arguments":[{"name":"slot","nativeSrc":"2334:4:38","nodeType":"YulIdentifier","src":"2334:4:38"}],"functionName":{"name":"tload","nativeSrc":"2327:5:38","nodeType":"YulIdentifier","src":"2327:5:38"},"nativeSrc":"2327:12:38","nodeType":"YulFunctionCall","src":"2327:12:38"},"variableNames":[{"name":"value","nativeSrc":"2318:5:38","nodeType":"YulIdentifier","src":"2318:5:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7444,"isOffset":false,"isSlot":false,"src":"2334:4:38","valueSize":1},{"declaration":7447,"isOffset":false,"isSlot":false,"src":"2318:5:38","valueSize":1}],"id":7449,"nodeType":"InlineAssembly","src":"2295:106:38"}]},"documentation":{"id":7441,"nodeType":"StructuredDocumentation","src":"2093:69:38","text":"@dev Load the value held at location `slot` in transient storage."},"id":7451,"implemented":true,"kind":"function","modifiers":[],"name":"tload","nameLocation":"2176:5:38","nodeType":"FunctionDefinition","parameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"slot","nameLocation":"2198:4:38","nodeType":"VariableDeclaration","scope":7451,"src":"2182:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"},"typeName":{"id":7443,"nodeType":"UserDefinedTypeName","pathNode":{"id":7442,"name":"AddressSlotType","nameLocations":["2182:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7357,"src":"2182:15:38"},"referencedDeclaration":7357,"src":"2182:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"visibility":"internal"}],"src":"2181:22:38"},"returnParameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"value","nameLocation":"2235:5:38","nodeType":"VariableDeclaration","scope":7451,"src":"2227:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7446,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2226:15:38"},"scope":7551,"src":"2167:240:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"2543:162:38","statements":[{"AST":{"nativeSrc":"2605:94:38","nodeType":"YulBlock","src":"2605:94:38","statements":[{"expression":{"arguments":[{"name":"slot","nativeSrc":"2626:4:38","nodeType":"YulIdentifier","src":"2626:4:38"},{"name":"value","nativeSrc":"2632:5:38","nodeType":"YulIdentifier","src":"2632:5:38"}],"functionName":{"name":"tstore","nativeSrc":"2619:6:38","nodeType":"YulIdentifier","src":"2619:6:38"},"nativeSrc":"2619:19:38","nodeType":"YulFunctionCall","src":"2619:19:38"},"nativeSrc":"2619:19:38","nodeType":"YulExpressionStatement","src":"2619:19:38"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7455,"isOffset":false,"isSlot":false,"src":"2626:4:38","valueSize":1},{"declaration":7457,"isOffset":false,"isSlot":false,"src":"2632:5:38","valueSize":1}],"id":7460,"nodeType":"InlineAssembly","src":"2596:103:38"}]},"documentation":{"id":7452,"nodeType":"StructuredDocumentation","src":"2413:63:38","text":"@dev Store `value` at location `slot` in transient storage."},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"tstore","nameLocation":"2490:6:38","nodeType":"FunctionDefinition","parameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7455,"mutability":"mutable","name":"slot","nameLocation":"2513:4:38","nodeType":"VariableDeclaration","scope":7462,"src":"2497:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"},"typeName":{"id":7454,"nodeType":"UserDefinedTypeName","pathNode":{"id":7453,"name":"AddressSlotType","nameLocations":["2497:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7357,"src":"2497:15:38"},"referencedDeclaration":7357,"src":"2497:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"visibility":"internal"},{"constant":false,"id":7457,"mutability":"mutable","name":"value","nameLocation":"2527:5:38","nodeType":"VariableDeclaration","scope":7462,"src":"2519:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7456,"name":"address","nodeType":"ElementaryTypeName","src":"2519:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2496:37:38"},"returnParameters":{"id":7459,"nodeType":"ParameterList","parameters":[],"src":"2543:0:38"},"scope":7551,"src":"2481:224:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7472,"nodeType":"Block","src":"2857:164:38","statements":[{"AST":{"nativeSrc":"2919:96:38","nodeType":"YulBlock","src":"2919:96:38","statements":[{"nativeSrc":"2933:20:38","nodeType":"YulAssignment","src":"2933:20:38","value":{"arguments":[{"name":"slot","nativeSrc":"2948:4:38","nodeType":"YulIdentifier","src":"2948:4:38"}],"functionName":{"name":"tload","nativeSrc":"2942:5:38","nodeType":"YulIdentifier","src":"2942:5:38"},"nativeSrc":"2942:11:38","nodeType":"YulFunctionCall","src":"2942:11:38"},"variableNames":[{"name":"value","nativeSrc":"2933:5:38","nodeType":"YulIdentifier","src":"2933:5:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7466,"isOffset":false,"isSlot":false,"src":"2948:4:38","valueSize":1},{"declaration":7469,"isOffset":false,"isSlot":false,"src":"2933:5:38","valueSize":1}],"id":7471,"nodeType":"InlineAssembly","src":"2910:105:38"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"2711:69:38","text":"@dev Load the value held at location `slot` in transient storage."},"id":7473,"implemented":true,"kind":"function","modifiers":[],"name":"tload","nameLocation":"2794:5:38","nodeType":"FunctionDefinition","parameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"slot","nameLocation":"2816:4:38","nodeType":"VariableDeclaration","scope":7473,"src":"2800:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"},"typeName":{"id":7465,"nodeType":"UserDefinedTypeName","pathNode":{"id":7464,"name":"BooleanSlotType","nameLocations":["2800:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7374,"src":"2800:15:38"},"referencedDeclaration":7374,"src":"2800:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"visibility":"internal"}],"src":"2799:22:38"},"returnParameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7469,"mutability":"mutable","name":"value","nameLocation":"2850:5:38","nodeType":"VariableDeclaration","scope":7473,"src":"2845:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7468,"name":"bool","nodeType":"ElementaryTypeName","src":"2845:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2844:12:38"},"scope":7551,"src":"2785:236:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7483,"nodeType":"Block","src":"3154:162:38","statements":[{"AST":{"nativeSrc":"3216:94:38","nodeType":"YulBlock","src":"3216:94:38","statements":[{"expression":{"arguments":[{"name":"slot","nativeSrc":"3237:4:38","nodeType":"YulIdentifier","src":"3237:4:38"},{"name":"value","nativeSrc":"3243:5:38","nodeType":"YulIdentifier","src":"3243:5:38"}],"functionName":{"name":"tstore","nativeSrc":"3230:6:38","nodeType":"YulIdentifier","src":"3230:6:38"},"nativeSrc":"3230:19:38","nodeType":"YulFunctionCall","src":"3230:19:38"},"nativeSrc":"3230:19:38","nodeType":"YulExpressionStatement","src":"3230:19:38"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7477,"isOffset":false,"isSlot":false,"src":"3237:4:38","valueSize":1},{"declaration":7479,"isOffset":false,"isSlot":false,"src":"3243:5:38","valueSize":1}],"id":7482,"nodeType":"InlineAssembly","src":"3207:103:38"}]},"documentation":{"id":7474,"nodeType":"StructuredDocumentation","src":"3027:63:38","text":"@dev Store `value` at location `slot` in transient storage."},"id":7484,"implemented":true,"kind":"function","modifiers":[],"name":"tstore","nameLocation":"3104:6:38","nodeType":"FunctionDefinition","parameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"slot","nameLocation":"3127:4:38","nodeType":"VariableDeclaration","scope":7484,"src":"3111:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"},"typeName":{"id":7476,"nodeType":"UserDefinedTypeName","pathNode":{"id":7475,"name":"BooleanSlotType","nameLocations":["3111:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7374,"src":"3111:15:38"},"referencedDeclaration":7374,"src":"3111:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"visibility":"internal"},{"constant":false,"id":7479,"mutability":"mutable","name":"value","nameLocation":"3138:5:38","nodeType":"VariableDeclaration","scope":7484,"src":"3133:10:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7478,"name":"bool","nodeType":"ElementaryTypeName","src":"3133:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3110:34:38"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[],"src":"3154:0:38"},"scope":7551,"src":"3095:221:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7494,"nodeType":"Block","src":"3471:164:38","statements":[{"AST":{"nativeSrc":"3533:96:38","nodeType":"YulBlock","src":"3533:96:38","statements":[{"nativeSrc":"3547:20:38","nodeType":"YulAssignment","src":"3547:20:38","value":{"arguments":[{"name":"slot","nativeSrc":"3562:4:38","nodeType":"YulIdentifier","src":"3562:4:38"}],"functionName":{"name":"tload","nativeSrc":"3556:5:38","nodeType":"YulIdentifier","src":"3556:5:38"},"nativeSrc":"3556:11:38","nodeType":"YulFunctionCall","src":"3556:11:38"},"variableNames":[{"name":"value","nativeSrc":"3547:5:38","nodeType":"YulIdentifier","src":"3547:5:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7488,"isOffset":false,"isSlot":false,"src":"3562:4:38","valueSize":1},{"declaration":7491,"isOffset":false,"isSlot":false,"src":"3547:5:38","valueSize":1}],"id":7493,"nodeType":"InlineAssembly","src":"3524:105:38"}]},"documentation":{"id":7485,"nodeType":"StructuredDocumentation","src":"3322:69:38","text":"@dev Load the value held at location `slot` in transient storage."},"id":7495,"implemented":true,"kind":"function","modifiers":[],"name":"tload","nameLocation":"3405:5:38","nodeType":"FunctionDefinition","parameters":{"id":7489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"slot","nameLocation":"3427:4:38","nodeType":"VariableDeclaration","scope":7495,"src":"3411:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"},"typeName":{"id":7487,"nodeType":"UserDefinedTypeName","pathNode":{"id":7486,"name":"Bytes32SlotType","nameLocations":["3411:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"3411:15:38"},"referencedDeclaration":7391,"src":"3411:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"}},"visibility":"internal"}],"src":"3410:22:38"},"returnParameters":{"id":7492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"value","nameLocation":"3464:5:38","nodeType":"VariableDeclaration","scope":7495,"src":"3456:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:15:38"},"scope":7551,"src":"3396:239:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7505,"nodeType":"Block","src":"3771:162:38","statements":[{"AST":{"nativeSrc":"3833:94:38","nodeType":"YulBlock","src":"3833:94:38","statements":[{"expression":{"arguments":[{"name":"slot","nativeSrc":"3854:4:38","nodeType":"YulIdentifier","src":"3854:4:38"},{"name":"value","nativeSrc":"3860:5:38","nodeType":"YulIdentifier","src":"3860:5:38"}],"functionName":{"name":"tstore","nativeSrc":"3847:6:38","nodeType":"YulIdentifier","src":"3847:6:38"},"nativeSrc":"3847:19:38","nodeType":"YulFunctionCall","src":"3847:19:38"},"nativeSrc":"3847:19:38","nodeType":"YulExpressionStatement","src":"3847:19:38"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7499,"isOffset":false,"isSlot":false,"src":"3854:4:38","valueSize":1},{"declaration":7501,"isOffset":false,"isSlot":false,"src":"3860:5:38","valueSize":1}],"id":7504,"nodeType":"InlineAssembly","src":"3824:103:38"}]},"documentation":{"id":7496,"nodeType":"StructuredDocumentation","src":"3641:63:38","text":"@dev Store `value` at location `slot` in transient storage."},"id":7506,"implemented":true,"kind":"function","modifiers":[],"name":"tstore","nameLocation":"3718:6:38","nodeType":"FunctionDefinition","parameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"slot","nameLocation":"3741:4:38","nodeType":"VariableDeclaration","scope":7506,"src":"3725:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"},"typeName":{"id":7498,"nodeType":"UserDefinedTypeName","pathNode":{"id":7497,"name":"Bytes32SlotType","nameLocations":["3725:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7391,"src":"3725:15:38"},"referencedDeclaration":7391,"src":"3725:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Bytes32SlotType_$7391","typeString":"StorageSlotExtension.Bytes32SlotType"}},"visibility":"internal"},{"constant":false,"id":7501,"mutability":"mutable","name":"value","nameLocation":"3755:5:38","nodeType":"VariableDeclaration","scope":7506,"src":"3747:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3747:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3724:37:38"},"returnParameters":{"id":7503,"nodeType":"ParameterList","parameters":[],"src":"3771:0:38"},"scope":7551,"src":"3709:224:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7516,"nodeType":"Block","src":"4088:164:38","statements":[{"AST":{"nativeSrc":"4150:96:38","nodeType":"YulBlock","src":"4150:96:38","statements":[{"nativeSrc":"4164:20:38","nodeType":"YulAssignment","src":"4164:20:38","value":{"arguments":[{"name":"slot","nativeSrc":"4179:4:38","nodeType":"YulIdentifier","src":"4179:4:38"}],"functionName":{"name":"tload","nativeSrc":"4173:5:38","nodeType":"YulIdentifier","src":"4173:5:38"},"nativeSrc":"4173:11:38","nodeType":"YulFunctionCall","src":"4173:11:38"},"variableNames":[{"name":"value","nativeSrc":"4164:5:38","nodeType":"YulIdentifier","src":"4164:5:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7510,"isOffset":false,"isSlot":false,"src":"4179:4:38","valueSize":1},{"declaration":7513,"isOffset":false,"isSlot":false,"src":"4164:5:38","valueSize":1}],"id":7515,"nodeType":"InlineAssembly","src":"4141:105:38"}]},"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"3939:69:38","text":"@dev Load the value held at location `slot` in transient storage."},"id":7517,"implemented":true,"kind":"function","modifiers":[],"name":"tload","nameLocation":"4022:5:38","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7510,"mutability":"mutable","name":"slot","nameLocation":"4044:4:38","nodeType":"VariableDeclaration","scope":7517,"src":"4028:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"},"typeName":{"id":7509,"nodeType":"UserDefinedTypeName","pathNode":{"id":7508,"name":"Uint256SlotType","nameLocations":["4028:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7408,"src":"4028:15:38"},"referencedDeclaration":7408,"src":"4028:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"visibility":"internal"}],"src":"4027:22:38"},"returnParameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"value","nameLocation":"4081:5:38","nodeType":"VariableDeclaration","scope":7517,"src":"4073:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4073:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4072:15:38"},"scope":7551,"src":"4013:239:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7527,"nodeType":"Block","src":"4388:162:38","statements":[{"AST":{"nativeSrc":"4450:94:38","nodeType":"YulBlock","src":"4450:94:38","statements":[{"expression":{"arguments":[{"name":"slot","nativeSrc":"4471:4:38","nodeType":"YulIdentifier","src":"4471:4:38"},{"name":"value","nativeSrc":"4477:5:38","nodeType":"YulIdentifier","src":"4477:5:38"}],"functionName":{"name":"tstore","nativeSrc":"4464:6:38","nodeType":"YulIdentifier","src":"4464:6:38"},"nativeSrc":"4464:19:38","nodeType":"YulFunctionCall","src":"4464:19:38"},"nativeSrc":"4464:19:38","nodeType":"YulExpressionStatement","src":"4464:19:38"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7521,"isOffset":false,"isSlot":false,"src":"4471:4:38","valueSize":1},{"declaration":7523,"isOffset":false,"isSlot":false,"src":"4477:5:38","valueSize":1}],"id":7526,"nodeType":"InlineAssembly","src":"4441:103:38"}]},"documentation":{"id":7518,"nodeType":"StructuredDocumentation","src":"4258:63:38","text":"@dev Store `value` at location `slot` in transient storage."},"id":7528,"implemented":true,"kind":"function","modifiers":[],"name":"tstore","nameLocation":"4335:6:38","nodeType":"FunctionDefinition","parameters":{"id":7524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7521,"mutability":"mutable","name":"slot","nameLocation":"4358:4:38","nodeType":"VariableDeclaration","scope":7528,"src":"4342:20:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"},"typeName":{"id":7520,"nodeType":"UserDefinedTypeName","pathNode":{"id":7519,"name":"Uint256SlotType","nameLocations":["4342:15:38"],"nodeType":"IdentifierPath","referencedDeclaration":7408,"src":"4342:15:38"},"referencedDeclaration":7408,"src":"4342:15:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"visibility":"internal"},{"constant":false,"id":7523,"mutability":"mutable","name":"value","nameLocation":"4372:5:38","nodeType":"VariableDeclaration","scope":7528,"src":"4364:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4364:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4341:37:38"},"returnParameters":{"id":7525,"nodeType":"ParameterList","parameters":[],"src":"4388:0:38"},"scope":7551,"src":"4326:224:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7538,"nodeType":"Block","src":"4703:164:38","statements":[{"AST":{"nativeSrc":"4765:96:38","nodeType":"YulBlock","src":"4765:96:38","statements":[{"nativeSrc":"4779:20:38","nodeType":"YulAssignment","src":"4779:20:38","value":{"arguments":[{"name":"slot","nativeSrc":"4794:4:38","nodeType":"YulIdentifier","src":"4794:4:38"}],"functionName":{"name":"tload","nativeSrc":"4788:5:38","nodeType":"YulIdentifier","src":"4788:5:38"},"nativeSrc":"4788:11:38","nodeType":"YulFunctionCall","src":"4788:11:38"},"variableNames":[{"name":"value","nativeSrc":"4779:5:38","nodeType":"YulIdentifier","src":"4779:5:38"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7532,"isOffset":false,"isSlot":false,"src":"4794:4:38","valueSize":1},{"declaration":7535,"isOffset":false,"isSlot":false,"src":"4779:5:38","valueSize":1}],"id":7537,"nodeType":"InlineAssembly","src":"4756:105:38"}]},"documentation":{"id":7529,"nodeType":"StructuredDocumentation","src":"4556:69:38","text":"@dev Load the value held at location `slot` in transient storage."},"id":7539,"implemented":true,"kind":"function","modifiers":[],"name":"tload","nameLocation":"4639:5:38","nodeType":"FunctionDefinition","parameters":{"id":7533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7532,"mutability":"mutable","name":"slot","nameLocation":"4660:4:38","nodeType":"VariableDeclaration","scope":7539,"src":"4645:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"},"typeName":{"id":7531,"nodeType":"UserDefinedTypeName","pathNode":{"id":7530,"name":"Int256SlotType","nameLocations":["4645:14:38"],"nodeType":"IdentifierPath","referencedDeclaration":7425,"src":"4645:14:38"},"referencedDeclaration":7425,"src":"4645:14:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"}},"visibility":"internal"}],"src":"4644:21:38"},"returnParameters":{"id":7536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7535,"mutability":"mutable","name":"value","nameLocation":"4696:5:38","nodeType":"VariableDeclaration","scope":7539,"src":"4689:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7534,"name":"int256","nodeType":"ElementaryTypeName","src":"4689:6:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4688:14:38"},"scope":7551,"src":"4630:237:38","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7549,"nodeType":"Block","src":"5001:162:38","statements":[{"AST":{"nativeSrc":"5063:94:38","nodeType":"YulBlock","src":"5063:94:38","statements":[{"expression":{"arguments":[{"name":"slot","nativeSrc":"5084:4:38","nodeType":"YulIdentifier","src":"5084:4:38"},{"name":"value","nativeSrc":"5090:5:38","nodeType":"YulIdentifier","src":"5090:5:38"}],"functionName":{"name":"tstore","nativeSrc":"5077:6:38","nodeType":"YulIdentifier","src":"5077:6:38"},"nativeSrc":"5077:19:38","nodeType":"YulFunctionCall","src":"5077:19:38"},"nativeSrc":"5077:19:38","nodeType":"YulExpressionStatement","src":"5077:19:38"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":7543,"isOffset":false,"isSlot":false,"src":"5084:4:38","valueSize":1},{"declaration":7545,"isOffset":false,"isSlot":false,"src":"5090:5:38","valueSize":1}],"id":7548,"nodeType":"InlineAssembly","src":"5054:103:38"}]},"documentation":{"id":7540,"nodeType":"StructuredDocumentation","src":"4873:63:38","text":"@dev Store `value` at location `slot` in transient storage."},"id":7550,"implemented":true,"kind":"function","modifiers":[],"name":"tstore","nameLocation":"4950:6:38","nodeType":"FunctionDefinition","parameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"slot","nameLocation":"4972:4:38","nodeType":"VariableDeclaration","scope":7550,"src":"4957:19:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"},"typeName":{"id":7542,"nodeType":"UserDefinedTypeName","pathNode":{"id":7541,"name":"Int256SlotType","nameLocations":["4957:14:38"],"nodeType":"IdentifierPath","referencedDeclaration":7425,"src":"4957:14:38"},"referencedDeclaration":7425,"src":"4957:14:38","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"}},"visibility":"internal"},{"constant":false,"id":7545,"mutability":"mutable","name":"value","nameLocation":"4985:5:38","nodeType":"VariableDeclaration","scope":7550,"src":"4978:12:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7544,"name":"int256","nodeType":"ElementaryTypeName","src":"4978:6:38","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4956:35:38"},"returnParameters":{"id":7547,"nodeType":"ParameterList","parameters":[],"src":"5001:0:38"},"scope":7551,"src":"4941:222:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7552,"src":"278:4887:38","usedErrors":[],"usedEvents":[]}],"src":"33:5133:38"},"id":38},"contracts/TransientStorageHelpers.sol":{"ast":{"absolutePath":"contracts/TransientStorageHelpers.sol","exportedSymbols":{"AddressArraySlotType":[7567],"AddressToUintMappingSlot":[7563],"IERC20":[337],"SlotDerivation":[7338],"StorageSlotExtension":[7551],"TokenDeltaMappingSlotType":[7561],"TransientStorageHelpers":[8145],"UintToAddressToBooleanMappingSlot":[7565]},"id":8146,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":7553,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:39"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8146,"sourceUnit":338,"src":"72:72:39","symbolAliases":[{"foreign":{"id":7554,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"81:6:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/StorageSlotExtension.sol","file":"./StorageSlotExtension.sol","id":7557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8146,"sourceUnit":7552,"src":"146:66:39","symbolAliases":[{"foreign":{"id":7556,"name":"StorageSlotExtension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"155:20:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/SlotDerivation.sol","file":"./SlotDerivation.sol","id":7559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8146,"sourceUnit":7339,"src":"213:54:39","symbolAliases":[{"foreign":{"id":7558,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"222:14:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"TokenDeltaMappingSlotType","id":7561,"name":"TokenDeltaMappingSlotType","nameLocation":"274:25:39","nodeType":"UserDefinedValueTypeDefinition","src":"269:42:39","underlyingType":{"id":7560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"303:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"AddressToUintMappingSlot","id":7563,"name":"AddressToUintMappingSlot","nameLocation":"317:24:39","nodeType":"UserDefinedValueTypeDefinition","src":"312:41:39","underlyingType":{"id":7562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"345:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"UintToAddressToBooleanMappingSlot","id":7565,"name":"UintToAddressToBooleanMappingSlot","nameLocation":"359:33:39","nodeType":"UserDefinedValueTypeDefinition","src":"354:50:39","underlyingType":{"id":7564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"396:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"AddressArraySlotType","id":7567,"name":"AddressArraySlotType","nameLocation":"410:20:39","nodeType":"UserDefinedValueTypeDefinition","src":"405:37:39","underlyingType":{"id":7566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"TransientStorageHelpers","contractDependencies":[],"contractKind":"library","documentation":{"id":7568,"nodeType":"StructuredDocumentation","src":"444:518:39","text":" @notice Helper functions to read and write values from transient storage, including support for arrays and mappings.\n @dev This is temporary, based on Open Zeppelin's partially released library. When the final version is published, we\n should be able to remove our copies and import directly from OZ. When Solidity catches up and puts direct support\n for transient storage in the language, we should be able to get rid of this altogether.\n This only works on networks where EIP-1153 is supported."},"fullyImplemented":true,"id":8145,"linearizedBaseContracts":[8145],"name":"TransientStorageHelpers","nameLocation":"971:23:39","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7570,"libraryName":{"id":7569,"name":"SlotDerivation","nameLocations":["1007:14:39"],"nodeType":"IdentifierPath","referencedDeclaration":7338,"src":"1007:14:39"},"nodeType":"UsingForDirective","src":"1001:27:39"},{"global":false,"id":7572,"libraryName":{"id":7571,"name":"StorageSlotExtension","nameLocations":["1039:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7551,"src":"1039:20:39"},"nodeType":"UsingForDirective","src":"1033:33:39"},{"documentation":{"id":7573,"nodeType":"StructuredDocumentation","src":"1072:71:39","text":"@notice An index is out of bounds on an array operation (e.g., at)."},"errorSelector":"0f4ae0e4","id":7575,"name":"TransientIndexOutOfBounds","nameLocation":"1154:25:39","nodeType":"ErrorDefinition","parameters":{"id":7574,"nodeType":"ParameterList","parameters":[],"src":"1179:2:39"},"src":"1148:34:39"},{"body":{"id":7613,"nodeType":"Block","src":"1348:206:39","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"62616c616e6365722d6c6162732e76332e73746f726167652e","id":7592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1450:27:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_8857a2dfd119cac85e8d882459e5ce77774c99d694ba0ba60adafcc29f806768","typeString":"literal_string \"balancer-labs.v3.storage.\""},"value":"balancer-labs.v3.storage."},{"id":7593,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"1479:6:39","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":7594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1487:3:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"id":7595,"name":"varName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"1492:7:39","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8857a2dfd119cac85e8d882459e5ce77774c99d694ba0ba60adafcc29f806768","typeString":"literal_string \"balancer-labs.v3.storage.\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7590,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1433:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1437:12:39","memberName":"encodePacked","nodeType":"MemberAccess","src":"1433:16:39","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:67:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7589,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1423:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1423:78:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1415:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1415:7:39","typeDescriptions":{}}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1415:87:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1505:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1415:91:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7585,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1404:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1408:6:39","memberName":"encode","nodeType":"MemberAccess","src":"1404:10:39","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1404:103:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7584,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1377:9:39","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1377:144:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"1524:23:39","subExpression":{"arguments":[{"arguments":[{"hexValue":"30786666","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1541:4:39","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":7606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1533:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:39","typeDescriptions":{}}},"id":7608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1533:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1525:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1525:7:39","typeDescriptions":{}}},"id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:22:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1377:170:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7583,"id":7612,"nodeType":"Return","src":"1358:189:39"}]},"id":7614,"implemented":true,"kind":"function","modifiers":[],"name":"calculateSlot","nameLocation":"1257:13:39","nodeType":"FunctionDefinition","parameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"domain","nameLocation":"1285:6:39","nodeType":"VariableDeclaration","scope":7614,"src":"1271:20:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7576,"name":"string","nodeType":"ElementaryTypeName","src":"1271:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7579,"mutability":"mutable","name":"varName","nameLocation":"1307:7:39","nodeType":"VariableDeclaration","scope":7614,"src":"1293:21:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7578,"name":"string","nodeType":"ElementaryTypeName","src":"1293:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1270:45:39"},"returnParameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7614,"src":"1339:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1339:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1338:9:39"},"scope":8145,"src":"1248:306:39","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7640,"nodeType":"Block","src":"1856:108:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7632,"name":"k1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"1934:2:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":7631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1926:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7630,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:39","typeDescriptions":{}}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1926:11:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7627,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"1906:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"}],"expression":{"id":7625,"name":"TokenDeltaMappingSlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"1873:25:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561_$","typeString":"type(TokenDeltaMappingSlotType)"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1899:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"1873:32:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561_$returns$_t_bytes32_$","typeString":"function (TokenDeltaMappingSlotType) pure returns (bytes32)"}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:38:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1912:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"1873:52:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:65:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1939:8:39","memberName":"asInt256","nodeType":"MemberAccess","referencedDeclaration":7440,"src":"1873:74:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Int256SlotType_$7425_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Int256SlotType)"}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:76:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1950:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7539,"src":"1873:82:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Int256SlotType_$7425_$returns$_t_int256_$attached_to$_t_userDefinedValueType$_Int256SlotType_$7425_$","typeString":"function (StorageSlotExtension.Int256SlotType) view returns (int256)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:84:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7624,"id":7639,"nodeType":"Return","src":"1866:91:39"}]},"id":7641,"implemented":true,"kind":"function","modifiers":[],"name":"tGet","nameLocation":"1777:4:39","nodeType":"FunctionDefinition","parameters":{"id":7621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7617,"mutability":"mutable","name":"slot","nameLocation":"1808:4:39","nodeType":"VariableDeclaration","scope":7641,"src":"1782:30:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"},"typeName":{"id":7616,"nodeType":"UserDefinedTypeName","pathNode":{"id":7615,"name":"TokenDeltaMappingSlotType","nameLocations":["1782:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":7561,"src":"1782:25:39"},"referencedDeclaration":7561,"src":"1782:25:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"}},"visibility":"internal"},{"constant":false,"id":7620,"mutability":"mutable","name":"k1","nameLocation":"1821:2:39","nodeType":"VariableDeclaration","scope":7641,"src":"1814:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":7619,"nodeType":"UserDefinedTypeName","pathNode":{"id":7618,"name":"IERC20","nameLocations":["1814:6:39"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"1814:6:39"},"referencedDeclaration":337,"src":"1814:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1781:43:39"},"returnParameters":{"id":7624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7641,"src":"1848:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7622,"name":"int256","nodeType":"ElementaryTypeName","src":"1848:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1847:8:39"},"scope":8145,"src":"1768:196:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7669,"nodeType":"Block","src":"2050:107:39","statements":[{"expression":{"arguments":[{"id":7666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"2144:5:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7660,"name":"k1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"2121:2:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":7659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2113:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7658,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:39","typeDescriptions":{}}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2113:11:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7655,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"2093:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"}],"expression":{"id":7652,"name":"TokenDeltaMappingSlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"2060:25:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561_$","typeString":"type(TokenDeltaMappingSlotType)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2086:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"2060:32:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561_$returns$_t_bytes32_$","typeString":"function (TokenDeltaMappingSlotType) pure returns (bytes32)"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:38:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2099:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"2060:52:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:65:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2126:8:39","memberName":"asInt256","nodeType":"MemberAccess","referencedDeclaration":7440,"src":"2060:74:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Int256SlotType_$7425_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Int256SlotType)"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:76:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Int256SlotType_$7425","typeString":"StorageSlotExtension.Int256SlotType"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2137:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7550,"src":"2060:83:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Int256SlotType_$7425_$_t_int256_$returns$__$attached_to$_t_userDefinedValueType$_Int256SlotType_$7425_$","typeString":"function (StorageSlotExtension.Int256SlotType,int256)"}},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:90:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7668,"nodeType":"ExpressionStatement","src":"2060:90:39"}]},"id":7670,"implemented":true,"kind":"function","modifiers":[],"name":"tSet","nameLocation":"1979:4:39","nodeType":"FunctionDefinition","parameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"mutability":"mutable","name":"slot","nameLocation":"2010:4:39","nodeType":"VariableDeclaration","scope":7670,"src":"1984:30:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"},"typeName":{"id":7643,"nodeType":"UserDefinedTypeName","pathNode":{"id":7642,"name":"TokenDeltaMappingSlotType","nameLocations":["1984:25:39"],"nodeType":"IdentifierPath","referencedDeclaration":7561,"src":"1984:25:39"},"referencedDeclaration":7561,"src":"1984:25:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_TokenDeltaMappingSlotType_$7561","typeString":"TokenDeltaMappingSlotType"}},"visibility":"internal"},{"constant":false,"id":7647,"mutability":"mutable","name":"k1","nameLocation":"2023:2:39","nodeType":"VariableDeclaration","scope":7670,"src":"2016:9:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":7646,"nodeType":"UserDefinedTypeName","pathNode":{"id":7645,"name":"IERC20","nameLocations":["2016:6:39"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"2016:6:39"},"referencedDeclaration":337,"src":"2016:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7649,"mutability":"mutable","name":"value","nameLocation":"2034:5:39","nodeType":"VariableDeclaration","scope":7670,"src":"2027:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7648,"name":"int256","nodeType":"ElementaryTypeName","src":"2027:6:39","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1983:57:39"},"returnParameters":{"id":7651,"nodeType":"ParameterList","parameters":[],"src":"2050:0:39"},"scope":8145,"src":"1970:187:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7692,"nodeType":"Block","src":"2253:100:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7685,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"2322:3:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7682,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"2302:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}],"expression":{"id":7680,"name":"AddressToUintMappingSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"2270:24:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$","typeString":"type(AddressToUintMappingSlot)"}},"id":7681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2295:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"2270:31:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$returns$_t_bytes32_$","typeString":"function (AddressToUintMappingSlot) pure returns (bytes32)"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2308:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"2270:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:56:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2327:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"2270:66:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2339:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"2270:74:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:76:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7679,"id":7691,"nodeType":"Return","src":"2263:83:39"}]},"id":7693,"implemented":true,"kind":"function","modifiers":[],"name":"tGet","nameLocation":"2172:4:39","nodeType":"FunctionDefinition","parameters":{"id":7676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7673,"mutability":"mutable","name":"slot","nameLocation":"2202:4:39","nodeType":"VariableDeclaration","scope":7693,"src":"2177:29:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"},"typeName":{"id":7672,"nodeType":"UserDefinedTypeName","pathNode":{"id":7671,"name":"AddressToUintMappingSlot","nameLocations":["2177:24:39"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"2177:24:39"},"referencedDeclaration":7563,"src":"2177:24:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}},"visibility":"internal"},{"constant":false,"id":7675,"mutability":"mutable","name":"key","nameLocation":"2216:3:39","nodeType":"VariableDeclaration","scope":7693,"src":"2208:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7674,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2176:44:39"},"returnParameters":{"id":7679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7693,"src":"2244:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2243:9:39"},"scope":8145,"src":"2163:190:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7717,"nodeType":"Block","src":"2441:99:39","statements":[{"expression":{"arguments":[{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"2527:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7709,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"2503:3:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7706,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"2483:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}],"expression":{"id":7703,"name":"AddressToUintMappingSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"2451:24:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$","typeString":"type(AddressToUintMappingSlot)"}},"id":7705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2476:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"2451:31:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$returns$_t_bytes32_$","typeString":"function (AddressToUintMappingSlot) pure returns (bytes32)"}},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2451:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2489:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"2451:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2451:56:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2508:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"2451:66:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2451:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2520:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"2451:75:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2451:82:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7716,"nodeType":"ExpressionStatement","src":"2451:82:39"}]},"id":7718,"implemented":true,"kind":"function","modifiers":[],"name":"tSet","nameLocation":"2368:4:39","nodeType":"FunctionDefinition","parameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7696,"mutability":"mutable","name":"slot","nameLocation":"2398:4:39","nodeType":"VariableDeclaration","scope":7718,"src":"2373:29:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"},"typeName":{"id":7695,"nodeType":"UserDefinedTypeName","pathNode":{"id":7694,"name":"AddressToUintMappingSlot","nameLocations":["2373:24:39"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"2373:24:39"},"referencedDeclaration":7563,"src":"2373:24:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}},"visibility":"internal"},{"constant":false,"id":7698,"mutability":"mutable","name":"key","nameLocation":"2412:3:39","nodeType":"VariableDeclaration","scope":7718,"src":"2404:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7697,"name":"address","nodeType":"ElementaryTypeName","src":"2404:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7700,"mutability":"mutable","name":"value","nameLocation":"2425:5:39","nodeType":"VariableDeclaration","scope":7718,"src":"2417:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:59:39"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[],"src":"2441:0:39"},"scope":8145,"src":"2359:181:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"2696:236:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7738,"name":"addressKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"2860:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7735,"name":"uintKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"2820:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7732,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"2783:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"}],"expression":{"id":7730,"name":"UintToAddressToBooleanMappingSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"2725:33:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565_$","typeString":"type(UintToAddressToBooleanMappingSlot)"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2776:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"2725:57:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565_$returns$_t_bytes32_$","typeString":"function (UintToAddressToBooleanMappingSlot) pure returns (bytes32)"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:63:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"2725:94:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:103:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2846:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"2725:134:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:146:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2889:9:39","memberName":"asBoolean","nodeType":"MemberAccess","referencedDeclaration":7389,"src":"2725:173:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:175:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2918:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"2725:198:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_BooleanSlotType_$7374_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType) view returns (bool)"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:200:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7729,"id":7744,"nodeType":"Return","src":"2706:219:39"}]},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"tGet","nameLocation":"2555:4:39","nodeType":"FunctionDefinition","parameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7721,"mutability":"mutable","name":"slot","nameLocation":"2603:4:39","nodeType":"VariableDeclaration","scope":7746,"src":"2569:38:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"},"typeName":{"id":7720,"nodeType":"UserDefinedTypeName","pathNode":{"id":7719,"name":"UintToAddressToBooleanMappingSlot","nameLocations":["2569:33:39"],"nodeType":"IdentifierPath","referencedDeclaration":7565,"src":"2569:33:39"},"referencedDeclaration":7565,"src":"2569:33:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"}},"visibility":"internal"},{"constant":false,"id":7723,"mutability":"mutable","name":"uintKey","nameLocation":"2625:7:39","nodeType":"VariableDeclaration","scope":7746,"src":"2617:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2617:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7725,"mutability":"mutable","name":"addressKey","nameLocation":"2650:10:39","nodeType":"VariableDeclaration","scope":7746,"src":"2642:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7724,"name":"address","nodeType":"ElementaryTypeName","src":"2642:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2559:107:39"},"returnParameters":{"id":7729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7746,"src":"2690:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7727,"name":"bool","nodeType":"ElementaryTypeName","src":"2690:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2689:6:39"},"scope":8145,"src":"2546:386:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7775,"nodeType":"Block","src":"3050:203:39","statements":[{"expression":{"arguments":[{"id":7772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"3240:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7767,"name":"addressKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"3183:10:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7764,"name":"uintKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"3147:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7761,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"3114:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"}],"expression":{"id":7758,"name":"UintToAddressToBooleanMappingSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"3060:33:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565_$","typeString":"type(UintToAddressToBooleanMappingSlot)"}},"id":7760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3107:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"3060:53:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565_$returns$_t_bytes32_$","typeString":"function (UintToAddressToBooleanMappingSlot) pure returns (bytes32)"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:59:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3133:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"3060:86:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:95:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3169:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"3060:122:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:134:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3208:9:39","memberName":"asBoolean","nodeType":"MemberAccess","referencedDeclaration":7389,"src":"3060:157:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$7374_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.BooleanSlotType)"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:159:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BooleanSlotType_$7374","typeString":"StorageSlotExtension.BooleanSlotType"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3233:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7484,"src":"3060:179:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_BooleanSlotType_$7374_$_t_bool_$returns$__$attached_to$_t_userDefinedValueType$_BooleanSlotType_$7374_$","typeString":"function (StorageSlotExtension.BooleanSlotType,bool)"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:186:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7774,"nodeType":"ExpressionStatement","src":"3060:186:39"}]},"id":7776,"implemented":true,"kind":"function","modifiers":[],"name":"tSet","nameLocation":"2947:4:39","nodeType":"FunctionDefinition","parameters":{"id":7756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"slot","nameLocation":"2986:4:39","nodeType":"VariableDeclaration","scope":7776,"src":"2952:38:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"},"typeName":{"id":7748,"nodeType":"UserDefinedTypeName","pathNode":{"id":7747,"name":"UintToAddressToBooleanMappingSlot","nameLocations":["2952:33:39"],"nodeType":"IdentifierPath","referencedDeclaration":7565,"src":"2952:33:39"},"referencedDeclaration":7565,"src":"2952:33:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_UintToAddressToBooleanMappingSlot_$7565","typeString":"UintToAddressToBooleanMappingSlot"}},"visibility":"internal"},{"constant":false,"id":7751,"mutability":"mutable","name":"uintKey","nameLocation":"3000:7:39","nodeType":"VariableDeclaration","scope":7776,"src":"2992:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2992:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7753,"mutability":"mutable","name":"addressKey","nameLocation":"3017:10:39","nodeType":"VariableDeclaration","scope":7776,"src":"3009:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7752,"name":"address","nodeType":"ElementaryTypeName","src":"3009:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7755,"mutability":"mutable","name":"value","nameLocation":"3034:5:39","nodeType":"VariableDeclaration","scope":7776,"src":"3029:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7754,"name":"bool","nodeType":"ElementaryTypeName","src":"3029:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2951:89:39"},"returnParameters":{"id":7757,"nodeType":"ParameterList","parameters":[],"src":"3050:0:39"},"scope":8145,"src":"2938:315:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7805,"nodeType":"Block","src":"3404:117:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7798,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"3495:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}},{"id":7799,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"3501:3:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7797,"name":"tGet","nodeType":"Identifier","overloadedDeclarations":[7641,7693,7746],"referencedDeclaration":7693,"src":"3490:4:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$_t_address_$returns$_t_uint256_$","typeString":"function (AddressToUintMappingSlot,address) view returns (uint256)"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:15:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"3508:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3490:23:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7792,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"3466:3:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7789,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"3446:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}],"expression":{"id":7786,"name":"AddressToUintMappingSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3414:24:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$","typeString":"type(AddressToUintMappingSlot)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3439:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"3414:31:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$returns$_t_bytes32_$","typeString":"function (AddressToUintMappingSlot) pure returns (bytes32)"}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3452:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"3414:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:56:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3471:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"3414:66:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3483:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"3414:75:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:100:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7804,"nodeType":"ExpressionStatement","src":"3414:100:39"}]},"id":7806,"implemented":true,"kind":"function","modifiers":[],"name":"tAdd","nameLocation":"3331:4:39","nodeType":"FunctionDefinition","parameters":{"id":7784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"mutability":"mutable","name":"slot","nameLocation":"3361:4:39","nodeType":"VariableDeclaration","scope":7806,"src":"3336:29:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"},"typeName":{"id":7778,"nodeType":"UserDefinedTypeName","pathNode":{"id":7777,"name":"AddressToUintMappingSlot","nameLocations":["3336:24:39"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"3336:24:39"},"referencedDeclaration":7563,"src":"3336:24:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}},"visibility":"internal"},{"constant":false,"id":7781,"mutability":"mutable","name":"key","nameLocation":"3375:3:39","nodeType":"VariableDeclaration","scope":7806,"src":"3367:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7780,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7783,"mutability":"mutable","name":"value","nameLocation":"3388:5:39","nodeType":"VariableDeclaration","scope":7806,"src":"3380:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3335:59:39"},"returnParameters":{"id":7785,"nodeType":"ParameterList","parameters":[],"src":"3404:0:39"},"scope":8145,"src":"3322:199:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7835,"nodeType":"Block","src":"3609:117:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7828,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"3700:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}},{"id":7829,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"3706:3:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7827,"name":"tGet","nodeType":"Identifier","overloadedDeclarations":[7641,7693,7746],"referencedDeclaration":7693,"src":"3695:4:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$_t_address_$returns$_t_uint256_$","typeString":"function (AddressToUintMappingSlot,address) view returns (uint256)"}},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3695:15:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"3713:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3695:23:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7822,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"3671:3:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7819,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"3651:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}],"expression":{"id":7816,"name":"AddressToUintMappingSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3619:24:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$","typeString":"type(AddressToUintMappingSlot)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3644:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"3619:31:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressToUintMappingSlot_$7563_$returns$_t_bytes32_$","typeString":"function (AddressToUintMappingSlot) pure returns (bytes32)"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:13:39","memberName":"deriveMapping","nodeType":"MemberAccess","referencedDeclaration":7265,"src":"3619:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,address) pure returns (bytes32)"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:56:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3676:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"3619:66:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3688:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"3619:75:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:100:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7834,"nodeType":"ExpressionStatement","src":"3619:100:39"}]},"id":7836,"implemented":true,"kind":"function","modifiers":[],"name":"tSub","nameLocation":"3536:4:39","nodeType":"FunctionDefinition","parameters":{"id":7814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7809,"mutability":"mutable","name":"slot","nameLocation":"3566:4:39","nodeType":"VariableDeclaration","scope":7836,"src":"3541:29:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"},"typeName":{"id":7808,"nodeType":"UserDefinedTypeName","pathNode":{"id":7807,"name":"AddressToUintMappingSlot","nameLocations":["3541:24:39"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"3541:24:39"},"referencedDeclaration":7563,"src":"3541:24:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressToUintMappingSlot_$7563","typeString":"AddressToUintMappingSlot"}},"visibility":"internal"},{"constant":false,"id":7811,"mutability":"mutable","name":"key","nameLocation":"3580:3:39","nodeType":"VariableDeclaration","scope":7836,"src":"3572:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7810,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7813,"mutability":"mutable","name":"value","nameLocation":"3593:5:39","nodeType":"VariableDeclaration","scope":7836,"src":"3585:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7812,"name":"uint256","nodeType":"ElementaryTypeName","src":"3585:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:59:39"},"returnParameters":{"id":7815,"nodeType":"ParameterList","parameters":[],"src":"3609:0:39"},"scope":8145,"src":"3527:199:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7853,"nodeType":"Block","src":"4016:77:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7846,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"4061:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":7844,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"4033:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4054:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"4033:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4033:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4067:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"4033:43:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4033:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4079:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"4033:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4033:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7843,"id":7852,"nodeType":"Return","src":"4026:60:39"}]},"id":7854,"implemented":true,"kind":"function","modifiers":[],"name":"tLength","nameLocation":"3949:7:39","nodeType":"FunctionDefinition","parameters":{"id":7840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7839,"mutability":"mutable","name":"slot","nameLocation":"3978:4:39","nodeType":"VariableDeclaration","scope":7854,"src":"3957:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7838,"nodeType":"UserDefinedTypeName","pathNode":{"id":7837,"name":"AddressArraySlotType","nameLocations":["3957:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"3957:20:39"},"referencedDeclaration":7567,"src":"3957:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"}],"src":"3956:27:39"},"returnParameters":{"id":7843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7854,"src":"4007:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4007:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4006:9:39"},"scope":8145,"src":"3940:153:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7883,"nodeType":"Block","src":"4186:152:39","statements":[{"expression":{"arguments":[{"id":7865,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"4221:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},{"id":7866,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"4227:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7864,"name":"_ensureIndexWithinBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"4196:24:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressArraySlotType_$7567_$_t_uint256_$returns$__$","typeString":"function (AddressArraySlotType,uint256) view"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4196:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7868,"nodeType":"ExpressionStatement","src":"4196:37:39"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7876,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7859,"src":"4305:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7871,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"4278:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":7869,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"4250:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"4250:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4284:11:39","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"4250:45:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:47:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4298:6:39","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":7243,"src":"4250:54:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:61:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4312:9:39","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"4250:71:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:73:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4324:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"4250:79:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressSlotType_$7357_$returns$_t_address_$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType) view returns (address)"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:81:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7863,"id":7882,"nodeType":"Return","src":"4243:88:39"}]},"id":7884,"implemented":true,"kind":"function","modifiers":[],"name":"tAt","nameLocation":"4108:3:39","nodeType":"FunctionDefinition","parameters":{"id":7860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"slot","nameLocation":"4133:4:39","nodeType":"VariableDeclaration","scope":7884,"src":"4112:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7856,"nodeType":"UserDefinedTypeName","pathNode":{"id":7855,"name":"AddressArraySlotType","nameLocations":["4112:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"4112:20:39"},"referencedDeclaration":7567,"src":"4112:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"},{"constant":false,"id":7859,"mutability":"mutable","name":"index","nameLocation":"4147:5:39","nodeType":"VariableDeclaration","scope":7884,"src":"4139:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4139:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4111:42:39"},"returnParameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7884,"src":"4177:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7861,"name":"address","nodeType":"ElementaryTypeName","src":"4177:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4176:9:39"},"scope":8145,"src":"4099:239:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7915,"nodeType":"Block","src":"4424:151:39","statements":[{"expression":{"arguments":[{"id":7895,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"4459:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},{"id":7896,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"4465:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7894,"name":"_ensureIndexWithinBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7944,"src":"4434:24:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressArraySlotType_$7567_$_t_uint256_$returns$__$","typeString":"function (AddressArraySlotType,uint256) view"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4434:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7898,"nodeType":"ExpressionStatement","src":"4434:37:39"},{"expression":{"arguments":[{"id":7912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"4562:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7907,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"4536:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7902,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"4509:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":7899,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"4481:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4502:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"4481:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4515:11:39","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"4481:45:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:47:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4529:6:39","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":7243,"src":"4481:54:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:61:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:9:39","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"4481:71:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:73:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4555:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"4481:80:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_AddressSlotType_$7357_$_t_address_$returns$__$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType,address)"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:87:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7914,"nodeType":"ExpressionStatement","src":"4481:87:39"}]},"id":7916,"implemented":true,"kind":"function","modifiers":[],"name":"tSet","nameLocation":"4353:4:39","nodeType":"FunctionDefinition","parameters":{"id":7892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7887,"mutability":"mutable","name":"slot","nameLocation":"4379:4:39","nodeType":"VariableDeclaration","scope":7916,"src":"4358:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7886,"nodeType":"UserDefinedTypeName","pathNode":{"id":7885,"name":"AddressArraySlotType","nameLocations":["4358:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"4358:20:39"},"referencedDeclaration":7567,"src":"4358:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"},{"constant":false,"id":7889,"mutability":"mutable","name":"index","nameLocation":"4393:5:39","nodeType":"VariableDeclaration","scope":7916,"src":"4385:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7888,"name":"uint256","nodeType":"ElementaryTypeName","src":"4385:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7891,"mutability":"mutable","name":"value","nameLocation":"4408:5:39","nodeType":"VariableDeclaration","scope":7916,"src":"4400:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7890,"name":"address","nodeType":"ElementaryTypeName","src":"4400:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4357:57:39"},"returnParameters":{"id":7893,"nodeType":"ParameterList","parameters":[],"src":"4424:0:39"},"scope":8145,"src":"4344:231:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7943,"nodeType":"Block","src":"4670:176:39","statements":[{"assignments":[7925],"declarations":[{"constant":false,"id":7925,"mutability":"mutable","name":"length","nameLocation":"4688:6:39","nodeType":"VariableDeclaration","scope":7943,"src":"4680:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4680:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7934,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7928,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"4725:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":7926,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"4697:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4718:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"4697:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4697:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4731:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"4697:43:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4697:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4743:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"4697:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4697:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4680:70:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7935,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"4764:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7936,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"4773:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4764:15:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7942,"nodeType":"IfStatement","src":"4760:80:39","trueBody":{"id":7941,"nodeType":"Block","src":"4781:59:39","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7938,"name":"TransientIndexOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"4802:25:39","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4802:27:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7940,"nodeType":"RevertStatement","src":"4795:34:39"}]}}]},"id":7944,"implemented":true,"kind":"function","modifiers":[],"name":"_ensureIndexWithinBounds","nameLocation":"4590:24:39","nodeType":"FunctionDefinition","parameters":{"id":7922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7919,"mutability":"mutable","name":"slot","nameLocation":"4636:4:39","nodeType":"VariableDeclaration","scope":7944,"src":"4615:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7918,"nodeType":"UserDefinedTypeName","pathNode":{"id":7917,"name":"AddressArraySlotType","nameLocations":["4615:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"4615:20:39"},"referencedDeclaration":7567,"src":"4615:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"},{"constant":false,"id":7921,"mutability":"mutable","name":"index","nameLocation":"4650:5:39","nodeType":"VariableDeclaration","scope":7944,"src":"4642:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4642:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4614:42:39"},"returnParameters":{"id":7923,"nodeType":"ParameterList","parameters":[],"src":"4670:0:39"},"scope":8145,"src":"4581:265:39","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7968,"nodeType":"Block","src":"4948:105:39","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7961,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7949,"src":"5020:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7956,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"4993:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":7954,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"4965:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4986:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"4965:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4999:11:39","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"4965:45:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:47:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5013:6:39","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":7243,"src":"4965:54:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:61:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5027:9:39","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"4965:71:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:73:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5039:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"4965:79:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressSlotType_$7357_$returns$_t_address_$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType) view returns (address)"}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:81:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7953,"id":7967,"nodeType":"Return","src":"4958:88:39"}]},"id":7969,"implemented":true,"kind":"function","modifiers":[],"name":"tUncheckedAt","nameLocation":"4861:12:39","nodeType":"FunctionDefinition","parameters":{"id":7950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7947,"mutability":"mutable","name":"slot","nameLocation":"4895:4:39","nodeType":"VariableDeclaration","scope":7969,"src":"4874:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7946,"nodeType":"UserDefinedTypeName","pathNode":{"id":7945,"name":"AddressArraySlotType","nameLocations":["4874:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"4874:20:39"},"referencedDeclaration":7567,"src":"4874:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"},{"constant":false,"id":7949,"mutability":"mutable","name":"index","nameLocation":"4909:5:39","nodeType":"VariableDeclaration","scope":7969,"src":"4901:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4901:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4873:42:39"},"returnParameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7969,"src":"4939:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7951,"name":"address","nodeType":"ElementaryTypeName","src":"4939:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4938:9:39"},"scope":8145,"src":"4852:201:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7995,"nodeType":"Block","src":"5148:104:39","statements":[{"expression":{"arguments":[{"id":7992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"5239:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7987,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"5213:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7982,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"5186:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":7979,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"5158:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5179:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"5158:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5192:11:39","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"5158:45:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:47:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5206:6:39","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":7243,"src":"5158:54:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:61:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:9:39","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"5158:71:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:73:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5232:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"5158:80:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_AddressSlotType_$7357_$_t_address_$returns$__$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType,address)"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:87:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7994,"nodeType":"ExpressionStatement","src":"5158:87:39"}]},"id":7996,"implemented":true,"kind":"function","modifiers":[],"name":"tUncheckedSet","nameLocation":"5068:13:39","nodeType":"FunctionDefinition","parameters":{"id":7977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"slot","nameLocation":"5103:4:39","nodeType":"VariableDeclaration","scope":7996,"src":"5082:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7971,"nodeType":"UserDefinedTypeName","pathNode":{"id":7970,"name":"AddressArraySlotType","nameLocations":["5082:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"5082:20:39"},"referencedDeclaration":7567,"src":"5082:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"},{"constant":false,"id":7974,"mutability":"mutable","name":"index","nameLocation":"5117:5:39","nodeType":"VariableDeclaration","scope":7996,"src":"5109:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7973,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7976,"mutability":"mutable","name":"value","nameLocation":"5132:5:39","nodeType":"VariableDeclaration","scope":7996,"src":"5124:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7975,"name":"address","nodeType":"ElementaryTypeName","src":"5124:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5081:57:39"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[],"src":"5148:0:39"},"scope":8145,"src":"5059:193:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8044,"nodeType":"Block","src":"5324:393:39","statements":[{"assignments":[8005],"declarations":[{"constant":false,"id":8005,"mutability":"mutable","name":"length","nameLocation":"5416:6:39","nodeType":"VariableDeclaration","scope":8044,"src":"5408:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5408:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8014,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8008,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"5453:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":8006,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"5425:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5446:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"5425:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5425:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5459:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"5425:43:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5425:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5471:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"5425:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5425:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5408:70:39"},{"expression":{"arguments":[{"id":8028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"5570:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8023,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"5543:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8018,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"5516:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":8015,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"5488:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5509:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"5488:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5522:11:39","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"5488:45:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:47:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5536:6:39","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":7243,"src":"5488:54:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:62:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5551:9:39","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"5488:72:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:74:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5563:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"5488:81:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_AddressSlotType_$7357_$_t_address_$returns$__$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType,address)"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5488:88:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8030,"nodeType":"ExpressionStatement","src":"5488:88:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8039,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"5699:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5708:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5699:10:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8034,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"5674:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":8031,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"5646:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":8033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5667:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"5646:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"5646:43:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5692:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"5646:52:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:64:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8043,"nodeType":"ExpressionStatement","src":"5646:64:39"}]},"id":8045,"implemented":true,"kind":"function","modifiers":[],"name":"tPush","nameLocation":"5267:5:39","nodeType":"FunctionDefinition","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7999,"mutability":"mutable","name":"slot","nameLocation":"5294:4:39","nodeType":"VariableDeclaration","scope":8045,"src":"5273:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":7998,"nodeType":"UserDefinedTypeName","pathNode":{"id":7997,"name":"AddressArraySlotType","nameLocations":["5273:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"5273:20:39"},"referencedDeclaration":7567,"src":"5273:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"},{"constant":false,"id":8001,"mutability":"mutable","name":"value","nameLocation":"5308:5:39","nodeType":"VariableDeclaration","scope":8045,"src":"5300:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8000,"name":"address","nodeType":"ElementaryTypeName","src":"5300:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5272:42:39"},"returnParameters":{"id":8003,"nodeType":"ParameterList","parameters":[],"src":"5324:0:39"},"scope":8145,"src":"5258:459:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8109,"nodeType":"Block","src":"5797:654:39","statements":[{"assignments":[8054],"declarations":[{"constant":false,"id":8054,"mutability":"mutable","name":"lastElementIndex","nameLocation":"5815:16:39","nodeType":"VariableDeclaration","scope":8109,"src":"5807:24:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8053,"name":"uint256","nodeType":"ElementaryTypeName","src":"5807:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8065,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8057,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"5862:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":8055,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"5834:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":8056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5855:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"5834:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5868:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"5834:43:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5880:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"5834:51:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5890:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5834:57:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5807:84:39"},{"expression":{"arguments":[{"id":8074,"name":"lastElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"6064:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8069,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"6039:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":8066,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"6011:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6032:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"6011:27:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6011:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6045:9:39","memberName":"asUint256","nodeType":"MemberAccess","referencedDeclaration":7423,"src":"6011:43:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$7408_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.Uint256SlotType)"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6011:45:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6057:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"6011:52:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6011:70:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8076,"nodeType":"ExpressionStatement","src":"6011:70:39"},{"assignments":[8081],"declarations":[{"constant":false,"id":8081,"mutability":"mutable","name":"lastElementSlot","nameLocation":"6128:15:39","nodeType":"VariableDeclaration","scope":8109,"src":"6091:52:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"},"typeName":{"id":8080,"nodeType":"UserDefinedTypeName","pathNode":{"id":8079,"name":"StorageSlotExtension.AddressSlotType","nameLocations":["6091:20:39","6112:15:39"],"nodeType":"IdentifierPath","referencedDeclaration":7357,"src":"6091:36:39"},"referencedDeclaration":7357,"src":"6091:36:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"visibility":"internal"}],"id":8093,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8089,"name":"lastElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"6240:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8084,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8048,"src":"6187:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}],"expression":{"id":8082,"name":"AddressArraySlotType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"6146:20:39","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_AddressArraySlotType_$7567_$","typeString":"type(AddressArraySlotType)"}},"id":8083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6180:6:39","memberName":"unwrap","nodeType":"MemberAccess","src":"6146:40:39","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_AddressArraySlotType_$7567_$returns$_t_bytes32_$","typeString":"function (AddressArraySlotType) pure returns (bytes32)"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6146:46:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6206:11:39","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":7253,"src":"6146:71:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6146:73:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6233:6:39","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":7243,"src":"6146:93:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6146:111:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6271:9:39","memberName":"asAddress","nodeType":"MemberAccess","referencedDeclaration":7372,"src":"6146:134:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$7357_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (StorageSlotExtension.AddressSlotType)"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6146:136:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"nodeType":"VariableDeclarationStatement","src":"6091:191:39"},{"expression":{"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"6324:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8095,"name":"lastElementSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"6332:15:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7451,"src":"6332:21:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_AddressSlotType_$7357_$returns$_t_address_$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType) view returns (address)"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6332:23:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6324:31:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8099,"nodeType":"ExpressionStatement","src":"6324:31:39"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":8105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6441:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6433:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8103,"name":"address","nodeType":"ElementaryTypeName","src":"6433:7:39","typeDescriptions":{}}},"id":8106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8100,"name":"lastElementSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"6410:15:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressSlotType_$7357","typeString":"StorageSlotExtension.AddressSlotType"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6426:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7462,"src":"6410:22:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_AddressSlotType_$7357_$_t_address_$returns$__$attached_to$_t_userDefinedValueType$_AddressSlotType_$7357_$","typeString":"function (StorageSlotExtension.AddressSlotType,address)"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6410:34:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8108,"nodeType":"ExpressionStatement","src":"6410:34:39"}]},"id":8110,"implemented":true,"kind":"function","modifiers":[],"name":"tPop","nameLocation":"5732:4:39","nodeType":"FunctionDefinition","parameters":{"id":8049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8048,"mutability":"mutable","name":"slot","nameLocation":"5758:4:39","nodeType":"VariableDeclaration","scope":8110,"src":"5737:25:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"},"typeName":{"id":8047,"nodeType":"UserDefinedTypeName","pathNode":{"id":8046,"name":"AddressArraySlotType","nameLocations":["5737:20:39"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"5737:20:39"},"referencedDeclaration":7567,"src":"5737:20:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_AddressArraySlotType_$7567","typeString":"AddressArraySlotType"}},"visibility":"internal"}],"src":"5736:27:39"},"returnParameters":{"id":8052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8051,"mutability":"mutable","name":"value","nameLocation":"5790:5:39","nodeType":"VariableDeclaration","scope":8110,"src":"5782:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8050,"name":"address","nodeType":"ElementaryTypeName","src":"5782:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5781:15:39"},"scope":8145,"src":"5723:728:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8126,"nodeType":"Block","src":"6741:46:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8119,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"6763:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6768:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"6763:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6763:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6778:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6763:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8116,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"6751:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"6751:11:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6751:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8125,"nodeType":"ExpressionStatement","src":"6751:29:39"}]},"id":8127,"implemented":true,"kind":"function","modifiers":[],"name":"tIncrement","nameLocation":"6678:10:39","nodeType":"FunctionDefinition","parameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"slot","nameLocation":"6726:4:39","nodeType":"VariableDeclaration","scope":8127,"src":"6689:41:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"},"typeName":{"id":8112,"nodeType":"UserDefinedTypeName","pathNode":{"id":8111,"name":"StorageSlotExtension.Uint256SlotType","nameLocations":["6689:20:39","6710:15:39"],"nodeType":"IdentifierPath","referencedDeclaration":7408,"src":"6689:36:39"},"referencedDeclaration":7408,"src":"6689:36:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"visibility":"internal"}],"src":"6688:43:39"},"returnParameters":{"id":8115,"nodeType":"ParameterList","parameters":[],"src":"6741:0:39"},"scope":8145,"src":"6669:118:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8143,"nodeType":"Block","src":"6865:46:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8136,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"6887:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6892:5:39","memberName":"tload","nodeType":"MemberAccess","referencedDeclaration":7517,"src":"6887:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Uint256SlotType_$7408_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType) view returns (uint256)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6887:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6902:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8133,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"6875:4:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6880:6:39","memberName":"tstore","nodeType":"MemberAccess","referencedDeclaration":7528,"src":"6875:11:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_userDefinedValueType$_Uint256SlotType_$7408_$_t_uint256_$returns$__$attached_to$_t_userDefinedValueType$_Uint256SlotType_$7408_$","typeString":"function (StorageSlotExtension.Uint256SlotType,uint256)"}},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8142,"nodeType":"ExpressionStatement","src":"6875:29:39"}]},"id":8144,"implemented":true,"kind":"function","modifiers":[],"name":"tDecrement","nameLocation":"6802:10:39","nodeType":"FunctionDefinition","parameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8130,"mutability":"mutable","name":"slot","nameLocation":"6850:4:39","nodeType":"VariableDeclaration","scope":8144,"src":"6813:41:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"},"typeName":{"id":8129,"nodeType":"UserDefinedTypeName","pathNode":{"id":8128,"name":"StorageSlotExtension.Uint256SlotType","nameLocations":["6813:20:39","6834:15:39"],"nodeType":"IdentifierPath","referencedDeclaration":7408,"src":"6813:36:39"},"referencedDeclaration":7408,"src":"6813:36:39","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Uint256SlotType_$7408","typeString":"StorageSlotExtension.Uint256SlotType"}},"visibility":"internal"}],"src":"6812:43:39"},"returnParameters":{"id":8132,"nodeType":"ParameterList","parameters":[],"src":"6865:0:39"},"scope":8145,"src":"6793:118:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8146,"src":"963:5950:39","usedErrors":[7575],"usedEvents":[]}],"src":"46:6868:39"},"id":39},"contracts/VaultGuard.sol":{"ast":{"absolutePath":"contracts/VaultGuard.sol","exportedSymbols":{"IVault":[4357],"IVaultErrors":[5014],"VaultGuard":[8194]},"id":8195,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8147,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:40"},{"absolutePath":"contracts/IVaultErrors.sol","file":"./IVaultErrors.sol","id":8149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8195,"sourceUnit":5015,"src":"72:50:40","symbolAliases":[{"foreign":{"id":8148,"name":"IVaultErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"81:12:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":8151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8195,"sourceUnit":4358,"src":"123:38:40","symbolAliases":[{"foreign":{"id":8150,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"132:6:40","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"VaultGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":8152,"nodeType":"StructuredDocumentation","src":"163:59:40","text":"@notice Contract that shares the modifier `onlyVault`."},"fullyImplemented":true,"id":8194,"linearizedBaseContracts":[8194],"name":"VaultGuard","nameLocation":"231:10:40","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8155,"mutability":"immutable","name":"_vault","nameLocation":"274:6:40","nodeType":"VariableDeclaration","scope":8194,"src":"248:32:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":8154,"nodeType":"UserDefinedTypeName","pathNode":{"id":8153,"name":"IVault","nameLocations":["248:6:40"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"248:6:40"},"referencedDeclaration":4357,"src":"248:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"},{"body":{"id":8165,"nodeType":"Block","src":"313:31:40","statements":[{"expression":{"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8161,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"323:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8162,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8158,"src":"332:5:40","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"src":"323:14:40","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8164,"nodeType":"ExpressionStatement","src":"323:14:40"}]},"id":8166,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8158,"mutability":"mutable","name":"vault","nameLocation":"306:5:40","nodeType":"VariableDeclaration","scope":8166,"src":"299:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":8157,"nodeType":"UserDefinedTypeName","pathNode":{"id":8156,"name":"IVault","nameLocations":["299:6:40"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"299:6:40"},"referencedDeclaration":4357,"src":"299:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"}],"src":"298:14:40"},"returnParameters":{"id":8160,"nodeType":"ParameterList","parameters":[],"src":"313:0:40"},"scope":8194,"src":"287:57:40","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8172,"nodeType":"Block","src":"371:46:40","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8168,"name":"_ensureOnlyVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"381:16:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"381:18:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8170,"nodeType":"ExpressionStatement","src":"381:18:40"},{"id":8171,"nodeType":"PlaceholderStatement","src":"409:1:40"}]},"id":8173,"name":"onlyVault","nameLocation":"359:9:40","nodeType":"ModifierDefinition","parameters":{"id":8167,"nodeType":"ParameterList","parameters":[],"src":"368:2:40"},"src":"350:67:40","virtual":false,"visibility":"internal"},{"body":{"id":8192,"nodeType":"Block","src":"464:124:40","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"478:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"482:6:40","memberName":"sender","nodeType":"MemberAccess","src":"478:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":8180,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"500:6:40","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}],"id":8179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"492:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8178,"name":"address","nodeType":"ElementaryTypeName","src":"492:7:40","typeDescriptions":{}}},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:15:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"478:29:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8191,"nodeType":"IfStatement","src":"474:108:40","trueBody":{"id":8190,"nodeType":"Block","src":"509:73:40","statements":[{"errorCall":{"arguments":[{"expression":{"id":8186,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"560:3:40","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"564:6:40","memberName":"sender","nodeType":"MemberAccess","src":"560:10:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8183,"name":"IVaultErrors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"530:12:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVaultErrors_$5014_$","typeString":"type(contract IVaultErrors)"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"543:16:40","memberName":"SenderIsNotVault","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"530:29:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"530:41:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8189,"nodeType":"RevertStatement","src":"523:48:40"}]}}]},"id":8193,"implemented":true,"kind":"function","modifiers":[],"name":"_ensureOnlyVault","nameLocation":"432:16:40","nodeType":"FunctionDefinition","parameters":{"id":8174,"nodeType":"ParameterList","parameters":[],"src":"448:2:40"},"returnParameters":{"id":8175,"nodeType":"ParameterList","parameters":[],"src":"464:0:40"},"scope":8194,"src":"423:165:40","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":8195,"src":"222:368:40","usedErrors":[],"usedEvents":[]}],"src":"46:545:40"},"id":40},"contracts/VaultTypes.sol":{"ast":{"absolutePath":"contracts/VaultTypes.sol","exportedSymbols":{"AddLiquidityKind":[8439],"AddLiquidityParams":[8455],"AfterSwapParams":[8433],"BufferWrapOrUnwrapParams":[8494],"FEE_BITLENGTH":[8497],"FEE_SCALING_FACTOR":[8500],"HookFlags":[8259],"HooksConfig":[8283],"IERC20":[337],"IERC4626":[259],"IRateProvider":[3701],"LiquidityManagement":[8212],"MAX_FEE_PERCENTAGE":[8503],"PoolConfig":[8237],"PoolConfigBits":[8214],"PoolData":[8361],"PoolRoleAccounts":[8309],"PoolSwapParams":[8404],"RemoveLiquidityKind":[8460],"RemoveLiquidityParams":[8476],"Rounding":[8364],"SwapKind":[8367],"SwapState":[8293],"TokenConfig":[8326],"TokenInfo":[8336],"TokenType":[8313],"VaultState":[8301],"VaultSwapParams":[8386],"WrappingDirection":[8479]},"id":8504,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8196,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:41"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8198,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8504,"sourceUnit":338,"src":"72:72:41","symbolAliases":[{"foreign":{"id":8197,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"81:6:41","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":8200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8504,"sourceUnit":260,"src":"145:75:41","symbolAliases":[{"foreign":{"id":8199,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"154:8:41","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IRateProvider.sol","file":"./IRateProvider.sol","id":8202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8504,"sourceUnit":3702,"src":"222:52:41","symbolAliases":[{"foreign":{"id":8201,"name":"IRateProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"231:13:41","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"LiquidityManagement","documentation":{"id":8203,"nodeType":"StructuredDocumentation","src":"276:472:41","text":" @notice Represents a pool's liquidity management configuration.\n @param disableUnbalancedLiquidity If set, liquidity can only be added or removed proportionally\n @param enableAddLiquidityCustom If set, the pool has implemented `onAddLiquidityCustom`\n @param enableRemoveLiquidityCustom If set, the pool has implemented `onRemoveLiquidityCustom`\n @param enableDonation If set, the pool will not revert if liquidity is added with AddLiquidityKind.DONATION"},"id":8212,"members":[{"constant":false,"id":8205,"mutability":"mutable","name":"disableUnbalancedLiquidity","nameLocation":"787:26:41","nodeType":"VariableDeclaration","scope":8212,"src":"782:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8204,"name":"bool","nodeType":"ElementaryTypeName","src":"782:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8207,"mutability":"mutable","name":"enableAddLiquidityCustom","nameLocation":"824:24:41","nodeType":"VariableDeclaration","scope":8212,"src":"819:29:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8206,"name":"bool","nodeType":"ElementaryTypeName","src":"819:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8209,"mutability":"mutable","name":"enableRemoveLiquidityCustom","nameLocation":"859:27:41","nodeType":"VariableDeclaration","scope":8212,"src":"854:32:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8208,"name":"bool","nodeType":"ElementaryTypeName","src":"854:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8211,"mutability":"mutable","name":"enableDonation","nameLocation":"897:14:41","nodeType":"VariableDeclaration","scope":8212,"src":"892:19:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8210,"name":"bool","nodeType":"ElementaryTypeName","src":"892:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"LiquidityManagement","nameLocation":"756:19:41","nodeType":"StructDefinition","scope":8504,"src":"749:165:41","visibility":"public"},{"canonicalName":"PoolConfigBits","id":8214,"name":"PoolConfigBits","nameLocation":"991:14:41","nodeType":"UserDefinedValueTypeDefinition","src":"986:31:41","underlyingType":{"id":8213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1009:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"PoolConfig","documentation":{"id":8215,"nodeType":"StructuredDocumentation","src":"1019:1034:41","text":" @notice Represents a pool's configuration (hooks configuration are separated in another struct).\n @param liquidityManagement Flags related to adding/removing liquidity\n @param staticSwapFeePercentage The pool's native swap fee\n @param aggregateSwapFeePercentage The total swap fee charged, including protocol and pool creator components\n @param aggregateYieldFeePercentage The total swap fee charged, including protocol and pool creator components\n @param tokenDecimalDiffs Compressed storage of the token decimals of each pool token\n @param pauseWindowEndTime Timestamp after which the pool cannot be paused\n @param isPoolRegistered If true, the pool has been registered with the Vault\n @param isPoolInitialized If true, the pool has been initialized with liquidity, and is available for trading\n @param isPoolPaused If true, the pool has been paused (by governance or the pauseManager)\n @param isPoolInRecoveryMode If true, the pool has been placed in recovery mode, enabling recovery mode withdrawals"},"id":8237,"members":[{"constant":false,"id":8218,"mutability":"mutable","name":"liquidityManagement","nameLocation":"2098:19:41","nodeType":"VariableDeclaration","scope":8237,"src":"2078:39:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_storage_ptr","typeString":"struct LiquidityManagement"},"typeName":{"id":8217,"nodeType":"UserDefinedTypeName","pathNode":{"id":8216,"name":"LiquidityManagement","nameLocations":["2078:19:41"],"nodeType":"IdentifierPath","referencedDeclaration":8212,"src":"2078:19:41"},"referencedDeclaration":8212,"src":"2078:19:41","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityManagement_$8212_storage_ptr","typeString":"struct LiquidityManagement"}},"visibility":"internal"},{"constant":false,"id":8220,"mutability":"mutable","name":"staticSwapFeePercentage","nameLocation":"2131:23:41","nodeType":"VariableDeclaration","scope":8237,"src":"2123:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8222,"mutability":"mutable","name":"aggregateSwapFeePercentage","nameLocation":"2168:26:41","nodeType":"VariableDeclaration","scope":8237,"src":"2160:34:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2160:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8224,"mutability":"mutable","name":"aggregateYieldFeePercentage","nameLocation":"2208:27:41","nodeType":"VariableDeclaration","scope":8237,"src":"2200:35:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8226,"mutability":"mutable","name":"tokenDecimalDiffs","nameLocation":"2248:17:41","nodeType":"VariableDeclaration","scope":8237,"src":"2241:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8225,"name":"uint40","nodeType":"ElementaryTypeName","src":"2241:6:41","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":8228,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"2278:18:41","nodeType":"VariableDeclaration","scope":8237,"src":"2271:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8227,"name":"uint32","nodeType":"ElementaryTypeName","src":"2271:6:41","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8230,"mutability":"mutable","name":"isPoolRegistered","nameLocation":"2307:16:41","nodeType":"VariableDeclaration","scope":8237,"src":"2302:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8229,"name":"bool","nodeType":"ElementaryTypeName","src":"2302:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8232,"mutability":"mutable","name":"isPoolInitialized","nameLocation":"2334:17:41","nodeType":"VariableDeclaration","scope":8237,"src":"2329:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8231,"name":"bool","nodeType":"ElementaryTypeName","src":"2329:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8234,"mutability":"mutable","name":"isPoolPaused","nameLocation":"2362:12:41","nodeType":"VariableDeclaration","scope":8237,"src":"2357:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8233,"name":"bool","nodeType":"ElementaryTypeName","src":"2357:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8236,"mutability":"mutable","name":"isPoolInRecoveryMode","nameLocation":"2385:20:41","nodeType":"VariableDeclaration","scope":8237,"src":"2380:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8235,"name":"bool","nodeType":"ElementaryTypeName","src":"2380:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PoolConfig","nameLocation":"2061:10:41","nodeType":"StructDefinition","scope":8504,"src":"2054:354:41","visibility":"public"},{"canonicalName":"HookFlags","documentation":{"id":8238,"nodeType":"StructuredDocumentation","src":"2410:352:41","text":" @notice The flag portion of the `HooksConfig`.\n @dev `enableHookAdjustedAmounts` must be true for all contracts that modify the `amountCalculated`\n in after hooks. Otherwise, the Vault will ignore any \"hookAdjusted\" amounts. Setting any \"shouldCall\"\n flags to true will cause the Vault to call the corresponding hook during operations."},"id":8259,"members":[{"constant":false,"id":8240,"mutability":"mutable","name":"enableHookAdjustedAmounts","nameLocation":"2791:25:41","nodeType":"VariableDeclaration","scope":8259,"src":"2786:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8239,"name":"bool","nodeType":"ElementaryTypeName","src":"2786:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8242,"mutability":"mutable","name":"shouldCallBeforeInitialize","nameLocation":"2827:26:41","nodeType":"VariableDeclaration","scope":8259,"src":"2822:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8241,"name":"bool","nodeType":"ElementaryTypeName","src":"2822:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8244,"mutability":"mutable","name":"shouldCallAfterInitialize","nameLocation":"2864:25:41","nodeType":"VariableDeclaration","scope":8259,"src":"2859:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8243,"name":"bool","nodeType":"ElementaryTypeName","src":"2859:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8246,"mutability":"mutable","name":"shouldCallComputeDynamicSwapFee","nameLocation":"2900:31:41","nodeType":"VariableDeclaration","scope":8259,"src":"2895:36:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8245,"name":"bool","nodeType":"ElementaryTypeName","src":"2895:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8248,"mutability":"mutable","name":"shouldCallBeforeSwap","nameLocation":"2942:20:41","nodeType":"VariableDeclaration","scope":8259,"src":"2937:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8247,"name":"bool","nodeType":"ElementaryTypeName","src":"2937:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8250,"mutability":"mutable","name":"shouldCallAfterSwap","nameLocation":"2973:19:41","nodeType":"VariableDeclaration","scope":8259,"src":"2968:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8249,"name":"bool","nodeType":"ElementaryTypeName","src":"2968:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8252,"mutability":"mutable","name":"shouldCallBeforeAddLiquidity","nameLocation":"3003:28:41","nodeType":"VariableDeclaration","scope":8259,"src":"2998:33:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8251,"name":"bool","nodeType":"ElementaryTypeName","src":"2998:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8254,"mutability":"mutable","name":"shouldCallAfterAddLiquidity","nameLocation":"3042:27:41","nodeType":"VariableDeclaration","scope":8259,"src":"3037:32:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8253,"name":"bool","nodeType":"ElementaryTypeName","src":"3037:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8256,"mutability":"mutable","name":"shouldCallBeforeRemoveLiquidity","nameLocation":"3080:31:41","nodeType":"VariableDeclaration","scope":8259,"src":"3075:36:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8255,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8258,"mutability":"mutable","name":"shouldCallAfterRemoveLiquidity","nameLocation":"3122:30:41","nodeType":"VariableDeclaration","scope":8259,"src":"3117:35:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8257,"name":"bool","nodeType":"ElementaryTypeName","src":"3117:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"HookFlags","nameLocation":"2770:9:41","nodeType":"StructDefinition","scope":8504,"src":"2763:392:41","visibility":"public"},{"canonicalName":"HooksConfig","documentation":{"id":8260,"nodeType":"StructuredDocumentation","src":"3157:101:41","text":"@notice Represents a hook contract configuration for a pool (HookFlags + hooksContract address)."},"id":8283,"members":[{"constant":false,"id":8262,"mutability":"mutable","name":"enableHookAdjustedAmounts","nameLocation":"3288:25:41","nodeType":"VariableDeclaration","scope":8283,"src":"3283:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8261,"name":"bool","nodeType":"ElementaryTypeName","src":"3283:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8264,"mutability":"mutable","name":"shouldCallBeforeInitialize","nameLocation":"3324:26:41","nodeType":"VariableDeclaration","scope":8283,"src":"3319:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8263,"name":"bool","nodeType":"ElementaryTypeName","src":"3319:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8266,"mutability":"mutable","name":"shouldCallAfterInitialize","nameLocation":"3361:25:41","nodeType":"VariableDeclaration","scope":8283,"src":"3356:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8265,"name":"bool","nodeType":"ElementaryTypeName","src":"3356:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8268,"mutability":"mutable","name":"shouldCallComputeDynamicSwapFee","nameLocation":"3397:31:41","nodeType":"VariableDeclaration","scope":8283,"src":"3392:36:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8267,"name":"bool","nodeType":"ElementaryTypeName","src":"3392:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8270,"mutability":"mutable","name":"shouldCallBeforeSwap","nameLocation":"3439:20:41","nodeType":"VariableDeclaration","scope":8283,"src":"3434:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8269,"name":"bool","nodeType":"ElementaryTypeName","src":"3434:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8272,"mutability":"mutable","name":"shouldCallAfterSwap","nameLocation":"3470:19:41","nodeType":"VariableDeclaration","scope":8283,"src":"3465:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8271,"name":"bool","nodeType":"ElementaryTypeName","src":"3465:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8274,"mutability":"mutable","name":"shouldCallBeforeAddLiquidity","nameLocation":"3500:28:41","nodeType":"VariableDeclaration","scope":8283,"src":"3495:33:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8273,"name":"bool","nodeType":"ElementaryTypeName","src":"3495:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8276,"mutability":"mutable","name":"shouldCallAfterAddLiquidity","nameLocation":"3539:27:41","nodeType":"VariableDeclaration","scope":8283,"src":"3534:32:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8275,"name":"bool","nodeType":"ElementaryTypeName","src":"3534:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8278,"mutability":"mutable","name":"shouldCallBeforeRemoveLiquidity","nameLocation":"3577:31:41","nodeType":"VariableDeclaration","scope":8283,"src":"3572:36:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8277,"name":"bool","nodeType":"ElementaryTypeName","src":"3572:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8280,"mutability":"mutable","name":"shouldCallAfterRemoveLiquidity","nameLocation":"3619:30:41","nodeType":"VariableDeclaration","scope":8283,"src":"3614:35:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8279,"name":"bool","nodeType":"ElementaryTypeName","src":"3614:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8282,"mutability":"mutable","name":"hooksContract","nameLocation":"3663:13:41","nodeType":"VariableDeclaration","scope":8283,"src":"3655:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8281,"name":"address","nodeType":"ElementaryTypeName","src":"3655:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"HooksConfig","nameLocation":"3265:11:41","nodeType":"StructDefinition","scope":8504,"src":"3258:421:41","visibility":"public"},{"canonicalName":"SwapState","documentation":{"id":8284,"nodeType":"StructuredDocumentation","src":"3681:364:41","text":" @notice Represents temporary state used during a swap operation.\n @param indexIn The zero-based index of tokenIn\n @param indexOut The zero-based index of tokenOut\n @param amountGivenScaled18 The amountGiven (i.e., tokenIn for ExactIn), adjusted for token decimals\n @param swapFeePercentage The swap fee to be applied (might be static or dynamic)"},"id":8293,"members":[{"constant":false,"id":8286,"mutability":"mutable","name":"indexIn","nameLocation":"4077:7:41","nodeType":"VariableDeclaration","scope":8293,"src":"4069:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4069:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8288,"mutability":"mutable","name":"indexOut","nameLocation":"4098:8:41","nodeType":"VariableDeclaration","scope":8293,"src":"4090:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4090:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8290,"mutability":"mutable","name":"amountGivenScaled18","nameLocation":"4120:19:41","nodeType":"VariableDeclaration","scope":8293,"src":"4112:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4112:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8292,"mutability":"mutable","name":"swapFeePercentage","nameLocation":"4153:17:41","nodeType":"VariableDeclaration","scope":8293,"src":"4145:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4145:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SwapState","nameLocation":"4053:9:41","nodeType":"StructDefinition","scope":8504,"src":"4046:127:41","visibility":"public"},{"canonicalName":"VaultState","documentation":{"id":8294,"nodeType":"StructuredDocumentation","src":"4175:381:41","text":" @notice Represents the Vault's configuration.\n @param isQueryDisabled If set to true, disables query functionality of the Vault. Can be modified by governance\n @param isVaultPaused If set to true, swaps and add/remove liquidity operations are halted\n @param areBuffersPaused If set to true, the Vault wrap/unwrap primitives associated with buffers will be disabled"},"id":8301,"members":[{"constant":false,"id":8296,"mutability":"mutable","name":"isQueryDisabled","nameLocation":"4586:15:41","nodeType":"VariableDeclaration","scope":8301,"src":"4581:20:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8295,"name":"bool","nodeType":"ElementaryTypeName","src":"4581:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8298,"mutability":"mutable","name":"isVaultPaused","nameLocation":"4612:13:41","nodeType":"VariableDeclaration","scope":8301,"src":"4607:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8297,"name":"bool","nodeType":"ElementaryTypeName","src":"4607:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8300,"mutability":"mutable","name":"areBuffersPaused","nameLocation":"4636:16:41","nodeType":"VariableDeclaration","scope":8301,"src":"4631:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8299,"name":"bool","nodeType":"ElementaryTypeName","src":"4631:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"VaultState","nameLocation":"4564:10:41","nodeType":"StructDefinition","scope":8504,"src":"4557:98:41","visibility":"public"},{"canonicalName":"PoolRoleAccounts","documentation":{"id":8302,"nodeType":"StructuredDocumentation","src":"4657:461:41","text":" @notice Represents the accounts holding certain roles for a given pool. This is passed in on pool registration.\n @param pauseManager Account empowered to pause/unpause the pool (note that governance can always pause a pool)\n @param swapFeeManager Account empowered to set static swap fees for a pool (or 0 to delegate to governance)\n @param poolCreator Account empowered to set the pool creator fee (or 0 if all fees go to the protocol and LPs)"},"id":8309,"members":[{"constant":false,"id":8304,"mutability":"mutable","name":"pauseManager","nameLocation":"5157:12:41","nodeType":"VariableDeclaration","scope":8309,"src":"5149:20:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8303,"name":"address","nodeType":"ElementaryTypeName","src":"5149:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8306,"mutability":"mutable","name":"swapFeeManager","nameLocation":"5183:14:41","nodeType":"VariableDeclaration","scope":8309,"src":"5175:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8305,"name":"address","nodeType":"ElementaryTypeName","src":"5175:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8308,"mutability":"mutable","name":"poolCreator","nameLocation":"5211:11:41","nodeType":"VariableDeclaration","scope":8309,"src":"5203:19:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8307,"name":"address","nodeType":"ElementaryTypeName","src":"5203:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"PoolRoleAccounts","nameLocation":"5126:16:41","nodeType":"StructDefinition","scope":8504,"src":"5119:106:41","visibility":"public"},{"canonicalName":"TokenType","documentation":{"id":8310,"nodeType":"StructuredDocumentation","src":"9221:1024:41","text":" @notice Token types supported by the Vault.\n @dev In general, pools may contain any combination of these tokens.\n STANDARD tokens (e.g., BAL, WETH) have no rate provider.\n WITH_RATE tokens (e.g., wstETH) require a rate provider. These may be tokens like wstETH, which need to be wrapped\n because the underlying stETH token is rebasing, and such tokens are unsupported by the Vault. They may also be\n tokens like sEUR, which track an underlying asset, but are not yield-bearing. Finally, this encompasses\n yield-bearing ERC4626 tokens, which can be used to facilitate swaps without requiring wrapping or unwrapping\n in most cases. The `paysYieldFees` flag can be used to indicate whether a token is yield-bearing (e.g., waDAI),\n not yield-bearing (e.g., sEUR), or yield-bearing but exempt from fees (e.g., in certain nested pools, where\n yield fees are charged elsewhere).\n NB: STANDARD must always be the first enum element, so that newly initialized data structures default to Standard."},"id":8313,"members":[{"id":8311,"name":"STANDARD","nameLocation":"10267:8:41","nodeType":"EnumValue","src":"10267:8:41"},{"id":8312,"name":"WITH_RATE","nameLocation":"10281:9:41","nodeType":"EnumValue","src":"10281:9:41"}],"name":"TokenType","nameLocation":"10251:9:41","nodeType":"EnumDefinition","src":"10246:46:41"},{"canonicalName":"TokenConfig","documentation":{"id":8314,"nodeType":"StructuredDocumentation","src":"10294:915:41","text":" @notice Encapsulate the data required for the Vault to support a token of the given type.\n @dev For STANDARD tokens, the rate provider address must be 0, and paysYieldFees must be false. All WITH_RATE tokens\n need a rate provider, and may or may not be yield-bearing.\n At registration time, it is useful to include the token address along with the token parameters in the structure\n passed to `registerPool`, as the alternative would be parallel arrays, which would be error prone and require\n validation checks. `TokenConfig` is only used for registration, and is never put into storage (see `TokenInfo`).\n @param token The token address\n @param tokenType The token type (see the enum for supported types)\n @param rateProvider The rate provider for a token (see further documentation above)\n @param paysYieldFees Flag indicating whether yield fees should be charged on this token"},"id":8326,"members":[{"constant":false,"id":8317,"mutability":"mutable","name":"token","nameLocation":"11242:5:41","nodeType":"VariableDeclaration","scope":8326,"src":"11235:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8316,"nodeType":"UserDefinedTypeName","pathNode":{"id":8315,"name":"IERC20","nameLocations":["11235:6:41"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"11235:6:41"},"referencedDeclaration":337,"src":"11235:6:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8320,"mutability":"mutable","name":"tokenType","nameLocation":"11263:9:41","nodeType":"VariableDeclaration","scope":8326,"src":"11253:19:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$8313","typeString":"enum TokenType"},"typeName":{"id":8319,"nodeType":"UserDefinedTypeName","pathNode":{"id":8318,"name":"TokenType","nameLocations":["11253:9:41"],"nodeType":"IdentifierPath","referencedDeclaration":8313,"src":"11253:9:41"},"referencedDeclaration":8313,"src":"11253:9:41","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$8313","typeString":"enum TokenType"}},"visibility":"internal"},{"constant":false,"id":8323,"mutability":"mutable","name":"rateProvider","nameLocation":"11292:12:41","nodeType":"VariableDeclaration","scope":8326,"src":"11278:26:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRateProvider_$3701","typeString":"contract IRateProvider"},"typeName":{"id":8322,"nodeType":"UserDefinedTypeName","pathNode":{"id":8321,"name":"IRateProvider","nameLocations":["11278:13:41"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"11278:13:41"},"referencedDeclaration":3701,"src":"11278:13:41","typeDescriptions":{"typeIdentifier":"t_contract$_IRateProvider_$3701","typeString":"contract IRateProvider"}},"visibility":"internal"},{"constant":false,"id":8325,"mutability":"mutable","name":"paysYieldFees","nameLocation":"11315:13:41","nodeType":"VariableDeclaration","scope":8326,"src":"11310:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8324,"name":"bool","nodeType":"ElementaryTypeName","src":"11310:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TokenConfig","nameLocation":"11217:11:41","nodeType":"StructDefinition","scope":8504,"src":"11210:121:41","visibility":"public"},{"canonicalName":"TokenInfo","documentation":{"id":8327,"nodeType":"StructuredDocumentation","src":"11333:592:41","text":" @notice This data structure is stored in `_poolTokenInfo`, a nested mapping from pool -> (token -> TokenInfo).\n @dev Since the token is already the key of the nested mapping, it would be redundant (and an extra SLOAD) to store\n it again in the struct. When we construct PoolData, the tokens are separated into their own array.\n @param tokenType The token type (see the enum for supported types)\n @param rateProvider The rate provider for a token (see further documentation above)\n @param paysYieldFees Flag indicating whether yield fees should be charged on this token"},"id":8336,"members":[{"constant":false,"id":8330,"mutability":"mutable","name":"tokenType","nameLocation":"11959:9:41","nodeType":"VariableDeclaration","scope":8336,"src":"11949:19:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$8313","typeString":"enum TokenType"},"typeName":{"id":8329,"nodeType":"UserDefinedTypeName","pathNode":{"id":8328,"name":"TokenType","nameLocations":["11949:9:41"],"nodeType":"IdentifierPath","referencedDeclaration":8313,"src":"11949:9:41"},"referencedDeclaration":8313,"src":"11949:9:41","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$8313","typeString":"enum TokenType"}},"visibility":"internal"},{"constant":false,"id":8333,"mutability":"mutable","name":"rateProvider","nameLocation":"11988:12:41","nodeType":"VariableDeclaration","scope":8336,"src":"11974:26:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRateProvider_$3701","typeString":"contract IRateProvider"},"typeName":{"id":8332,"nodeType":"UserDefinedTypeName","pathNode":{"id":8331,"name":"IRateProvider","nameLocations":["11974:13:41"],"nodeType":"IdentifierPath","referencedDeclaration":3701,"src":"11974:13:41"},"referencedDeclaration":3701,"src":"11974:13:41","typeDescriptions":{"typeIdentifier":"t_contract$_IRateProvider_$3701","typeString":"contract IRateProvider"}},"visibility":"internal"},{"constant":false,"id":8335,"mutability":"mutable","name":"paysYieldFees","nameLocation":"12011:13:41","nodeType":"VariableDeclaration","scope":8336,"src":"12006:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8334,"name":"bool","nodeType":"ElementaryTypeName","src":"12006:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"11933:9:41","nodeType":"StructDefinition","scope":8504,"src":"11926:101:41","visibility":"public"},{"canonicalName":"PoolData","documentation":{"id":8337,"nodeType":"StructuredDocumentation","src":"12029:761:41","text":" @notice Data structure used to represent the current pool state in memory\n @param poolConfigBits Custom type to store the entire configuration of the pool.\n @param tokens Pool tokens, sorted in token registration order\n @param tokenInfo Configuration data for each token, sorted in token registration order\n @param balancesRaw Token balances in native decimals\n @param balancesLiveScaled18 Token balances after paying yield fees, applying decimal scaling and rates\n @param tokenRates 18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens\n @param decimalScalingFactors Conversion factor used to adjust for token decimals for uniform precision in\n calculations. It is 1e18 (FP 1) for 18-decimal tokens"},"id":8361,"members":[{"constant":false,"id":8340,"mutability":"mutable","name":"poolConfigBits","nameLocation":"12828:14:41","nodeType":"VariableDeclaration","scope":8361,"src":"12813:29:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolConfigBits_$8214","typeString":"PoolConfigBits"},"typeName":{"id":8339,"nodeType":"UserDefinedTypeName","pathNode":{"id":8338,"name":"PoolConfigBits","nameLocations":["12813:14:41"],"nodeType":"IdentifierPath","referencedDeclaration":8214,"src":"12813:14:41"},"referencedDeclaration":8214,"src":"12813:14:41","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PoolConfigBits_$8214","typeString":"PoolConfigBits"}},"visibility":"internal"},{"constant":false,"id":8344,"mutability":"mutable","name":"tokens","nameLocation":"12857:6:41","nodeType":"VariableDeclaration","scope":8361,"src":"12848:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":8342,"nodeType":"UserDefinedTypeName","pathNode":{"id":8341,"name":"IERC20","nameLocations":["12848:6:41"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"12848:6:41"},"referencedDeclaration":337,"src":"12848:6:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":8343,"nodeType":"ArrayTypeName","src":"12848:8:41","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":8348,"mutability":"mutable","name":"tokenInfo","nameLocation":"12881:9:41","nodeType":"VariableDeclaration","scope":8361,"src":"12869:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$8336_storage_$dyn_storage_ptr","typeString":"struct TokenInfo[]"},"typeName":{"baseType":{"id":8346,"nodeType":"UserDefinedTypeName","pathNode":{"id":8345,"name":"TokenInfo","nameLocations":["12869:9:41"],"nodeType":"IdentifierPath","referencedDeclaration":8336,"src":"12869:9:41"},"referencedDeclaration":8336,"src":"12869:9:41","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$8336_storage_ptr","typeString":"struct TokenInfo"}},"id":8347,"nodeType":"ArrayTypeName","src":"12869:11:41","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$8336_storage_$dyn_storage_ptr","typeString":"struct TokenInfo[]"}},"visibility":"internal"},{"constant":false,"id":8351,"mutability":"mutable","name":"balancesRaw","nameLocation":"12906:11:41","nodeType":"VariableDeclaration","scope":8361,"src":"12896:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8349,"name":"uint256","nodeType":"ElementaryTypeName","src":"12896:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8350,"nodeType":"ArrayTypeName","src":"12896:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8354,"mutability":"mutable","name":"balancesLiveScaled18","nameLocation":"12933:20:41","nodeType":"VariableDeclaration","scope":8361,"src":"12923:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8352,"name":"uint256","nodeType":"ElementaryTypeName","src":"12923:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8353,"nodeType":"ArrayTypeName","src":"12923:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8357,"mutability":"mutable","name":"tokenRates","nameLocation":"12969:10:41","nodeType":"VariableDeclaration","scope":8361,"src":"12959:20:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8355,"name":"uint256","nodeType":"ElementaryTypeName","src":"12959:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8356,"nodeType":"ArrayTypeName","src":"12959:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8360,"mutability":"mutable","name":"decimalScalingFactors","nameLocation":"12995:21:41","nodeType":"VariableDeclaration","scope":8361,"src":"12985:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8358,"name":"uint256","nodeType":"ElementaryTypeName","src":"12985:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8359,"nodeType":"ArrayTypeName","src":"12985:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"PoolData","nameLocation":"12798:8:41","nodeType":"StructDefinition","scope":8504,"src":"12791:228:41","visibility":"public"},{"canonicalName":"Rounding","id":8364,"members":[{"id":8362,"name":"ROUND_UP","nameLocation":"13041:8:41","nodeType":"EnumValue","src":"13041:8:41"},{"id":8363,"name":"ROUND_DOWN","nameLocation":"13055:10:41","nodeType":"EnumValue","src":"13055:10:41"}],"name":"Rounding","nameLocation":"13026:8:41","nodeType":"EnumDefinition","src":"13021:46:41"},{"canonicalName":"SwapKind","id":8367,"members":[{"id":8365,"name":"EXACT_IN","nameLocation":"13294:8:41","nodeType":"EnumValue","src":"13294:8:41"},{"id":8366,"name":"EXACT_OUT","nameLocation":"13308:9:41","nodeType":"EnumValue","src":"13308:9:41"}],"name":"SwapKind","nameLocation":"13279:8:41","nodeType":"EnumDefinition","src":"13274:45:41"},{"canonicalName":"VaultSwapParams","documentation":{"id":8368,"nodeType":"StructuredDocumentation","src":"14065:558:41","text":" @notice Data passed into primary Vault `swap` operations.\n @param kind Type of swap (Exact In or Exact Out)\n @param pool The pool with the tokens being swapped\n @param tokenIn The token entering the Vault (balance increases)\n @param tokenOut The token leaving the Vault (balance decreases)\n @param amountGivenRaw Amount specified for tokenIn or tokenOut (depending on the type of swap)\n @param limitRaw Minimum or maximum value of the calculated amount (depending on the type of swap)\n @param userData Additional (optional) user data"},"id":8386,"members":[{"constant":false,"id":8371,"mutability":"mutable","name":"kind","nameLocation":"14662:4:41","nodeType":"VariableDeclaration","scope":8386,"src":"14653:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},"typeName":{"id":8370,"nodeType":"UserDefinedTypeName","pathNode":{"id":8369,"name":"SwapKind","nameLocations":["14653:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":8367,"src":"14653:8:41"},"referencedDeclaration":8367,"src":"14653:8:41","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},"visibility":"internal"},{"constant":false,"id":8373,"mutability":"mutable","name":"pool","nameLocation":"14680:4:41","nodeType":"VariableDeclaration","scope":8386,"src":"14672:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8372,"name":"address","nodeType":"ElementaryTypeName","src":"14672:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8376,"mutability":"mutable","name":"tokenIn","nameLocation":"14697:7:41","nodeType":"VariableDeclaration","scope":8386,"src":"14690:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8375,"nodeType":"UserDefinedTypeName","pathNode":{"id":8374,"name":"IERC20","nameLocations":["14690:6:41"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"14690:6:41"},"referencedDeclaration":337,"src":"14690:6:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8379,"mutability":"mutable","name":"tokenOut","nameLocation":"14717:8:41","nodeType":"VariableDeclaration","scope":8386,"src":"14710:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8378,"nodeType":"UserDefinedTypeName","pathNode":{"id":8377,"name":"IERC20","nameLocations":["14710:6:41"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"14710:6:41"},"referencedDeclaration":337,"src":"14710:6:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8381,"mutability":"mutable","name":"amountGivenRaw","nameLocation":"14739:14:41","nodeType":"VariableDeclaration","scope":8386,"src":"14731:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"14731:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8383,"mutability":"mutable","name":"limitRaw","nameLocation":"14767:8:41","nodeType":"VariableDeclaration","scope":8386,"src":"14759:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8382,"name":"uint256","nodeType":"ElementaryTypeName","src":"14759:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8385,"mutability":"mutable","name":"userData","nameLocation":"14787:8:41","nodeType":"VariableDeclaration","scope":8386,"src":"14781:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8384,"name":"bytes","nodeType":"ElementaryTypeName","src":"14781:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"VaultSwapParams","nameLocation":"14631:15:41","nodeType":"StructDefinition","scope":8504,"src":"14624:174:41","visibility":"public"},{"canonicalName":"PoolSwapParams","documentation":{"id":8387,"nodeType":"StructuredDocumentation","src":"14800:530:41","text":" @notice Data for a swap operation, used by contracts implementing `IBasePool`.\n @param kind Type of swap (exact in or exact out)\n @param amountGivenScaled18 Amount given based on kind of the swap (e.g., tokenIn for EXACT_IN)\n @param balancesScaled18 Current pool balances\n @param indexIn Index of tokenIn\n @param indexOut Index of tokenOut\n @param router The address (usually a router contract) that initiated a swap operation on the Vault\n @param userData Additional (optional) data required for the swap"},"id":8404,"members":[{"constant":false,"id":8390,"mutability":"mutable","name":"kind","nameLocation":"15368:4:41","nodeType":"VariableDeclaration","scope":8404,"src":"15359:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},"typeName":{"id":8389,"nodeType":"UserDefinedTypeName","pathNode":{"id":8388,"name":"SwapKind","nameLocations":["15359:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":8367,"src":"15359:8:41"},"referencedDeclaration":8367,"src":"15359:8:41","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},"visibility":"internal"},{"constant":false,"id":8392,"mutability":"mutable","name":"amountGivenScaled18","nameLocation":"15386:19:41","nodeType":"VariableDeclaration","scope":8404,"src":"15378:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8391,"name":"uint256","nodeType":"ElementaryTypeName","src":"15378:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8395,"mutability":"mutable","name":"balancesScaled18","nameLocation":"15421:16:41","nodeType":"VariableDeclaration","scope":8404,"src":"15411:26:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8393,"name":"uint256","nodeType":"ElementaryTypeName","src":"15411:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8394,"nodeType":"ArrayTypeName","src":"15411:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8397,"mutability":"mutable","name":"indexIn","nameLocation":"15451:7:41","nodeType":"VariableDeclaration","scope":8404,"src":"15443:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8396,"name":"uint256","nodeType":"ElementaryTypeName","src":"15443:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8399,"mutability":"mutable","name":"indexOut","nameLocation":"15472:8:41","nodeType":"VariableDeclaration","scope":8404,"src":"15464:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8398,"name":"uint256","nodeType":"ElementaryTypeName","src":"15464:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8401,"mutability":"mutable","name":"router","nameLocation":"15494:6:41","nodeType":"VariableDeclaration","scope":8404,"src":"15486:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8400,"name":"address","nodeType":"ElementaryTypeName","src":"15486:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8403,"mutability":"mutable","name":"userData","nameLocation":"15512:8:41","nodeType":"VariableDeclaration","scope":8404,"src":"15506:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8402,"name":"bytes","nodeType":"ElementaryTypeName","src":"15506:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PoolSwapParams","nameLocation":"15338:14:41","nodeType":"StructDefinition","scope":8504,"src":"15331:192:41","visibility":"public"},{"canonicalName":"AfterSwapParams","documentation":{"id":8405,"nodeType":"StructuredDocumentation","src":"15525:813:41","text":" @notice Data for the hook after a swap operation.\n @param kind Type of swap (exact in or exact out)\n @param tokenIn Token to be swapped from\n @param tokenOut Token to be swapped to\n @param amountInScaled18 Amount of tokenIn (entering the Vault)\n @param amountOutScaled18 Amount of tokenOut (leaving the Vault)\n @param tokenInBalanceScaled18 Updated (after swap) balance of tokenIn\n @param tokenOutBalanceScaled18 Updated (after swap) balance of tokenOut\n @param amountCalculatedScaled18 Token amount calculated by the swap\n @param amountCalculatedRaw Token amount calculated by the swap\n @param router The address (usually a router contract) that initiated a swap operation on the Vault\n @param pool Pool address\n @param userData Additional (optional) data required for the swap"},"id":8433,"members":[{"constant":false,"id":8408,"mutability":"mutable","name":"kind","nameLocation":"16377:4:41","nodeType":"VariableDeclaration","scope":8433,"src":"16368:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},"typeName":{"id":8407,"nodeType":"UserDefinedTypeName","pathNode":{"id":8406,"name":"SwapKind","nameLocations":["16368:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":8367,"src":"16368:8:41"},"referencedDeclaration":8367,"src":"16368:8:41","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},"visibility":"internal"},{"constant":false,"id":8411,"mutability":"mutable","name":"tokenIn","nameLocation":"16394:7:41","nodeType":"VariableDeclaration","scope":8433,"src":"16387:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8410,"nodeType":"UserDefinedTypeName","pathNode":{"id":8409,"name":"IERC20","nameLocations":["16387:6:41"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"16387:6:41"},"referencedDeclaration":337,"src":"16387:6:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8414,"mutability":"mutable","name":"tokenOut","nameLocation":"16414:8:41","nodeType":"VariableDeclaration","scope":8433,"src":"16407:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8413,"nodeType":"UserDefinedTypeName","pathNode":{"id":8412,"name":"IERC20","nameLocations":["16407:6:41"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"16407:6:41"},"referencedDeclaration":337,"src":"16407:6:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8416,"mutability":"mutable","name":"amountInScaled18","nameLocation":"16436:16:41","nodeType":"VariableDeclaration","scope":8433,"src":"16428:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8415,"name":"uint256","nodeType":"ElementaryTypeName","src":"16428:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8418,"mutability":"mutable","name":"amountOutScaled18","nameLocation":"16466:17:41","nodeType":"VariableDeclaration","scope":8433,"src":"16458:25:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8417,"name":"uint256","nodeType":"ElementaryTypeName","src":"16458:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8420,"mutability":"mutable","name":"tokenInBalanceScaled18","nameLocation":"16497:22:41","nodeType":"VariableDeclaration","scope":8433,"src":"16489:30:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8419,"name":"uint256","nodeType":"ElementaryTypeName","src":"16489:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8422,"mutability":"mutable","name":"tokenOutBalanceScaled18","nameLocation":"16533:23:41","nodeType":"VariableDeclaration","scope":8433,"src":"16525:31:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16525:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8424,"mutability":"mutable","name":"amountCalculatedScaled18","nameLocation":"16570:24:41","nodeType":"VariableDeclaration","scope":8433,"src":"16562:32:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8423,"name":"uint256","nodeType":"ElementaryTypeName","src":"16562:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8426,"mutability":"mutable","name":"amountCalculatedRaw","nameLocation":"16608:19:41","nodeType":"VariableDeclaration","scope":8433,"src":"16600:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8425,"name":"uint256","nodeType":"ElementaryTypeName","src":"16600:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8428,"mutability":"mutable","name":"router","nameLocation":"16641:6:41","nodeType":"VariableDeclaration","scope":8433,"src":"16633:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8427,"name":"address","nodeType":"ElementaryTypeName","src":"16633:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8430,"mutability":"mutable","name":"pool","nameLocation":"16661:4:41","nodeType":"VariableDeclaration","scope":8433,"src":"16653:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8429,"name":"address","nodeType":"ElementaryTypeName","src":"16653:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8432,"mutability":"mutable","name":"userData","nameLocation":"16677:8:41","nodeType":"VariableDeclaration","scope":8433,"src":"16671:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8431,"name":"bytes","nodeType":"ElementaryTypeName","src":"16671:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"AfterSwapParams","nameLocation":"16346:15:41","nodeType":"StructDefinition","scope":8504,"src":"16339:349:41","visibility":"public"},{"canonicalName":"AddLiquidityKind","id":8439,"members":[{"id":8434,"name":"PROPORTIONAL","nameLocation":"16927:12:41","nodeType":"EnumValue","src":"16927:12:41"},{"id":8435,"name":"UNBALANCED","nameLocation":"16945:10:41","nodeType":"EnumValue","src":"16945:10:41"},{"id":8436,"name":"SINGLE_TOKEN_EXACT_OUT","nameLocation":"16961:22:41","nodeType":"EnumValue","src":"16961:22:41"},{"id":8437,"name":"DONATION","nameLocation":"16989:8:41","nodeType":"EnumValue","src":"16989:8:41"},{"id":8438,"name":"CUSTOM","nameLocation":"17003:6:41","nodeType":"EnumValue","src":"17003:6:41"}],"name":"AddLiquidityKind","nameLocation":"16904:16:41","nodeType":"EnumDefinition","src":"16899:112:41"},{"canonicalName":"AddLiquidityParams","documentation":{"id":8440,"nodeType":"StructuredDocumentation","src":"17013:320:41","text":" @notice Data for an add liquidity operation.\n @param pool Address of the pool\n @param to Address of user to mint to\n @param maxAmountsIn Maximum amounts of input tokens\n @param minBptAmountOut Minimum amount of output pool tokens\n @param kind Add liquidity kind\n @param userData Optional user data"},"id":8455,"members":[{"constant":false,"id":8442,"mutability":"mutable","name":"pool","nameLocation":"17374:4:41","nodeType":"VariableDeclaration","scope":8455,"src":"17366:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8441,"name":"address","nodeType":"ElementaryTypeName","src":"17366:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8444,"mutability":"mutable","name":"to","nameLocation":"17392:2:41","nodeType":"VariableDeclaration","scope":8455,"src":"17384:10:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8443,"name":"address","nodeType":"ElementaryTypeName","src":"17384:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8447,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"17410:12:41","nodeType":"VariableDeclaration","scope":8455,"src":"17400:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8445,"name":"uint256","nodeType":"ElementaryTypeName","src":"17400:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8446,"nodeType":"ArrayTypeName","src":"17400:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8449,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"17436:15:41","nodeType":"VariableDeclaration","scope":8455,"src":"17428:23:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8448,"name":"uint256","nodeType":"ElementaryTypeName","src":"17428:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8452,"mutability":"mutable","name":"kind","nameLocation":"17474:4:41","nodeType":"VariableDeclaration","scope":8455,"src":"17457:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},"typeName":{"id":8451,"nodeType":"UserDefinedTypeName","pathNode":{"id":8450,"name":"AddLiquidityKind","nameLocations":["17457:16:41"],"nodeType":"IdentifierPath","referencedDeclaration":8439,"src":"17457:16:41"},"referencedDeclaration":8439,"src":"17457:16:41","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":8454,"mutability":"mutable","name":"userData","nameLocation":"17490:8:41","nodeType":"VariableDeclaration","scope":8455,"src":"17484:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8453,"name":"bytes","nodeType":"ElementaryTypeName","src":"17484:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"AddLiquidityParams","nameLocation":"17341:18:41","nodeType":"StructDefinition","scope":8504,"src":"17334:167:41","visibility":"public"},{"canonicalName":"RemoveLiquidityKind","id":8460,"members":[{"id":8456,"name":"PROPORTIONAL","nameLocation":"17746:12:41","nodeType":"EnumValue","src":"17746:12:41"},{"id":8457,"name":"SINGLE_TOKEN_EXACT_IN","nameLocation":"17764:21:41","nodeType":"EnumValue","src":"17764:21:41"},{"id":8458,"name":"SINGLE_TOKEN_EXACT_OUT","nameLocation":"17791:22:41","nodeType":"EnumValue","src":"17791:22:41"},{"id":8459,"name":"CUSTOM","nameLocation":"17819:6:41","nodeType":"EnumValue","src":"17819:6:41"}],"name":"RemoveLiquidityKind","nameLocation":"17720:19:41","nodeType":"EnumDefinition","src":"17715:112:41"},{"canonicalName":"RemoveLiquidityParams","documentation":{"id":8461,"nodeType":"StructuredDocumentation","src":"17829:330:41","text":" @notice Data for an remove liquidity operation.\n @param pool Address of the pool\n @param from Address of user to burn from\n @param maxBptAmountIn Maximum amount of input pool tokens\n @param minAmountsOut Minimum amounts of output tokens\n @param kind Remove liquidity kind\n @param userData Optional user data"},"id":8476,"members":[{"constant":false,"id":8463,"mutability":"mutable","name":"pool","nameLocation":"18203:4:41","nodeType":"VariableDeclaration","scope":8476,"src":"18195:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8462,"name":"address","nodeType":"ElementaryTypeName","src":"18195:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8465,"mutability":"mutable","name":"from","nameLocation":"18221:4:41","nodeType":"VariableDeclaration","scope":8476,"src":"18213:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8464,"name":"address","nodeType":"ElementaryTypeName","src":"18213:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8467,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"18239:14:41","nodeType":"VariableDeclaration","scope":8476,"src":"18231:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8466,"name":"uint256","nodeType":"ElementaryTypeName","src":"18231:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8470,"mutability":"mutable","name":"minAmountsOut","nameLocation":"18269:13:41","nodeType":"VariableDeclaration","scope":8476,"src":"18259:23:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8468,"name":"uint256","nodeType":"ElementaryTypeName","src":"18259:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8469,"nodeType":"ArrayTypeName","src":"18259:9:41","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8473,"mutability":"mutable","name":"kind","nameLocation":"18308:4:41","nodeType":"VariableDeclaration","scope":8476,"src":"18288:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},"typeName":{"id":8472,"nodeType":"UserDefinedTypeName","pathNode":{"id":8471,"name":"RemoveLiquidityKind","nameLocations":["18288:19:41"],"nodeType":"IdentifierPath","referencedDeclaration":8460,"src":"18288:19:41"},"referencedDeclaration":8460,"src":"18288:19:41","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},"visibility":"internal"},{"constant":false,"id":8475,"mutability":"mutable","name":"userData","nameLocation":"18324:8:41","nodeType":"VariableDeclaration","scope":8476,"src":"18318:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8474,"name":"bytes","nodeType":"ElementaryTypeName","src":"18318:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RemoveLiquidityParams","nameLocation":"18167:21:41","nodeType":"StructDefinition","scope":8504,"src":"18160:175:41","visibility":"public"},{"canonicalName":"WrappingDirection","id":8479,"members":[{"id":8477,"name":"WRAP","nameLocation":"18578:4:41","nodeType":"EnumValue","src":"18578:4:41"},{"id":8478,"name":"UNWRAP","nameLocation":"18588:6:41","nodeType":"EnumValue","src":"18588:6:41"}],"name":"WrappingDirection","nameLocation":"18554:17:41","nodeType":"EnumDefinition","src":"18549:47:41"},{"canonicalName":"BufferWrapOrUnwrapParams","documentation":{"id":8480,"nodeType":"StructuredDocumentation","src":"18598:499:41","text":" @notice Data for a wrap/unwrap operation.\n @param kind Type of swap (Exact In or Exact Out)\n @param direction Direction of the wrapping operation (Wrap or Unwrap)\n @param wrappedToken Wrapped token, compatible with interface ERC4626\n @param amountGivenRaw Amount specified for tokenIn or tokenOut (depends on the type of swap and wrapping direction)\n @param limitRaw Minimum or maximum amount specified for the other token (depends on the type of swap and wrapping\n direction)"},"id":8494,"members":[{"constant":false,"id":8483,"mutability":"mutable","name":"kind","nameLocation":"19145:4:41","nodeType":"VariableDeclaration","scope":8494,"src":"19136:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},"typeName":{"id":8482,"nodeType":"UserDefinedTypeName","pathNode":{"id":8481,"name":"SwapKind","nameLocations":["19136:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":8367,"src":"19136:8:41"},"referencedDeclaration":8367,"src":"19136:8:41","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},"visibility":"internal"},{"constant":false,"id":8486,"mutability":"mutable","name":"direction","nameLocation":"19173:9:41","nodeType":"VariableDeclaration","scope":8494,"src":"19155:27:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_WrappingDirection_$8479","typeString":"enum WrappingDirection"},"typeName":{"id":8485,"nodeType":"UserDefinedTypeName","pathNode":{"id":8484,"name":"WrappingDirection","nameLocations":["19155:17:41"],"nodeType":"IdentifierPath","referencedDeclaration":8479,"src":"19155:17:41"},"referencedDeclaration":8479,"src":"19155:17:41","typeDescriptions":{"typeIdentifier":"t_enum$_WrappingDirection_$8479","typeString":"enum WrappingDirection"}},"visibility":"internal"},{"constant":false,"id":8489,"mutability":"mutable","name":"wrappedToken","nameLocation":"19197:12:41","nodeType":"VariableDeclaration","scope":8494,"src":"19188:21:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"},"typeName":{"id":8488,"nodeType":"UserDefinedTypeName","pathNode":{"id":8487,"name":"IERC4626","nameLocations":["19188:8:41"],"nodeType":"IdentifierPath","referencedDeclaration":259,"src":"19188:8:41"},"referencedDeclaration":259,"src":"19188:8:41","typeDescriptions":{"typeIdentifier":"t_contract$_IERC4626_$259","typeString":"contract IERC4626"}},"visibility":"internal"},{"constant":false,"id":8491,"mutability":"mutable","name":"amountGivenRaw","nameLocation":"19223:14:41","nodeType":"VariableDeclaration","scope":8494,"src":"19215:22:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8490,"name":"uint256","nodeType":"ElementaryTypeName","src":"19215:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8493,"mutability":"mutable","name":"limitRaw","nameLocation":"19251:8:41","nodeType":"VariableDeclaration","scope":8494,"src":"19243:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8492,"name":"uint256","nodeType":"ElementaryTypeName","src":"19243:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BufferWrapOrUnwrapParams","nameLocation":"19105:24:41","nodeType":"StructDefinition","scope":8504,"src":"19098:164:41","visibility":"public"},{"constant":true,"id":8497,"mutability":"constant","name":"FEE_BITLENGTH","nameLocation":"19587:13:41","nodeType":"VariableDeclaration","scope":8504,"src":"19570:35:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8495,"name":"uint256","nodeType":"ElementaryTypeName","src":"19570:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3234","id":8496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19603:2:41","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"visibility":"internal"},{"constant":true,"id":8500,"mutability":"constant","name":"FEE_SCALING_FACTOR","nameLocation":"19624:18:41","nodeType":"VariableDeclaration","scope":8504,"src":"19607:42:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8498,"name":"uint256","nodeType":"ElementaryTypeName","src":"19607:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653131","id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19645:4:41","typeDescriptions":{"typeIdentifier":"t_rational_100000000000_by_1","typeString":"int_const 100000000000"},"value":"1e11"},"visibility":"internal"},{"constant":true,"id":8503,"mutability":"constant","name":"MAX_FEE_PERCENTAGE","nameLocation":"19872:18:41","nodeType":"VariableDeclaration","scope":8504,"src":"19855:48:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8501,"name":"uint256","nodeType":"ElementaryTypeName","src":"19855:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"39392e39393939653136","id":8502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19893:10:41","typeDescriptions":{"typeIdentifier":"t_rational_999999000000000000_by_1","typeString":"int_const 999999000000000000"},"value":"99.9999e16"},"visibility":"internal"}],"src":"46:19871:41"},"id":41},"contracts/Version.sol":{"ast":{"absolutePath":"contracts/Version.sol","exportedSymbols":{"IVersion":[5818],"Version":[8543]},"id":8544,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8505,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:42"},{"absolutePath":"contracts/IVersion.sol","file":"./IVersion.sol","id":8507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8544,"sourceUnit":5819,"src":"72:42:42","symbolAliases":[{"foreign":{"id":8506,"name":"IVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"81:8:42","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8509,"name":"IVersion","nameLocations":["626:8:42"],"nodeType":"IdentifierPath","referencedDeclaration":5818,"src":"626:8:42"},"id":8510,"nodeType":"InheritanceSpecifier","src":"626:8:42"}],"canonicalName":"Version","contractDependencies":[],"contractKind":"contract","documentation":{"id":8508,"nodeType":"StructuredDocumentation","src":"116:489:42","text":" @notice Retrieves a contract's version from storage.\n @dev The version is set at deployment time and cannot be changed. It would be immutable, but immutable strings\n are not yet supported.\n Contracts like factories and pools should have versions. These typically take the form of JSON strings containing\n detailed information about the deployment. For instance:\n `{name: 'ChildChainGaugeFactory', version: 2, deployment: '20230316-child-chain-gauge-factory-v2'}`"},"fullyImplemented":true,"id":8543,"linearizedBaseContracts":[8543,5818],"name":"Version","nameLocation":"615:7:42","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8512,"mutability":"mutable","name":"_version","nameLocation":"656:8:42","nodeType":"VariableDeclaration","scope":8543,"src":"641:23:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8511,"name":"string","nodeType":"ElementaryTypeName","src":"641:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":8521,"nodeType":"Block","src":"707:38:42","statements":[{"expression":{"arguments":[{"id":8518,"name":"version_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"729:8:42","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8517,"name":"_setVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"717:11:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"717:21:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8520,"nodeType":"ExpressionStatement","src":"717:21:42"}]},"id":8522,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8514,"mutability":"mutable","name":"version_","nameLocation":"697:8:42","nodeType":"VariableDeclaration","scope":8522,"src":"683:22:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8513,"name":"string","nodeType":"ElementaryTypeName","src":"683:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"682:24:42"},"returnParameters":{"id":8516,"nodeType":"ParameterList","parameters":[],"src":"707:0:42"},"scope":8543,"src":"671:74:42","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5817],"body":{"id":8530,"nodeType":"Block","src":"914:32:42","statements":[{"expression":{"id":8528,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"931:8:42","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8527,"id":8529,"nodeType":"Return","src":"924:15:42"}]},"documentation":{"id":8523,"nodeType":"StructuredDocumentation","src":"751:101:42","text":" @notice Getter for the version.\n @return version The stored contract version"},"functionSelector":"54fd4d50","id":8531,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"866:7:42","nodeType":"FunctionDefinition","parameters":{"id":8524,"nodeType":"ParameterList","parameters":[],"src":"873:2:42"},"returnParameters":{"id":8527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8531,"src":"899:13:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8525,"name":"string","nodeType":"ElementaryTypeName","src":"899:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"898:15:42"},"scope":8543,"src":"857:89:42","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8541,"nodeType":"Block","src":"1086:38:42","statements":[{"expression":{"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8537,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8512,"src":"1096:8:42","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8538,"name":"newVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"1107:10:42","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1096:21:42","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8540,"nodeType":"ExpressionStatement","src":"1096:21:42"}]},"documentation":{"id":8532,"nodeType":"StructuredDocumentation","src":"952:73:42","text":"@dev Internal setter that allows this contract to be used in proxies."},"id":8542,"implemented":true,"kind":"function","modifiers":[],"name":"_setVersion","nameLocation":"1039:11:42","nodeType":"FunctionDefinition","parameters":{"id":8535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8534,"mutability":"mutable","name":"newVersion","nameLocation":"1065:10:42","nodeType":"VariableDeclaration","scope":8542,"src":"1051:24:42","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8533,"name":"string","nodeType":"ElementaryTypeName","src":"1051:6:42","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1050:26:42"},"returnParameters":{"id":8536,"nodeType":"ParameterList","parameters":[],"src":"1086:0:42"},"scope":8543,"src":"1030:94:42","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8544,"src":"606:520:42","usedErrors":[],"usedEvents":[]}],"src":"46:1081:42"},"id":42},"contracts/_Router.sol":{"ast":{"absolutePath":"contracts/_Router.sol","exportedSymbols":{"AddLiquidityKind":[8439],"AddLiquidityParams":[8455],"Address":[1069],"AfterSwapParams":[8433],"BufferWrapOrUnwrapParams":[8494],"FEE_BITLENGTH":[8497],"FEE_SCALING_FACTOR":[8500],"HookFlags":[8259],"HooksConfig":[8283],"IERC20":[337],"IERC4626":[259],"IRateProvider":[3701],"IRouter":[4198],"IVault":[4357],"IWETH":[5836],"LiquidityManagement":[8212],"MAX_FEE_PERCENTAGE":[8503],"PoolConfig":[8237],"PoolConfigBits":[8214],"PoolData":[8361],"PoolRoleAccounts":[8309],"PoolSwapParams":[8404],"RemoveLiquidityKind":[8460],"RemoveLiquidityParams":[8476],"Rounding":[8364],"Router":[10716],"RouterCommon":[6962],"RouterWethLib":[7078],"SafeCast":[2868],"SwapKind":[8367],"SwapState":[8293],"TokenConfig":[8326],"TokenInfo":[8336],"TokenType":[8313],"VaultState":[8301],"VaultSwapParams":[8386],"WrappingDirection":[8479]},"id":10717,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8545,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"46:24:43"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"@openzeppelin/contracts/interfaces/IERC4626.sol","id":8547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":260,"src":"72:75:43","symbolAliases":[{"foreign":{"id":8546,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"81:8:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":8549,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":2869,"src":"148:75:43","symbolAliases":[{"foreign":{"id":8548,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"157:8:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":338,"src":"224:72:43","symbolAliases":[{"foreign":{"id":8550,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"233:6:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":8553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":1070,"src":"297:68:43","symbolAliases":[{"foreign":{"id":8552,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"306:7:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IWETH.sol","file":"./IWETH.sol","id":8555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":5837,"src":"460:36:43","symbolAliases":[{"foreign":{"id":8554,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"469:5:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IRouter.sol","file":"./IRouter.sol","id":8557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":4199,"src":"497:40:43","symbolAliases":[{"foreign":{"id":8556,"name":"IRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"506:7:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IVault.sol","file":"./IVault.sol","id":8559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":4358,"src":"538:38:43","symbolAliases":[{"foreign":{"id":8558,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"547:6:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/VaultTypes.sol","file":"./VaultTypes.sol","id":8560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":8504,"src":"577:26:43","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/RouterWethLib.sol","file":"./RouterWethLib.sol","id":8562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":7079,"src":"605:52:43","symbolAliases":[{"foreign":{"id":8561,"name":"RouterWethLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"614:13:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/RouterCommon.sol","file":"./RouterCommon.sol","id":8564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10717,"sourceUnit":6963,"src":"658:50:43","symbolAliases":[{"foreign":{"id":8563,"name":"RouterCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"667:12:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8566,"name":"IRouter","nameLocations":["1038:7:43"],"nodeType":"IdentifierPath","referencedDeclaration":4198,"src":"1038:7:43"},"id":8567,"nodeType":"InheritanceSpecifier","src":"1038:7:43"},{"baseName":{"id":8568,"name":"RouterCommon","nameLocations":["1047:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6962,"src":"1047:12:43"},"id":8569,"nodeType":"InheritanceSpecifier","src":"1047:12:43"}],"canonicalName":"Router","contractDependencies":[],"contractKind":"contract","documentation":{"id":8565,"nodeType":"StructuredDocumentation","src":"710:308:43","text":" @notice Entrypoint for swaps, liquidity operations, and corresponding queries.\n @dev The external API functions unlock the Vault, which calls back into the corresponding hook functions.\n These interact with the Vault, transfer tokens, settle accounting, and handle wrapping and unwrapping ETH."},"fullyImplemented":true,"id":10716,"linearizedBaseContracts":[10716,6962,8543,5818,6206,8194,7208,4319,4303,4198],"name":"Router","nameLocation":"1028:6:43","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8572,"libraryName":{"id":8570,"name":"Address","nameLocations":["1072:7:43"],"nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"1072:7:43"},"nodeType":"UsingForDirective","src":"1066:34:43","typeName":{"id":8571,"name":"address","nodeType":"ElementaryTypeName","src":"1084:15:43","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"global":false,"id":8576,"libraryName":{"id":8573,"name":"RouterWethLib","nameLocations":["1111:13:43"],"nodeType":"IdentifierPath","referencedDeclaration":7078,"src":"1111:13:43"},"nodeType":"UsingForDirective","src":"1105:30:43","typeName":{"id":8575,"nodeType":"UserDefinedTypeName","pathNode":{"id":8574,"name":"IWETH","nameLocations":["1129:5:43"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"1129:5:43"},"referencedDeclaration":5836,"src":"1129:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}},{"global":false,"id":8578,"libraryName":{"id":8577,"name":"SafeCast","nameLocations":["1146:8:43"],"nodeType":"IdentifierPath","referencedDeclaration":2868,"src":"1146:8:43"},"nodeType":"UsingForDirective","src":"1140:21:43"},{"body":{"id":8594,"nodeType":"Block","src":"1429:64:43","statements":[]},"id":8595,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8589,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"1401:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},{"id":8590,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"1408:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},{"id":8591,"name":"routerVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"1414:13:43","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8592,"kind":"baseConstructorSpecifier","modifierName":{"id":8588,"name":"RouterCommon","nameLocations":["1388:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6962,"src":"1388:12:43"},"nodeType":"ModifierInvocation","src":"1388:40:43"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8581,"mutability":"mutable","name":"vault","nameLocation":"1195:5:43","nodeType":"VariableDeclaration","scope":8595,"src":"1188:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},"typeName":{"id":8580,"nodeType":"UserDefinedTypeName","pathNode":{"id":8579,"name":"IVault","nameLocations":["1188:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":4357,"src":"1188:6:43"},"referencedDeclaration":4357,"src":"1188:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":8584,"mutability":"mutable","name":"weth","nameLocation":"1216:4:43","nodeType":"VariableDeclaration","scope":8595,"src":"1210:10:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"},"typeName":{"id":8583,"nodeType":"UserDefinedTypeName","pathNode":{"id":8582,"name":"IWETH","nameLocations":["1210:5:43"],"nodeType":"IdentifierPath","referencedDeclaration":5836,"src":"1210:5:43"},"referencedDeclaration":5836,"src":"1210:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"visibility":"internal"},{"constant":false,"id":8586,"mutability":"mutable","name":"routerVersion","nameLocation":"1290:13:43","nodeType":"VariableDeclaration","scope":8595,"src":"1276:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8585,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:43","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1178:209:43"},"returnParameters":{"id":8593,"nodeType":"ParameterList","parameters":[],"src":"1429:0:43"},"scope":10716,"src":"1167:326:43","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3752],"body":{"id":8645,"nodeType":"Block","src":"2030:667:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8626,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"2162:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":8627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2169:14:43","memberName":"initializeHook","nodeType":"MemberAccess","referencedDeclaration":8762,"src":"2162:21:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_InitializeHookParams_$3731_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.initializeHook(struct IRouter.InitializeHookParams calldata) returns (uint256)"}},{"arguments":[{"expression":{"id":8629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2268:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2272:6:43","memberName":"sender","nodeType":"MemberAccess","src":"2268:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8631,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"2314:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8632,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"2356:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":8633,"name":"exactAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"2408:14:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8634,"name":"minBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"2469:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8635,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"2525:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8636,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"2574:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8628,"name":"InitializeHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"2209:20:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InitializeHookParams_$3731_storage_ptr_$","typeString":"type(struct IRouter.InitializeHookParams storage pointer)"}},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2260:6:43","2308:4:43","2348:6:43","2392:14:43","2452:15:43","2514:9:43","2564:8:43"],"names":["sender","pool","tokens","exactAmountsIn","minBptAmountOut","wethIsEth","userData"],"nodeType":"FunctionCall","src":"2209:400:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_memory_ptr","typeString":"struct IRouter.InitializeHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_InitializeHookParams_$3731_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.initializeHook(struct IRouter.InitializeHookParams calldata) returns (uint256)"},{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_memory_ptr","typeString":"struct IRouter.InitializeHookParams memory"}],"expression":{"id":8624,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2122:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2126:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"2122:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:509:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8622,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"2087:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2094:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"2087:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2087:562:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2668:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2668:7:43","typeDescriptions":{}}}],"id":8642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2667:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":8620,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2059:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2063:6:43","memberName":"decode","nodeType":"MemberAccess","src":"2059:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:631:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8619,"id":8644,"nodeType":"Return","src":"2040:650:43"}]},"documentation":{"id":8596,"nodeType":"StructuredDocumentation","src":"1722:23:43","text":"@inheritdoc IRouter"},"functionSelector":"026b3d95","id":8646,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":8614,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1987:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1991:6:43","memberName":"sender","nodeType":"MemberAccess","src":"1987:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8616,"kind":"modifierInvocation","modifierName":{"id":8613,"name":"saveSender","nameLocations":["1976:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"1976:10:43"},"nodeType":"ModifierInvocation","src":"1976:22:43"}],"name":"initialize","nameLocation":"1759:10:43","nodeType":"FunctionDefinition","parameters":{"id":8612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"pool","nameLocation":"1787:4:43","nodeType":"VariableDeclaration","scope":8646,"src":"1779:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8597,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8602,"mutability":"mutable","name":"tokens","nameLocation":"1817:6:43","nodeType":"VariableDeclaration","scope":8646,"src":"1801:22:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":8600,"nodeType":"UserDefinedTypeName","pathNode":{"id":8599,"name":"IERC20","nameLocations":["1801:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"1801:6:43"},"referencedDeclaration":337,"src":"1801:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":8601,"nodeType":"ArrayTypeName","src":"1801:8:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":8605,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"1850:14:43","nodeType":"VariableDeclaration","scope":8646,"src":"1833:31:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1833:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8604,"nodeType":"ArrayTypeName","src":"1833:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8607,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"1882:15:43","nodeType":"VariableDeclaration","scope":8646,"src":"1874:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1874:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8609,"mutability":"mutable","name":"wethIsEth","nameLocation":"1912:9:43","nodeType":"VariableDeclaration","scope":8646,"src":"1907:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8608,"name":"bool","nodeType":"ElementaryTypeName","src":"1907:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8611,"mutability":"mutable","name":"userData","nameLocation":"1944:8:43","nodeType":"VariableDeclaration","scope":8646,"src":"1931:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8610,"name":"bytes","nodeType":"ElementaryTypeName","src":"1931:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1769:189:43"},"returnParameters":{"id":8619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8618,"mutability":"mutable","name":"bptAmountOut","nameLocation":"2016:12:43","nodeType":"VariableDeclaration","scope":8646,"src":"2008:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:22:43"},"scope":10716,"src":"1750:947:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8761,"nodeType":"Block","src":"3105:1294:43","statements":[{"expression":{"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8659,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"3115:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8662,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3161:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":3717,"src":"3161:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8664,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3186:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3193:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3715,"src":"3186:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8666,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3213:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3220:6:43","memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"3213:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},{"expression":{"id":8668,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3240:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3247:14:43","memberName":"exactAmountsIn","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"3240:21:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":8670,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3275:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3282:15:43","memberName":"minBptAmountOut","nodeType":"MemberAccess","referencedDeclaration":3726,"src":"3275:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8672,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3311:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3318:8:43","memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"3311:15:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8660,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"3130:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3137:10:43","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":5373,"src":"3130:17:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,contract IERC20[] memory,uint256[] memory,uint256,bytes memory) external returns (uint256)"}},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3130:206:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3115:221:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8676,"nodeType":"ExpressionStatement","src":"3115:221:43"},{"body":{"id":8754,"nodeType":"Block","src":"3398:931:43","statements":[{"assignments":[8691],"declarations":[{"constant":false,"id":8691,"mutability":"mutable","name":"token","nameLocation":"3419:5:43","nodeType":"VariableDeclaration","scope":8754,"src":"3412:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8690,"nodeType":"UserDefinedTypeName","pathNode":{"id":8689,"name":"IERC20","nameLocations":["3412:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3412:6:43"},"referencedDeclaration":337,"src":"3412:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"id":8696,"initialValue":{"baseExpression":{"expression":{"id":8692,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3427:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3434:6:43","memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"3427:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":8695,"indexExpression":{"id":8694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"3441:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3427:16:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"3412:31:43"},{"assignments":[8698],"declarations":[{"constant":false,"id":8698,"mutability":"mutable","name":"amountIn","nameLocation":"3465:8:43","nodeType":"VariableDeclaration","scope":8754,"src":"3457:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3457:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8703,"initialValue":{"baseExpression":{"expression":{"id":8699,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3476:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3483:14:43","memberName":"exactAmountsIn","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"3476:21:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":8702,"indexExpression":{"id":8701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"3498:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3476:24:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3457:43:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8704,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"3519:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3531:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3519:13:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8709,"nodeType":"IfStatement","src":"3515:60:43","trueBody":{"id":8708,"nodeType":"Block","src":"3534:41:43","statements":[{"id":8707,"nodeType":"Continue","src":"3552:8:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8710,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3654:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3661:9:43","memberName":"wethIsEth","nodeType":"MemberAccess","referencedDeclaration":3728,"src":"3654:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8714,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"3682:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":8713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3674:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8712,"name":"address","nodeType":"ElementaryTypeName","src":"3674:7:43","typeDescriptions":{}}},"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":8718,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"3700:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}],"id":8717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3692:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8716,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:43","typeDescriptions":{}}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3674:32:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3654:52:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8752,"nodeType":"Block","src":"3787:532:43","statements":[{"expression":{"arguments":[{"expression":{"id":8734,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"4203:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4210:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3715,"src":"4203:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8738,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"4226:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}],"id":8737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4218:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8736,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:43","typeDescriptions":{}}},"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4218:15:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8740,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"4235:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4244:9:43","memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"4235:18:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4235:20:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"arguments":[{"id":8731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"4183:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":8730,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4176:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$337_$","typeString":"type(contract IERC20)"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4176:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4190:12:43","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":336,"src":"4176:26:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4176:80:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8744,"nodeType":"ExpressionStatement","src":"4176:80:43"},{"expression":{"arguments":[{"id":8748,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"4288:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":8749,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"4295:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8745,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"4274:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4281:6:43","memberName":"settle","nodeType":"MemberAccess","referencedDeclaration":5697,"src":"4274:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract IERC20,uint256) external returns (uint256)"}},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4274:30:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8751,"nodeType":"ExpressionStatement","src":"4274:30:43"}]},"id":8753,"nodeType":"IfStatement","src":"3650:669:43","trueBody":{"id":8729,"nodeType":"Block","src":"3708:73:43","statements":[{"expression":{"arguments":[{"id":8725,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"3749:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},{"id":8726,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"3757:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8722,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"3726:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3732:16:43","memberName":"wrapEthAndSettle","nodeType":"MemberAccess","referencedDeclaration":7038,"src":"3726:22:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$5836_$_t_contract$_IVault_$4357_$_t_uint256_$returns$__$attached_to$_t_contract$_IWETH_$5836_$","typeString":"function (contract IWETH,contract IVault,uint256)"}},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3726:40:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8728,"nodeType":"ExpressionStatement","src":"3726:40:43"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"3367:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":8682,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"3371:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3378:6:43","memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"3371:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_calldata_ptr","typeString":"contract IERC20[] calldata"}},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:6:43","memberName":"length","nodeType":"MemberAccess","src":"3371:20:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3367:24:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8755,"initializationExpression":{"assignments":[8678],"declarations":[{"constant":false,"id":8678,"mutability":"mutable","name":"i","nameLocation":"3360:1:43","nodeType":"VariableDeclaration","scope":8755,"src":"3352:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8680,"initialValue":{"hexValue":"30","id":8679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3364:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3352:13:43"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3393:3:43","subExpression":{"id":8686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"3395:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8688,"nodeType":"ExpressionStatement","src":"3393:3:43"},"nodeType":"ForStatement","src":"3347:982:43"},{"expression":{"arguments":[{"expression":{"id":8757,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"4378:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams calldata"}},"id":8758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4385:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3715,"src":"4378:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8756,"name":"_returnEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"4367:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:25:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8760,"nodeType":"ExpressionStatement","src":"4367:25:43"}]},"documentation":{"id":8647,"nodeType":"StructuredDocumentation","src":"2703:258:43","text":" @notice Hook for initialization.\n @dev Can only be called by the Vault.\n @param params Initialization parameters (see IRouter for struct definition)\n @return bptAmountOut BPT amount minted in exchange for the input tokens"},"functionSelector":"086fad66","id":8762,"implemented":true,"kind":"function","modifiers":[{"id":8653,"kind":"modifierInvocation","modifierName":{"id":8652,"name":"nonReentrant","nameLocations":["3051:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"3051:12:43"},"nodeType":"ModifierInvocation","src":"3051:12:43"},{"id":8655,"kind":"modifierInvocation","modifierName":{"id":8654,"name":"onlyVault","nameLocations":["3064:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"3064:9:43"},"nodeType":"ModifierInvocation","src":"3064:9:43"}],"name":"initializeHook","nameLocation":"2975:14:43","nodeType":"FunctionDefinition","parameters":{"id":8651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8650,"mutability":"mutable","name":"params","nameLocation":"3029:6:43","nodeType":"VariableDeclaration","scope":8762,"src":"2999:36:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_calldata_ptr","typeString":"struct IRouter.InitializeHookParams"},"typeName":{"id":8649,"nodeType":"UserDefinedTypeName","pathNode":{"id":8648,"name":"InitializeHookParams","nameLocations":["2999:20:43"],"nodeType":"IdentifierPath","referencedDeclaration":3731,"src":"2999:20:43"},"referencedDeclaration":3731,"src":"2999:20:43","typeDescriptions":{"typeIdentifier":"t_struct$_InitializeHookParams_$3731_storage_ptr","typeString":"struct IRouter.InitializeHookParams"}},"visibility":"internal"}],"src":"2989:52:43"},"returnParameters":{"id":8658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8657,"mutability":"mutable","name":"bptAmountOut","nameLocation":"3091:12:43","nodeType":"VariableDeclaration","scope":8762,"src":"3083:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8656,"name":"uint256","nodeType":"ElementaryTypeName","src":"3083:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3082:22:43"},"scope":10716,"src":"2966:1433:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3770],"body":{"id":8818,"nodeType":"Block","src":"4913:643:43","statements":[{"expression":{"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8784,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8782,"src":"4924:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},null,null],"id":8785,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4923:15:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$__$__$","typeString":"tuple(uint256[] memory,,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8792,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"5032:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":8793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5039:16:43","memberName":"addLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9183,"src":"5032:23:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"expression":{"id":8795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5134:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5138:6:43","memberName":"sender","nodeType":"MemberAccess","src":"5134:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8797,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"5176:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8798,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8768,"src":"5220:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8799,"name":"exactBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"5275:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8800,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"5324:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":8801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5341:12:43","memberName":"PROPORTIONAL","nodeType":"MemberAccess","referencedDeclaration":8434,"src":"5324:29:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"id":8802,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8772,"src":"5390:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8803,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"5435:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8794,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"5077:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5126:6:43","5170:4:43","5206:12:43","5258:15:43","5318:4:43","5379:9:43","5425:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"5077:389:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":8790,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4996:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5000:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"4996:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:488:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8788,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"4965:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4972:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"4965:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":8806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:533:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":8808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5513:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8807,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:43","typeDescriptions":{}}},"id":8809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"5513:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":8811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5524:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5524:7:43","typeDescriptions":{}}},{"id":8813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5533:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8812,"name":"bytes","nodeType":"ElementaryTypeName","src":"5533:5:43","typeDescriptions":{}}}],"id":8814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5512:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":8786,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4941:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4945:6:43","memberName":"decode","nodeType":"MemberAccess","src":"4941:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4941:608:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"src":"4923:626:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8817,"nodeType":"ExpressionStatement","src":"4923:626:43"}]},"documentation":{"id":8763,"nodeType":"StructuredDocumentation","src":"4617:23:43","text":"@inheritdoc IRouter"},"functionSelector":"724dba33","id":8819,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":8777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4864:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:43","memberName":"sender","nodeType":"MemberAccess","src":"4864:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8779,"kind":"modifierInvocation","modifierName":{"id":8776,"name":"saveSender","nameLocations":["4853:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"4853:10:43"},"nodeType":"ModifierInvocation","src":"4853:22:43"}],"name":"addLiquidityProportional","nameLocation":"4654:24:43","nodeType":"FunctionDefinition","parameters":{"id":8775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8765,"mutability":"mutable","name":"pool","nameLocation":"4696:4:43","nodeType":"VariableDeclaration","scope":8819,"src":"4688:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8764,"name":"address","nodeType":"ElementaryTypeName","src":"4688:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8768,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"4727:12:43","nodeType":"VariableDeclaration","scope":8819,"src":"4710:29:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4710:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8767,"nodeType":"ArrayTypeName","src":"4710:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8770,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"4757:17:43","nodeType":"VariableDeclaration","scope":8819,"src":"4749:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4749:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8772,"mutability":"mutable","name":"wethIsEth","nameLocation":"4789:9:43","nodeType":"VariableDeclaration","scope":8819,"src":"4784:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8771,"name":"bool","nodeType":"ElementaryTypeName","src":"4784:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8774,"mutability":"mutable","name":"userData","nameLocation":"4821:8:43","nodeType":"VariableDeclaration","scope":8819,"src":"4808:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8773,"name":"bytes","nodeType":"ElementaryTypeName","src":"4808:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4678:157:43"},"returnParameters":{"id":8783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8782,"mutability":"mutable","name":"amountsIn","nameLocation":"4902:9:43","nodeType":"VariableDeclaration","scope":8819,"src":"4885:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4885:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8781,"nodeType":"ArrayTypeName","src":"4885:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4884:28:43"},"scope":10716,"src":"4645:911:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3787],"body":{"id":8874,"nodeType":"Block","src":"5850:644:43","statements":[{"expression":{"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":8840,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"5863:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":8841,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5860:18:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_uint256_$__$","typeString":"tuple(,uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8848,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"5972:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":8849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5979:16:43","memberName":"addLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9183,"src":"5972:23:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"expression":{"id":8851,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6074:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6078:6:43","memberName":"sender","nodeType":"MemberAccess","src":"6074:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8853,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8822,"src":"6116:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8854,"name":"exactAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8825,"src":"6160:14:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8855,"name":"minBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"6217:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8856,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"6264:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6281:10:43","memberName":"UNBALANCED","nodeType":"MemberAccess","referencedDeclaration":8435,"src":"6264:27:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"id":8858,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"6328:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8859,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8831,"src":"6373:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8850,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"6017:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6066:6:43","6110:4:43","6146:12:43","6200:15:43","6258:4:43","6317:9:43","6363:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"6017:387:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":8846,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5936:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5940:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"5936:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5936:486:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8844,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"5905:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5912:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"5905:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:531:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":8864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6451:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8863,"name":"uint256","nodeType":"ElementaryTypeName","src":"6451:7:43","typeDescriptions":{}}},"id":8865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"6451:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":8867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6462:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8866,"name":"uint256","nodeType":"ElementaryTypeName","src":"6462:7:43","typeDescriptions":{}}},{"id":8869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6471:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8868,"name":"bytes","nodeType":"ElementaryTypeName","src":"6471:5:43","typeDescriptions":{}}}],"id":8870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6450:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":8842,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5881:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5885:6:43","memberName":"decode","nodeType":"MemberAccess","src":"5881:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5881:606:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"src":"5860:627:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8873,"nodeType":"ExpressionStatement","src":"5860:627:43"}]},"documentation":{"id":8820,"nodeType":"StructuredDocumentation","src":"5562:23:43","text":"@inheritdoc IRouter"},"functionSelector":"c08bc851","id":8875,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":8834,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5807:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5811:6:43","memberName":"sender","nodeType":"MemberAccess","src":"5807:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8836,"kind":"modifierInvocation","modifierName":{"id":8833,"name":"saveSender","nameLocations":["5796:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"5796:10:43"},"nodeType":"ModifierInvocation","src":"5796:22:43"}],"name":"addLiquidityUnbalanced","nameLocation":"5599:22:43","nodeType":"FunctionDefinition","parameters":{"id":8832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8822,"mutability":"mutable","name":"pool","nameLocation":"5639:4:43","nodeType":"VariableDeclaration","scope":8875,"src":"5631:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8821,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8825,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"5670:14:43","nodeType":"VariableDeclaration","scope":8875,"src":"5653:31:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8823,"name":"uint256","nodeType":"ElementaryTypeName","src":"5653:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8824,"nodeType":"ArrayTypeName","src":"5653:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8827,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"5702:15:43","nodeType":"VariableDeclaration","scope":8875,"src":"5694:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8826,"name":"uint256","nodeType":"ElementaryTypeName","src":"5694:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8829,"mutability":"mutable","name":"wethIsEth","nameLocation":"5732:9:43","nodeType":"VariableDeclaration","scope":8875,"src":"5727:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8828,"name":"bool","nodeType":"ElementaryTypeName","src":"5727:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8831,"mutability":"mutable","name":"userData","nameLocation":"5764:8:43","nodeType":"VariableDeclaration","scope":8875,"src":"5751:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8830,"name":"bytes","nodeType":"ElementaryTypeName","src":"5751:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:157:43"},"returnParameters":{"id":8839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8838,"mutability":"mutable","name":"bptAmountOut","nameLocation":"5836:12:43","nodeType":"VariableDeclaration","scope":8875,"src":"5828:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5828:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5827:22:43"},"scope":10716,"src":"5590:904:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3806],"body":{"id":8951,"nodeType":"Block","src":"6807:881:43","statements":[{"assignments":[8902,8904],"declarations":[{"constant":false,"id":8902,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"6835:12:43","nodeType":"VariableDeclaration","scope":8951,"src":"6818:29:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8900,"name":"uint256","nodeType":"ElementaryTypeName","src":"6818:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8901,"nodeType":"ArrayTypeName","src":"6818:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8904,"mutability":"mutable","name":"tokenIndex","nameLocation":"6857:10:43","nodeType":"VariableDeclaration","scope":8951,"src":"6849:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6849:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8910,"initialValue":{"arguments":[{"id":8906,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"6918:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8907,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"6936:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":8908,"name":"maxAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"6957:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8905,"name":"_getSingleInputArrayAndTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"6871:33:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (address,contract IERC20,uint256) view returns (uint256[] memory,uint256)"}},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:107:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6817:161:43"},{"assignments":[8915,null,null],"declarations":[{"constant":false,"id":8915,"mutability":"mutable","name":"amountsIn","nameLocation":"7007:9:43","nodeType":"VariableDeclaration","scope":8951,"src":"6990:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6990:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8914,"nodeType":"ArrayTypeName","src":"6990:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null,null],"id":8946,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8922,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"7115:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":8923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7122:16:43","memberName":"addLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9183,"src":"7115:23:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"expression":{"id":8925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7217:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7221:6:43","memberName":"sender","nodeType":"MemberAccess","src":"7217:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8927,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"7259:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8928,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"7303:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":8929,"name":"exactBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"7358:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8930,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"7407:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":8931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7424:22:43","memberName":"SINGLE_TOKEN_EXACT_OUT","nodeType":"MemberAccess","referencedDeclaration":8436,"src":"7407:39:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"id":8932,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"7483:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8933,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8889,"src":"7528:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8924,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"7160:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":8934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7209:6:43","7253:4:43","7289:12:43","7341:15:43","7401:4:43","7472:9:43","7518:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"7160:399:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":8920,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7079:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7083:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"7079:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:498:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8918,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"7048:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7055:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"7048:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":8936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7048:543:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":8938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7606:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8937,"name":"uint256","nodeType":"ElementaryTypeName","src":"7606:7:43","typeDescriptions":{}}},"id":8939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"7606:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":8941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8940,"name":"uint256","nodeType":"ElementaryTypeName","src":"7617:7:43","typeDescriptions":{}}},{"id":8943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7626:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8942,"name":"bytes","nodeType":"ElementaryTypeName","src":"7626:5:43","typeDescriptions":{}}}],"id":8944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7605:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":8916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7024:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7028:6:43","memberName":"decode","nodeType":"MemberAccess","src":"7024:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7024:618:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6989:653:43"},{"expression":{"baseExpression":{"id":8947,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"7660:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8949,"indexExpression":{"id":8948,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"7670:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7660:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8897,"id":8950,"nodeType":"Return","src":"7653:28:43"}]},"documentation":{"id":8876,"nodeType":"StructuredDocumentation","src":"6500:23:43","text":"@inheritdoc IRouter"},"functionSelector":"72657d17","id":8952,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":8892,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6768:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6772:6:43","memberName":"sender","nodeType":"MemberAccess","src":"6768:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8894,"kind":"modifierInvocation","modifierName":{"id":8891,"name":"saveSender","nameLocations":["6757:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"6757:10:43"},"nodeType":"ModifierInvocation","src":"6757:22:43"}],"name":"addLiquiditySingleTokenExactOut","nameLocation":"6537:31:43","nodeType":"FunctionDefinition","parameters":{"id":8890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8878,"mutability":"mutable","name":"pool","nameLocation":"6586:4:43","nodeType":"VariableDeclaration","scope":8952,"src":"6578:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8877,"name":"address","nodeType":"ElementaryTypeName","src":"6578:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8881,"mutability":"mutable","name":"tokenIn","nameLocation":"6607:7:43","nodeType":"VariableDeclaration","scope":8952,"src":"6600:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":8880,"nodeType":"UserDefinedTypeName","pathNode":{"id":8879,"name":"IERC20","nameLocations":["6600:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"6600:6:43"},"referencedDeclaration":337,"src":"6600:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8883,"mutability":"mutable","name":"maxAmountIn","nameLocation":"6632:11:43","nodeType":"VariableDeclaration","scope":8952,"src":"6624:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8882,"name":"uint256","nodeType":"ElementaryTypeName","src":"6624:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8885,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"6661:17:43","nodeType":"VariableDeclaration","scope":8952,"src":"6653:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8884,"name":"uint256","nodeType":"ElementaryTypeName","src":"6653:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8887,"mutability":"mutable","name":"wethIsEth","nameLocation":"6693:9:43","nodeType":"VariableDeclaration","scope":8952,"src":"6688:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8886,"name":"bool","nodeType":"ElementaryTypeName","src":"6688:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8889,"mutability":"mutable","name":"userData","nameLocation":"6725:8:43","nodeType":"VariableDeclaration","scope":8952,"src":"6712:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8888,"name":"bytes","nodeType":"ElementaryTypeName","src":"6712:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6568:171:43"},"returnParameters":{"id":8897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8896,"mutability":"mutable","name":"amountIn","nameLocation":"6797:8:43","nodeType":"VariableDeclaration","scope":8952,"src":"6789:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8895,"name":"uint256","nodeType":"ElementaryTypeName","src":"6789:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6788:18:43"},"scope":10716,"src":"6528:1160:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3819],"body":{"id":8990,"nodeType":"Block","src":"7897:475:43","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8974,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"7966:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7973:16:43","memberName":"addLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9183,"src":"7966:23:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"expression":{"id":8977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8060:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8064:6:43","memberName":"sender","nodeType":"MemberAccess","src":"8060:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8979,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8955,"src":"8098:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8980,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"8138:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"30","id":8981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8186:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":8982,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"8215:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":8983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8232:8:43","memberName":"DONATION","nodeType":"MemberAccess","referencedDeclaration":8437,"src":"8215:25:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"id":8984,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8960,"src":"8273:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8985,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"8314:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8976,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"8007:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8052:6:43","8092:4:43","8124:12:43","8169:15:43","8209:4:43","8262:9:43","8304:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"8007:334:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":8972,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7934:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7938:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"7934:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:421:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8969,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"7907:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7914:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"7907:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7907:458:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8989,"nodeType":"ExpressionStatement","src":"7907:458:43"}]},"documentation":{"id":8953,"nodeType":"StructuredDocumentation","src":"7694:23:43","text":"@inheritdoc IRouter"},"functionSelector":"bf6ee3fd","id":8991,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":8965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7885:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7889:6:43","memberName":"sender","nodeType":"MemberAccess","src":"7885:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8967,"kind":"modifierInvocation","modifierName":{"id":8964,"name":"saveSender","nameLocations":["7874:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"7874:10:43"},"nodeType":"ModifierInvocation","src":"7874:22:43"}],"name":"donate","nameLocation":"7731:6:43","nodeType":"FunctionDefinition","parameters":{"id":8963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8955,"mutability":"mutable","name":"pool","nameLocation":"7755:4:43","nodeType":"VariableDeclaration","scope":8991,"src":"7747:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8954,"name":"address","nodeType":"ElementaryTypeName","src":"7747:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8958,"mutability":"mutable","name":"amountsIn","nameLocation":"7786:9:43","nodeType":"VariableDeclaration","scope":8991,"src":"7769:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8956,"name":"uint256","nodeType":"ElementaryTypeName","src":"7769:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8957,"nodeType":"ArrayTypeName","src":"7769:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8960,"mutability":"mutable","name":"wethIsEth","nameLocation":"7810:9:43","nodeType":"VariableDeclaration","scope":8991,"src":"7805:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8959,"name":"bool","nodeType":"ElementaryTypeName","src":"7805:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8962,"mutability":"mutable","name":"userData","nameLocation":"7842:8:43","nodeType":"VariableDeclaration","scope":8991,"src":"7829:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8961,"name":"bytes","nodeType":"ElementaryTypeName","src":"7829:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7737:119:43"},"returnParameters":{"id":8968,"nodeType":"ParameterList","parameters":[],"src":"7897:0:43"},"scope":10716,"src":"7722:650:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3841],"body":{"id":9048,"nodeType":"Block","src":"8749:700:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9023,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"8881:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8888:16:43","memberName":"addLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9183,"src":"8881:23:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"expression":{"id":9026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8991:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8995:6:43","memberName":"sender","nodeType":"MemberAccess","src":"8991:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9028,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"9037:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9029,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"9085:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9030,"name":"minBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8999,"src":"9144:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9031,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"9195:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9212:6:43","memberName":"CUSTOM","nodeType":"MemberAccess","referencedDeclaration":8438,"src":"9195:23:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"id":9033,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9001,"src":"9259:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9034,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9003,"src":"9308:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9025,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"8930:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8983:6:43","9031:4:43","9071:12:43","9127:15:43","9189:4:43","9248:9:43","9298:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"8930:413:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.addLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":9021,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8841:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8845:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"8841:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8841:524:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9019,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"8806:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8813:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"8806:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8806:577:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":9039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9402:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9038,"name":"uint256","nodeType":"ElementaryTypeName","src":"9402:7:43","typeDescriptions":{}}},"id":9040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"9402:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":9042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9413:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9041,"name":"uint256","nodeType":"ElementaryTypeName","src":"9413:7:43","typeDescriptions":{}}},{"id":9044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9422:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9043,"name":"bytes","nodeType":"ElementaryTypeName","src":"9422:5:43","typeDescriptions":{}}}],"id":9045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9401:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":9017,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8778:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8782:6:43","memberName":"decode","nodeType":"MemberAccess","src":"8778:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8778:664:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"functionReturnParameters":9016,"id":9047,"nodeType":"Return","src":"8759:683:43"}]},"documentation":{"id":8992,"nodeType":"StructuredDocumentation","src":"8378:23:43","text":"@inheritdoc IRouter"},"functionSelector":"0ca078ec","id":9049,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9006,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8641:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8645:6:43","memberName":"sender","nodeType":"MemberAccess","src":"8641:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9008,"kind":"modifierInvocation","modifierName":{"id":9005,"name":"saveSender","nameLocations":["8630:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"8630:10:43"},"nodeType":"ModifierInvocation","src":"8630:22:43"}],"name":"addLiquidityCustom","nameLocation":"8415:18:43","nodeType":"FunctionDefinition","parameters":{"id":9004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8994,"mutability":"mutable","name":"pool","nameLocation":"8451:4:43","nodeType":"VariableDeclaration","scope":9049,"src":"8443:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8993,"name":"address","nodeType":"ElementaryTypeName","src":"8443:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8997,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"8482:12:43","nodeType":"VariableDeclaration","scope":9049,"src":"8465:29:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8995,"name":"uint256","nodeType":"ElementaryTypeName","src":"8465:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8996,"nodeType":"ArrayTypeName","src":"8465:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8999,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"8512:15:43","nodeType":"VariableDeclaration","scope":9049,"src":"8504:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8998,"name":"uint256","nodeType":"ElementaryTypeName","src":"8504:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9001,"mutability":"mutable","name":"wethIsEth","nameLocation":"8542:9:43","nodeType":"VariableDeclaration","scope":9049,"src":"8537:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9000,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9003,"mutability":"mutable","name":"userData","nameLocation":"8574:8:43","nodeType":"VariableDeclaration","scope":9049,"src":"8561:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9002,"name":"bytes","nodeType":"ElementaryTypeName","src":"8561:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8433:155:43"},"returnParameters":{"id":9016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9011,"mutability":"mutable","name":"amountsIn","nameLocation":"8687:9:43","nodeType":"VariableDeclaration","scope":9049,"src":"8670:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9009,"name":"uint256","nodeType":"ElementaryTypeName","src":"8670:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9010,"nodeType":"ArrayTypeName","src":"8670:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9013,"mutability":"mutable","name":"bptAmountOut","nameLocation":"8706:12:43","nodeType":"VariableDeclaration","scope":9049,"src":"8698:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9012,"name":"uint256","nodeType":"ElementaryTypeName","src":"8698:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9015,"mutability":"mutable","name":"returnData","nameLocation":"8733:10:43","nodeType":"VariableDeclaration","scope":9049,"src":"8720:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9014,"name":"bytes","nodeType":"ElementaryTypeName","src":"8720:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8669:75:43"},"scope":10716,"src":"8406:1043:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9182,"nodeType":"Block","src":"10093:1521:43","statements":[{"expression":{"id":9088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9067,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"10104:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9068,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"10115:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9069,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"10129:10:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":9070,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"10103:37:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":9074,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10219:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10226:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"10219:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9076,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10252:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10259:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4211,"src":"10252:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9078,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10297:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10304:12:43","memberName":"maxAmountsIn","nodeType":"MemberAccess","referencedDeclaration":4216,"src":"10297:19:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":9080,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10351:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10358:15:43","memberName":"minBptAmountOut","nodeType":"MemberAccess","referencedDeclaration":4218,"src":"10351:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9082,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10397:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10404:4:43","memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":4221,"src":"10397:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"expression":{"id":9084,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10436:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10443:8:43","memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"10436:15:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9073,"name":"AddLiquidityParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"10176:18:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityParams_$8455_storage_ptr_$","typeString":"type(struct AddLiquidityParams storage pointer)"}},"id":9086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10213:4:43","10248:2:43","10283:12:43","10334:15:43","10391:4:43","10426:8:43"],"names":["pool","to","maxAmountsIn","minBptAmountOut","kind","userData"],"nodeType":"FunctionCall","src":"10176:290:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityParams_$8455_memory_ptr","typeString":"struct AddLiquidityParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddLiquidityParams_$8455_memory_ptr","typeString":"struct AddLiquidityParams memory"}],"expression":{"id":9071,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"10143:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10150:12:43","memberName":"addLiquidity","nodeType":"MemberAccess","referencedDeclaration":5735,"src":"10143:19:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_AddLiquidityParams_$8455_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (struct AddLiquidityParams memory) external returns (uint256[] memory,uint256,bytes memory)"}},"id":9087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10143:333:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"src":"10103:373:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9089,"nodeType":"ExpressionStatement","src":"10103:373:43"},{"assignments":[9094],"declarations":[{"constant":false,"id":9094,"mutability":"mutable","name":"tokens","nameLocation":"10581:6:43","nodeType":"VariableDeclaration","scope":9182,"src":"10565:22:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9092,"nodeType":"UserDefinedTypeName","pathNode":{"id":9091,"name":"IERC20","nameLocations":["10565:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"10565:6:43"},"referencedDeclaration":337,"src":"10565:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":9093,"nodeType":"ArrayTypeName","src":"10565:8:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":9100,"initialValue":{"arguments":[{"expression":{"id":9097,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10611:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10618:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"10611:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9095,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"10590:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10597:13:43","memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"10590:20:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$","typeString":"function (address) view external returns (contract IERC20[] memory)"}},"id":9099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10590:33:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10565:58:43"},{"body":{"id":9175,"nodeType":"Block","src":"10678:851:43","statements":[{"assignments":[9114],"declarations":[{"constant":false,"id":9114,"mutability":"mutable","name":"token","nameLocation":"10699:5:43","nodeType":"VariableDeclaration","scope":9175,"src":"10692:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9113,"nodeType":"UserDefinedTypeName","pathNode":{"id":9112,"name":"IERC20","nameLocations":["10692:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"10692:6:43"},"referencedDeclaration":337,"src":"10692:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"id":9118,"initialValue":{"baseExpression":{"id":9115,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"10707:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":9117,"indexExpression":{"id":9116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9102,"src":"10714:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:9:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"10692:24:43"},{"assignments":[9120],"declarations":[{"constant":false,"id":9120,"mutability":"mutable","name":"amountIn","nameLocation":"10738:8:43","nodeType":"VariableDeclaration","scope":9175,"src":"10730:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9119,"name":"uint256","nodeType":"ElementaryTypeName","src":"10730:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9124,"initialValue":{"baseExpression":{"id":9121,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"10749:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9123,"indexExpression":{"id":9122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9102,"src":"10759:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10749:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10730:31:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9125,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"10780:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10792:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10780:13:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9130,"nodeType":"IfStatement","src":"10776:60:43","trueBody":{"id":9129,"nodeType":"Block","src":"10795:41:43","statements":[{"id":9128,"nodeType":"Continue","src":"10813:8:43"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9131,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"10915:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10922:9:43","memberName":"wethIsEth","nodeType":"MemberAccess","referencedDeclaration":4223,"src":"10915:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9135,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"10943:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":9134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10935:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9133,"name":"address","nodeType":"ElementaryTypeName","src":"10935:7:43","typeDescriptions":{}}},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10935:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":9139,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"10961:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}],"id":9138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10953:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9137,"name":"address","nodeType":"ElementaryTypeName","src":"10953:7:43","typeDescriptions":{}}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10953:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10935:32:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10915:52:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9173,"nodeType":"Block","src":"11048:471:43","statements":[{"expression":{"arguments":[{"expression":{"id":9155,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"11403:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11410:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4211,"src":"11403:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9159,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11426:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}],"id":9158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11418:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9157,"name":"address","nodeType":"ElementaryTypeName","src":"11418:7:43","typeDescriptions":{}}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11418:15:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9161,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"11435:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11444:9:43","memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"11435:18:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11435:20:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"arguments":[{"id":9152,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"11383:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":9151,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"11376:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$337_$","typeString":"type(contract IERC20)"}},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11376:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11390:12:43","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":336,"src":"11376:26:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11376:80:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9165,"nodeType":"ExpressionStatement","src":"11376:80:43"},{"expression":{"arguments":[{"id":9169,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9114,"src":"11488:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9170,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"11495:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9166,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11474:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11481:6:43","memberName":"settle","nodeType":"MemberAccess","referencedDeclaration":5697,"src":"11474:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_uint256_$","typeString":"function (contract IERC20,uint256) external returns (uint256)"}},"id":9171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11474:30:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9172,"nodeType":"ExpressionStatement","src":"11474:30:43"}]},"id":9174,"nodeType":"IfStatement","src":"10911:608:43","trueBody":{"id":9150,"nodeType":"Block","src":"10969:73:43","statements":[{"expression":{"arguments":[{"id":9146,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"11010:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},{"id":9147,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9120,"src":"11018:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9143,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"10987:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":9145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10993:16:43","memberName":"wrapEthAndSettle","nodeType":"MemberAccess","referencedDeclaration":7038,"src":"10987:22:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$5836_$_t_contract$_IVault_$4357_$_t_uint256_$returns$__$attached_to$_t_contract$_IWETH_$5836_$","typeString":"function (contract IWETH,contract IVault,uint256)"}},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10987:40:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9149,"nodeType":"ExpressionStatement","src":"10987:40:43"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9102,"src":"10654:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9106,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9094,"src":"10658:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10665:6:43","memberName":"length","nodeType":"MemberAccess","src":"10658:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10654:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9176,"initializationExpression":{"assignments":[9102],"declarations":[{"constant":false,"id":9102,"mutability":"mutable","name":"i","nameLocation":"10647:1:43","nodeType":"VariableDeclaration","scope":9176,"src":"10639:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9101,"name":"uint256","nodeType":"ElementaryTypeName","src":"10639:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9104,"initialValue":{"hexValue":"30","id":9103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10651:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10639:13:43"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10673:3:43","subExpression":{"id":9109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9102,"src":"10675:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9111,"nodeType":"ExpressionStatement","src":"10673:3:43"},"nodeType":"ForStatement","src":"10634:895:43"},{"expression":{"arguments":[{"expression":{"id":9178,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"11593:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11600:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4211,"src":"11593:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9177,"name":"_returnEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"11582:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11582:25:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9181,"nodeType":"ExpressionStatement","src":"11582:25:43"}]},"documentation":{"id":9050,"nodeType":"StructuredDocumentation","src":"9455:401:43","text":" @notice Hook for adding liquidity.\n @dev Can only be called by the Vault.\n @param params Add liquidity parameters (see IRouter for struct definition)\n @return amountsIn Actual amounts in required for the join\n @return bptAmountOut BPT amount minted in exchange for the input tokens\n @return returnData Arbitrary data with encoded response from the pool"},"functionSelector":"5b343791","id":9183,"implemented":true,"kind":"function","modifiers":[{"id":9056,"kind":"modifierInvocation","modifierName":{"id":9055,"name":"nonReentrant","nameLocations":["9966:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"9966:12:43"},"nodeType":"ModifierInvocation","src":"9966:12:43"},{"id":9058,"kind":"modifierInvocation","modifierName":{"id":9057,"name":"onlyVault","nameLocations":["9987:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"9987:9:43"},"nodeType":"ModifierInvocation","src":"9987:9:43"}],"name":"addLiquidityHook","nameLocation":"9870:16:43","nodeType":"FunctionDefinition","parameters":{"id":9054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9053,"mutability":"mutable","name":"params","nameLocation":"9928:6:43","nodeType":"VariableDeclaration","scope":9183,"src":"9896:38:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams"},"typeName":{"id":9052,"nodeType":"UserDefinedTypeName","pathNode":{"id":9051,"name":"AddLiquidityHookParams","nameLocations":["9896:22:43"],"nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"9896:22:43"},"referencedDeclaration":4226,"src":"9896:22:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_storage_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams"}},"visibility":"internal"}],"src":"9886:54:43"},"returnParameters":{"id":9066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9061,"mutability":"mutable","name":"amountsIn","nameLocation":"10031:9:43","nodeType":"VariableDeclaration","scope":9183,"src":"10014:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9059,"name":"uint256","nodeType":"ElementaryTypeName","src":"10014:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9060,"nodeType":"ArrayTypeName","src":"10014:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9063,"mutability":"mutable","name":"bptAmountOut","nameLocation":"10050:12:43","nodeType":"VariableDeclaration","scope":9183,"src":"10042:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9062,"name":"uint256","nodeType":"ElementaryTypeName","src":"10042:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9065,"mutability":"mutable","name":"returnData","nameLocation":"10077:10:43","nodeType":"VariableDeclaration","scope":9183,"src":"10064:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9064,"name":"bytes","nodeType":"ElementaryTypeName","src":"10064:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10013:75:43"},"scope":10716,"src":"9861:1753:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3859],"body":{"id":9239,"nodeType":"Block","src":"12133:653:43","statements":[{"expression":{"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":9205,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"12146:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},null],"id":9206,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"12143:16:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_array$_t_uint256_$dyn_memory_ptr_$__$","typeString":"tuple(,uint256[] memory,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9213,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"12253:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12260:19:43","memberName":"removeLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9608,"src":"12253:26:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"expression":{"id":9216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12361:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12365:6:43","memberName":"sender","nodeType":"MemberAccess","src":"12361:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9218,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"12403:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9219,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"12448:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9220,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9188,"src":"12503:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9221,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"12551:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":9222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12571:12:43","memberName":"PROPORTIONAL","nodeType":"MemberAccess","referencedDeclaration":8456,"src":"12551:32:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"id":9223,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9193,"src":"12620:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9224,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"12665:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9215,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"12301:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12353:6:43","12397:4:43","12433:13:43","12487:14:43","12545:4:43","12609:9:43","12655:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"12301:395:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":9211,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12217:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12221:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"12217:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12217:497:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9209,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"12186:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12193:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"12186:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12186:542:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12743:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9228,"name":"uint256","nodeType":"ElementaryTypeName","src":"12743:7:43","typeDescriptions":{}}},{"baseExpression":{"id":9231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12752:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9230,"name":"uint256","nodeType":"ElementaryTypeName","src":"12752:7:43","typeDescriptions":{}}},"id":9232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"12752:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":9234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12763:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9233,"name":"bytes","nodeType":"ElementaryTypeName","src":"12763:5:43","typeDescriptions":{}}}],"id":9235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12742:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":9207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12162:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12166:6:43","memberName":"decode","nodeType":"MemberAccess","src":"12162:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12162:617:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"src":"12143:636:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9238,"nodeType":"ExpressionStatement","src":"12143:636:43"}]},"documentation":{"id":9184,"nodeType":"StructuredDocumentation","src":"11833:23:43","text":"@inheritdoc IRouter"},"functionSelector":"51682750","id":9240,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12083:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12087:6:43","memberName":"sender","nodeType":"MemberAccess","src":"12083:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9200,"kind":"modifierInvocation","modifierName":{"id":9197,"name":"saveSender","nameLocations":["12072:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"12072:10:43"},"nodeType":"ModifierInvocation","src":"12072:22:43"}],"name":"removeLiquidityProportional","nameLocation":"11870:27:43","nodeType":"FunctionDefinition","parameters":{"id":9196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9186,"mutability":"mutable","name":"pool","nameLocation":"11915:4:43","nodeType":"VariableDeclaration","scope":9240,"src":"11907:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9185,"name":"address","nodeType":"ElementaryTypeName","src":"11907:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9188,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"11937:16:43","nodeType":"VariableDeclaration","scope":9240,"src":"11929:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9187,"name":"uint256","nodeType":"ElementaryTypeName","src":"11929:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9191,"mutability":"mutable","name":"minAmountsOut","nameLocation":"11980:13:43","nodeType":"VariableDeclaration","scope":9240,"src":"11963:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9189,"name":"uint256","nodeType":"ElementaryTypeName","src":"11963:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9190,"nodeType":"ArrayTypeName","src":"11963:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9193,"mutability":"mutable","name":"wethIsEth","nameLocation":"12008:9:43","nodeType":"VariableDeclaration","scope":9240,"src":"12003:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9192,"name":"bool","nodeType":"ElementaryTypeName","src":"12003:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9195,"mutability":"mutable","name":"userData","nameLocation":"12040:8:43","nodeType":"VariableDeclaration","scope":9240,"src":"12027:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9194,"name":"bytes","nodeType":"ElementaryTypeName","src":"12027:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11897:157:43"},"returnParameters":{"id":9204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9203,"mutability":"mutable","name":"amountsOut","nameLocation":"12121:10:43","nodeType":"VariableDeclaration","scope":9240,"src":"12104:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9201,"name":"uint256","nodeType":"ElementaryTypeName","src":"12104:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9202,"nodeType":"ArrayTypeName","src":"12104:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12103:29:43"},"scope":10716,"src":"11861:925:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3878],"body":{"id":9316,"nodeType":"Block","src":"13103:894:43","statements":[{"assignments":[9267,9269],"declarations":[{"constant":false,"id":9267,"mutability":"mutable","name":"minAmountsOut","nameLocation":"13131:13:43","nodeType":"VariableDeclaration","scope":9316,"src":"13114:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9265,"name":"uint256","nodeType":"ElementaryTypeName","src":"13114:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9266,"nodeType":"ArrayTypeName","src":"13114:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9269,"mutability":"mutable","name":"tokenIndex","nameLocation":"13154:10:43","nodeType":"VariableDeclaration","scope":9316,"src":"13146:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9268,"name":"uint256","nodeType":"ElementaryTypeName","src":"13146:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9275,"initialValue":{"arguments":[{"id":9271,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"13215:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9272,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"13233:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9273,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9250,"src":"13255:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9270,"name":"_getSingleInputArrayAndTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"13168:33:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (address,contract IERC20,uint256) view returns (uint256[] memory,uint256)"}},"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13168:109:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13113:164:43"},{"assignments":[null,9280,null],"declarations":[null,{"constant":false,"id":9280,"mutability":"mutable","name":"amountsOut","nameLocation":"13308:10:43","nodeType":"VariableDeclaration","scope":9316,"src":"13291:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9278,"name":"uint256","nodeType":"ElementaryTypeName","src":"13291:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9279,"nodeType":"ArrayTypeName","src":"13291:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":9311,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9287,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"13415:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13422:19:43","memberName":"removeLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9608,"src":"13415:26:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"expression":{"id":9290,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13523:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13527:6:43","memberName":"sender","nodeType":"MemberAccess","src":"13523:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9292,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"13565:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9293,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"13610:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9294,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9245,"src":"13665:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9295,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"13713:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":9296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13733:21:43","memberName":"SINGLE_TOKEN_EXACT_IN","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"13713:41:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"id":9297,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"13791:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9298,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"13836:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9289,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"13463:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["13515:6:43","13559:4:43","13595:13:43","13649:14:43","13707:4:43","13780:9:43","13826:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"13463:404:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":9285,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13379:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13383:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"13379:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13379:506:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9283,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"13348:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13355:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"13348:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13348:551:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13914:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9302,"name":"uint256","nodeType":"ElementaryTypeName","src":"13914:7:43","typeDescriptions":{}}},{"baseExpression":{"id":9305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13923:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9304,"name":"uint256","nodeType":"ElementaryTypeName","src":"13923:7:43","typeDescriptions":{}}},"id":9306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"13923:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":9308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13934:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9307,"name":"bytes","nodeType":"ElementaryTypeName","src":"13934:5:43","typeDescriptions":{}}}],"id":9309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13913:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":9281,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13324:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13328:6:43","memberName":"decode","nodeType":"MemberAccess","src":"13324:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13324:626:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13288:662:43"},{"expression":{"baseExpression":{"id":9312,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9280,"src":"13968:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9314,"indexExpression":{"id":9313,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"13979:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13968:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9262,"id":9315,"nodeType":"Return","src":"13961:29:43"}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"12792:23:43","text":"@inheritdoc IRouter"},"functionSelector":"ecb2182c","id":9317,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9257,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13063:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13067:6:43","memberName":"sender","nodeType":"MemberAccess","src":"13063:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9259,"kind":"modifierInvocation","modifierName":{"id":9256,"name":"saveSender","nameLocations":["13052:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"13052:10:43"},"nodeType":"ModifierInvocation","src":"13052:22:43"}],"name":"removeLiquiditySingleTokenExactIn","nameLocation":"12829:33:43","nodeType":"FunctionDefinition","parameters":{"id":9255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"pool","nameLocation":"12880:4:43","nodeType":"VariableDeclaration","scope":9317,"src":"12872:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9242,"name":"address","nodeType":"ElementaryTypeName","src":"12872:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9245,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"12902:16:43","nodeType":"VariableDeclaration","scope":9317,"src":"12894:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12894:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9248,"mutability":"mutable","name":"tokenOut","nameLocation":"12935:8:43","nodeType":"VariableDeclaration","scope":9317,"src":"12928:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9247,"nodeType":"UserDefinedTypeName","pathNode":{"id":9246,"name":"IERC20","nameLocations":["12928:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"12928:6:43"},"referencedDeclaration":337,"src":"12928:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9250,"mutability":"mutable","name":"minAmountOut","nameLocation":"12961:12:43","nodeType":"VariableDeclaration","scope":9317,"src":"12953:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9249,"name":"uint256","nodeType":"ElementaryTypeName","src":"12953:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9252,"mutability":"mutable","name":"wethIsEth","nameLocation":"12988:9:43","nodeType":"VariableDeclaration","scope":9317,"src":"12983:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9251,"name":"bool","nodeType":"ElementaryTypeName","src":"12983:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9254,"mutability":"mutable","name":"userData","nameLocation":"13020:8:43","nodeType":"VariableDeclaration","scope":9317,"src":"13007:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9253,"name":"bytes","nodeType":"ElementaryTypeName","src":"13007:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12862:172:43"},"returnParameters":{"id":9262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9261,"mutability":"mutable","name":"amountOut","nameLocation":"13092:9:43","nodeType":"VariableDeclaration","scope":9317,"src":"13084:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9260,"name":"uint256","nodeType":"ElementaryTypeName","src":"13084:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13083:19:43"},"scope":10716,"src":"12820:1177:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3897],"body":{"id":9387,"nodeType":"Block","src":"14317:804:43","statements":[{"assignments":[9344,null],"declarations":[{"constant":false,"id":9344,"mutability":"mutable","name":"minAmountsOut","nameLocation":"14345:13:43","nodeType":"VariableDeclaration","scope":9387,"src":"14328:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9342,"name":"uint256","nodeType":"ElementaryTypeName","src":"14328:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9343,"nodeType":"ArrayTypeName","src":"14328:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":9350,"initialValue":{"arguments":[{"id":9346,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"14398:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9347,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"14404:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9348,"name":"exactAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9327,"src":"14414:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9345,"name":"_getSingleInputArrayAndTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"14364:33:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (address,contract IERC20,uint256) view returns (uint256[] memory,uint256)"}},"id":9349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14364:65:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14327:102:43"},{"expression":{"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9351,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"14441:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null,null],"id":9352,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14440:17:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$__$","typeString":"tuple(uint256,,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9359,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"14551:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14558:19:43","memberName":"removeLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9608,"src":"14551:26:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"expression":{"id":9362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14659:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14663:6:43","memberName":"sender","nodeType":"MemberAccess","src":"14659:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9364,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"14701:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9365,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9344,"src":"14746:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9366,"name":"maxBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"14801:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9367,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"14847:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":9368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14867:22:43","memberName":"SINGLE_TOKEN_EXACT_OUT","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"14847:42:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"id":9369,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9329,"src":"14926:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9370,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"14971:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9361,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"14599:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":9371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["14651:6:43","14695:4:43","14731:13:43","14785:14:43","14841:4:43","14915:9:43","14961:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"14599:403:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":9357,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14515:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14519:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"14515:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14515:505:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9355,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"14484:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14491:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"14484:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:550:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15049:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9374,"name":"uint256","nodeType":"ElementaryTypeName","src":"15049:7:43","typeDescriptions":{}}},{"baseExpression":{"id":9377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15058:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15058:7:43","typeDescriptions":{}}},"id":9378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"15058:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":9380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15069:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9379,"name":"bytes","nodeType":"ElementaryTypeName","src":"15069:5:43","typeDescriptions":{}}}],"id":9381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15048:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":9353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14460:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14464:6:43","memberName":"decode","nodeType":"MemberAccess","src":"14460:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14460:625:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"src":"14440:645:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9384,"nodeType":"ExpressionStatement","src":"14440:645:43"},{"expression":{"id":9385,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"15103:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9339,"id":9386,"nodeType":"Return","src":"15096:18:43"}]},"documentation":{"id":9318,"nodeType":"StructuredDocumentation","src":"14003:23:43","text":"@inheritdoc IRouter"},"functionSelector":"e7326def","id":9388,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14275:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14279:6:43","memberName":"sender","nodeType":"MemberAccess","src":"14275:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9336,"kind":"modifierInvocation","modifierName":{"id":9333,"name":"saveSender","nameLocations":["14264:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"14264:10:43"},"nodeType":"ModifierInvocation","src":"14264:22:43"}],"name":"removeLiquiditySingleTokenExactOut","nameLocation":"14040:34:43","nodeType":"FunctionDefinition","parameters":{"id":9332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9320,"mutability":"mutable","name":"pool","nameLocation":"14092:4:43","nodeType":"VariableDeclaration","scope":9388,"src":"14084:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9319,"name":"address","nodeType":"ElementaryTypeName","src":"14084:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9322,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"14114:14:43","nodeType":"VariableDeclaration","scope":9388,"src":"14106:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9321,"name":"uint256","nodeType":"ElementaryTypeName","src":"14106:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9325,"mutability":"mutable","name":"tokenOut","nameLocation":"14145:8:43","nodeType":"VariableDeclaration","scope":9388,"src":"14138:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9324,"nodeType":"UserDefinedTypeName","pathNode":{"id":9323,"name":"IERC20","nameLocations":["14138:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"14138:6:43"},"referencedDeclaration":337,"src":"14138:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9327,"mutability":"mutable","name":"exactAmountOut","nameLocation":"14171:14:43","nodeType":"VariableDeclaration","scope":9388,"src":"14163:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9326,"name":"uint256","nodeType":"ElementaryTypeName","src":"14163:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9329,"mutability":"mutable","name":"wethIsEth","nameLocation":"14200:9:43","nodeType":"VariableDeclaration","scope":9388,"src":"14195:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9328,"name":"bool","nodeType":"ElementaryTypeName","src":"14195:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9331,"mutability":"mutable","name":"userData","nameLocation":"14232:8:43","nodeType":"VariableDeclaration","scope":9388,"src":"14219:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9330,"name":"bytes","nodeType":"ElementaryTypeName","src":"14219:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14074:172:43"},"returnParameters":{"id":9339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9338,"mutability":"mutable","name":"bptAmountIn","nameLocation":"14304:11:43","nodeType":"VariableDeclaration","scope":9388,"src":"14296:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9337,"name":"uint256","nodeType":"ElementaryTypeName","src":"14296:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14295:21:43"},"scope":10716,"src":"14031:1090:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3919],"body":{"id":9445,"nodeType":"Block","src":"15501:709:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9420,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"15633:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15640:19:43","memberName":"removeLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":9608,"src":"15633:26:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"expression":{"id":9423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15749:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15753:6:43","memberName":"sender","nodeType":"MemberAccess","src":"15749:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9425,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9391,"src":"15795:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9426,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"15844:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9427,"name":"maxBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"15903:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9428,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"15953:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":9429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15973:6:43","memberName":"CUSTOM","nodeType":"MemberAccess","referencedDeclaration":8459,"src":"15953:26:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"id":9430,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9398,"src":"16020:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9431,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9400,"src":"16069:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9422,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"15685:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15741:6:43","15789:4:43","15829:13:43","15887:14:43","15947:4:43","16009:9:43","16059:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"15685:419:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.removeLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":9418,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15593:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15597:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"15593:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:533:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9416,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"15558:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15565:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"15558:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15558:586:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16163:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9435,"name":"uint256","nodeType":"ElementaryTypeName","src":"16163:7:43","typeDescriptions":{}}},{"baseExpression":{"id":9438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16172:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9437,"name":"uint256","nodeType":"ElementaryTypeName","src":"16172:7:43","typeDescriptions":{}}},"id":9439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"16172:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":9441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16183:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9440,"name":"bytes","nodeType":"ElementaryTypeName","src":"16183:5:43","typeDescriptions":{}}}],"id":9442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16162:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":9414,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15530:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15534:6:43","memberName":"decode","nodeType":"MemberAccess","src":"15530:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15530:673:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"functionReturnParameters":9413,"id":9444,"nodeType":"Return","src":"15511:692:43"}]},"documentation":{"id":9389,"nodeType":"StructuredDocumentation","src":"15127:23:43","text":"@inheritdoc IRouter"},"functionSelector":"82bf2b24","id":9446,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15393:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15397:6:43","memberName":"sender","nodeType":"MemberAccess","src":"15393:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9405,"kind":"modifierInvocation","modifierName":{"id":9402,"name":"saveSender","nameLocations":["15382:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"15382:10:43"},"nodeType":"ModifierInvocation","src":"15382:22:43"}],"name":"removeLiquidityCustom","nameLocation":"15164:21:43","nodeType":"FunctionDefinition","parameters":{"id":9401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9391,"mutability":"mutable","name":"pool","nameLocation":"15203:4:43","nodeType":"VariableDeclaration","scope":9446,"src":"15195:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9390,"name":"address","nodeType":"ElementaryTypeName","src":"15195:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9393,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"15225:14:43","nodeType":"VariableDeclaration","scope":9446,"src":"15217:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9392,"name":"uint256","nodeType":"ElementaryTypeName","src":"15217:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9396,"mutability":"mutable","name":"minAmountsOut","nameLocation":"15266:13:43","nodeType":"VariableDeclaration","scope":9446,"src":"15249:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9394,"name":"uint256","nodeType":"ElementaryTypeName","src":"15249:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9395,"nodeType":"ArrayTypeName","src":"15249:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9398,"mutability":"mutable","name":"wethIsEth","nameLocation":"15294:9:43","nodeType":"VariableDeclaration","scope":9446,"src":"15289:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9397,"name":"bool","nodeType":"ElementaryTypeName","src":"15289:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9400,"mutability":"mutable","name":"userData","nameLocation":"15326:8:43","nodeType":"VariableDeclaration","scope":9446,"src":"15313:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9399,"name":"bytes","nodeType":"ElementaryTypeName","src":"15313:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15185:155:43"},"returnParameters":{"id":9413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9407,"mutability":"mutable","name":"bptAmountIn","nameLocation":"15430:11:43","nodeType":"VariableDeclaration","scope":9446,"src":"15422:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9406,"name":"uint256","nodeType":"ElementaryTypeName","src":"15422:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9410,"mutability":"mutable","name":"amountsOut","nameLocation":"15460:10:43","nodeType":"VariableDeclaration","scope":9446,"src":"15443:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9408,"name":"uint256","nodeType":"ElementaryTypeName","src":"15443:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9409,"nodeType":"ArrayTypeName","src":"15443:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9412,"mutability":"mutable","name":"returnData","nameLocation":"15485:10:43","nodeType":"VariableDeclaration","scope":9446,"src":"15472:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9411,"name":"bytes","nodeType":"ElementaryTypeName","src":"15472:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15421:75:43"},"scope":10716,"src":"15155:1055:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[3933],"body":{"id":9484,"nodeType":"Block","src":"16434:237:43","statements":[{"expression":{"id":9482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9460,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9458,"src":"16444:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9467,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"16527:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16534:27:43","memberName":"removeLiquidityRecoveryHook","nodeType":"MemberAccess","referencedDeclaration":9687,"src":"16527:34:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function Router.removeLiquidityRecoveryHook(address,address,uint256,uint256[] memory) returns (uint256[] memory)"}},{"components":[{"id":9469,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9449,"src":"16564:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16570:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16574:6:43","memberName":"sender","nodeType":"MemberAccess","src":"16570:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9472,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9451,"src":"16582:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9473,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"16600:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":9474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16563:51:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address,address,uint256,uint256[] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function Router.removeLiquidityRecoveryHook(address,address,uint256,uint256[] memory) returns (uint256[] memory)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address,address,uint256,uint256[] memory)"}],"expression":{"id":9465,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16512:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16516:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"16512:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16512:103:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9463,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"16481:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16488:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"16481:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16481:148:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":9478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16644:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9477,"name":"uint256","nodeType":"ElementaryTypeName","src":"16644:7:43","typeDescriptions":{}}},"id":9479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"16644:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}}],"id":9480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16643:11:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}],"expression":{"id":9461,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16457:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16461:6:43","memberName":"decode","nodeType":"MemberAccess","src":"16457:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16457:207:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"16444:220:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9483,"nodeType":"ExpressionStatement","src":"16444:220:43"}]},"documentation":{"id":9447,"nodeType":"StructuredDocumentation","src":"16216:23:43","text":"@inheritdoc IRouter"},"functionSelector":"08c04793","id":9485,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidityRecovery","nameLocation":"16253:23:43","nodeType":"FunctionDefinition","parameters":{"id":9455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9449,"mutability":"mutable","name":"pool","nameLocation":"16294:4:43","nodeType":"VariableDeclaration","scope":9485,"src":"16286:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9448,"name":"address","nodeType":"ElementaryTypeName","src":"16286:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9451,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"16316:16:43","nodeType":"VariableDeclaration","scope":9485,"src":"16308:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9450,"name":"uint256","nodeType":"ElementaryTypeName","src":"16308:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9454,"mutability":"mutable","name":"minAmountsOut","nameLocation":"16359:13:43","nodeType":"VariableDeclaration","scope":9485,"src":"16342:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9452,"name":"uint256","nodeType":"ElementaryTypeName","src":"16342:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9453,"nodeType":"ArrayTypeName","src":"16342:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16276:102:43"},"returnParameters":{"id":9459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9458,"mutability":"mutable","name":"amountsOut","nameLocation":"16422:10:43","nodeType":"VariableDeclaration","scope":9485,"src":"16405:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9456,"name":"uint256","nodeType":"ElementaryTypeName","src":"16405:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9457,"nodeType":"ArrayTypeName","src":"16405:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16404:29:43"},"scope":10716,"src":"16244:427:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9607,"nodeType":"Block","src":"17346:1192:43","statements":[{"expression":{"id":9524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9503,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"17357:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9504,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9499,"src":"17370:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9505,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9501,"src":"17382:10:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":9506,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17356:37:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":9510,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17478:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17485:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"17478:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9512,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17513:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17520:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"17513:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9514,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17560:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17567:14:43","memberName":"maxBptAmountIn","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"17560:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9516,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17614:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17621:13:43","memberName":"minAmountsOut","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"17614:20:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":9518,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17658:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17665:4:43","memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":4239,"src":"17658:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"expression":{"id":9520,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17697:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17704:8:43","memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":4243,"src":"17697:15:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9509,"name":"RemoveLiquidityParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"17432:21:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityParams_$8476_storage_ptr_$","typeString":"type(struct RemoveLiquidityParams storage pointer)"}},"id":9522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["17472:4:43","17507:4:43","17544:14:43","17599:13:43","17652:4:43","17687:8:43"],"names":["pool","from","maxBptAmountIn","minAmountsOut","kind","userData"],"nodeType":"FunctionCall","src":"17432:295:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityParams_$8476_memory_ptr","typeString":"struct RemoveLiquidityParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RemoveLiquidityParams_$8476_memory_ptr","typeString":"struct RemoveLiquidityParams memory"}],"expression":{"id":9507,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"17396:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17403:15:43","memberName":"removeLiquidity","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"17396:22:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RemoveLiquidityParams_$8476_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function (struct RemoveLiquidityParams memory) external returns (uint256,uint256[] memory,bytes memory)"}},"id":9523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17396:341:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"src":"17356:381:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9525,"nodeType":"ExpressionStatement","src":"17356:381:43"},{"assignments":[9530],"declarations":[{"constant":false,"id":9530,"mutability":"mutable","name":"tokens","nameLocation":"17843:6:43","nodeType":"VariableDeclaration","scope":9607,"src":"17827:22:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9528,"nodeType":"UserDefinedTypeName","pathNode":{"id":9527,"name":"IERC20","nameLocations":["17827:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"17827:6:43"},"referencedDeclaration":337,"src":"17827:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":9529,"nodeType":"ArrayTypeName","src":"17827:8:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":9536,"initialValue":{"arguments":[{"expression":{"id":9533,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"17873:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17880:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"17873:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9531,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"17852:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17859:13:43","memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"17852:20:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$","typeString":"function (address) view external returns (contract IERC20[] memory)"}},"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17852:33:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17827:58:43"},{"body":{"id":9600,"nodeType":"Block","src":"17940:556:43","statements":[{"assignments":[9549],"declarations":[{"constant":false,"id":9549,"mutability":"mutable","name":"amountOut","nameLocation":"17962:9:43","nodeType":"VariableDeclaration","scope":9600,"src":"17954:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9548,"name":"uint256","nodeType":"ElementaryTypeName","src":"17954:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9553,"initialValue":{"baseExpression":{"id":9550,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9499,"src":"17974:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9552,"indexExpression":{"id":9551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"17985:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17974:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17954:33:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9554,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9549,"src":"18005:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18018:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18005:14:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9559,"nodeType":"IfStatement","src":"18001:61:43","trueBody":{"id":9558,"nodeType":"Block","src":"18021:41:43","statements":[{"id":9557,"nodeType":"Continue","src":"18039:8:43"}]}},{"assignments":[9562],"declarations":[{"constant":false,"id":9562,"mutability":"mutable","name":"token","nameLocation":"18083:5:43","nodeType":"VariableDeclaration","scope":9600,"src":"18076:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9561,"nodeType":"UserDefinedTypeName","pathNode":{"id":9560,"name":"IERC20","nameLocations":["18076:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"18076:6:43"},"referencedDeclaration":337,"src":"18076:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"id":9566,"initialValue":{"baseExpression":{"id":9563,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"18091:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":9565,"indexExpression":{"id":9564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"18098:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18091:9:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"18076:24:43"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9567,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"18180:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18187:9:43","memberName":"wethIsEth","nodeType":"MemberAccess","referencedDeclaration":4241,"src":"18180:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9571,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"18208:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}],"id":9570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18200:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9569,"name":"address","nodeType":"ElementaryTypeName","src":"18200:7:43","typeDescriptions":{}}},"id":9572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18200:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":9575,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"18226:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}],"id":9574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18218:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9573,"name":"address","nodeType":"ElementaryTypeName","src":"18218:7:43","typeDescriptions":{}}},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18218:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18200:32:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18180:52:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9598,"nodeType":"Block","src":"18342:144:43","statements":[{"expression":{"arguments":[{"id":9592,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"18439:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"expression":{"id":9593,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"18446:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18453:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"18446:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9595,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9549,"src":"18461:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9589,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"18425:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18432:6:43","memberName":"sendTo","nodeType":"MemberAccess","referencedDeclaration":5708,"src":"18425:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256) external"}},"id":9596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18425:46:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9597,"nodeType":"ExpressionStatement","src":"18425:46:43"}]},"id":9599,"nodeType":"IfStatement","src":"18176:310:43","trueBody":{"id":9588,"nodeType":"Block","src":"18234:102:43","statements":[{"expression":{"arguments":[{"id":9582,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"18288:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},{"expression":{"id":9583,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"18296:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18303:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"18296:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9585,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9549,"src":"18311:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9579,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"18252:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"id":9581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18258:29:43","memberName":"unwrapWethAndTransferToSender","nodeType":"MemberAccess","referencedDeclaration":7077,"src":"18252:35:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IWETH_$5836_$_t_contract$_IVault_$4357_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IWETH_$5836_$","typeString":"function (contract IWETH,contract IVault,address,uint256)"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18252:69:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9587,"nodeType":"ExpressionStatement","src":"18252:69:43"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"17916:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9542,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"17920:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":9543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17927:6:43","memberName":"length","nodeType":"MemberAccess","src":"17920:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17916:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9601,"initializationExpression":{"assignments":[9538],"declarations":[{"constant":false,"id":9538,"mutability":"mutable","name":"i","nameLocation":"17909:1:43","nodeType":"VariableDeclaration","scope":9601,"src":"17901:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9537,"name":"uint256","nodeType":"ElementaryTypeName","src":"17901:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9540,"initialValue":{"hexValue":"30","id":9539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17913:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17901:13:43"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17935:3:43","subExpression":{"id":9545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9538,"src":"17937:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9547,"nodeType":"ExpressionStatement","src":"17935:3:43"},"nodeType":"ForStatement","src":"17896:600:43"},{"expression":{"arguments":[{"expression":{"id":9603,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9489,"src":"18517:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18524:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"18517:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9602,"name":"_returnEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"18506:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18506:25:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9606,"nodeType":"ExpressionStatement","src":"18506:25:43"}]},"documentation":{"id":9486,"nodeType":"StructuredDocumentation","src":"16677:426:43","text":" @notice Hook for removing liquidity.\n @dev Can only be called by the Vault.\n @param params Remove liquidity parameters (see IRouter for struct definition)\n @return bptAmountIn BPT amount burned for the output tokens\n @return amountsOut Actual token amounts transferred in exchange for the BPT\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"7b03c7ba","id":9608,"implemented":true,"kind":"function","modifiers":[{"id":9492,"kind":"modifierInvocation","modifierName":{"id":9491,"name":"nonReentrant","nameLocations":["17219:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"17219:12:43"},"nodeType":"ModifierInvocation","src":"17219:12:43"},{"id":9494,"kind":"modifierInvocation","modifierName":{"id":9493,"name":"onlyVault","nameLocations":["17240:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"17240:9:43"},"nodeType":"ModifierInvocation","src":"17240:9:43"}],"name":"removeLiquidityHook","nameLocation":"17117:19:43","nodeType":"FunctionDefinition","parameters":{"id":9490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9489,"mutability":"mutable","name":"params","nameLocation":"17181:6:43","nodeType":"VariableDeclaration","scope":9608,"src":"17146:41:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams"},"typeName":{"id":9488,"nodeType":"UserDefinedTypeName","pathNode":{"id":9487,"name":"RemoveLiquidityHookParams","nameLocations":["17146:25:43"],"nodeType":"IdentifierPath","referencedDeclaration":4244,"src":"17146:25:43"},"referencedDeclaration":4244,"src":"17146:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams"}},"visibility":"internal"}],"src":"17136:57:43"},"returnParameters":{"id":9502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9496,"mutability":"mutable","name":"bptAmountIn","nameLocation":"17275:11:43","nodeType":"VariableDeclaration","scope":9608,"src":"17267:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9495,"name":"uint256","nodeType":"ElementaryTypeName","src":"17267:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9499,"mutability":"mutable","name":"amountsOut","nameLocation":"17305:10:43","nodeType":"VariableDeclaration","scope":9608,"src":"17288:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9497,"name":"uint256","nodeType":"ElementaryTypeName","src":"17288:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9498,"nodeType":"ArrayTypeName","src":"17288:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9501,"mutability":"mutable","name":"returnData","nameLocation":"17330:10:43","nodeType":"VariableDeclaration","scope":9608,"src":"17317:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9500,"name":"bytes","nodeType":"ElementaryTypeName","src":"17317:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17266:75:43"},"scope":10716,"src":"17108:1430:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9686,"nodeType":"Block","src":"19314:483:43","statements":[{"expression":{"id":9636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9628,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"19324:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9631,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"19368:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9632,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"19374:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9633,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9615,"src":"19382:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9634,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"19400:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":9629,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"19337:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19344:23:43","memberName":"removeLiquidityRecovery","nodeType":"MemberAccess","referencedDeclaration":5630,"src":"19337:30:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,address,uint256,uint256[] memory) external returns (uint256[] memory)"}},"id":9635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19337:77:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"19324:90:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9637,"nodeType":"ExpressionStatement","src":"19324:90:43"},{"assignments":[9642],"declarations":[{"constant":false,"id":9642,"mutability":"mutable","name":"tokens","nameLocation":"19441:6:43","nodeType":"VariableDeclaration","scope":9686,"src":"19425:22:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9640,"nodeType":"UserDefinedTypeName","pathNode":{"id":9639,"name":"IERC20","nameLocations":["19425:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"19425:6:43"},"referencedDeclaration":337,"src":"19425:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"id":9641,"nodeType":"ArrayTypeName","src":"19425:8:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":9647,"initialValue":{"arguments":[{"id":9645,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9611,"src":"19471:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9643,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"19450:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19457:13:43","memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"19450:20:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$","typeString":"function (address) view external returns (contract IERC20[] memory)"}},"id":9646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19450:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"19425:51:43"},{"body":{"id":9680,"nodeType":"Block","src":"19531:231:43","statements":[{"assignments":[9660],"declarations":[{"constant":false,"id":9660,"mutability":"mutable","name":"amountOut","nameLocation":"19553:9:43","nodeType":"VariableDeclaration","scope":9680,"src":"19545:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9659,"name":"uint256","nodeType":"ElementaryTypeName","src":"19545:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9664,"initialValue":{"baseExpression":{"id":9661,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"19565:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9663,"indexExpression":{"id":9662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"19576:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19565:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19545:33:43"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9665,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9660,"src":"19596:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19608:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19596:13:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9679,"nodeType":"IfStatement","src":"19592:160:43","trueBody":{"id":9678,"nodeType":"Block","src":"19611:141:43","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9671,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9642,"src":"19708:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":9673,"indexExpression":{"id":9672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"19715:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19708:9:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9674,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"19719:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9675,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9660,"src":"19727:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9668,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"19694:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19701:6:43","memberName":"sendTo","nodeType":"MemberAccess","referencedDeclaration":5708,"src":"19694:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$337_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256) external"}},"id":9676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19694:43:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9677,"nodeType":"ExpressionStatement","src":"19694:43:43"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"19507:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9653,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9642,"src":"19511:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":9654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19518:6:43","memberName":"length","nodeType":"MemberAccess","src":"19511:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19507:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9681,"initializationExpression":{"assignments":[9649],"declarations":[{"constant":false,"id":9649,"mutability":"mutable","name":"i","nameLocation":"19500:1:43","nodeType":"VariableDeclaration","scope":9681,"src":"19492:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9648,"name":"uint256","nodeType":"ElementaryTypeName","src":"19492:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9651,"initialValue":{"hexValue":"30","id":9650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19504:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19492:13:43"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"19526:3:43","subExpression":{"id":9656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"19528:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9658,"nodeType":"ExpressionStatement","src":"19526:3:43"},"nodeType":"ForStatement","src":"19487:275:43"},{"expression":{"arguments":[{"id":9683,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9613,"src":"19783:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9682,"name":"_returnEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"19772:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19772:18:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9685,"nodeType":"ExpressionStatement","src":"19772:18:43"}]},"documentation":{"id":9609,"nodeType":"StructuredDocumentation","src":"18544:532:43","text":" @notice Hook for removing liquidity in Recovery Mode.\n @dev Can only be called by the Vault, when the pool is in Recovery Mode.\n @param pool Address of the liquidity pool\n @param sender Account originating the remove liquidity operation\n @param exactBptAmountIn BPT amount burned for the output tokens\n @param minAmountsOut Minimum amounts of tokens to be received, sorted in token registration order\n @return amountsOut Actual token amounts transferred in exchange for the BPT"},"functionSelector":"82cd54fb","id":9687,"implemented":true,"kind":"function","modifiers":[{"id":9621,"kind":"modifierInvocation","modifierName":{"id":9620,"name":"nonReentrant","nameLocations":["19253:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"19253:12:43"},"nodeType":"ModifierInvocation","src":"19253:12:43"},{"id":9623,"kind":"modifierInvocation","modifierName":{"id":9622,"name":"onlyVault","nameLocations":["19266:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"19266:9:43"},"nodeType":"ModifierInvocation","src":"19266:9:43"}],"name":"removeLiquidityRecoveryHook","nameLocation":"19090:27:43","nodeType":"FunctionDefinition","parameters":{"id":9619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9611,"mutability":"mutable","name":"pool","nameLocation":"19135:4:43","nodeType":"VariableDeclaration","scope":9687,"src":"19127:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9610,"name":"address","nodeType":"ElementaryTypeName","src":"19127:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9613,"mutability":"mutable","name":"sender","nameLocation":"19157:6:43","nodeType":"VariableDeclaration","scope":9687,"src":"19149:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9612,"name":"address","nodeType":"ElementaryTypeName","src":"19149:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9615,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"19181:16:43","nodeType":"VariableDeclaration","scope":9687,"src":"19173:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9614,"name":"uint256","nodeType":"ElementaryTypeName","src":"19173:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9618,"mutability":"mutable","name":"minAmountsOut","nameLocation":"19224:13:43","nodeType":"VariableDeclaration","scope":9687,"src":"19207:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9616,"name":"uint256","nodeType":"ElementaryTypeName","src":"19207:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9617,"nodeType":"ArrayTypeName","src":"19207:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19117:126:43"},"returnParameters":{"id":9627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9626,"mutability":"mutable","name":"amountsOut","nameLocation":"19302:10:43","nodeType":"VariableDeclaration","scope":9687,"src":"19285:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9624,"name":"uint256","nodeType":"ElementaryTypeName","src":"19285:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9625,"nodeType":"ArrayTypeName","src":"19285:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19284:29:43"},"scope":10716,"src":"19081:716:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3982],"body":{"id":9744,"nodeType":"Block","src":"20350:811:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9721,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"20482:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20489:19:43","memberName":"swapSingleTokenHook","nodeType":"MemberAccess","referencedDeclaration":9864,"src":"20482:26:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.swapSingleTokenHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"}},{"arguments":[{"expression":{"id":9724,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20598:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20602:6:43","memberName":"sender","nodeType":"MemberAccess","src":"20598:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9726,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"20644:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$8367_$","typeString":"type(enum SwapKind)"}},"id":9727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20653:8:43","memberName":"EXACT_IN","nodeType":"MemberAccess","referencedDeclaration":8365,"src":"20644:17:43","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},{"id":9728,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9690,"src":"20697:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9729,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9693,"src":"20740:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9730,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9696,"src":"20787:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9731,"name":"exactAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9698,"src":"20838:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9732,"name":"minAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9700,"src":"20888:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9733,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"20940:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9734,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9704,"src":"20989:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9735,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9706,"src":"21038:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9723,"name":"SwapSingleTokenHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"20534:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr_$","typeString":"type(struct IRouter.SwapSingleTokenHookParams storage pointer)"}},"id":9736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["20590:6:43","20638:4:43","20691:4:43","20731:7:43","20777:8:43","20825:11:43","20881:5:43","20930:8:43","20978:9:43","21028:8:43"],"names":["sender","kind","pool","tokenIn","tokenOut","amountGiven","limit","deadline","wethIsEth","userData"],"nodeType":"FunctionCall","src":"20534:539:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.swapSingleTokenHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"},{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}],"expression":{"id":9719,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20442:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20446:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"20442:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20442:653:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9717,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"20407:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20414:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"20407:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20407:706:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21132:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9739,"name":"uint256","nodeType":"ElementaryTypeName","src":"21132:7:43","typeDescriptions":{}}}],"id":9741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21131:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":9715,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20379:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20383:6:43","memberName":"decode","nodeType":"MemberAccess","src":"20379:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20379:775:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9714,"id":9743,"nodeType":"Return","src":"20360:794:43"}]},"documentation":{"id":9688,"nodeType":"StructuredDocumentation","src":"20011:23:43","text":"@inheritdoc IRouter"},"functionSelector":"750283bc","id":9745,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20320:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20324:6:43","memberName":"sender","nodeType":"MemberAccess","src":"20320:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9711,"kind":"modifierInvocation","modifierName":{"id":9708,"name":"saveSender","nameLocations":["20309:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"20309:10:43"},"nodeType":"ModifierInvocation","src":"20309:22:43"}],"name":"swapSingleTokenExactIn","nameLocation":"20048:22:43","nodeType":"FunctionDefinition","parameters":{"id":9707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9690,"mutability":"mutable","name":"pool","nameLocation":"20088:4:43","nodeType":"VariableDeclaration","scope":9745,"src":"20080:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9689,"name":"address","nodeType":"ElementaryTypeName","src":"20080:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9693,"mutability":"mutable","name":"tokenIn","nameLocation":"20109:7:43","nodeType":"VariableDeclaration","scope":9745,"src":"20102:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9692,"nodeType":"UserDefinedTypeName","pathNode":{"id":9691,"name":"IERC20","nameLocations":["20102:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"20102:6:43"},"referencedDeclaration":337,"src":"20102:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9696,"mutability":"mutable","name":"tokenOut","nameLocation":"20133:8:43","nodeType":"VariableDeclaration","scope":9745,"src":"20126:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9695,"nodeType":"UserDefinedTypeName","pathNode":{"id":9694,"name":"IERC20","nameLocations":["20126:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"20126:6:43"},"referencedDeclaration":337,"src":"20126:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9698,"mutability":"mutable","name":"exactAmountIn","nameLocation":"20159:13:43","nodeType":"VariableDeclaration","scope":9745,"src":"20151:21:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9697,"name":"uint256","nodeType":"ElementaryTypeName","src":"20151:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9700,"mutability":"mutable","name":"minAmountOut","nameLocation":"20190:12:43","nodeType":"VariableDeclaration","scope":9745,"src":"20182:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9699,"name":"uint256","nodeType":"ElementaryTypeName","src":"20182:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9702,"mutability":"mutable","name":"deadline","nameLocation":"20220:8:43","nodeType":"VariableDeclaration","scope":9745,"src":"20212:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9701,"name":"uint256","nodeType":"ElementaryTypeName","src":"20212:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9704,"mutability":"mutable","name":"wethIsEth","nameLocation":"20243:9:43","nodeType":"VariableDeclaration","scope":9745,"src":"20238:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9703,"name":"bool","nodeType":"ElementaryTypeName","src":"20238:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9706,"mutability":"mutable","name":"userData","nameLocation":"20277:8:43","nodeType":"VariableDeclaration","scope":9745,"src":"20262:23:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9705,"name":"bytes","nodeType":"ElementaryTypeName","src":"20262:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20070:221:43"},"returnParameters":{"id":9714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9745,"src":"20341:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9712,"name":"uint256","nodeType":"ElementaryTypeName","src":"20341:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20340:9:43"},"scope":10716,"src":"20039:1122:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[4006],"body":{"id":9802,"nodeType":"Block","src":"21507:812:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9779,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"21639:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21646:19:43","memberName":"swapSingleTokenHook","nodeType":"MemberAccess","referencedDeclaration":9864,"src":"21639:26:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.swapSingleTokenHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"}},{"arguments":[{"expression":{"id":9782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21755:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21759:6:43","memberName":"sender","nodeType":"MemberAccess","src":"21755:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9784,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"21801:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$8367_$","typeString":"type(enum SwapKind)"}},"id":9785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21810:9:43","memberName":"EXACT_OUT","nodeType":"MemberAccess","referencedDeclaration":8366,"src":"21801:18:43","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},{"id":9786,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"21855:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9787,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9751,"src":"21898:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9788,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9754,"src":"21945:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9789,"name":"exactAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9756,"src":"21996:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9790,"name":"maxAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9758,"src":"22047:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9791,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9760,"src":"22098:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9792,"name":"wethIsEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9762,"src":"22147:9:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9793,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"22196:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9781,"name":"SwapSingleTokenHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"21691:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr_$","typeString":"type(struct IRouter.SwapSingleTokenHookParams storage pointer)"}},"id":9794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["21747:6:43","21795:4:43","21849:4:43","21889:7:43","21935:8:43","21983:11:43","22040:5:43","22088:8:43","22136:9:43","22186:8:43"],"names":["sender","kind","pool","tokenIn","tokenOut","amountGiven","limit","deadline","wethIsEth","userData"],"nodeType":"FunctionCall","src":"21691:540:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.swapSingleTokenHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"},{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}],"expression":{"id":9777,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21599:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21603:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"21599:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21599:654:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9775,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"21564:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21571:6:43","memberName":"unlock","nodeType":"MemberAccess","referencedDeclaration":5686,"src":"21564:13:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21564:707:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":9798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22290:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9797,"name":"uint256","nodeType":"ElementaryTypeName","src":"22290:7:43","typeDescriptions":{}}}],"id":9799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22289:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":9773,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21536:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21540:6:43","memberName":"decode","nodeType":"MemberAccess","src":"21536:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21536:776:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9772,"id":9801,"nodeType":"Return","src":"21517:795:43"}]},"documentation":{"id":9746,"nodeType":"StructuredDocumentation","src":"21167:23:43","text":"@inheritdoc IRouter"},"functionSelector":"94e86ef8","id":9803,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":9767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21477:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21481:6:43","memberName":"sender","nodeType":"MemberAccess","src":"21477:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9769,"kind":"modifierInvocation","modifierName":{"id":9766,"name":"saveSender","nameLocations":["21466:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"21466:10:43"},"nodeType":"ModifierInvocation","src":"21466:22:43"}],"name":"swapSingleTokenExactOut","nameLocation":"21204:23:43","nodeType":"FunctionDefinition","parameters":{"id":9765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9748,"mutability":"mutable","name":"pool","nameLocation":"21245:4:43","nodeType":"VariableDeclaration","scope":9803,"src":"21237:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9747,"name":"address","nodeType":"ElementaryTypeName","src":"21237:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9751,"mutability":"mutable","name":"tokenIn","nameLocation":"21266:7:43","nodeType":"VariableDeclaration","scope":9803,"src":"21259:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9750,"nodeType":"UserDefinedTypeName","pathNode":{"id":9749,"name":"IERC20","nameLocations":["21259:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"21259:6:43"},"referencedDeclaration":337,"src":"21259:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9754,"mutability":"mutable","name":"tokenOut","nameLocation":"21290:8:43","nodeType":"VariableDeclaration","scope":9803,"src":"21283:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9753,"nodeType":"UserDefinedTypeName","pathNode":{"id":9752,"name":"IERC20","nameLocations":["21283:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"21283:6:43"},"referencedDeclaration":337,"src":"21283:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9756,"mutability":"mutable","name":"exactAmountOut","nameLocation":"21316:14:43","nodeType":"VariableDeclaration","scope":9803,"src":"21308:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9755,"name":"uint256","nodeType":"ElementaryTypeName","src":"21308:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9758,"mutability":"mutable","name":"maxAmountIn","nameLocation":"21348:11:43","nodeType":"VariableDeclaration","scope":9803,"src":"21340:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9757,"name":"uint256","nodeType":"ElementaryTypeName","src":"21340:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9760,"mutability":"mutable","name":"deadline","nameLocation":"21377:8:43","nodeType":"VariableDeclaration","scope":9803,"src":"21369:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9759,"name":"uint256","nodeType":"ElementaryTypeName","src":"21369:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9762,"mutability":"mutable","name":"wethIsEth","nameLocation":"21400:9:43","nodeType":"VariableDeclaration","scope":9803,"src":"21395:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9761,"name":"bool","nodeType":"ElementaryTypeName","src":"21395:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9764,"mutability":"mutable","name":"userData","nameLocation":"21434:8:43","nodeType":"VariableDeclaration","scope":9803,"src":"21419:23:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9763,"name":"bytes","nodeType":"ElementaryTypeName","src":"21419:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21227:221:43"},"returnParameters":{"id":9772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9803,"src":"21498:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9770,"name":"uint256","nodeType":"ElementaryTypeName","src":"21498:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21497:9:43"},"scope":10716,"src":"21195:1124:43","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9863,"nodeType":"Block","src":"22763:465:43","statements":[{"assignments":[9817,9819,9821],"declarations":[{"constant":false,"id":9817,"mutability":"mutable","name":"amountCalculated","nameLocation":"22782:16:43","nodeType":"VariableDeclaration","scope":9863,"src":"22774:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9816,"name":"uint256","nodeType":"ElementaryTypeName","src":"22774:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9819,"mutability":"mutable","name":"amountIn","nameLocation":"22808:8:43","nodeType":"VariableDeclaration","scope":9863,"src":"22800:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9818,"name":"uint256","nodeType":"ElementaryTypeName","src":"22800:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9821,"mutability":"mutable","name":"amountOut","nameLocation":"22826:9:43","nodeType":"VariableDeclaration","scope":9863,"src":"22818:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9820,"name":"uint256","nodeType":"ElementaryTypeName","src":"22818:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9825,"initialValue":{"arguments":[{"id":9823,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"22849:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}],"id":9822,"name":"_swapHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"22839:9:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256,uint256,uint256)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22839:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"22773:83:43"},{"assignments":[9828],"declarations":[{"constant":false,"id":9828,"mutability":"mutable","name":"tokenIn","nameLocation":"22874:7:43","nodeType":"VariableDeclaration","scope":9863,"src":"22867:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":9827,"nodeType":"UserDefinedTypeName","pathNode":{"id":9826,"name":"IERC20","nameLocations":["22867:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"22867:6:43"},"referencedDeclaration":337,"src":"22867:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"}],"id":9831,"initialValue":{"expression":{"id":9829,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"22884:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22891:7:43","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":3944,"src":"22884:14:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"22867:31:43"},{"expression":{"arguments":[{"expression":{"id":9833,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"22922:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22929:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"22922:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9835,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"22937:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9836,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"22946:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9837,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"22956:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22963:9:43","memberName":"wethIsEth","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"22956:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9832,"name":"_takeTokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"22909:12:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,contract IERC20,uint256,bool)"}},"id":9839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22909:64:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9840,"nodeType":"ExpressionStatement","src":"22909:64:43"},{"expression":{"arguments":[{"expression":{"id":9842,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"22997:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23004:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"22997:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9844,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"23012:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23019:8:43","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":3947,"src":"23012:15:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":9846,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9821,"src":"23029:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9847,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"23040:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23047:9:43","memberName":"wethIsEth","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"23040:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9841,"name":"_sendTokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6890,"src":"22983:13:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,contract IERC20,uint256,bool)"}},"id":9849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22983:74:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9850,"nodeType":"ExpressionStatement","src":"22983:74:43"},{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9851,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"23072:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9852,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6369,"src":"23083:5:43","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$5836","typeString":"contract IWETH"}},"src":"23072:16:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9860,"nodeType":"IfStatement","src":"23068:120:43","trueBody":{"id":9859,"nodeType":"Block","src":"23090:98:43","statements":[{"expression":{"arguments":[{"expression":{"id":9855,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9807,"src":"23163:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23170:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3936,"src":"23163:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9854,"name":"_returnEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"23152:10:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23152:25:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9858,"nodeType":"ExpressionStatement","src":"23152:25:43"}]}},{"expression":{"id":9861,"name":"amountCalculated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"23205:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9815,"id":9862,"nodeType":"Return","src":"23198:23:43"}]},"documentation":{"id":9804,"nodeType":"StructuredDocumentation","src":"22325:297:43","text":" @notice Hook for swaps.\n @dev Can only be called by the Vault. Also handles native ETH.\n @param params Swap parameters (see IRouter for struct definition)\n @return amountCalculated Token amount calculated by the pool math (e.g., amountOut for an exact in swap)"},"functionSelector":"68a24fe0","id":9864,"implemented":true,"kind":"function","modifiers":[{"id":9810,"kind":"modifierInvocation","modifierName":{"id":9809,"name":"nonReentrant","nameLocations":["22722:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"22722:12:43"},"nodeType":"ModifierInvocation","src":"22722:12:43"},{"id":9812,"kind":"modifierInvocation","modifierName":{"id":9811,"name":"onlyVault","nameLocations":["22735:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"22735:9:43"},"nodeType":"ModifierInvocation","src":"22735:9:43"}],"name":"swapSingleTokenHook","nameLocation":"22636:19:43","nodeType":"FunctionDefinition","parameters":{"id":9808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9807,"mutability":"mutable","name":"params","nameLocation":"22700:6:43","nodeType":"VariableDeclaration","scope":9864,"src":"22665:41:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams"},"typeName":{"id":9806,"nodeType":"UserDefinedTypeName","pathNode":{"id":9805,"name":"SwapSingleTokenHookParams","nameLocations":["22665:25:43"],"nodeType":"IdentifierPath","referencedDeclaration":3958,"src":"22665:25:43"},"referencedDeclaration":3958,"src":"22665:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams"}},"visibility":"internal"}],"src":"22655:57:43"},"returnParameters":{"id":9815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9864,"src":"22754:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9813,"name":"uint256","nodeType":"ElementaryTypeName","src":"22754:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22753:9:43"},"scope":10716,"src":"22627:601:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9911,"nodeType":"Block","src":"23391:661:43","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9876,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23557:5:43","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23563:9:43","memberName":"timestamp","nodeType":"MemberAccess","src":"23557:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9878,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23575:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23582:8:43","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":3953,"src":"23575:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23557:33:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9885,"nodeType":"IfStatement","src":"23553:85:43","trueBody":{"id":9884,"nodeType":"Block","src":"23592:46:43","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9881,"name":"SwapDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"23613:12:43","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23613:14:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9883,"nodeType":"RevertStatement","src":"23606:21:43"}]}},{"expression":{"id":9909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9886,"name":"amountCalculated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"23649:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9887,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"23667:8:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9888,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"23677:9:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9889,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"23648:39:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":9893,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23755:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23762:4:43","memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":3939,"src":"23755:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},{"expression":{"id":9895,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23790:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23797:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":3941,"src":"23790:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9897,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23828:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23835:7:43","memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":3944,"src":"23828:14:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"expression":{"id":9899,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23870:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23877:8:43","memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":3947,"src":"23870:15:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"expression":{"id":9901,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23919:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23926:11:43","memberName":"amountGiven","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"23919:18:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9903,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"23965:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23972:5:43","memberName":"limit","nodeType":"MemberAccess","referencedDeclaration":3951,"src":"23965:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9905,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9867,"src":"24005:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}},"id":9906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24012:8:43","memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":3957,"src":"24005:15:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":9892,"name":"VaultSwapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"23715:15:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VaultSwapParams_$8386_storage_ptr_$","typeString":"type(struct VaultSwapParams storage pointer)"}},"id":9907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["23749:4:43","23784:4:43","23819:7:43","23860:8:43","23903:14:43","23955:8:43","23995:8:43"],"names":["kind","pool","tokenIn","tokenOut","amountGivenRaw","limitRaw","userData"],"nodeType":"FunctionCall","src":"23715:320:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VaultSwapParams_$8386_memory_ptr","typeString":"struct VaultSwapParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VaultSwapParams_$8386_memory_ptr","typeString":"struct VaultSwapParams memory"}],"expression":{"id":9890,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"23690:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23697:4:43","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":5721,"src":"23690:11:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_VaultSwapParams_$8386_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (struct VaultSwapParams memory) external returns (uint256,uint256,uint256)"}},"id":9908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23690:355:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"src":"23648:397:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9910,"nodeType":"ExpressionStatement","src":"23648:397:43"}]},"id":9912,"implemented":true,"kind":"function","modifiers":[],"name":"_swapHook","nameLocation":"23243:9:43","nodeType":"FunctionDefinition","parameters":{"id":9868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9867,"mutability":"mutable","name":"params","nameLocation":"23297:6:43","nodeType":"VariableDeclaration","scope":9912,"src":"23262:41:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams"},"typeName":{"id":9866,"nodeType":"UserDefinedTypeName","pathNode":{"id":9865,"name":"SwapSingleTokenHookParams","nameLocations":["23262:25:43"],"nodeType":"IdentifierPath","referencedDeclaration":3958,"src":"23262:25:43"},"referencedDeclaration":3958,"src":"23262:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams"}},"visibility":"internal"}],"src":"23252:57:43"},"returnParameters":{"id":9875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9870,"mutability":"mutable","name":"amountCalculated","nameLocation":"23336:16:43","nodeType":"VariableDeclaration","scope":9912,"src":"23328:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9869,"name":"uint256","nodeType":"ElementaryTypeName","src":"23328:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9872,"mutability":"mutable","name":"amountIn","nameLocation":"23362:8:43","nodeType":"VariableDeclaration","scope":9912,"src":"23354:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9871,"name":"uint256","nodeType":"ElementaryTypeName","src":"23354:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9874,"mutability":"mutable","name":"amountOut","nameLocation":"23380:9:43","nodeType":"VariableDeclaration","scope":9912,"src":"23372:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9873,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23327:63:43"},"scope":10716,"src":"23234:818:43","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4021],"body":{"id":9968,"nodeType":"Block","src":"24525:828:43","statements":[{"expression":{"id":9966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9930,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9928,"src":"24536:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},null,null],"id":9931,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24535:15:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$__$__$","typeString":"tuple(uint256[] memory,,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9938,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"24643:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24650:21:43","memberName":"queryAddLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10199,"src":"24643:28:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"arguments":[{"id":9943,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24931:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":9942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24923:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9941,"name":"address","nodeType":"ElementaryTypeName","src":"24923:7:43","typeDescriptions":{}}},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24923:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9945,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9915,"src":"24968:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9947,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9915,"src":"25028:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9946,"name":"_maxTokenLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"25012:15:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":9948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25012:21:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9949,"name":"exactBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9917,"src":"25076:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9950,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"25125:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":9951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25142:12:43","memberName":"PROPORTIONAL","nodeType":"MemberAccess","referencedDeclaration":8434,"src":"25125:29:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"hexValue":"66616c7365","id":9952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25191:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":9953,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9921,"src":"25232:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9940,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"24693:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":9954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["24915:6:43","24962:4:43","24998:12:43","25059:15:43","25119:4:43","25180:9:43","25222:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"24693:570:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":9936,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24607:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24611:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"24607:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24607:674:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9934,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"24577:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24584:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"24577:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24577:718:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":9958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25310:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9957,"name":"uint256","nodeType":"ElementaryTypeName","src":"25310:7:43","typeDescriptions":{}}},"id":9959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"25310:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":9961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25321:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9960,"name":"uint256","nodeType":"ElementaryTypeName","src":"25321:7:43","typeDescriptions":{}}},{"id":9963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25330:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9962,"name":"bytes","nodeType":"ElementaryTypeName","src":"25330:5:43","typeDescriptions":{}}}],"id":9964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25309:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":9932,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"24553:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24557:6:43","memberName":"decode","nodeType":"MemberAccess","src":"24553:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":9965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24553:793:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"src":"24535:811:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9967,"nodeType":"ExpressionStatement","src":"24535:811:43"}]},"documentation":{"id":9913,"nodeType":"StructuredDocumentation","src":"24275:23:43","text":"@inheritdoc IRouter"},"functionSelector":"9de90518","id":9969,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9924,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9919,"src":"24480:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9925,"kind":"modifierInvocation","modifierName":{"id":9923,"name":"saveSender","nameLocations":["24469:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"24469:10:43"},"nodeType":"ModifierInvocation","src":"24469:18:43"}],"name":"queryAddLiquidityProportional","nameLocation":"24312:29:43","nodeType":"FunctionDefinition","parameters":{"id":9922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9915,"mutability":"mutable","name":"pool","nameLocation":"24359:4:43","nodeType":"VariableDeclaration","scope":9969,"src":"24351:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9914,"name":"address","nodeType":"ElementaryTypeName","src":"24351:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9917,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"24381:17:43","nodeType":"VariableDeclaration","scope":9969,"src":"24373:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9916,"name":"uint256","nodeType":"ElementaryTypeName","src":"24373:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9919,"mutability":"mutable","name":"sender","nameLocation":"24416:6:43","nodeType":"VariableDeclaration","scope":9969,"src":"24408:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9918,"name":"address","nodeType":"ElementaryTypeName","src":"24408:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9921,"mutability":"mutable","name":"userData","nameLocation":"24445:8:43","nodeType":"VariableDeclaration","scope":9969,"src":"24432:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9920,"name":"bytes","nodeType":"ElementaryTypeName","src":"24432:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24341:118:43"},"returnParameters":{"id":9929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9928,"mutability":"mutable","name":"amountsIn","nameLocation":"24514:9:43","nodeType":"VariableDeclaration","scope":9969,"src":"24497:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9926,"name":"uint256","nodeType":"ElementaryTypeName","src":"24497:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9927,"nodeType":"ArrayTypeName","src":"24497:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"24496:28:43"},"scope":10716,"src":"24303:1050:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4036],"body":{"id":10023,"nodeType":"Block","src":"25607:806:43","statements":[{"expression":{"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":9987,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9985,"src":"25620:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":9988,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"25617:18:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_uint256_$__$","typeString":"tuple(,uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":9995,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"25728:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":9996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25735:21:43","memberName":"queryAddLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10199,"src":"25728:28:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"arguments":[{"id":10000,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"26016:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":9999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26008:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9998,"name":"address","nodeType":"ElementaryTypeName","src":"26008:7:43","typeDescriptions":{}}},"id":10001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26008:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10002,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9972,"src":"26053:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10003,"name":"exactAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"26097:14:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"30","id":10004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26154:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":10005,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"26187:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":10006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26204:10:43","memberName":"UNBALANCED","nodeType":"MemberAccess","referencedDeclaration":8435,"src":"26187:27:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"hexValue":"66616c7365","id":10007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26251:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10008,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"26292:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9997,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"25778:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["26000:6:43","26047:4:43","26083:12:43","26137:15:43","26181:4:43","26240:9:43","26282:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"25778:545:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":9993,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25692:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25696:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"25692:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25692:649:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9991,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"25662:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":9992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25669:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"25662:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:693:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":10013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26370:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10012,"name":"uint256","nodeType":"ElementaryTypeName","src":"26370:7:43","typeDescriptions":{}}},"id":10014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"26370:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26381:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10015,"name":"uint256","nodeType":"ElementaryTypeName","src":"26381:7:43","typeDescriptions":{}}},{"id":10018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26390:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10017,"name":"bytes","nodeType":"ElementaryTypeName","src":"26390:5:43","typeDescriptions":{}}}],"id":10019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"26369:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":9989,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25638:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25642:6:43","memberName":"decode","nodeType":"MemberAccess","src":"25638:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25638:768:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"src":"25617:789:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10022,"nodeType":"ExpressionStatement","src":"25617:789:43"}]},"documentation":{"id":9970,"nodeType":"StructuredDocumentation","src":"25359:23:43","text":"@inheritdoc IRouter"},"functionSelector":"da001f7d","id":10024,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9982,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9977,"src":"25568:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9983,"kind":"modifierInvocation","modifierName":{"id":9981,"name":"saveSender","nameLocations":["25557:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"25557:10:43"},"nodeType":"ModifierInvocation","src":"25557:18:43"}],"name":"queryAddLiquidityUnbalanced","nameLocation":"25396:27:43","nodeType":"FunctionDefinition","parameters":{"id":9980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9972,"mutability":"mutable","name":"pool","nameLocation":"25441:4:43","nodeType":"VariableDeclaration","scope":10024,"src":"25433:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9971,"name":"address","nodeType":"ElementaryTypeName","src":"25433:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9975,"mutability":"mutable","name":"exactAmountsIn","nameLocation":"25472:14:43","nodeType":"VariableDeclaration","scope":10024,"src":"25455:31:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9973,"name":"uint256","nodeType":"ElementaryTypeName","src":"25455:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9974,"nodeType":"ArrayTypeName","src":"25455:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9977,"mutability":"mutable","name":"sender","nameLocation":"25504:6:43","nodeType":"VariableDeclaration","scope":10024,"src":"25496:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9976,"name":"address","nodeType":"ElementaryTypeName","src":"25496:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9979,"mutability":"mutable","name":"userData","nameLocation":"25533:8:43","nodeType":"VariableDeclaration","scope":10024,"src":"25520:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9978,"name":"bytes","nodeType":"ElementaryTypeName","src":"25520:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25423:124:43"},"returnParameters":{"id":9986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9985,"mutability":"mutable","name":"bptAmountOut","nameLocation":"25593:12:43","nodeType":"VariableDeclaration","scope":10024,"src":"25585:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9984,"name":"uint256","nodeType":"ElementaryTypeName","src":"25585:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25584:22:43"},"scope":10716,"src":"25387:1026:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4053],"body":{"id":10099,"nodeType":"Block","src":"26690:1057:43","statements":[{"assignments":[10048,10050],"declarations":[{"constant":false,"id":10048,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"26718:12:43","nodeType":"VariableDeclaration","scope":10099,"src":"26701:29:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10046,"name":"uint256","nodeType":"ElementaryTypeName","src":"26701:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10047,"nodeType":"ArrayTypeName","src":"26701:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10050,"mutability":"mutable","name":"tokenIndex","nameLocation":"26740:10:43","nodeType":"VariableDeclaration","scope":10099,"src":"26732:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10049,"name":"uint256","nodeType":"ElementaryTypeName","src":"26732:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10056,"initialValue":{"arguments":[{"id":10052,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10027,"src":"26801:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10053,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"26819:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":10054,"name":"_MAX_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"26840:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10051,"name":"_getSingleInputArrayAndTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"26754:33:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (address,contract IERC20,uint256) view returns (uint256[] memory,uint256)"}},"id":10055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26754:107:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"26700:161:43"},{"assignments":[10061,null,null],"declarations":[{"constant":false,"id":10061,"mutability":"mutable","name":"amountsIn","nameLocation":"26890:9:43","nodeType":"VariableDeclaration","scope":10099,"src":"26873:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10059,"name":"uint256","nodeType":"ElementaryTypeName","src":"26873:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10060,"nodeType":"ArrayTypeName","src":"26873:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null,null],"id":10094,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10068,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"26997:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27004:21:43","memberName":"queryAddLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10199,"src":"26997:28:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"arguments":[{"id":10073,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27285:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27277:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10071,"name":"address","nodeType":"ElementaryTypeName","src":"27277:7:43","typeDescriptions":{}}},"id":10074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27277:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10075,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10027,"src":"27322:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10076,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10048,"src":"27366:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10077,"name":"exactBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10032,"src":"27421:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10078,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"27470:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":10079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27487:22:43","memberName":"SINGLE_TOKEN_EXACT_OUT","nodeType":"MemberAccess","referencedDeclaration":8436,"src":"27470:39:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"hexValue":"66616c7365","id":10080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27546:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10081,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10036,"src":"27587:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10070,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"27047:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":10082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["27269:6:43","27316:4:43","27352:12:43","27404:15:43","27464:4:43","27535:9:43","27577:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"27047:571:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":10066,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26961:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26965:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"26961:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26961:675:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10064,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"26931:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26938:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"26931:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26931:719:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":10086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27665:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10085,"name":"uint256","nodeType":"ElementaryTypeName","src":"27665:7:43","typeDescriptions":{}}},"id":10087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"27665:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27676:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10088,"name":"uint256","nodeType":"ElementaryTypeName","src":"27676:7:43","typeDescriptions":{}}},{"id":10091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27685:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10090,"name":"bytes","nodeType":"ElementaryTypeName","src":"27685:5:43","typeDescriptions":{}}}],"id":10092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27664:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":10062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26907:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26911:6:43","memberName":"decode","nodeType":"MemberAccess","src":"26907:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26907:794:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"26872:829:43"},{"expression":{"baseExpression":{"id":10095,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10061,"src":"27719:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10097,"indexExpression":{"id":10096,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10050,"src":"27729:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27719:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10043,"id":10098,"nodeType":"Return","src":"27712:28:43"}]},"documentation":{"id":10025,"nodeType":"StructuredDocumentation","src":"26419:23:43","text":"@inheritdoc IRouter"},"functionSelector":"1d56798d","id":10100,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10039,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10034,"src":"26655:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10040,"kind":"modifierInvocation","modifierName":{"id":10038,"name":"saveSender","nameLocations":["26644:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"26644:10:43"},"nodeType":"ModifierInvocation","src":"26644:18:43"}],"name":"queryAddLiquiditySingleTokenExactOut","nameLocation":"26456:36:43","nodeType":"FunctionDefinition","parameters":{"id":10037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10027,"mutability":"mutable","name":"pool","nameLocation":"26510:4:43","nodeType":"VariableDeclaration","scope":10100,"src":"26502:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10026,"name":"address","nodeType":"ElementaryTypeName","src":"26502:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10030,"mutability":"mutable","name":"tokenIn","nameLocation":"26531:7:43","nodeType":"VariableDeclaration","scope":10100,"src":"26524:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10029,"nodeType":"UserDefinedTypeName","pathNode":{"id":10028,"name":"IERC20","nameLocations":["26524:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"26524:6:43"},"referencedDeclaration":337,"src":"26524:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10032,"mutability":"mutable","name":"exactBptAmountOut","nameLocation":"26556:17:43","nodeType":"VariableDeclaration","scope":10100,"src":"26548:25:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10031,"name":"uint256","nodeType":"ElementaryTypeName","src":"26548:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10034,"mutability":"mutable","name":"sender","nameLocation":"26591:6:43","nodeType":"VariableDeclaration","scope":10100,"src":"26583:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10033,"name":"address","nodeType":"ElementaryTypeName","src":"26583:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10036,"mutability":"mutable","name":"userData","nameLocation":"26620:8:43","nodeType":"VariableDeclaration","scope":10100,"src":"26607:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10035,"name":"bytes","nodeType":"ElementaryTypeName","src":"26607:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26492:142:43"},"returnParameters":{"id":10043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10042,"mutability":"mutable","name":"amountIn","nameLocation":"26680:8:43","nodeType":"VariableDeclaration","scope":10100,"src":"26672:16:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10041,"name":"uint256","nodeType":"ElementaryTypeName","src":"26672:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26671:18:43"},"scope":10716,"src":"26447:1300:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4075],"body":{"id":10158,"nodeType":"Block","src":"28081:884:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10131,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"28212:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28219:21:43","memberName":"queryAddLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10199,"src":"28212:28:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"}},{"arguments":[{"arguments":[{"id":10136,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"28516:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28508:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10134,"name":"address","nodeType":"ElementaryTypeName","src":"28508:7:43","typeDescriptions":{}}},"id":10137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28508:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10138,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"28557:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10139,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10106,"src":"28605:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10140,"name":"minBptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10108,"src":"28664:15:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10141,"name":"AddLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"28715:16:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AddLiquidityKind_$8439_$","typeString":"type(enum AddLiquidityKind)"}},"id":10142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28732:6:43","memberName":"CUSTOM","nodeType":"MemberAccess","referencedDeclaration":8438,"src":"28715:23:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"hexValue":"66616c7365","id":10143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28779:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10144,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10112,"src":"28824:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10133,"name":"AddLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"28266:22:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityHookParams_$4226_storage_ptr_$","typeString":"type(struct IRouterCommon.AddLiquidityHookParams storage pointer)"}},"id":10145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["28500:6:43","28551:4:43","28591:12:43","28647:15:43","28709:4:43","28768:9:43","28814:8:43"],"names":["sender","pool","maxAmountsIn","minBptAmountOut","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"28266:593:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_AddLiquidityHookParams_$4226_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function Router.queryAddLiquidityHook(struct IRouterCommon.AddLiquidityHookParams calldata) returns (uint256[] memory,uint256,bytes memory)"},{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_memory_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams memory"}],"expression":{"id":10129,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28172:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28176:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"28172:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28172:709:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10127,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"28138:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28145:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"28138:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28138:761:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":10149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28918:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10148,"name":"uint256","nodeType":"ElementaryTypeName","src":"28918:7:43","typeDescriptions":{}}},"id":10150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"28918:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28929:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10151,"name":"uint256","nodeType":"ElementaryTypeName","src":"28929:7:43","typeDescriptions":{}}},{"id":10154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28938:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10153,"name":"bytes","nodeType":"ElementaryTypeName","src":"28938:5:43","typeDescriptions":{}}}],"id":10155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28917:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256[] memory),type(uint256),type(bytes storage pointer))"}],"expression":{"id":10125,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28110:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28114:6:43","memberName":"decode","nodeType":"MemberAccess","src":"28110:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28110:848:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"functionReturnParameters":10124,"id":10157,"nodeType":"Return","src":"28091:867:43"}]},"documentation":{"id":10101,"nodeType":"StructuredDocumentation","src":"27753:23:43","text":"@inheritdoc IRouter"},"functionSelector":"452db952","id":10159,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10115,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10110,"src":"27989:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10116,"kind":"modifierInvocation","modifierName":{"id":10114,"name":"saveSender","nameLocations":["27978:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"27978:10:43"},"nodeType":"ModifierInvocation","src":"27978:18:43"}],"name":"queryAddLiquidityCustom","nameLocation":"27790:23:43","nodeType":"FunctionDefinition","parameters":{"id":10113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10103,"mutability":"mutable","name":"pool","nameLocation":"27831:4:43","nodeType":"VariableDeclaration","scope":10159,"src":"27823:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10102,"name":"address","nodeType":"ElementaryTypeName","src":"27823:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10106,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"27862:12:43","nodeType":"VariableDeclaration","scope":10159,"src":"27845:29:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10104,"name":"uint256","nodeType":"ElementaryTypeName","src":"27845:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10105,"nodeType":"ArrayTypeName","src":"27845:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10108,"mutability":"mutable","name":"minBptAmountOut","nameLocation":"27892:15:43","nodeType":"VariableDeclaration","scope":10159,"src":"27884:23:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10107,"name":"uint256","nodeType":"ElementaryTypeName","src":"27884:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10110,"mutability":"mutable","name":"sender","nameLocation":"27925:6:43","nodeType":"VariableDeclaration","scope":10159,"src":"27917:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10109,"name":"address","nodeType":"ElementaryTypeName","src":"27917:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10112,"mutability":"mutable","name":"userData","nameLocation":"27954:8:43","nodeType":"VariableDeclaration","scope":10159,"src":"27941:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10111,"name":"bytes","nodeType":"ElementaryTypeName","src":"27941:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27813:155:43"},"returnParameters":{"id":10124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10119,"mutability":"mutable","name":"amountsIn","nameLocation":"28023:9:43","nodeType":"VariableDeclaration","scope":10159,"src":"28006:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10117,"name":"uint256","nodeType":"ElementaryTypeName","src":"28006:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10118,"nodeType":"ArrayTypeName","src":"28006:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10121,"mutability":"mutable","name":"bptAmountOut","nameLocation":"28042:12:43","nodeType":"VariableDeclaration","scope":10159,"src":"28034:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10120,"name":"uint256","nodeType":"ElementaryTypeName","src":"28034:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10123,"mutability":"mutable","name":"returnData","nameLocation":"28069:10:43","nodeType":"VariableDeclaration","scope":10159,"src":"28056:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10122,"name":"bytes","nodeType":"ElementaryTypeName","src":"28056:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28005:75:43"},"scope":10716,"src":"27781:1184:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10198,"nodeType":"Block","src":"29570:390:43","statements":[{"expression":{"id":10196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":10175,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10169,"src":"29581:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10176,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"29592:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10177,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"29606:10:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":10178,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"29580:37:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":10182,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"29696:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":10183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29703:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":4213,"src":"29696:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10184,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"29729:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":10185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29736:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4211,"src":"29729:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10186,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"29774:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":10187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29781:12:43","memberName":"maxAmountsIn","nodeType":"MemberAccess","referencedDeclaration":4216,"src":"29774:19:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":10188,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"29828:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":10189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29835:15:43","memberName":"minBptAmountOut","nodeType":"MemberAccess","referencedDeclaration":4218,"src":"29828:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10190,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"29874:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":10191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29881:4:43","memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":4221,"src":"29874:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"}},{"expression":{"id":10192,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"29913:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams calldata"}},"id":10193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29920:8:43","memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"29913:15:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_AddLiquidityKind_$8439","typeString":"enum AddLiquidityKind"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":10181,"name":"AddLiquidityParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"29653:18:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AddLiquidityParams_$8455_storage_ptr_$","typeString":"type(struct AddLiquidityParams storage pointer)"}},"id":10194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["29690:4:43","29725:2:43","29760:12:43","29811:15:43","29868:4:43","29903:8:43"],"names":["pool","to","maxAmountsIn","minBptAmountOut","kind","userData"],"nodeType":"FunctionCall","src":"29653:290:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityParams_$8455_memory_ptr","typeString":"struct AddLiquidityParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddLiquidityParams_$8455_memory_ptr","typeString":"struct AddLiquidityParams memory"}],"expression":{"id":10179,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"29620:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29627:12:43","memberName":"addLiquidity","nodeType":"MemberAccess","referencedDeclaration":5735,"src":"29620:19:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_AddLiquidityParams_$8455_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"function (struct AddLiquidityParams memory) external returns (uint256[] memory,uint256,bytes memory)"}},"id":10195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29620:333:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256,bytes memory)"}},"src":"29580:373:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10197,"nodeType":"ExpressionStatement","src":"29580:373:43"}]},"documentation":{"id":10160,"nodeType":"StructuredDocumentation","src":"28971:406:43","text":" @notice Hook for add liquidity queries.\n @dev Can only be called by the Vault.\n @param params Add liquidity parameters (see IRouter for struct definition)\n @return amountsIn Actual token amounts in required as inputs\n @return bptAmountOut Expected pool tokens to be minted\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"efd85f14","id":10199,"implemented":true,"kind":"function","modifiers":[{"id":10166,"kind":"modifierInvocation","modifierName":{"id":10165,"name":"onlyVault","nameLocations":["29476:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"29476:9:43"},"nodeType":"ModifierInvocation","src":"29476:9:43"}],"name":"queryAddLiquidityHook","nameLocation":"29391:21:43","nodeType":"FunctionDefinition","parameters":{"id":10164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10163,"mutability":"mutable","name":"params","nameLocation":"29454:6:43","nodeType":"VariableDeclaration","scope":10199,"src":"29422:38:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_calldata_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams"},"typeName":{"id":10162,"nodeType":"UserDefinedTypeName","pathNode":{"id":10161,"name":"AddLiquidityHookParams","nameLocations":["29422:22:43"],"nodeType":"IdentifierPath","referencedDeclaration":4226,"src":"29422:22:43"},"referencedDeclaration":4226,"src":"29422:22:43","typeDescriptions":{"typeIdentifier":"t_struct$_AddLiquidityHookParams_$4226_storage_ptr","typeString":"struct IRouterCommon.AddLiquidityHookParams"}},"visibility":"internal"}],"src":"29412:54:43"},"returnParameters":{"id":10174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10169,"mutability":"mutable","name":"amountsIn","nameLocation":"29512:9:43","nodeType":"VariableDeclaration","scope":10199,"src":"29495:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10167,"name":"uint256","nodeType":"ElementaryTypeName","src":"29495:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10168,"nodeType":"ArrayTypeName","src":"29495:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10171,"mutability":"mutable","name":"bptAmountOut","nameLocation":"29531:12:43","nodeType":"VariableDeclaration","scope":10199,"src":"29523:20:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10170,"name":"uint256","nodeType":"ElementaryTypeName","src":"29523:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10173,"mutability":"mutable","name":"returnData","nameLocation":"29558:10:43","nodeType":"VariableDeclaration","scope":10199,"src":"29545:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10172,"name":"bytes","nodeType":"ElementaryTypeName","src":"29545:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29494:75:43"},"scope":10716,"src":"29382:578:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4090],"body":{"id":10268,"nodeType":"Block","src":"30219:922:43","statements":[{"assignments":[10221],"declarations":[{"constant":false,"id":10221,"mutability":"mutable","name":"minAmountsOut","nameLocation":"30246:13:43","nodeType":"VariableDeclaration","scope":10268,"src":"30229:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10219,"name":"uint256","nodeType":"ElementaryTypeName","src":"30229:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10220,"nodeType":"ArrayTypeName","src":"30229:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":10231,"initialValue":{"arguments":[{"expression":{"arguments":[{"id":10227,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"30297:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10225,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"30276:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30283:13:43","memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"30276:20:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$","typeString":"function (address) view external returns (contract IERC20[] memory)"}},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30276:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30303:6:43","memberName":"length","nodeType":"MemberAccess","src":"30276:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"30262:13:43","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10222,"name":"uint256","nodeType":"ElementaryTypeName","src":"30266:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10223,"nodeType":"ArrayTypeName","src":"30266:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30262:48:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"30229:81:43"},{"expression":{"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":10232,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"30323:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},null],"id":10233,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"30320:16:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_array$_t_uint256_$dyn_memory_ptr_$__$","typeString":"tuple(,uint256[] memory,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10240,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"30429:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30436:24:43","memberName":"queryRemoveLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10544,"src":"30429:31:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"arguments":[{"id":10245,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"30725:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30717:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10243,"name":"address","nodeType":"ElementaryTypeName","src":"30717:7:43","typeDescriptions":{}}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30717:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10247,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10202,"src":"30762:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10248,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"30807:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10249,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10204,"src":"30862:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10250,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"30910:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":10251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30930:12:43","memberName":"PROPORTIONAL","nodeType":"MemberAccess","referencedDeclaration":8456,"src":"30910:32:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"hexValue":"66616c7365","id":10252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"30979:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10253,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10208,"src":"31020:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10242,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"30482:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["30709:6:43","30756:4:43","30792:13:43","30846:14:43","30904:4:43","30968:9:43","31010:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"30482:569:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":10238,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30393:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30397:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"30393:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30393:676:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10236,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"30363:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30370:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"30363:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30363:720:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31098:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10257,"name":"uint256","nodeType":"ElementaryTypeName","src":"31098:7:43","typeDescriptions":{}}},{"baseExpression":{"id":10260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31107:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10259,"name":"uint256","nodeType":"ElementaryTypeName","src":"31107:7:43","typeDescriptions":{}}},"id":10261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"31107:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31118:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10262,"name":"bytes","nodeType":"ElementaryTypeName","src":"31118:5:43","typeDescriptions":{}}}],"id":10264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31097:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":10234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"30339:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"30343:6:43","memberName":"decode","nodeType":"MemberAccess","src":"30339:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30339:795:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"src":"30320:814:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10267,"nodeType":"ExpressionStatement","src":"30320:814:43"}]},"documentation":{"id":10200,"nodeType":"StructuredDocumentation","src":"29966:23:43","text":"@inheritdoc IRouter"},"functionSelector":"0f710888","id":10269,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10211,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10206,"src":"30173:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10212,"kind":"modifierInvocation","modifierName":{"id":10210,"name":"saveSender","nameLocations":["30162:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"30162:10:43"},"nodeType":"ModifierInvocation","src":"30162:18:43"}],"name":"queryRemoveLiquidityProportional","nameLocation":"30003:32:43","nodeType":"FunctionDefinition","parameters":{"id":10209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10202,"mutability":"mutable","name":"pool","nameLocation":"30053:4:43","nodeType":"VariableDeclaration","scope":10269,"src":"30045:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10201,"name":"address","nodeType":"ElementaryTypeName","src":"30045:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10204,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"30075:16:43","nodeType":"VariableDeclaration","scope":10269,"src":"30067:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10203,"name":"uint256","nodeType":"ElementaryTypeName","src":"30067:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10206,"mutability":"mutable","name":"sender","nameLocation":"30109:6:43","nodeType":"VariableDeclaration","scope":10269,"src":"30101:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10205,"name":"address","nodeType":"ElementaryTypeName","src":"30101:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10208,"mutability":"mutable","name":"userData","nameLocation":"30138:8:43","nodeType":"VariableDeclaration","scope":10269,"src":"30125:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10207,"name":"bytes","nodeType":"ElementaryTypeName","src":"30125:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30035:117:43"},"returnParameters":{"id":10216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10215,"mutability":"mutable","name":"amountsOut","nameLocation":"30207:10:43","nodeType":"VariableDeclaration","scope":10269,"src":"30190:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10213,"name":"uint256","nodeType":"ElementaryTypeName","src":"30190:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10214,"nodeType":"ArrayTypeName","src":"30190:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"30189:29:43"},"scope":10716,"src":"29994:1147:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4107],"body":{"id":10344,"nodeType":"Block","src":"31421:1114:43","statements":[{"assignments":[10293,10295],"declarations":[{"constant":false,"id":10293,"mutability":"mutable","name":"minAmountsOut","nameLocation":"31548:13:43","nodeType":"VariableDeclaration","scope":10344,"src":"31531:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10291,"name":"uint256","nodeType":"ElementaryTypeName","src":"31531:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10292,"nodeType":"ArrayTypeName","src":"31531:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10295,"mutability":"mutable","name":"tokenIndex","nameLocation":"31571:10:43","nodeType":"VariableDeclaration","scope":10344,"src":"31563:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10294,"name":"uint256","nodeType":"ElementaryTypeName","src":"31563:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10301,"initialValue":{"arguments":[{"id":10297,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10272,"src":"31619:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10298,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"31625:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"hexValue":"31","id":10299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31635:1:43","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10296,"name":"_getSingleInputArrayAndTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"31585:33:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (address,contract IERC20,uint256) view returns (uint256[] memory,uint256)"}},"id":10300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31585:52:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"31530:107:43"},{"assignments":[null,10306,null],"declarations":[null,{"constant":false,"id":10306,"mutability":"mutable","name":"amountsOut","nameLocation":"31668:10:43","nodeType":"VariableDeclaration","scope":10344,"src":"31651:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10304,"name":"uint256","nodeType":"ElementaryTypeName","src":"31651:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10305,"nodeType":"ArrayTypeName","src":"31651:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":10339,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10313,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"31774:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31781:24:43","memberName":"queryRemoveLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10544,"src":"31774:31:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"arguments":[{"id":10318,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"32070:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32062:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10316,"name":"address","nodeType":"ElementaryTypeName","src":"32062:7:43","typeDescriptions":{}}},"id":10319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32062:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10320,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10272,"src":"32107:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10321,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10293,"src":"32152:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10322,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10274,"src":"32207:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10323,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"32255:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":10324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32275:21:43","memberName":"SINGLE_TOKEN_EXACT_IN","nodeType":"MemberAccess","referencedDeclaration":8457,"src":"32255:41:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"hexValue":"66616c7365","id":10325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"32333:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10326,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10281,"src":"32374:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10315,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"31827:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":10327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["32054:6:43","32101:4:43","32137:13:43","32191:14:43","32249:4:43","32322:9:43","32364:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"31827:578:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":10311,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"31738:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31742:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"31738:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31738:685:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10309,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"31708:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31715:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"31708:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31708:729:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32452:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10330,"name":"uint256","nodeType":"ElementaryTypeName","src":"32452:7:43","typeDescriptions":{}}},{"baseExpression":{"id":10333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32461:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10332,"name":"uint256","nodeType":"ElementaryTypeName","src":"32461:7:43","typeDescriptions":{}}},"id":10334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"32461:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32472:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10335,"name":"bytes","nodeType":"ElementaryTypeName","src":"32472:5:43","typeDescriptions":{}}}],"id":10337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"32451:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":10307,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"31684:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"31688:6:43","memberName":"decode","nodeType":"MemberAccess","src":"31684:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31684:804:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"31648:840:43"},{"expression":{"baseExpression":{"id":10340,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10306,"src":"32506:10:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10342,"indexExpression":{"id":10341,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10295,"src":"32517:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32506:22:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10288,"id":10343,"nodeType":"Return","src":"32499:29:43"}]},"documentation":{"id":10270,"nodeType":"StructuredDocumentation","src":"31147:23:43","text":"@inheritdoc IRouter"},"functionSelector":"23b39241","id":10345,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10284,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10279,"src":"31385:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10285,"kind":"modifierInvocation","modifierName":{"id":10283,"name":"saveSender","nameLocations":["31374:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"31374:10:43"},"nodeType":"ModifierInvocation","src":"31374:18:43"}],"name":"queryRemoveLiquiditySingleTokenExactIn","nameLocation":"31184:38:43","nodeType":"FunctionDefinition","parameters":{"id":10282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10272,"mutability":"mutable","name":"pool","nameLocation":"31240:4:43","nodeType":"VariableDeclaration","scope":10345,"src":"31232:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10271,"name":"address","nodeType":"ElementaryTypeName","src":"31232:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10274,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"31262:16:43","nodeType":"VariableDeclaration","scope":10345,"src":"31254:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10273,"name":"uint256","nodeType":"ElementaryTypeName","src":"31254:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10277,"mutability":"mutable","name":"tokenOut","nameLocation":"31295:8:43","nodeType":"VariableDeclaration","scope":10345,"src":"31288:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10276,"nodeType":"UserDefinedTypeName","pathNode":{"id":10275,"name":"IERC20","nameLocations":["31288:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"31288:6:43"},"referencedDeclaration":337,"src":"31288:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10279,"mutability":"mutable","name":"sender","nameLocation":"31321:6:43","nodeType":"VariableDeclaration","scope":10345,"src":"31313:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10278,"name":"address","nodeType":"ElementaryTypeName","src":"31313:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10281,"mutability":"mutable","name":"userData","nameLocation":"31350:8:43","nodeType":"VariableDeclaration","scope":10345,"src":"31337:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10280,"name":"bytes","nodeType":"ElementaryTypeName","src":"31337:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31222:142:43"},"returnParameters":{"id":10288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10287,"mutability":"mutable","name":"amountOut","nameLocation":"31410:9:43","nodeType":"VariableDeclaration","scope":10345,"src":"31402:17:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10286,"name":"uint256","nodeType":"ElementaryTypeName","src":"31402:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31401:19:43"},"scope":10716,"src":"31175:1360:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4124],"body":{"id":10414,"nodeType":"Block","src":"32816:979:43","statements":[{"assignments":[10369,null],"declarations":[{"constant":false,"id":10369,"mutability":"mutable","name":"minAmountsOut","nameLocation":"32844:13:43","nodeType":"VariableDeclaration","scope":10414,"src":"32827:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10367,"name":"uint256","nodeType":"ElementaryTypeName","src":"32827:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10368,"nodeType":"ArrayTypeName","src":"32827:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":10375,"initialValue":{"arguments":[{"id":10371,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10348,"src":"32897:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10372,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10351,"src":"32903:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":10373,"name":"exactAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10353,"src":"32913:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10370,"name":"_getSingleInputArrayAndTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"32863:33:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_contract$_IERC20_$337_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (address,contract IERC20,uint256) view returns (uint256[] memory,uint256)"}},"id":10374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32863:65:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"32826:102:43"},{"expression":{"id":10410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":10376,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10363,"src":"32940:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null,null],"id":10377,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"32939:17:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$__$","typeString":"tuple(uint256,,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10384,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"33049:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33056:24:43","memberName":"queryRemoveLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10544,"src":"33049:31:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"arguments":[{"id":10389,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"33345:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33337:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10387,"name":"address","nodeType":"ElementaryTypeName","src":"33337:7:43","typeDescriptions":{}}},"id":10390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33337:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10391,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10348,"src":"33382:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10392,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10369,"src":"33427:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10393,"name":"_MAX_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"33482:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10394,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"33525:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":10395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33545:22:43","memberName":"SINGLE_TOKEN_EXACT_OUT","nodeType":"MemberAccess","referencedDeclaration":8458,"src":"33525:42:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"hexValue":"66616c7365","id":10396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33604:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10397,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10357,"src":"33645:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10386,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"33102:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":10398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["33329:6:43","33376:4:43","33412:13:43","33466:14:43","33519:4:43","33593:9:43","33635:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"33102:574:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":10382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"33013:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"33017:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"33013:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33013:681:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10380,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"32983:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32990:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"32983:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32983:725:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33723:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10401,"name":"uint256","nodeType":"ElementaryTypeName","src":"33723:7:43","typeDescriptions":{}}},{"baseExpression":{"id":10404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33732:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10403,"name":"uint256","nodeType":"ElementaryTypeName","src":"33732:7:43","typeDescriptions":{}}},"id":10405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"33732:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33743:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10406,"name":"bytes","nodeType":"ElementaryTypeName","src":"33743:5:43","typeDescriptions":{}}}],"id":10408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"33722:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":10378,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"32959:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"32963:6:43","memberName":"decode","nodeType":"MemberAccess","src":"32959:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32959:800:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"src":"32939:820:43","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10411,"nodeType":"ExpressionStatement","src":"32939:820:43"},{"expression":{"id":10412,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10363,"src":"33777:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10364,"id":10413,"nodeType":"Return","src":"33770:18:43"}]},"documentation":{"id":10346,"nodeType":"StructuredDocumentation","src":"32541:23:43","text":"@inheritdoc IRouter"},"functionSelector":"53d0bb98","id":10415,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10360,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10355,"src":"32778:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10361,"kind":"modifierInvocation","modifierName":{"id":10359,"name":"saveSender","nameLocations":["32767:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"32767:10:43"},"nodeType":"ModifierInvocation","src":"32767:18:43"}],"name":"queryRemoveLiquiditySingleTokenExactOut","nameLocation":"32578:39:43","nodeType":"FunctionDefinition","parameters":{"id":10358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10348,"mutability":"mutable","name":"pool","nameLocation":"32635:4:43","nodeType":"VariableDeclaration","scope":10415,"src":"32627:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10347,"name":"address","nodeType":"ElementaryTypeName","src":"32627:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10351,"mutability":"mutable","name":"tokenOut","nameLocation":"32656:8:43","nodeType":"VariableDeclaration","scope":10415,"src":"32649:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10350,"nodeType":"UserDefinedTypeName","pathNode":{"id":10349,"name":"IERC20","nameLocations":["32649:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"32649:6:43"},"referencedDeclaration":337,"src":"32649:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10353,"mutability":"mutable","name":"exactAmountOut","nameLocation":"32682:14:43","nodeType":"VariableDeclaration","scope":10415,"src":"32674:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10352,"name":"uint256","nodeType":"ElementaryTypeName","src":"32674:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10355,"mutability":"mutable","name":"sender","nameLocation":"32714:6:43","nodeType":"VariableDeclaration","scope":10415,"src":"32706:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10354,"name":"address","nodeType":"ElementaryTypeName","src":"32706:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10357,"mutability":"mutable","name":"userData","nameLocation":"32743:8:43","nodeType":"VariableDeclaration","scope":10415,"src":"32730:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10356,"name":"bytes","nodeType":"ElementaryTypeName","src":"32730:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32617:140:43"},"returnParameters":{"id":10364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10363,"mutability":"mutable","name":"bptAmountIn","nameLocation":"32803:11:43","nodeType":"VariableDeclaration","scope":10415,"src":"32795:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10362,"name":"uint256","nodeType":"ElementaryTypeName","src":"32795:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32794:21:43"},"scope":10716,"src":"32569:1226:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4146],"body":{"id":10473,"nodeType":"Block","src":"34132:895:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10446,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"34263:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34270:24:43","memberName":"queryRemoveLiquidityHook","nodeType":"MemberAccess","referencedDeclaration":10544,"src":"34263:31:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"}},{"arguments":[{"arguments":[{"id":10451,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"34575:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34567:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10449,"name":"address","nodeType":"ElementaryTypeName","src":"34567:7:43","typeDescriptions":{}}},"id":10452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34567:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10453,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10418,"src":"34616:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10454,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"34665:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":10455,"name":"maxBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10420,"src":"34724:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10456,"name":"RemoveLiquidityKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"34774:19:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RemoveLiquidityKind_$8460_$","typeString":"type(enum RemoveLiquidityKind)"}},"id":10457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34794:6:43","memberName":"CUSTOM","nodeType":"MemberAccess","referencedDeclaration":8459,"src":"34774:26:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"hexValue":"66616c7365","id":10458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"34841:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10459,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10427,"src":"34886:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10448,"name":"RemoveLiquidityHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"34320:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr_$","typeString":"type(struct IRouterCommon.RemoveLiquidityHookParams storage pointer)"}},"id":10460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["34559:6:43","34610:4:43","34650:13:43","34708:14:43","34768:4:43","34830:9:43","34876:8:43"],"names":["sender","pool","minAmountsOut","maxBptAmountIn","kind","wethIsEth","userData"],"nodeType":"FunctionCall","src":"34320:601:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityHook(struct IRouterCommon.RemoveLiquidityHookParams calldata) returns (uint256,uint256[] memory,bytes memory)"},{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_memory_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams memory"}],"expression":{"id":10444,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34223:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34227:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"34223:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34223:720:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10442,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"34189:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34196:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"34189:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34189:772:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34980:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10463,"name":"uint256","nodeType":"ElementaryTypeName","src":"34980:7:43","typeDescriptions":{}}},{"baseExpression":{"id":10466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34989:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10465,"name":"uint256","nodeType":"ElementaryTypeName","src":"34989:7:43","typeDescriptions":{}}},"id":10467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"34989:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":10469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35000:5:43","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10468,"name":"bytes","nodeType":"ElementaryTypeName","src":"35000:5:43","typeDescriptions":{}}}],"id":10470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34979:27:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(uint256),type(uint256[] memory),type(bytes storage pointer))"}],"expression":{"id":10440,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34161:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34165:6:43","memberName":"decode","nodeType":"MemberAccess","src":"34161:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34161:859:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"functionReturnParameters":10439,"id":10472,"nodeType":"Return","src":"34142:878:43"}]},"documentation":{"id":10416,"nodeType":"StructuredDocumentation","src":"33801:23:43","text":"@inheritdoc IRouter"},"functionSelector":"c330c7be","id":10474,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10430,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10425,"src":"34040:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10431,"kind":"modifierInvocation","modifierName":{"id":10429,"name":"saveSender","nameLocations":["34029:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"34029:10:43"},"nodeType":"ModifierInvocation","src":"34029:18:43"}],"name":"queryRemoveLiquidityCustom","nameLocation":"33838:26:43","nodeType":"FunctionDefinition","parameters":{"id":10428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10418,"mutability":"mutable","name":"pool","nameLocation":"33882:4:43","nodeType":"VariableDeclaration","scope":10474,"src":"33874:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10417,"name":"address","nodeType":"ElementaryTypeName","src":"33874:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10420,"mutability":"mutable","name":"maxBptAmountIn","nameLocation":"33904:14:43","nodeType":"VariableDeclaration","scope":10474,"src":"33896:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10419,"name":"uint256","nodeType":"ElementaryTypeName","src":"33896:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10423,"mutability":"mutable","name":"minAmountsOut","nameLocation":"33945:13:43","nodeType":"VariableDeclaration","scope":10474,"src":"33928:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10421,"name":"uint256","nodeType":"ElementaryTypeName","src":"33928:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10422,"nodeType":"ArrayTypeName","src":"33928:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10425,"mutability":"mutable","name":"sender","nameLocation":"33976:6:43","nodeType":"VariableDeclaration","scope":10474,"src":"33968:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10424,"name":"address","nodeType":"ElementaryTypeName","src":"33968:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10427,"mutability":"mutable","name":"userData","nameLocation":"34005:8:43","nodeType":"VariableDeclaration","scope":10474,"src":"33992:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10426,"name":"bytes","nodeType":"ElementaryTypeName","src":"33992:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33864:155:43"},"returnParameters":{"id":10439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10433,"mutability":"mutable","name":"bptAmountIn","nameLocation":"34065:11:43","nodeType":"VariableDeclaration","scope":10474,"src":"34057:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10432,"name":"uint256","nodeType":"ElementaryTypeName","src":"34057:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10436,"mutability":"mutable","name":"amountsOut","nameLocation":"34095:10:43","nodeType":"VariableDeclaration","scope":10474,"src":"34078:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10434,"name":"uint256","nodeType":"ElementaryTypeName","src":"34078:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10435,"nodeType":"ArrayTypeName","src":"34078:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10438,"mutability":"mutable","name":"returnData","nameLocation":"34120:10:43","nodeType":"VariableDeclaration","scope":10474,"src":"34107:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10437,"name":"bytes","nodeType":"ElementaryTypeName","src":"34107:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34056:75:43"},"scope":10716,"src":"33829:1198:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4157],"body":{"id":10508,"nodeType":"Block","src":"35208:255:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10491,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"35314:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35321:32:43","memberName":"queryRemoveLiquidityRecoveryHook","nodeType":"MemberAccess","referencedDeclaration":10583,"src":"35314:39:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityRecoveryHook(address,address,uint256) returns (uint256[] memory)"}},{"components":[{"id":10493,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10477,"src":"35356:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10496,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"35370:4:43","typeDescriptions":{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Router_$10716","typeString":"contract Router"}],"id":10495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35362:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10494,"name":"address","nodeType":"ElementaryTypeName","src":"35362:7:43","typeDescriptions":{}}},"id":10497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35362:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10498,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10479,"src":"35377:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"35355:39:43","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function Router.queryRemoveLiquidityRecoveryHook(address,address,uint256) returns (uint256[] memory)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":10489,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"35299:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35303:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"35299:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35299:96:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10487,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"35265:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35272:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"35265:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35265:148:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":10503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35432:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10502,"name":"uint256","nodeType":"ElementaryTypeName","src":"35432:7:43","typeDescriptions":{}}},"id":10504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"35432:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}}],"id":10505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"35431:11:43","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}],"expression":{"id":10485,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"35237:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35241:6:43","memberName":"decode","nodeType":"MemberAccess","src":"35237:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35237:219:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":10484,"id":10507,"nodeType":"Return","src":"35218:238:43"}]},"documentation":{"id":10475,"nodeType":"StructuredDocumentation","src":"35033:23:43","text":"@inheritdoc IRouter"},"functionSelector":"b037ed36","id":10509,"implemented":true,"kind":"function","modifiers":[],"name":"queryRemoveLiquidityRecovery","nameLocation":"35070:28:43","nodeType":"FunctionDefinition","parameters":{"id":10480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10477,"mutability":"mutable","name":"pool","nameLocation":"35116:4:43","nodeType":"VariableDeclaration","scope":10509,"src":"35108:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10476,"name":"address","nodeType":"ElementaryTypeName","src":"35108:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10479,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"35138:16:43","nodeType":"VariableDeclaration","scope":10509,"src":"35130:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10478,"name":"uint256","nodeType":"ElementaryTypeName","src":"35130:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35098:62:43"},"returnParameters":{"id":10484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10483,"mutability":"mutable","name":"amountsOut","nameLocation":"35196:10:43","nodeType":"VariableDeclaration","scope":10509,"src":"35179:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10481,"name":"uint256","nodeType":"ElementaryTypeName","src":"35179:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10482,"nodeType":"ArrayTypeName","src":"35179:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"35178:29:43"},"scope":10716,"src":"35061:402:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10543,"nodeType":"Block","src":"36111:413:43","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":10528,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"36230:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36237:4:43","memberName":"pool","nodeType":"MemberAccess","referencedDeclaration":4231,"src":"36230:11:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10530,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"36269:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":10531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36276:6:43","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"36269:13:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10532,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"36320:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36327:14:43","memberName":"maxBptAmountIn","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"36320:21:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10534,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"36378:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":10535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36385:13:43","memberName":"minAmountsOut","nodeType":"MemberAccess","referencedDeclaration":4234,"src":"36378:20:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"expression":{"id":10536,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"36426:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36433:4:43","memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":4239,"src":"36426:11:43","typeDescriptions":{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"}},{"expression":{"id":10538,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10513,"src":"36469:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams calldata"}},"id":10539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36476:8:43","memberName":"userData","nodeType":"MemberAccess","referencedDeclaration":4243,"src":"36469:15:43","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_enum$_RemoveLiquidityKind_$8460","typeString":"enum RemoveLiquidityKind"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":10527,"name":"RemoveLiquidityParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"36180:21:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RemoveLiquidityParams_$8476_storage_ptr_$","typeString":"type(struct RemoveLiquidityParams storage pointer)"}},"id":10540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["36224:4:43","36263:4:43","36304:14:43","36363:13:43","36420:4:43","36459:8:43"],"names":["pool","from","maxBptAmountIn","minAmountsOut","kind","userData"],"nodeType":"FunctionCall","src":"36180:323:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityParams_$8476_memory_ptr","typeString":"struct RemoveLiquidityParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RemoveLiquidityParams_$8476_memory_ptr","typeString":"struct RemoveLiquidityParams memory"}],"expression":{"id":10525,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"36140:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36147:15:43","memberName":"removeLiquidity","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"36140:22:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_RemoveLiquidityParams_$8476_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"function (struct RemoveLiquidityParams memory) external returns (uint256,uint256[] memory,bytes memory)"}},"id":10541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36140:377:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,bytes memory)"}},"functionReturnParameters":10524,"id":10542,"nodeType":"Return","src":"36121:396:43"}]},"documentation":{"id":10510,"nodeType":"StructuredDocumentation","src":"35469:443:43","text":" @notice Hook for remove liquidity queries.\n @dev Can only be called by the Vault.\n @param params Remove liquidity parameters (see IRouter for struct definition)\n @return bptAmountIn Pool token amount to be burned for the output tokens\n @return amountsOut Expected token amounts to be transferred to the sender\n @return returnData Arbitrary (optional) data with an encoded response from the pool"},"functionSelector":"b24bd571","id":10544,"implemented":true,"kind":"function","modifiers":[{"id":10516,"kind":"modifierInvocation","modifierName":{"id":10515,"name":"onlyVault","nameLocations":["36017:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"36017:9:43"},"nodeType":"ModifierInvocation","src":"36017:9:43"}],"name":"queryRemoveLiquidityHook","nameLocation":"35926:24:43","nodeType":"FunctionDefinition","parameters":{"id":10514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10513,"mutability":"mutable","name":"params","nameLocation":"35995:6:43","nodeType":"VariableDeclaration","scope":10544,"src":"35960:41:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_calldata_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams"},"typeName":{"id":10512,"nodeType":"UserDefinedTypeName","pathNode":{"id":10511,"name":"RemoveLiquidityHookParams","nameLocations":["35960:25:43"],"nodeType":"IdentifierPath","referencedDeclaration":4244,"src":"35960:25:43"},"referencedDeclaration":4244,"src":"35960:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_RemoveLiquidityHookParams_$4244_storage_ptr","typeString":"struct IRouterCommon.RemoveLiquidityHookParams"}},"visibility":"internal"}],"src":"35950:57:43"},"returnParameters":{"id":10524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10518,"mutability":"mutable","name":"bptAmountIn","nameLocation":"36044:11:43","nodeType":"VariableDeclaration","scope":10544,"src":"36036:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10517,"name":"uint256","nodeType":"ElementaryTypeName","src":"36036:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10521,"mutability":"mutable","name":"amountsOut","nameLocation":"36074:10:43","nodeType":"VariableDeclaration","scope":10544,"src":"36057:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10519,"name":"uint256","nodeType":"ElementaryTypeName","src":"36057:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10520,"nodeType":"ArrayTypeName","src":"36057:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10523,"mutability":"mutable","name":"returnData","nameLocation":"36099:10:43","nodeType":"VariableDeclaration","scope":10544,"src":"36086:23:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10522,"name":"bytes","nodeType":"ElementaryTypeName","src":"36086:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36035:75:43"},"scope":10716,"src":"35917:607:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10582,"nodeType":"Block","src":"37101:192:43","statements":[{"assignments":[10563],"declarations":[{"constant":false,"id":10563,"mutability":"mutable","name":"minAmountsOut","nameLocation":"37128:13:43","nodeType":"VariableDeclaration","scope":10582,"src":"37111:30:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10561,"name":"uint256","nodeType":"ElementaryTypeName","src":"37111:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10562,"nodeType":"ArrayTypeName","src":"37111:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":10573,"initialValue":{"arguments":[{"expression":{"arguments":[{"id":10569,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10547,"src":"37179:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10567,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"37158:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37165:13:43","memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"37158:20:43","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr_$","typeString":"function (address) view external returns (contract IERC20[] memory)"}},"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37158:26:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$337_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":10571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37185:6:43","memberName":"length","nodeType":"MemberAccess","src":"37158:33:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"37144:13:43","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":10564,"name":"uint256","nodeType":"ElementaryTypeName","src":"37148:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10565,"nodeType":"ArrayTypeName","src":"37148:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":10572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37144:48:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"37111:81:43"},{"expression":{"arguments":[{"id":10576,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10547,"src":"37240:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10549,"src":"37246:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10578,"name":"exactBptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10551,"src":"37254:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10579,"name":"minAmountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10563,"src":"37272:13:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":10574,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"37209:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37216:23:43","memberName":"removeLiquidityRecovery","nodeType":"MemberAccess","referencedDeclaration":5630,"src":"37209:30:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,address,uint256,uint256[] memory) external returns (uint256[] memory)"}},"id":10580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37209:77:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":10558,"id":10581,"nodeType":"Return","src":"37202:84:43"}]},"documentation":{"id":10545,"nodeType":"StructuredDocumentation","src":"36530:381:43","text":" @notice Hook for remove liquidity queries.\n @dev Can only be called by the Vault.\n @param pool The liquidity pool\n @param sender Account originating the remove liquidity operation\n @param exactBptAmountIn Pool token amount to be burned for the output tokens\n @return amountsOut Expected token amounts to be transferred to the sender"},"functionSelector":"5f9815ff","id":10583,"implemented":true,"kind":"function","modifiers":[{"id":10554,"kind":"modifierInvocation","modifierName":{"id":10553,"name":"onlyVault","nameLocations":["37053:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"37053:9:43"},"nodeType":"ModifierInvocation","src":"37053:9:43"}],"name":"queryRemoveLiquidityRecoveryHook","nameLocation":"36925:32:43","nodeType":"FunctionDefinition","parameters":{"id":10552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10547,"mutability":"mutable","name":"pool","nameLocation":"36975:4:43","nodeType":"VariableDeclaration","scope":10583,"src":"36967:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10546,"name":"address","nodeType":"ElementaryTypeName","src":"36967:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10549,"mutability":"mutable","name":"sender","nameLocation":"36997:6:43","nodeType":"VariableDeclaration","scope":10583,"src":"36989:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10548,"name":"address","nodeType":"ElementaryTypeName","src":"36989:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10551,"mutability":"mutable","name":"exactBptAmountIn","nameLocation":"37021:16:43","nodeType":"VariableDeclaration","scope":10583,"src":"37013:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10550,"name":"uint256","nodeType":"ElementaryTypeName","src":"37013:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36957:86:43"},"returnParameters":{"id":10558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10557,"mutability":"mutable","name":"amountsOut","nameLocation":"37089:10:43","nodeType":"VariableDeclaration","scope":10583,"src":"37072:27:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10555,"name":"uint256","nodeType":"ElementaryTypeName","src":"37072:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10556,"nodeType":"ArrayTypeName","src":"37072:9:43","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"37071:29:43"},"scope":10716,"src":"36916:377:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4177],"body":{"id":10635,"nodeType":"Block","src":"37590:792:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10612,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"37721:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37728:13:43","memberName":"querySwapHook","nodeType":"MemberAccess","referencedDeclaration":10715,"src":"37721:20:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.querySwapHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"}},{"arguments":[{"expression":{"id":10615,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37831:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37835:6:43","memberName":"sender","nodeType":"MemberAccess","src":"37831:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10617,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"37877:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$8367_$","typeString":"type(enum SwapKind)"}},"id":10618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37886:8:43","memberName":"EXACT_IN","nodeType":"MemberAccess","referencedDeclaration":8365,"src":"37877:17:43","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},{"id":10619,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10586,"src":"37930:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10620,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10589,"src":"37973:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":10621,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10592,"src":"38020:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":10622,"name":"exactAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10594,"src":"38071:13:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":10623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38121:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":10624,"name":"_MAX_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"38162:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"38214:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10626,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10598,"src":"38259:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10614,"name":"SwapSingleTokenHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"37767:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr_$","typeString":"type(struct IRouter.SwapSingleTokenHookParams storage pointer)"}},"id":10627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["37823:6:43","37871:4:43","37924:4:43","37964:7:43","38010:8:43","38058:11:43","38114:5:43","38152:8:43","38203:9:43","38249:8:43"],"names":["sender","kind","pool","tokenIn","tokenOut","amountGiven","limit","deadline","wethIsEth","userData"],"nodeType":"FunctionCall","src":"37767:527:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.querySwapHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"},{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}],"expression":{"id":10610,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"37681:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37685:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"37681:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37681:635:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10608,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"37647:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37654:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"37647:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37647:687:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38353:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10630,"name":"uint256","nodeType":"ElementaryTypeName","src":"38353:7:43","typeDescriptions":{}}}],"id":10632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"38352:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":10606,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"37619:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"37623:6:43","memberName":"decode","nodeType":"MemberAccess","src":"37619:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37619:756:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10605,"id":10634,"nodeType":"Return","src":"37600:775:43"}]},"documentation":{"id":10584,"nodeType":"StructuredDocumentation","src":"37299:23:43","text":"@inheritdoc IRouter"},"functionSelector":"3ebc54e5","id":10636,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10601,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10596,"src":"37547:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10602,"kind":"modifierInvocation","modifierName":{"id":10600,"name":"saveSender","nameLocations":["37536:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"37536:10:43"},"nodeType":"ModifierInvocation","src":"37536:18:43"}],"name":"querySwapSingleTokenExactIn","nameLocation":"37336:27:43","nodeType":"FunctionDefinition","parameters":{"id":10599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10586,"mutability":"mutable","name":"pool","nameLocation":"37381:4:43","nodeType":"VariableDeclaration","scope":10636,"src":"37373:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10585,"name":"address","nodeType":"ElementaryTypeName","src":"37373:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10589,"mutability":"mutable","name":"tokenIn","nameLocation":"37402:7:43","nodeType":"VariableDeclaration","scope":10636,"src":"37395:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10588,"nodeType":"UserDefinedTypeName","pathNode":{"id":10587,"name":"IERC20","nameLocations":["37395:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"37395:6:43"},"referencedDeclaration":337,"src":"37395:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10592,"mutability":"mutable","name":"tokenOut","nameLocation":"37426:8:43","nodeType":"VariableDeclaration","scope":10636,"src":"37419:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10591,"nodeType":"UserDefinedTypeName","pathNode":{"id":10590,"name":"IERC20","nameLocations":["37419:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"37419:6:43"},"referencedDeclaration":337,"src":"37419:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10594,"mutability":"mutable","name":"exactAmountIn","nameLocation":"37452:13:43","nodeType":"VariableDeclaration","scope":10636,"src":"37444:21:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10593,"name":"uint256","nodeType":"ElementaryTypeName","src":"37444:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10596,"mutability":"mutable","name":"sender","nameLocation":"37483:6:43","nodeType":"VariableDeclaration","scope":10636,"src":"37475:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10595,"name":"address","nodeType":"ElementaryTypeName","src":"37475:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10598,"mutability":"mutable","name":"userData","nameLocation":"37512:8:43","nodeType":"VariableDeclaration","scope":10636,"src":"37499:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10597,"name":"bytes","nodeType":"ElementaryTypeName","src":"37499:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37363:163:43"},"returnParameters":{"id":10605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10604,"mutability":"mutable","name":"amountCalculated","nameLocation":"37572:16:43","nodeType":"VariableDeclaration","scope":10636,"src":"37564:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10603,"name":"uint256","nodeType":"ElementaryTypeName","src":"37564:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37563:26:43"},"scope":10716,"src":"37327:1055:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4197],"body":{"id":10692,"nodeType":"Block","src":"38681:810:43","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":10665,"name":"Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10716,"src":"38812:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Router_$10716_$","typeString":"type(contract Router)"}},"id":10666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38819:13:43","memberName":"querySwapHook","nodeType":"MemberAccess","referencedDeclaration":10715,"src":"38812:20:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.querySwapHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"}},{"arguments":[{"expression":{"id":10668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"38922:3:43","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38926:6:43","memberName":"sender","nodeType":"MemberAccess","src":"38922:10:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10670,"name":"SwapKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"38968:8:43","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$8367_$","typeString":"type(enum SwapKind)"}},"id":10671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38977:9:43","memberName":"EXACT_OUT","nodeType":"MemberAccess","referencedDeclaration":8366,"src":"38968:18:43","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"}},{"id":10672,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10639,"src":"39022:4:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10673,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10642,"src":"39065:7:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":10674,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10645,"src":"39112:8:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},{"id":10675,"name":"exactAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10647,"src":"39163:14:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10676,"name":"_MAX_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"39214:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":10679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39270:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10678,"name":"uint256","nodeType":"ElementaryTypeName","src":"39270:7:43","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":10677,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"39265:4:43","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":10680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39265:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":10681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"39279:3:43","memberName":"max","nodeType":"MemberAccess","src":"39265:17:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"39323:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":10683,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10651,"src":"39368:8:43","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_SwapKind_$8367","typeString":"enum SwapKind"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10667,"name":"SwapSingleTokenHookParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"38858:25:43","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr_$","typeString":"type(struct IRouter.SwapSingleTokenHookParams storage pointer)"}},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["38914:6:43","38962:4:43","39016:4:43","39056:7:43","39102:8:43","39150:11:43","39207:5:43","39255:8:43","39312:9:43","39358:8:43"],"names":["sender","kind","pool","tokenIn","tokenOut","amountGiven","limit","deadline","wethIsEth","userData"],"nodeType":"FunctionCall","src":"38858:545:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$","typeString":"function Router.querySwapHook(struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256)"},{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_memory_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams memory"}],"expression":{"id":10663,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"38772:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38776:10:43","memberName":"encodeCall","nodeType":"MemberAccess","src":"38772:14:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38772:653:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10661,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"38738:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$4357","typeString":"contract IVault"}},"id":10662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38745:5:43","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":5638,"src":"38738:12:43","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) external returns (bytes memory)"}},"id":10686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38738:705:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39462:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10687,"name":"uint256","nodeType":"ElementaryTypeName","src":"39462:7:43","typeDescriptions":{}}}],"id":10689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"39461:9:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":10659,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"38710:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"38714:6:43","memberName":"decode","nodeType":"MemberAccess","src":"38710:10:43","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38710:774:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10658,"id":10691,"nodeType":"Return","src":"38691:793:43"}]},"documentation":{"id":10637,"nodeType":"StructuredDocumentation","src":"38388:23:43","text":"@inheritdoc IRouter"},"functionSelector":"175d4408","id":10693,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":10654,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10649,"src":"38638:6:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10655,"kind":"modifierInvocation","modifierName":{"id":10653,"name":"saveSender","nameLocations":["38627:10:43"],"nodeType":"IdentifierPath","referencedDeclaration":7129,"src":"38627:10:43"},"nodeType":"ModifierInvocation","src":"38627:18:43"}],"name":"querySwapSingleTokenExactOut","nameLocation":"38425:28:43","nodeType":"FunctionDefinition","parameters":{"id":10652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10639,"mutability":"mutable","name":"pool","nameLocation":"38471:4:43","nodeType":"VariableDeclaration","scope":10693,"src":"38463:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10638,"name":"address","nodeType":"ElementaryTypeName","src":"38463:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10642,"mutability":"mutable","name":"tokenIn","nameLocation":"38492:7:43","nodeType":"VariableDeclaration","scope":10693,"src":"38485:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10641,"nodeType":"UserDefinedTypeName","pathNode":{"id":10640,"name":"IERC20","nameLocations":["38485:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"38485:6:43"},"referencedDeclaration":337,"src":"38485:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10645,"mutability":"mutable","name":"tokenOut","nameLocation":"38516:8:43","nodeType":"VariableDeclaration","scope":10693,"src":"38509:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"},"typeName":{"id":10644,"nodeType":"UserDefinedTypeName","pathNode":{"id":10643,"name":"IERC20","nameLocations":["38509:6:43"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"38509:6:43"},"referencedDeclaration":337,"src":"38509:6:43","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$337","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10647,"mutability":"mutable","name":"exactAmountOut","nameLocation":"38542:14:43","nodeType":"VariableDeclaration","scope":10693,"src":"38534:22:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10646,"name":"uint256","nodeType":"ElementaryTypeName","src":"38534:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10649,"mutability":"mutable","name":"sender","nameLocation":"38574:6:43","nodeType":"VariableDeclaration","scope":10693,"src":"38566:14:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10648,"name":"address","nodeType":"ElementaryTypeName","src":"38566:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10651,"mutability":"mutable","name":"userData","nameLocation":"38603:8:43","nodeType":"VariableDeclaration","scope":10693,"src":"38590:21:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10650,"name":"bytes","nodeType":"ElementaryTypeName","src":"38590:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38453:164:43"},"returnParameters":{"id":10658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10657,"mutability":"mutable","name":"amountCalculated","nameLocation":"38663:16:43","nodeType":"VariableDeclaration","scope":10693,"src":"38655:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10656,"name":"uint256","nodeType":"ElementaryTypeName","src":"38655:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38654:26:43"},"scope":10716,"src":"38416:1075:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10714,"nodeType":"Block","src":"39936:101:43","statements":[{"assignments":[10707,null,null],"declarations":[{"constant":false,"id":10707,"mutability":"mutable","name":"amountCalculated","nameLocation":"39955:16:43","nodeType":"VariableDeclaration","scope":10714,"src":"39947:24:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10706,"name":"uint256","nodeType":"ElementaryTypeName","src":"39947:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null],"id":10711,"initialValue":{"arguments":[{"id":10709,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10697,"src":"39989:6:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams calldata"}],"id":10708,"name":"_swapHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"39979:9:43","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (struct IRouter.SwapSingleTokenHookParams calldata) returns (uint256,uint256,uint256)"}},"id":10710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39979:17:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"39946:50:43"},{"expression":{"id":10712,"name":"amountCalculated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10707,"src":"40014:16:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10705,"id":10713,"nodeType":"Return","src":"40007:23:43"}]},"documentation":{"id":10694,"nodeType":"StructuredDocumentation","src":"39497:304:43","text":" @notice Hook for swap queries.\n @dev Can only be called by the Vault. Also handles native ETH.\n @param params Swap parameters (see IRouter for struct definition)\n @return amountCalculated Token amount calculated by the pool math (e.g., amountOut for an exact in swap)"},"functionSelector":"be5ae841","id":10715,"implemented":true,"kind":"function","modifiers":[{"id":10700,"kind":"modifierInvocation","modifierName":{"id":10699,"name":"nonReentrant","nameLocations":["39895:12:43"],"nodeType":"IdentifierPath","referencedDeclaration":6161,"src":"39895:12:43"},"nodeType":"ModifierInvocation","src":"39895:12:43"},{"id":10702,"kind":"modifierInvocation","modifierName":{"id":10701,"name":"onlyVault","nameLocations":["39908:9:43"],"nodeType":"IdentifierPath","referencedDeclaration":8173,"src":"39908:9:43"},"nodeType":"ModifierInvocation","src":"39908:9:43"}],"name":"querySwapHook","nameLocation":"39815:13:43","nodeType":"FunctionDefinition","parameters":{"id":10698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10697,"mutability":"mutable","name":"params","nameLocation":"39873:6:43","nodeType":"VariableDeclaration","scope":10715,"src":"39838:41:43","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_calldata_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams"},"typeName":{"id":10696,"nodeType":"UserDefinedTypeName","pathNode":{"id":10695,"name":"SwapSingleTokenHookParams","nameLocations":["39838:25:43"],"nodeType":"IdentifierPath","referencedDeclaration":3958,"src":"39838:25:43"},"referencedDeclaration":3958,"src":"39838:25:43","typeDescriptions":{"typeIdentifier":"t_struct$_SwapSingleTokenHookParams_$3958_storage_ptr","typeString":"struct IRouter.SwapSingleTokenHookParams"}},"visibility":"internal"}],"src":"39828:57:43"},"returnParameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10715,"src":"39927:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10703,"name":"uint256","nodeType":"ElementaryTypeName","src":"39927:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39926:9:43"},"scope":10716,"src":"39806:231:43","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10717,"src":"1019:39020:43","usedErrors":[413,820,1079,1082,1113,4309,4312,4886,5845,6150,6217,6990],"usedEvents":[]}],"src":"46:39994:43"},"id":43}},"contracts":{"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"IERC4626":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220fdef9aa6209c56e6edc4064a8ffbb8aa6bdba22ee7365a1fded507effdbfd89864736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xEF SWAP11 0xA6 KECCAK256 SWAP13 JUMP 0xE6 0xED 0xC4 MOD BLOBBASEFEE DUP16 0xFB 0xB8 0xAA PUSH12 0xDBA22EE7365A1FDED507EFFD 0xBF 0xD8 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"750:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220fdef9aa6209c56e6edc4064a8ffbb8aa6bdba22ee7365a1fded507effdbfd89864736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xEF SWAP11 0xA6 KECCAK256 SWAP13 JUMP 0xE6 0xED 0xC4 MOD BLOBBASEFEE DUP16 0xFB 0xB8 0xAA PUSH12 0xDBA22EE7365A1FDED507EFFD 0xBF 0xD8 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"750:8692:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122042a7ec1fdb14bebd3271b7febab2b440a10c36fb943f8e2256c8fb8059638f6064736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xA7 0xEC 0x1F 0xDB EQ 0xBE 0xBD ORIGIN PUSH18 0xB7FEBAB2B440A10C36FB943F8E2256C8FB80 MSIZE PUSH4 0x8F606473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122042a7ec1fdb14bebd3271b7febab2b440a10c36fb943f8e2256c8fb8059638f6064736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xA7 0xEC 0x1F 0xDB EQ 0xBE 0xBD ORIGIN PUSH18 0xB7FEBAB2B440A10C36FB943F8E2256C8FB80 MSIZE PUSH4 0x8F606473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"233:5799:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204627dbefba111e89a1c45abb6041b227ca2261d8ec282d656968e9363622cf6764736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x27 0xDB 0xEF 0xBA GT 0x1E DUP10 LOG1 0xC4 GAS 0xBB PUSH1 0x41 0xB2 0x27 0xCA 0x22 PUSH2 0xD8EC 0x28 0x2D PUSH6 0x6968E9363622 0xCF PUSH8 0x64736F6C63430008 BYTE STOP CALLER ","sourceMap":"411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212204627dbefba111e89a1c45abb6041b227ca2261d8ec282d656968e9363622cf6764736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x27 0xDB 0xEF 0xBA GT 0x1E DUP10 LOG1 0xC4 GAS 0xBB PUSH1 0x41 0xB2 0x27 0xCA 0x22 PUSH2 0xD8EC 0x28 0x2D PUSH6 0x6968E9363622 0xCF PUSH8 0x64736F6C63430008 BYTE STOP CALLER ","sourceMap":"411:484:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212203d9ee18d715062f31bfdf925c0f259be7d1ec3593fc2f22059a675068851952a64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP15 0xE1 DUP14 PUSH18 0x5062F31BFDF925C0F259BE7D1EC3593FC2F2 KECCAK256 MSIZE 0xA6 PUSH22 0x68851952A64736F6C634300081A0033000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212203d9ee18d715062f31bfdf925c0f259be7d1ec3593fc2f22059a675068851952a64736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SWAP15 0xE1 DUP14 PUSH18 0x5062F31BFDF925C0F259BE7D1EC3593FC2F2 KECCAK256 MSIZE 0xA6 PUSH22 0x68851952A64736F6C634300081A0033000000000000 ","sourceMap":"769:34173:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol":{"IAllowanceTransfer":{"abi":[{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"AllowanceExpired","type":"error"},{"inputs":[],"name":"ExcessiveInvalidation","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InsufficientAllowance","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"spender","type":"address"}],"name":"Lockdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint48","name":"newNonce","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"oldNonce","type":"uint48"}],"name":"NonceInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"nonce","type":"uint48"}],"name":"Permit","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint48","name":"newNonce","type":"uint48"}],"name":"invalidateNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"internalType":"struct IAllowanceTransfer.TokenSpenderPair[]","name":"approvals","type":"tuple[]"}],"name":"lockdown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permitBatch","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"internalType":"struct IAllowanceTransfer.AllowanceTransferDetails[]","name":"transferDetails","type":"tuple[]"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address,address)":"927da105","approve(address,address,uint160,uint48)":"87517c45","invalidateNonces(address,address,uint48)":"65d9723c","lockdown((address,address)[])":"cc53287f","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)":"2a2d80d1","transferFrom((address,address,uint160,address)[])":"0d58b1db","transferFrom(address,address,uint160,address)":"36c78516"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"@uniswap/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@uniswap/permit2/src/interfaces/IEIP712.sol":{"IEIP712":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/permit2/src/interfaces/IEIP712.sol\":\"IEIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/CastingHelpers.sol":{"CastingHelpers":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220194367a2cf7f25c40fb421e31550657ad4d9ace81dc47652052c8c7029ae75ec64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT NUMBER PUSH8 0xA2CF7F25C40FB421 0xE3 ISZERO POP PUSH6 0x7AD4D9ACE81D 0xC4 PUSH23 0x52052C8C7029AE75EC64736F6C634300081A0033000000 ","sourceMap":"217:637:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220194367a2cf7f25c40fb421e31550657ad4d9ace81dc47652052c8c7029ae75ec64736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT NUMBER PUSH8 0xA2CF7F25C40FB421 0xE3 ISZERO POP PUSH6 0x7AD4D9ACE81D 0xC4 PUSH23 0x52052C8C7029AE75EC64736F6C634300081A0033000000 ","sourceMap":"217:637:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library of helper functions related to typecasting arrays.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CastingHelpers.sol\":\"CastingHelpers\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/CastingHelpers.sol\":{\"keccak256\":\"0x8b468c356b40134c158695ad68193093444f1a7783966a03947d67c403c87635\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d2696338f5f2f11663a2123cd5f7df1a2bfb434d49f93f2c0d1486e9d43d6f4\",\"dweb:/ipfs/QmQihSe7BEvWh4s1EPnqSf5RKNL6fLqEBuMETn6nHouweW\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IAuthentication.sol":{"IAuthentication":{"abi":[{"inputs":[],"name":"SenderNotAllowed","type":"error"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"params\":{\"selector\":\"The 4-byte selector of the permissioned function\"},\"returns\":{\"actionId\":\"The computed actionId\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"SenderNotAllowed()\":[{\"notice\":\"The sender does not have permission to call a function.\"}]},\"kind\":\"user\",\"methods\":{\"getActionId(bytes4)\":{\"notice\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"notice\":\"Simple interface for permissioned calling of external functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"params\":{\"account\":\"Account trying to perform the action\",\"actionId\":\"Identifier for the action to be performed\",\"where\":\"Target contract for the action\"},\"returns\":{\"success\":\"True if the action is permitted\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"notice\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"notice\":\"Interface to the Vault's permission system.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IHooks.sol":{"IHooks":{"abi":[{"inputs":[],"name":"getHookFlags","outputs":[{"components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"}],"internalType":"struct HookFlags","name":"hookFlags","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256[]","name":"amountsInScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsInRaw","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onAfterAddLiquidity","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256[]","name":"hookAdjustedAmountsInRaw","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onAfterInitialize","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOutScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsOutRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onAfterRemoveLiquidity","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256[]","name":"hookAdjustedAmountsOutRaw","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountInScaled18","type":"uint256"},{"internalType":"uint256","name":"amountOutScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenInBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"tokenOutBalanceScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedScaled18","type":"uint256"},{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct AfterSwapParams","name":"params","type":"tuple"}],"name":"onAfterSwap","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"hookAdjustedAmountCalculatedRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256[]","name":"maxAmountsInScaled18","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onBeforeAddLiquidity","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onBeforeInitialize","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"router","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOutScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onBeforeRemoveLiquidity","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct PoolSwapParams","name":"params","type":"tuple"},{"internalType":"address","name":"pool","type":"address"}],"name":"onBeforeSwap","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct PoolSwapParams","name":"params","type":"tuple"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"}],"name":"onComputeDynamicSwapFeePercentage","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"dynamicSwapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]"},{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"}],"name":"onRegister","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getHookFlags()":"d77153a7","onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)":"976907cc","onAfterInitialize(uint256[],uint256,bytes)":"38be241d","onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)":"2754888d","onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))":"18b6eb55","onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)":"45421ec7","onBeforeInitialize(uint256[],bytes)":"1c149e28","onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)":"ba5f9f40","onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)":"5211fa77","onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)":"a0e8f5ac","onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))":"0b89f182"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getHookFlags\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"}],\"internalType\":\"struct HookFlags\",\"name\":\"hookFlags\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"hookAdjustedAmountsInRaw\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOutRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onAfterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"hookAdjustedAmountsOutRaw\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenInBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutBalanceScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AfterSwapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"onAfterSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"hookAdjustedAmountCalculatedRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsInScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onBeforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onBeforeInitialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOutScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onBeforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"onBeforeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"onComputeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"dynamicSwapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"onRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Hooks are functions invoked by the Vault at specific points in the flow of each operation. This guarantees that they are called in the correct order, and with the correct arguments. To maintain this security, these functions should only be called by the Vault. The recommended way to do this is to derive the hook contract from `BaseHooks`, then use the `onlyVault` modifier from `VaultGuard`. (See the examples in /pool-hooks.)\",\"kind\":\"dev\",\"methods\":{\"getHookFlags()\":{\"details\":\"The Vault will only call hooks the pool says it supports, and of course only if a hooks contract is defined (i.e., the `poolHooksContract` in `PoolRegistrationParams` is non-zero). `onRegister` is the only \\\"mandatory\\\" hook.\",\"returns\":{\"hookFlags\":\"Flags indicating which hooks the contract supports\"}},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterAddLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsInRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsInRaw\":\"Actual amounts of tokens added, sorted in token registration order\",\"amountsInScaled18\":\"Actual amounts of tokens added, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountOut\":\"Amount of pool tokens minted\",\"kind\":\"The add liquidity operation type (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"hookAdjustedAmountsInRaw\":\"New amountsInRaw, potentially modified by the hook\",\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"details\":\"Called if the `shouldCallAfterInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"bptAmountOut\":\"Amount of pool tokens minted during initialization\",\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"success\":\"True if the pool accepts the initialization results\"}},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallAfterRemoveLiquidity` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountsOutRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"amountsOutRaw\":\"Actual amount of tokens to receive, sorted in token registration order\",\"amountsOutScaled18\":\"Scaled amount of tokens to receive, sorted in token registration order\",\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"bptAmountIn\":\"Amount of pool tokens to burn\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Additional (optional) data provided by the user\"},\"returns\":{\"hookAdjustedAmountsOutRaw\":\"New amountsOutRaw, potentially modified by the hook\",\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"details\":\"Called if the `shouldCallAfterSwap` flag is set in the configuration. The Vault will ignore `hookAdjustedAmountCalculatedRaw` unless `enableHookAdjustedAmounts` is true. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see above for struct definition)\"},\"returns\":{\"hookAdjustedAmountCalculatedRaw\":\"New amount calculated, potentially modified by the hook\",\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeAddLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The add liquidity operation type (e.g., proportional, custom)\",\"maxAmountsInScaled18\":\"Maximum amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated an add liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeInitialize(uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeInitialize` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"success\":\"True if the pool wishes to proceed with initialization\"}},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"details\":\"Called if the `shouldCallBeforeRemoveLiquidity` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"balancesScaled18\":\"Current pool balances, sorted in token registration order\",\"kind\":\"The type of remove liquidity operation (e.g., proportional, custom)\",\"maxBptAmountIn\":\"Maximum amount of input pool tokens\",\"minAmountsOutScaled18\":\"Minimum output amounts, sorted in token registration order\",\"pool\":\"Pool address, used to fetch pool information from the Vault (pool config, tokens, etc.)\",\"router\":\"The address (usually a router contract) that initiated a remove liquidity operation on the Vault\",\"userData\":\"Optional, arbitrary data sent with the encoded request\"},\"returns\":{\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"details\":\"Called if the `shouldCallBeforeSwap` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\"},\"returns\":{\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"details\":\"Called if the `shouldCallComputeDynamicSwapFee` flag is set in the configuration. Hook contracts should use the `onlyVault` modifier to guarantee this is only called by the Vault.\",\"params\":{\"params\":\"Swap parameters (see PoolSwapParams for struct definition)\",\"pool\":\"Pool address, used to get pool information from the Vault (poolData, token config, etc.)\",\"staticSwapFeePercentage\":\"18-decimal FP value of the static swap fee percentage, for reference\"},\"returns\":{\"dynamicSwapFeePercentage\":\"Value of the swap fee percentage, as an 18-decimal FP value\",\"success\":\"True if the pool wishes to proceed with settlement\"}},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"details\":\"Returns true if registration was successful, and false to revert the pool registration. Make sure this function is properly implemented (e.g. check the factory, and check that the given pool is from the factory). The Vault address will be msg.sender.\",\"params\":{\"factory\":\"Address of the pool factory (contract deploying the pool)\",\"liquidityManagement\":\"Liquidity management flags indicating which functions are enabled\",\"pool\":\"Address of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"},\"returns\":{\"success\":\"True if the hook allowed the registration, false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getHookFlags()\":{\"notice\":\"Return the set of hooks implemented by the contract.\"},\"onAfterAddLiquidity(address,address,uint8,uint256[],uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed after adding liquidity.\"},\"onAfterInitialize(uint256[],uint256,bytes)\":{\"notice\":\"Hook to be executed after pool initialization.\"},\"onAfterRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed after removing liquidity.\"},\"onAfterSwap((uint8,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address,address,bytes))\":{\"notice\":\"Called after a swap to perform further actions once the balances have been updated by the swap.\"},\"onBeforeAddLiquidity(address,address,uint8,uint256[],uint256,uint256[],bytes)\":{\"notice\":\"Hook to be executed before adding liquidity.\"},\"onBeforeInitialize(uint256[],bytes)\":{\"notice\":\"Hook executed before pool initialization.\"},\"onBeforeRemoveLiquidity(address,address,uint8,uint256,uint256[],uint256[],bytes)\":{\"notice\":\"Hook to be executed before removing liquidity.\"},\"onBeforeSwap((uint8,uint256,uint256[],uint256,uint256,address,bytes),address)\":{\"notice\":\"Called before a swap to give the Pool an opportunity to perform actions.\"},\"onComputeDynamicSwapFeePercentage((uint8,uint256,uint256[],uint256,uint256,address,bytes),address,uint256)\":{\"notice\":\"Called after `onBeforeSwap` and before the main swap operation, if the pool has dynamic fees.\"},\"onRegister(address,address,(address,uint8,address,bool)[],(bool,bool,bool,bool))\":{\"notice\":\"Hook executed when a pool is registered with a non-zero hooks contract.\"}},\"notice\":\"Interface for pool hooks.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IHooks.sol\":\"IHooks\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IProtocolFeeController.sol":{"IProtocolFeeController":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"pool","type":"address"}],"name":"CallerIsNotPoolCreator","type":"error"},{"inputs":[],"name":"PoolCreatorFeePercentageTooHigh","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreatorNotRegistered","type":"error"},{"inputs":[],"name":"ProtocolSwapFeePercentageTooHigh","type":"error"},{"inputs":[],"name":"ProtocolYieldFeePercentageTooHigh","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"GlobalProtocolSwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"yieldFeePercentage","type":"uint256"}],"name":"GlobalProtocolYieldFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isProtocolFeeExempt","type":"bool"}],"name":"InitialPoolAggregateSwapFeePercentage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isProtocolFeeExempt","type":"bool"}],"name":"InitialPoolAggregateYieldFeePercentage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PoolCreatorFeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"poolCreatorSwapFeePercentage","type":"uint256"}],"name":"PoolCreatorSwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"poolCreatorYieldFeePercentage","type":"uint256"}],"name":"PoolCreatorYieldFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"poolCreator","type":"address"},{"indexed":false,"internalType":"bool","name":"protocolFeeExempt","type":"bool"}],"name":"PoolRegisteredWithFeeController","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProtocolFeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProtocolSwapFeeCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"ProtocolSwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ProtocolYieldFeeCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"yieldFeePercentage","type":"uint256"}],"name":"ProtocolYieldFeePercentageChanged","type":"event"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"collectAggregateFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"protocolFeePercentage","type":"uint256"},{"internalType":"uint256","name":"poolCreatorFeePercentage","type":"uint256"}],"name":"computeAggregateFeePercentage","outputs":[{"internalType":"uint256","name":"aggregateFeePercentage","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getGlobalProtocolSwapFeePercentage","outputs":[{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGlobalProtocolYieldFeePercentage","outputs":[{"internalType":"uint256","name":"protocolYieldFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolCreatorFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolCreatorSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolCreatorYieldFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolProtocolSwapFeeInfo","outputs":[{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bool","name":"isOverride","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolProtocolYieldFeeInfo","outputs":[{"internalType":"uint256","name":"protocolYieldFeePercentage","type":"uint256"},{"internalType":"bool","name":"isOverride","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getProtocolFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"},{"internalType":"bool","name":"protocolFeeExempt","type":"bool"}],"name":"registerPool","outputs":[{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProtocolSwapFeePercentage","type":"uint256"}],"name":"setGlobalProtocolSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProtocolYieldFeePercentage","type":"uint256"}],"name":"setGlobalProtocolYieldFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"poolCreatorSwapFeePercentage","type":"uint256"}],"name":"setPoolCreatorSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"poolCreatorYieldFeePercentage","type":"uint256"}],"name":"setPoolCreatorYieldFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newProtocolSwapFeePercentage","type":"uint256"}],"name":"setProtocolSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newProtocolYieldFeePercentage","type":"uint256"}],"name":"setProtocolYieldFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"updateProtocolSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"updateProtocolYieldFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"withdrawPoolCreatorFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawPoolCreatorFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawProtocolFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawProtocolFeesForToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"collectAggregateFees(address)":"8f4ab9ca","computeAggregateFeePercentage(uint256,uint256)":"0ddd60c6","getGlobalProtocolSwapFeePercentage()":"7869ee18","getGlobalProtocolYieldFeePercentage()":"55fb76af","getPoolCreatorFeeAmounts(address)":"9e95f3fd","getPoolCreatorSwapFeePercentage(address)":"0b8e059b","getPoolCreatorYieldFeePercentage(address)":"0252aab5","getPoolProtocolSwapFeeInfo(address)":"5c15a0b4","getPoolProtocolYieldFeeInfo(address)":"7a2b97dc","getProtocolFeeAmounts(address)":"8df44c54","isPoolRegistered(address)":"c673bdaf","registerPool(address,address,bool)":"77ff76e7","setGlobalProtocolSwapFeePercentage(uint256)":"8a3c5c69","setGlobalProtocolYieldFeePercentage(uint256)":"a93df2a4","setPoolCreatorSwapFeePercentage(address,uint256)":"1377c16c","setPoolCreatorYieldFeePercentage(address,uint256)":"3af52712","setProtocolSwapFeePercentage(address,uint256)":"fd267f39","setProtocolYieldFeePercentage(address,uint256)":"abaa3356","updateProtocolSwapFeePercentage(address)":"71ecc8fb","updateProtocolYieldFeePercentage(address)":"71447ea8","vault()":"fbfa77cf","withdrawPoolCreatorFees(address)":"52f125f0","withdrawPoolCreatorFees(address,address)":"f7061445","withdrawProtocolFees(address,address)":"cf7b287f","withdrawProtocolFeesForToken(address,address,address)":"b53a70b2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"CallerIsNotPoolCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolCreatorFeePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreatorNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolSwapFeePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolYieldFeePercentageTooHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"GlobalProtocolSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"GlobalProtocolYieldFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isProtocolFeeExempt\",\"type\":\"bool\"}],\"name\":\"InitialPoolAggregateSwapFeePercentage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isProtocolFeeExempt\",\"type\":\"bool\"}],\"name\":\"InitialPoolAggregateYieldFeePercentage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PoolCreatorFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolCreatorSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"PoolCreatorSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolCreatorYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"PoolCreatorYieldFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"protocolFeeExempt\",\"type\":\"bool\"}],\"name\":\"PoolRegisteredWithFeeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolSwapFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"ProtocolSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolYieldFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"ProtocolYieldFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"collectAggregateFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolCreatorFeePercentage\",\"type\":\"uint256\"}],\"name\":\"computeAggregateFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"aggregateFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalProtocolSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalProtocolYieldFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolYieldFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolCreatorFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolCreatorSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolCreatorYieldFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolProtocolSwapFeeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolProtocolYieldFeeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolYieldFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getProtocolFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"protocolFeeExempt\",\"type\":\"bool\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProtocolSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setGlobalProtocolSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProtocolYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setGlobalProtocolYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolCreatorSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setPoolCreatorSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolCreatorYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setPoolCreatorYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newProtocolSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setProtocolSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newProtocolYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setProtocolYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"updateProtocolSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"updateProtocolYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"withdrawPoolCreatorFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawPoolCreatorFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawProtocolFeesForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CallerIsNotPoolCreator(address,address)\":[{\"params\":{\"caller\":\"The account attempting to withdraw pool creator fees\",\"pool\":\"The pool the caller tried to withdraw from\"}}],\"PoolCreatorNotRegistered(address)\":[{\"params\":{\"pool\":\"The pool with no creator\"}}],\"ProtocolSwapFeePercentageTooHigh()\":[{\"details\":\"Note that this is checked for both the global and pool-specific protocol swap fee percentages.\"}],\"ProtocolYieldFeePercentageTooHigh()\":[{\"details\":\"Note that this is checked for both the global and pool-specific protocol yield fee percentages.\"}]},\"events\":{\"GlobalProtocolSwapFeePercentageChanged(uint256)\":{\"params\":{\"swapFeePercentage\":\"The updated protocol swap fee percentage\"}},\"GlobalProtocolYieldFeePercentageChanged(uint256)\":{\"params\":{\"yieldFeePercentage\":\"The updated protocol yield fee percentage\"}},\"InitialPoolAggregateSwapFeePercentage(address,uint256,bool)\":{\"details\":\"If the pool is registered as protocol fee exempt, this will be zero (until changed). Otherwise, it will equal the current global swap fee percentage.\",\"params\":{\"aggregateSwapFeePercentage\":\"The initial aggregate swap fee percentage\",\"isProtocolFeeExempt\":\"True if the pool is exempt from taking protocol fees initially\",\"pool\":\"The pool being registered\"}},\"InitialPoolAggregateYieldFeePercentage(address,uint256,bool)\":{\"details\":\"If the pool is registered as protocol fee exempt, this will be zero (until changed). Otherwise, it will equal the current global yield fee percentage.\",\"params\":{\"aggregateYieldFeePercentage\":\"The initial aggregate yield fee percentage\",\"isProtocolFeeExempt\":\"True if the pool is exempt from taking protocol fees initially\",\"pool\":\"The pool being registered\"}},\"PoolCreatorFeesWithdrawn(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the fee token that was withdrawn\",\"pool\":\"The pool from which pool creator fees are being withdrawn\",\"recipient\":\"The recipient of the funds (the pool creator if permissionless, or another account)\",\"token\":\"The token being withdrawn\"}},\"PoolCreatorSwapFeePercentageChanged(address,uint256)\":{\"params\":{\"pool\":\"The pool whose pool creator swap fee will be changed\",\"poolCreatorSwapFeePercentage\":\"The new pool creator swap fee percentage for the pool\"}},\"PoolCreatorYieldFeePercentageChanged(address,uint256)\":{\"params\":{\"pool\":\"The pool whose pool creator yield fee will be changed\",\"poolCreatorYieldFeePercentage\":\"The new pool creator yield fee percentage for the pool\"}},\"PoolRegisteredWithFeeController(address,address,bool)\":{\"details\":\"The `PoolRegistered` event includes the `roleAccounts` field, which also records the pool creator, but this simpler event is also provided for convenience. Though `InitialPoolAggregateSwapFeePercentage` and its yield fee counterpart also include the protocol fee exemption flag, we might as well include it here as well.\",\"params\":{\"pool\":\"The address of the pool being registered\",\"poolCreator\":\"The address of the pool creator (non-zero, or the event would not be emitted)\",\"protocolFeeExempt\":\"True if the pool is initially exempt from protocol fees\"}},\"ProtocolFeesWithdrawn(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the fee token that was withdrawn\",\"pool\":\"The pool from which protocol fees are being withdrawn\",\"recipient\":\"The recipient of the funds\",\"token\":\"The token being withdrawn\"}},\"ProtocolSwapFeeCollected(address,address,uint256)\":{\"details\":\"Note that since charging protocol fees (i.e., distributing tokens between pool and fee balances) occurs in the Vault, but fee collection happens in the ProtocolFeeController, the swap fees reported here may encompass multiple operations.\",\"params\":{\"amount\":\"The amount of the token collected in fees\",\"pool\":\"The pool on which the swap fee was charged\",\"token\":\"The token in which the swap fee was charged\"}},\"ProtocolSwapFeePercentageChanged(address,uint256)\":{\"params\":{\"pool\":\"The pool whose protocol swap fee will be changed\",\"swapFeePercentage\":\"The updated protocol swap fee percentage\"}},\"ProtocolYieldFeeCollected(address,address,uint256)\":{\"details\":\"Note that since charging protocol fees (i.e., distributing tokens between pool and fee balances) occurs in the Vault, but fee collection happens in the ProtocolFeeController, the yield fees reported here may encompass multiple operations.\",\"params\":{\"amount\":\"The amount of the token collected in fees\",\"pool\":\"The pool on which the yield fee was charged\",\"token\":\"The token in which the yield fee was charged\"}},\"ProtocolYieldFeePercentageChanged(address,uint256)\":{\"params\":{\"pool\":\"The pool whose protocol yield fee will be changed\",\"yieldFeePercentage\":\"The updated protocol yield fee percentage\"}}},\"kind\":\"dev\",\"methods\":{\"collectAggregateFees(address)\":{\"params\":{\"pool\":\"The pool with aggregate fees\"}},\"computeAggregateFeePercentage(uint256,uint256)\":{\"details\":\"Not tied to any particular pool; this just performs the low-level \\\"additive fee\\\" calculation. Note that pool creator fees are calculated based on creatorAndLpFees, and not in totalFees. Since aggregate fees are stored in the Vault with 24-bit precision, this will truncate any values that require greater precision. It is expected that pool creators will negotiate with the DAO and agree on reasonable values for these fee components, but the truncation ensures it will not revert for any valid set of fee percentages. See example below: tokenOutAmount = 10000; poolSwapFeePct = 10%; protocolFeePct = 40%; creatorFeePct = 60% totalFees = tokenOutAmount * poolSwapFeePct = 10000 * 10% = 1000 protocolFees = totalFees * protocolFeePct = 1000 * 40% = 400 creatorAndLpFees = totalFees - protocolFees = 1000 - 400 = 600 creatorFees = creatorAndLpFees * creatorFeePct = 600 * 60% = 360 lpFees (will stay in the pool) = creatorAndLpFees - creatorFees = 600 - 360 = 240\",\"params\":{\"poolCreatorFeePercentage\":\"The pool creator portion of the aggregate fee percentage\",\"protocolFeePercentage\":\"The protocol portion of the aggregate fee percentage\"},\"returns\":{\"aggregateFeePercentage\":\"The computed aggregate percentage\"}},\"getGlobalProtocolSwapFeePercentage()\":{\"returns\":{\"protocolSwapFeePercentage\":\"The global protocol swap fee percentage\"}},\"getGlobalProtocolYieldFeePercentage()\":{\"returns\":{\"protocolYieldFeePercentage\":\"The global protocol yield fee percentage\"}},\"getPoolCreatorFeeAmounts(address)\":{\"details\":\"Includes both swap and yield fees.\",\"params\":{\"pool\":\"The address of the pool on which fees were collected\"},\"returns\":{\"feeAmounts\":\"The total amounts of each token available for withdrawal, sorted in token registration order\"}},\"getPoolCreatorSwapFeePercentage(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"poolCreatorSwapFeePercentage The pool creator swap fee component of the aggregate swap fee\"}},\"getPoolCreatorYieldFeePercentage(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"poolCreatorSwapFeePercentage The pool creator yield fee component of the aggregate yield fee\"}},\"getPoolProtocolSwapFeeInfo(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"isOverride\":\"True if the protocol fee has been overridden\",\"protocolSwapFeePercentage\":\"The protocol swap fee percentage for the given pool\"}},\"getPoolProtocolYieldFeeInfo(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"isOverride\":\"True if the protocol fee has been overridden\",\"protocolYieldFeePercentage\":\"The protocol yield fee percentage for the given pool\"}},\"getProtocolFeeAmounts(address)\":{\"details\":\"Includes both swap and yield fees.\",\"params\":{\"pool\":\"The address of the pool on which fees were collected\"},\"returns\":{\"feeAmounts\":\"The total amounts of each token available for withdrawal, sorted in token registration order\"}},\"isPoolRegistered(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"isRegistered True if the pool configuration has been set (e.g., through `registerPool`)\"}},\"registerPool(address,address,bool)\":{\"details\":\"This must be called from the Vault during pool registration. It will initialize the pool to the global protocol fee percentage values (or 0, if the `protocolFeeExempt` flags is set), and return the initial aggregate fee percentages, based on an initial pool creator fee of 0.\",\"params\":{\"pool\":\"The address of the pool being registered\",\"poolCreator\":\"The address of the pool creator (or 0 if there won't be a pool creator fee)\",\"protocolFeeExempt\":\"If true, the pool is initially exempt from protocol fees\"},\"returns\":{\"aggregateSwapFeePercentage\":\"The initial aggregate swap fee percentage\",\"aggregateYieldFeePercentage\":\"The initial aggregate yield fee percentage\"}},\"setGlobalProtocolSwapFeePercentage(uint256)\":{\"params\":{\"newProtocolSwapFeePercentage\":\"The new protocol swap fee percentage\"}},\"setGlobalProtocolYieldFeePercentage(uint256)\":{\"params\":{\"newProtocolYieldFeePercentage\":\"The new protocol yield fee percentage\"}},\"setPoolCreatorSwapFeePercentage(address,uint256)\":{\"details\":\"Fees are divided between the protocol, pool creator, and LPs. The pool creator percentage is applied to the \\\"net\\\" amount after protocol fees, and divides the remainder between the pool creator and LPs. If the pool creator fee is near 100%, almost none of the fee amount remains in the pool for LPs.\",\"params\":{\"pool\":\"The address of the pool for which the pool creator fee will be changed\",\"poolCreatorSwapFeePercentage\":\"The new pool creator swap fee percentage to apply to the pool\"}},\"setPoolCreatorYieldFeePercentage(address,uint256)\":{\"details\":\"Fees are divided between the protocol, pool creator, and LPs. The pool creator percentage is applied to the \\\"net\\\" amount after protocol fees, and divides the remainder between the pool creator and LPs. If the pool creator fee is near 100%, almost none of the fee amount remains in the pool for LPs.\",\"params\":{\"pool\":\"The address of the pool for which the pool creator fee will be changed\",\"poolCreatorYieldFeePercentage\":\"The new pool creator yield fee percentage to apply to the pool\"}},\"setProtocolSwapFeePercentage(address,uint256)\":{\"params\":{\"newProtocolSwapFeePercentage\":\"The new protocol swap fee percentage for the pool\",\"pool\":\"The address of the pool for which we are setting the protocol swap fee\"}},\"setProtocolYieldFeePercentage(address,uint256)\":{\"params\":{\"newProtocolYieldFeePercentage\":\"The new protocol yield fee percentage for the pool\",\"pool\":\"The address of the pool for which we are setting the protocol yield fee\"}},\"updateProtocolSwapFeePercentage(address)\":{\"details\":\"This is a permissionless call, and will set the pool's fee to the current global fee, if it is different from the current value, and the fee is not controlled by governance (i.e., has never been overridden).\",\"params\":{\"pool\":\"The pool for which we are setting the protocol swap fee\"}},\"updateProtocolYieldFeePercentage(address)\":{\"details\":\"This is a permissionless call, and will set the pool's fee to the current global fee, if it is different from the current value, and the fee is not controlled by governance (i.e., has never been overridden).\",\"params\":{\"pool\":\"The pool for which we are setting the protocol yield fee\"}},\"vault()\":{\"returns\":{\"_0\":\"vault The Vault address\"}},\"withdrawPoolCreatorFees(address)\":{\"details\":\"Sends swap and yield pool creator fees to the registered poolCreator. Since this is a known and immutable value, this function is permissionless.\",\"params\":{\"pool\":\"The pool on which fees were collected\"}},\"withdrawPoolCreatorFees(address,address)\":{\"details\":\"Sends swap and yield pool creator fees to the recipient.\",\"params\":{\"pool\":\"The pool on which fees were collected\",\"recipient\":\"Address to send the tokens\"}},\"withdrawProtocolFees(address,address)\":{\"details\":\"Sends swap and yield protocol fees to the recipient.\",\"params\":{\"pool\":\"The pool on which fees were collected\",\"recipient\":\"Address to send the tokens\"}},\"withdrawProtocolFeesForToken(address,address,address)\":{\"details\":\"Sends swap and yield protocol fees to the recipient.\",\"params\":{\"pool\":\"The pool on which fees were collected\",\"recipient\":\"Address to send the tokens\",\"token\":\"Token to withdraw\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CallerIsNotPoolCreator(address,address)\":[{\"notice\":\"Error raised if the wrong account attempts to withdraw pool creator fees.\"}],\"PoolCreatorFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the pool creator swap or yield fee percentage exceeds the maximum allowed value.\"}],\"PoolCreatorNotRegistered(address)\":[{\"notice\":\"Error raised if there is no pool creator on a withdrawal attempt from the given pool.\"}],\"ProtocolSwapFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the protocol swap fee percentage exceeds the maximum allowed value.\"}],\"ProtocolYieldFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the protocol yield fee percentage exceeds the maximum allowed value.\"}]},\"events\":{\"GlobalProtocolSwapFeePercentageChanged(uint256)\":{\"notice\":\"Emitted when the protocol swap fee percentage is updated.\"},\"GlobalProtocolYieldFeePercentageChanged(uint256)\":{\"notice\":\"Emitted when the protocol yield fee percentage is updated.\"},\"InitialPoolAggregateSwapFeePercentage(address,uint256,bool)\":{\"notice\":\"Emitted on pool registration with the initial aggregate swap fee percentage, for off-chain processes.\"},\"InitialPoolAggregateYieldFeePercentage(address,uint256,bool)\":{\"notice\":\"Emitted on pool registration with the initial aggregate yield fee percentage, for off-chain processes.\"},\"PoolCreatorFeesWithdrawn(address,address,address,uint256)\":{\"notice\":\"Logs the withdrawal of pool creator fees in a specific token and amount.\"},\"PoolCreatorSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the pool creator swap fee percentage of a pool is updated.\"},\"PoolCreatorYieldFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the pool creator yield fee percentage of a pool is updated.\"},\"PoolRegisteredWithFeeController(address,address,bool)\":{\"notice\":\"Emitted as a convenience during pool registration, more focused than the Vault's `PoolRegistered` event.\"},\"ProtocolFeesWithdrawn(address,address,address,uint256)\":{\"notice\":\"Logs the withdrawal of protocol fees in a specific token and amount.\"},\"ProtocolSwapFeeCollected(address,address,uint256)\":{\"notice\":\"Logs the collection of protocol swap fees in a specific token and amount.\"},\"ProtocolSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the protocol swap fee percentage is updated for a specific pool.\"},\"ProtocolYieldFeeCollected(address,address,uint256)\":{\"notice\":\"Logs the collection of protocol yield fees in a specific token and amount.\"},\"ProtocolYieldFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the protocol yield fee percentage is updated for a specific pool.\"}},\"kind\":\"user\",\"methods\":{\"collectAggregateFees(address)\":{\"notice\":\"Collects aggregate fees from the Vault for a given pool.\"},\"computeAggregateFeePercentage(uint256,uint256)\":{\"notice\":\"Returns a calculated aggregate percentage from protocol and pool creator fee percentages.\"},\"getGlobalProtocolSwapFeePercentage()\":{\"notice\":\"Getter for the current global protocol swap fee.\"},\"getGlobalProtocolYieldFeePercentage()\":{\"notice\":\"Getter for the current global protocol yield fee.\"},\"getPoolCreatorFeeAmounts(address)\":{\"notice\":\"Returns the amount of each pool token allocated to the pool creator for withdrawal.\"},\"getPoolCreatorSwapFeePercentage(address)\":{\"notice\":\"Getter for the current pool creator swap fee percentage for a given pool.\"},\"getPoolCreatorYieldFeePercentage(address)\":{\"notice\":\"Getter for the current pool creator yield fee percentage for a given pool.\"},\"getPoolProtocolSwapFeeInfo(address)\":{\"notice\":\"Getter for the current protocol swap fee for a given pool.\"},\"getPoolProtocolYieldFeeInfo(address)\":{\"notice\":\"Getter for the current protocol yield fee for a given pool.\"},\"getProtocolFeeAmounts(address)\":{\"notice\":\"Returns the amount of each pool token allocated to the protocol for withdrawal.\"},\"isPoolRegistered(address)\":{\"notice\":\"Getter for pool registration flag.\"},\"registerPool(address,address,bool)\":{\"notice\":\"Add pool-specific entries to the protocol swap and yield percentages.\"},\"setGlobalProtocolSwapFeePercentage(uint256)\":{\"notice\":\"Set the global protocol swap fee percentage, used by standard pools.\"},\"setGlobalProtocolYieldFeePercentage(uint256)\":{\"notice\":\"Set the global protocol yield fee percentage, used by standard pools.\"},\"setPoolCreatorSwapFeePercentage(address,uint256)\":{\"notice\":\"Assigns a new pool creator swap fee percentage to the specified pool.\"},\"setPoolCreatorYieldFeePercentage(address,uint256)\":{\"notice\":\"Assigns a new pool creator yield fee percentage to the specified pool.\"},\"setProtocolSwapFeePercentage(address,uint256)\":{\"notice\":\"Override the protocol swap fee percentage for a specific pool.\"},\"setProtocolYieldFeePercentage(address,uint256)\":{\"notice\":\"Override the protocol yield fee percentage for a specific pool.\"},\"updateProtocolSwapFeePercentage(address)\":{\"notice\":\"Override the protocol swap fee percentage for a specific pool.\"},\"updateProtocolYieldFeePercentage(address)\":{\"notice\":\"Override the protocol yield fee percentage for a specific pool.\"},\"vault()\":{\"notice\":\"Get the address of the main Vault contract.\"},\"withdrawPoolCreatorFees(address)\":{\"notice\":\"Withdraw collected pool creator fees for a given pool.\"},\"withdrawPoolCreatorFees(address,address)\":{\"notice\":\"Withdraw collected pool creator fees for a given pool. This is a permissioned function.\"},\"withdrawProtocolFees(address,address)\":{\"notice\":\"Withdraw collected protocol fees for a given pool (all tokens). This is a permissioned function.\"},\"withdrawProtocolFeesForToken(address,address,address)\":{\"notice\":\"Withdraw collected protocol fees for a given pool and a given token. This is a permissioned function.\"}},\"notice\":\"Contract that handles protocol and pool creator fees for the Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IProtocolFeeController.sol\":\"IProtocolFeeController\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IRateProvider.sol":{"IRateProvider":{"abi":[{"inputs":[],"name":"getRate","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRate()":"679aefce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRate()\":{\"details\":\"The meaning of this rate depends on the context. Note that there may be an error associated with a token rate, and the caller might require a certain rounding direction to ensure correctness. This (legacy) interface does not take a rounding direction or return an error, so great care must be taken when interpreting and using rates in downstream computations.\",\"returns\":{\"rate\":\"The current token rate\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRate()\":{\"notice\":\"An 18 decimal fixed point number representing the exchange rate of one token to another related token.\"}},\"notice\":\"General interface for token exchange rates.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IRateProvider.sol\":\"IRateProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IRouter.sol":{"IRouter":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquidityCustom","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquidityUnbalanced","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"donate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"initialize","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquidityCustom","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquidityUnbalanced","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquidityCustom","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"}],"name":"queryRemoveLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquiditySingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountIn","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"querySwapSingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"querySwapSingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquidityCustom","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"}],"name":"removeLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquiditySingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"swapSingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"swapSingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addLiquidityCustom(address,uint256[],uint256,bool,bytes)":"0ca078ec","addLiquidityProportional(address,uint256[],uint256,bool,bytes)":"724dba33","addLiquiditySingleTokenExactOut(address,address,uint256,uint256,bool,bytes)":"72657d17","addLiquidityUnbalanced(address,uint256[],uint256,bool,bytes)":"c08bc851","donate(address,uint256[],bool,bytes)":"bf6ee3fd","initialize(address,address[],uint256[],uint256,bool,bytes)":"026b3d95","queryAddLiquidityCustom(address,uint256[],uint256,address,bytes)":"452db952","queryAddLiquidityProportional(address,uint256,address,bytes)":"9de90518","queryAddLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)":"1d56798d","queryAddLiquidityUnbalanced(address,uint256[],address,bytes)":"da001f7d","queryRemoveLiquidityCustom(address,uint256,uint256[],address,bytes)":"c330c7be","queryRemoveLiquidityProportional(address,uint256,address,bytes)":"0f710888","queryRemoveLiquidityRecovery(address,uint256)":"b037ed36","queryRemoveLiquiditySingleTokenExactIn(address,uint256,address,address,bytes)":"23b39241","queryRemoveLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)":"53d0bb98","querySwapSingleTokenExactIn(address,address,address,uint256,address,bytes)":"3ebc54e5","querySwapSingleTokenExactOut(address,address,address,uint256,address,bytes)":"175d4408","removeLiquidityCustom(address,uint256,uint256[],bool,bytes)":"82bf2b24","removeLiquidityProportional(address,uint256,uint256[],bool,bytes)":"51682750","removeLiquidityRecovery(address,uint256,uint256[])":"08c04793","removeLiquiditySingleTokenExactIn(address,uint256,address,uint256,bool,bytes)":"ecb2182c","removeLiquiditySingleTokenExactOut(address,uint256,address,uint256,bool,bytes)":"e7326def","swapSingleTokenExactIn(address,address,address,uint256,uint256,uint256,bool,bytes)":"750283bc","swapSingleTokenExactOut(address,address,address,uint256,uint256,uint256,bool,bytes)":"94e86ef8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquidityUnbalanced\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquidityUnbalanced\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"}],\"name\":\"queryRemoveLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquiditySingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"querySwapSingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"querySwapSingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"}],\"name\":\"removeLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquiditySingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"swapSingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"swapSingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidityCustom(address,uint256[],uint256,bool,bytes)\":{\"details\":\"The given maximum and minimum amounts given may be interpreted as exact depending on the pool type. In any case the caller can expect them to be hard boundaries for the request.\",\"params\":{\"maxAmountsIn\":\"Maximum amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsIn\":\"Actual amounts of tokens added, sorted in token registration order\",\"bptAmountOut\":\"Actual amount of pool tokens received\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"addLiquidityProportional(address,uint256[],uint256,bool,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Exact amount of pool tokens to be received\",\"maxAmountsIn\":\"Maximum amounts of tokens to be added, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsIn\":\"Actual amounts of tokens added, sorted in token registration order\"}},\"addLiquiditySingleTokenExactOut(address,address,uint256,uint256,bool,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Exact amount of pool tokens to be received\",\"maxAmountIn\":\"Maximum amount of tokens to be added\",\"pool\":\"Address of the liquidity pool\",\"tokenIn\":\"Token used to add liquidity\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountIn\":\"Actual amount of tokens added\"}},\"addLiquidityUnbalanced(address,uint256[],uint256,bool,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"bptAmountOut\":\"Actual amount of pool tokens received\"}},\"donate(address,uint256[],bool,bytes)\":{\"details\":\"To support donation, the pool config `enableDonation` flag must be set to true.\",\"params\":{\"amountsIn\":\"Amounts of tokens to be donated, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to donate liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"}},\"initialize(address,address[],uint256[],uint256,bool,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"tokens\":\"Pool tokens, in token registration order\",\"userData\":\"Additional (optional) data sent with the request to add initial liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"bptAmountOut\":\"Actual amount of pool tokens minted in exchange for initial liquidity\"}},\"queryAddLiquidityCustom(address,uint256[],uint256,address,bytes)\":{\"params\":{\"maxAmountsIn\":\"Maximum amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Expected minimum amount of pool tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsIn\":\"Expected amounts of tokens to add, sorted in token registration order\",\"bptAmountOut\":\"Expected amount of pool tokens to receive\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"queryAddLiquidityProportional(address,uint256,address,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Exact amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsIn\":\"Expected amounts of tokens to add, sorted in token registration order\"}},\"queryAddLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Expected exact amount of pool tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenIn\":\"Token used to add liquidity\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountIn\":\"Expected amount of tokens to add\"}},\"queryAddLiquidityUnbalanced(address,uint256[],address,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of tokens to be added, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"bptAmountOut\":\"Expected amount of pool tokens to receive\"}},\"queryRemoveLiquidityCustom(address,uint256,uint256[],address,bytes)\":{\"params\":{\"maxBptAmountIn\":\"Maximum amount of pool tokens provided\",\"minAmountsOut\":\"Expected minimum amounts of tokens to receive, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsOut\":\"Expected amounts of tokens to receive, sorted in token registration order\",\"bptAmountIn\":\"Expected amount of pool tokens to burn\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"queryRemoveLiquidityProportional(address,uint256,address,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided for the query\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsOut\":\"Expected amounts of tokens to receive, sorted in token registration order\"}},\"queryRemoveLiquidityRecovery(address,uint256)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided for the query\",\"pool\":\"Address of the liquidity pool\"},\"returns\":{\"amountsOut\":\"Expected amounts of tokens to receive, sorted in token registration order\"}},\"queryRemoveLiquiditySingleTokenExactIn(address,uint256,address,address,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided for the query\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountOut\":\"Expected amount of tokens to receive\"}},\"queryRemoveLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"params\":{\"exactAmountOut\":\"Expected exact amount of tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"bptAmountIn\":\"Expected amount of pool tokens to burn\"}},\"querySwapSingleTokenExactIn(address,address,address,uint256,address,bytes)\":{\"params\":{\"exactAmountIn\":\"Exact amounts of input tokens to send\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountOut\":\"Calculated amount of output tokens to be received in exchange for the given input tokens\"}},\"querySwapSingleTokenExactOut(address,address,address,uint256,address,bytes)\":{\"params\":{\"exactAmountOut\":\"Exact amounts of input tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountIn\":\"Calculated amount of input tokens to be sent in exchange for the requested output tokens\"}},\"removeLiquidityCustom(address,uint256,uint256[],bool,bytes)\":{\"details\":\"The given maximum and minimum amounts given may be interpreted as exact depending on the pool type. In any case the caller can expect them to be hard boundaries for the request.\",\"params\":{\"maxBptAmountIn\":\"Maximum amount of pool tokens provided\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsOut\":\"Actual amounts of tokens received, sorted in token registration order\",\"bptAmountIn\":\"Actual amount of pool tokens burned\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"removeLiquidityProportional(address,uint256,uint256[],bool,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsOut\":\"Actual amounts of tokens received, sorted in token registration order\"}},\"removeLiquidityRecovery(address,uint256,uint256[])\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\"},\"returns\":{\"amountsOut\":\"Actual amounts of tokens received, sorted in token registration order\"}},\"removeLiquiditySingleTokenExactIn(address,uint256,address,uint256,bool,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided\",\"minAmountOut\":\"Minimum amount of tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountOut\":\"Actual amount of tokens received\"}},\"removeLiquiditySingleTokenExactOut(address,uint256,address,uint256,bool,bytes)\":{\"params\":{\"exactAmountOut\":\"Exact amount of tokens to be received\",\"maxBptAmountIn\":\"Maximum amount of pool tokens provided\",\"pool\":\"Address of the liquidity pool\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"bptAmountIn\":\"Actual amount of pool tokens burned\"}},\"swapSingleTokenExactIn(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"params\":{\"deadline\":\"Deadline for the swap, after which it will revert\",\"exactAmountIn\":\"Exact amounts of input tokens to send\",\"minAmountOut\":\"Minimum amount of tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the swap request\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountOut\":\"Calculated amount of output tokens to be received in exchange for the given input tokens\"}},\"swapSingleTokenExactOut(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"params\":{\"deadline\":\"Deadline for the swap, after which it will revert\",\"exactAmountOut\":\"Exact amounts of input tokens to receive\",\"maxAmountIn\":\"Maximum amount of tokens to be sent\",\"pool\":\"Address of the liquidity pool\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the swap request\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountIn\":\"Calculated amount of input tokens to be sent in exchange for the requested output tokens\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidityCustom(address,uint256[],uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool with a custom request.\"},\"addLiquidityProportional(address,uint256[],uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool with proportional token amounts, receiving an exact amount of pool tokens.\"},\"addLiquiditySingleTokenExactOut(address,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool in a single token, receiving an exact amount of pool tokens.\"},\"addLiquidityUnbalanced(address,uint256[],uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool with arbitrary token amounts.\"},\"donate(address,uint256[],bool,bytes)\":{\"notice\":\"Adds liquidity to a pool by donating the amounts in (no BPT out).\"},\"initialize(address,address[],uint256[],uint256,bool,bytes)\":{\"notice\":\"Initialize a liquidity pool.\"},\"queryAddLiquidityCustom(address,uint256[],uint256,address,bytes)\":{\"notice\":\"Queries an `addLiquidityCustom` operation without actually executing it.\"},\"queryAddLiquidityProportional(address,uint256,address,bytes)\":{\"notice\":\"Queries an `addLiquidityProportional` operation without actually executing it.\"},\"queryAddLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"notice\":\"Queries an `addLiquiditySingleTokenExactOut` operation without actually executing it.\"},\"queryAddLiquidityUnbalanced(address,uint256[],address,bytes)\":{\"notice\":\"Queries an `addLiquidityUnbalanced` operation without actually executing it.\"},\"queryRemoveLiquidityCustom(address,uint256,uint256[],address,bytes)\":{\"notice\":\"Queries a `removeLiquidityCustom` operation without actually executing it.\"},\"queryRemoveLiquidityProportional(address,uint256,address,bytes)\":{\"notice\":\"Queries a `removeLiquidityProportional` operation without actually executing it.\"},\"queryRemoveLiquidityRecovery(address,uint256)\":{\"notice\":\"Queries a `removeLiquidityRecovery` operation without actually executing it.\"},\"queryRemoveLiquiditySingleTokenExactIn(address,uint256,address,address,bytes)\":{\"notice\":\"Queries a `removeLiquiditySingleTokenExactIn` operation without actually executing it.\"},\"queryRemoveLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"notice\":\"Queries a `removeLiquiditySingleTokenExactOut` operation without actually executing it.\"},\"querySwapSingleTokenExactIn(address,address,address,uint256,address,bytes)\":{\"notice\":\"Queries a swap operation specifying an exact input token amount without actually executing it.\"},\"querySwapSingleTokenExactOut(address,address,address,uint256,address,bytes)\":{\"notice\":\"Queries a swap operation specifying an exact output token amount without actually executing it.\"},\"removeLiquidityCustom(address,uint256,uint256[],bool,bytes)\":{\"notice\":\"Removes liquidity from a pool with a custom request.\"},\"removeLiquidityProportional(address,uint256,uint256[],bool,bytes)\":{\"notice\":\"Removes liquidity with proportional token amounts from a pool, burning an exact pool token amount.\"},\"removeLiquidityRecovery(address,uint256,uint256[])\":{\"notice\":\"Removes liquidity proportionally, burning an exact pool token amount. Only available in Recovery Mode.\"},\"removeLiquiditySingleTokenExactIn(address,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Removes liquidity from a pool via a single token, burning an exact pool token amount.\"},\"removeLiquiditySingleTokenExactOut(address,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Removes liquidity from a pool via a single token, specifying the exact amount of tokens to receive.\"},\"swapSingleTokenExactIn(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"notice\":\"Executes a swap operation specifying an exact input token amount.\"},\"swapSingleTokenExactOut(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"notice\":\"Executes a swap operation specifying an exact output token amount.\"}},\"notice\":\"User-friendly interface to basic Vault operations: swap, add/remove liquidity, and associated queries.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IRouter.sol\":{\"keccak256\":\"0x39a5cd3ee5c0bab644f068ad8ba617a0cf71a91610693b1c93c9536464151ee3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a5f61af5cda44d8ef95e610c0b418f2cfb984e9c47a58fb1fa8c8bc949def75\",\"dweb:/ipfs/Qmby1D2D5Ym44jgBTTM8eTGnmNGCCKrb8ujpkhVPE6C6Cr\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IRouterCommon.sol":{"IRouterCommon":{"abi":[{"inputs":[],"name":"getPermit2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeth","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct IRouterCommon.PermitApproval[]","name":"permitBatch","type":"tuple[]"},{"internalType":"bytes[]","name":"permitSignatures","type":"bytes[]"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permit2Batch","type":"tuple"},{"internalType":"bytes","name":"permit2Signature","type":"bytes"},{"internalType":"bytes[]","name":"multicallData","type":"bytes[]"}],"name":"permitBatchAndCall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPermit2()":"1bbf2e23","getWeth()":"107c279f","multicall(bytes[])":"ac9650d8","permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])":"19c6989f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPermit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouterCommon.PermitApproval[]\",\"name\":\"permitBatch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"permitSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permit2Batch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"permit2Signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"multicallData\",\"type\":\"bytes[]\"}],\"name\":\"permitBatchAndCall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"params\":{\"data\":\"Encoded function calls to be executed in the batch.\"},\"returns\":{\"results\":\"Array of bytes arrays, each representing the return data from each function call executed.\"}},\"permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])\":{\"params\":{\"multicallData\":\"An array of bytes arrays, each representing an encoded function call on this contract\",\"permit2Batch\":\"A batch of permit2 approvals\",\"permit2Signature\":\"A permit2 signature for the batch approval\",\"permitBatch\":\"An array of `PermitApproval` structs, each representing an ERC20 permit request\",\"permitSignatures\":\"An array of bytes, corresponding to the permit request signature in `permitBatch`\"},\"returns\":{\"results\":\"Array of bytes arrays, each representing the return data from each function call executed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPermit2()\":{\"notice\":\"Returns Permit2 contract address.\"},\"getWeth()\":{\"notice\":\"Returns WETH contract address.\"},\"multicall(bytes[])\":{\"notice\":\"Executes a batch of function calls on this contract.\"},\"permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])\":{\"notice\":\"Permits multiple allowances and executes a batch of function calls on this contract.\"}},\"notice\":\"Interface for functions shared between the `Router` and `BatchRouter`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IRouterCommon.sol\":\"IRouterCommon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"@uniswap/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IRouterCommon.sol\":{\"keccak256\":\"0x3f5f72378930991c88119acd2f4c36145f285d4347d4a29688648d55d83c0a99\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://191307c8d8cdca0a738b9a5633b2fb3f175ef72aaecfb96130e72386ebdfc123\",\"dweb:/ipfs/QmWs8jjfUDQHixjSL7GB7ZbynRbd1wbRKBEBbw5jSP4w5x\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0x75d5964b2f92dba9b9254e0052de28a9378e6759b1b28ccbb51db0bc80024176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec9c862929ccff2be994d0296c0a4de3ddc19bb5a7aae3d4df0887dc7b29c8e\",\"dweb:/ipfs/QmSNr2fkNM2VyAo3B1DG1cuRh41t4A6mJZqeUu6vvYb97G\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/ISenderGuard.sol":{"ISenderGuard":{"abi":[{"inputs":[],"name":"EthTransfer","type":"error"},{"inputs":[],"name":"SwapDeadline","type":"error"},{"inputs":[],"name":"getSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getSender()":"5e01eb5a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EthTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSender()\":{\"returns\":{\"sender\":\"The address of the sender\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"EthTransfer()\":[{\"notice\":\"Incoming ETH transfer from an address that is not WETH.\"}],\"SwapDeadline()\":[{\"notice\":\"The swap transaction was not validated before the specified deadline timestamp.\"}]},\"kind\":\"user\",\"methods\":{\"getSender()\":{\"notice\":\"Get the first sender which initialized the call to Router.\"}},\"notice\":\"Interface for functions shared across all trusted routers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ISenderGuard.sol\":\"ISenderGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ISenderGuard.sol\":{\"keccak256\":\"0x2ec1ecf5c578aab7502f6985a03fbb79998218bdef819845d70d28a6994cff5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a32637a45f19c29797db11eb25eb9bfda73302f280a64a9d9a4ab123db1b8e6f\",\"dweb:/ipfs/QmXGimviZ4Mr6kwgqkCwpHH5uGHVEjAcCRNvAwvoVYKi6f\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVault.sol":{"IVault":{"abi":[{"inputs":[],"name":"AfterAddLiquidityHookFailed","type":"error"},{"inputs":[],"name":"AfterInitializeHookFailed","type":"error"},{"inputs":[],"name":"AfterRemoveLiquidityHookFailed","type":"error"},{"inputs":[],"name":"AfterSwapHookFailed","type":"error"},{"inputs":[],"name":"AmountGivenZero","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"name":"AmountInAboveMax","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"AmountOutBelowMin","type":"error"},{"inputs":[],"name":"BalanceNotSettled","type":"error"},{"inputs":[],"name":"BeforeAddLiquidityHookFailed","type":"error"},{"inputs":[],"name":"BeforeInitializeHookFailed","type":"error"},{"inputs":[],"name":"BeforeRemoveLiquidityHookFailed","type":"error"},{"inputs":[],"name":"BeforeSwapHookFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"name":"BptAmountInAboveMax","type":"error"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"BptAmountOutBelowMin","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"BufferAlreadyInitialized","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"BufferNotInitialized","type":"error"},{"inputs":[],"name":"BufferSharesInvalidOwner","type":"error"},{"inputs":[],"name":"BufferSharesInvalidReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"BufferTotalSupplyTooLow","type":"error"},{"inputs":[],"name":"CannotReceiveEth","type":"error"},{"inputs":[],"name":"CannotSwapSameToken","type":"error"},{"inputs":[],"name":"DoesNotSupportAddLiquidityCustom","type":"error"},{"inputs":[],"name":"DoesNotSupportDonation","type":"error"},{"inputs":[],"name":"DoesNotSupportRemoveLiquidityCustom","type":"error"},{"inputs":[],"name":"DoesNotSupportUnbalancedLiquidity","type":"error"},{"inputs":[],"name":"DynamicSwapFeeHookFailed","type":"error"},{"inputs":[],"name":"FeePrecisionTooHigh","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"name":"HookAdjustedAmountInAboveMax","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"HookAdjustedAmountOutBelowMin","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"HookAdjustedSwapLimit","type":"error"},{"inputs":[{"internalType":"address","name":"poolHooksContract","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"poolFactory","type":"address"}],"name":"HookRegistrationFailed","type":"error"},{"inputs":[],"name":"InvalidAddLiquidityKind","type":"error"},{"inputs":[],"name":"InvalidRemoveLiquidityKind","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"InvalidTokenConfiguration","type":"error"},{"inputs":[],"name":"InvalidTokenDecimals","type":"error"},{"inputs":[],"name":"InvalidTokenType","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"InvalidUnderlyingToken","type":"error"},{"inputs":[{"internalType":"uint256","name":"issuedShares","type":"uint256"},{"internalType":"uint256","name":"minIssuedShares","type":"uint256"}],"name":"IssuedSharesBelowMin","type":"error"},{"inputs":[],"name":"MaxTokens","type":"error"},{"inputs":[],"name":"MinTokens","type":"error"},{"inputs":[],"name":"NotEnoughBufferShares","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedUnderlyingAmount","type":"uint256"},{"internalType":"uint256","name":"actualUnderlyingAmount","type":"uint256"}],"name":"NotEnoughUnderlying","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedWrappedAmount","type":"uint256"},{"internalType":"uint256","name":"actualWrappedAmount","type":"uint256"}],"name":"NotEnoughWrapped","type":"error"},{"inputs":[],"name":"NotVaultDelegateCall","type":"error"},{"inputs":[],"name":"PauseBufferPeriodDurationTooLarge","type":"error"},{"inputs":[],"name":"PercentageAboveMax","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolAlreadyInitialized","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolAlreadyRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolInRecoveryMode","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotInRecoveryMode","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotInitialized","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotPaused","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolPauseWindowExpired","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolPaused","type":"error"},{"inputs":[],"name":"ProtocolFeesExceedTotalCollected","type":"error"},{"inputs":[],"name":"QueriesDisabled","type":"error"},{"inputs":[],"name":"QueriesDisabledPermanently","type":"error"},{"inputs":[],"name":"QuoteResultSpoofed","type":"error"},{"inputs":[],"name":"RouterNotTrusted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderIsNotVault","type":"error"},{"inputs":[],"name":"SenderNotAllowed","type":"error"},{"inputs":[],"name":"SwapFeePercentageTooHigh","type":"error"},{"inputs":[],"name":"SwapFeePercentageTooLow","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"SwapLimit","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"TokenAlreadyRegistered","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"TokenNotRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"expectedToken","type":"address"},{"internalType":"address","name":"actualToken","type":"address"}],"name":"TokensMismatch","type":"error"},{"inputs":[],"name":"TradeAmountTooSmall","type":"error"},{"inputs":[],"name":"VaultBuffersArePaused","type":"error"},{"inputs":[],"name":"VaultIsNotUnlocked","type":"error"},{"inputs":[],"name":"VaultNotPaused","type":"error"},{"inputs":[],"name":"VaultPauseWindowDurationTooLarge","type":"error"},{"inputs":[],"name":"VaultPauseWindowExpired","type":"error"},{"inputs":[],"name":"VaultPaused","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"WrapAmountTooSmall","type":"error"},{"inputs":[],"name":"WrongProtocolFeeControllerDeployment","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"underlyingToken","type":"address"}],"name":"WrongUnderlyingToken","type":"error"},{"inputs":[],"name":"WrongVaultAdminDeployment","type":"error"},{"inputs":[],"name":"WrongVaultExtensionDeployment","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"}],"name":"AggregateSwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"}],"name":"AggregateYieldFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"burnedShares","type":"uint256"}],"name":"BufferSharesBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"issuedShares","type":"uint256"}],"name":"BufferSharesMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":true,"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"amountsAddedRaw","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"swapFeeAmountsRaw","type":"uint256[]"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountUnderlying","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountWrapped","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"LiquidityAddedToBuffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":true,"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"amountsRemovedRaw","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"swapFeeAmountsRaw","type":"uint256[]"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountUnderlying","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountWrapped","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"LiquidityRemovedFromBuffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"}],"name":"PoolInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PoolPausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"bool","name":"recoveryMode","type":"bool"}],"name":"PoolRecoveryModeStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"factory","type":"address"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"indexed":false,"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"indexed":false,"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple"},{"components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}],"indexed":false,"internalType":"struct HooksConfig","name":"hooksConfig","type":"tuple"},{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"indexed":false,"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address"}],"name":"ProtocolFeeControllerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swapFeeAmount","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"burnedShares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"withdrawnUnderlying","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"Unwrap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"bytes32","name":"eventKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"eventData","type":"bytes"}],"name":"VaultAuxiliary","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"VaultBuffersPausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"VaultPausedStateChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"VaultQueriesDisabled","type":"event"},{"anonymous":false,"inputs":[],"name":"VaultQueriesEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"depositedUnderlying","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mintedShares","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"Wrap","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct AddLiquidityParams","name":"params","type":"tuple"}],"name":"addLiquidity","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"maxAmountUnderlyingInRaw","type":"uint256"},{"internalType":"uint256","name":"maxAmountWrappedInRaw","type":"uint256"},{"internalType":"uint256","name":"exactSharesToIssue","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"name":"addLiquidityToBuffer","outputs":[{"internalType":"uint256","name":"amountUnderlyingRaw","type":"uint256"},{"internalType":"uint256","name":"amountWrappedRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"tokenAllowance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"areBuffersPaused","outputs":[{"internalType":"bool","name":"buffersPaused","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"tokenBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"collectAggregateFees","outputs":[{"internalType":"uint256[]","name":"swapFeeAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"yieldFeeAmounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct PoolSwapParams","name":"swapParams","type":"tuple"}],"name":"computeDynamicSwapFeePercentage","outputs":[{"internalType":"uint256","name":"dynamicSwapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"disableQuery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disableQueryPermanently","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"disableRecoveryMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"eventKey","type":"bytes32"},{"internalType":"bytes","name":"eventData","type":"bytes"}],"name":"emitAuxiliaryEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enableQuery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"enableRecoveryMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"enum WrappingDirection","name":"direction","type":"uint8"},{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"}],"internalType":"struct BufferWrapOrUnwrapParams","name":"params","type":"tuple"}],"name":"erc4626BufferWrapOrUnwrap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getAddLiquidityCalledFlag","outputs":[{"internalType":"bool","name":"liquidityAdded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getAggregateSwapFeeAmount","outputs":[{"internalType":"uint256","name":"swapFeeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getAggregateYieldFeeAmount","outputs":[{"internalType":"uint256","name":"yieldFeeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"authorizer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getBptRate","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getBufferAsset","outputs":[{"internalType":"address","name":"underlyingToken","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getBufferBalance","outputs":[{"internalType":"uint256","name":"underlyingBalanceRaw","type":"uint256"},{"internalType":"uint256","name":"wrappedBalanceRaw","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBufferMinimumTotalSupply","outputs":[{"internalType":"uint256","name":"bufferMinimumTotalSupply","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"liquidityOwner","type":"address"}],"name":"getBufferOwnerShares","outputs":[{"internalType":"uint256","name":"ownerShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBufferPeriodDuration","outputs":[{"internalType":"uint32","name":"bufferPeriodDuration","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBufferPeriodEndTime","outputs":[{"internalType":"uint32","name":"bufferPeriodEndTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getBufferTotalShares","outputs":[{"internalType":"uint256","name":"bufferShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getCurrentLiveBalances","outputs":[{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getERC4626BufferAsset","outputs":[{"internalType":"address","name":"asset","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getHooksConfig","outputs":[{"components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}],"internalType":"struct HooksConfig","name":"hooksConfig","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaximumPoolTokens","outputs":[{"internalType":"uint256","name":"maxTokens","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getMinimumPoolTokens","outputs":[{"internalType":"uint256","name":"minTokens","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getMinimumTradeAmount","outputs":[{"internalType":"uint256","name":"minimumTradeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMinimumWrapAmount","outputs":[{"internalType":"uint256","name":"minimumWrapAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonzeroDeltaCount","outputs":[{"internalType":"uint256","name":"nonzeroDeltaCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPauseWindowEndTime","outputs":[{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolConfig","outputs":[{"components":[{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"},{"internalType":"uint40","name":"tokenDecimalDiffs","type":"uint40"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"isPoolRegistered","type":"bool"},{"internalType":"bool","name":"isPoolInitialized","type":"bool"},{"internalType":"bool","name":"isPoolPaused","type":"bool"},{"internalType":"bool","name":"isPoolInRecoveryMode","type":"bool"}],"internalType":"struct PoolConfig","name":"poolConfig","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolData","outputs":[{"components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]"},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}],"internalType":"struct PoolData","name":"poolData","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolMinimumTotalSupply","outputs":[{"internalType":"uint256","name":"poolMinimumTotalSupply","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolPausedState","outputs":[{"internalType":"bool","name":"poolPaused","type":"bool"},{"internalType":"uint32","name":"poolPauseWindowEndTime","type":"uint32"},{"internalType":"uint32","name":"poolBufferPeriodEndTime","type":"uint32"},{"internalType":"address","name":"pauseManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolRoleAccounts","outputs":[{"components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenCountAndIndexOfToken","outputs":[{"internalType":"uint256","name":"tokenCount","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]"},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"lastBalancesLiveScaled18","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolTokenRates","outputs":[{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeeController","outputs":[{"internalType":"contract IProtocolFeeController","name":"protocolFeeController","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getReservesOf","outputs":[{"internalType":"uint256","name":"reserveAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getStaticSwapFeePercentage","outputs":[{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getTokenDelta","outputs":[{"internalType":"int256","name":"tokenDelta","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultAdmin","outputs":[{"internalType":"address","name":"vaultAdmin","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultExtension","outputs":[{"internalType":"address","name":"vaultExtension","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultPausedState","outputs":[{"internalType":"bool","name":"vaultPaused","type":"bool"},{"internalType":"uint32","name":"vaultPauseWindowEndTime","type":"uint32"},{"internalType":"uint32","name":"vaultBufferPeriodEndTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"initialize","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountUnderlyingRaw","type":"uint256"},{"internalType":"uint256","name":"amountWrappedRaw","type":"uint256"},{"internalType":"uint256","name":"minIssuedShares","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"name":"initializeBuffer","outputs":[{"internalType":"uint256","name":"issuedShares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"isERC4626BufferInitialized","outputs":[{"internalType":"bool","name":"isBufferInitialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolInRecoveryMode","outputs":[{"internalType":"bool","name":"inRecoveryMode","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolInitialized","outputs":[{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolPaused","outputs":[{"internalType":"bool","name":"poolPaused","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolRegistered","outputs":[{"internalType":"bool","name":"registered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isQueryDisabled","outputs":[{"internalType":"bool","name":"queryDisabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isQueryDisabledPermanently","outputs":[{"internalType":"bool","name":"queryDisabledPermanently","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isUnlocked","outputs":[{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isVaultPaused","outputs":[{"internalType":"bool","name":"vaultPaused","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"pausePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseVaultBuffers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"quote","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"quoteAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"protocolFeeExempt","type":"bool"},{"components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple"},{"internalType":"address","name":"poolHooksContract","type":"address"},{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"}],"name":"registerPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct RemoveLiquidityParams","name":"params","type":"tuple"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"sharesToRemove","type":"uint256"},{"internalType":"uint256","name":"minAmountUnderlyingOutRaw","type":"uint256"},{"internalType":"uint256","name":"minAmountWrappedOutRaw","type":"uint256"}],"name":"removeLiquidityFromBuffer","outputs":[{"internalType":"uint256","name":"removedUnderlyingBalanceRaw","type":"uint256"},{"internalType":"uint256","name":"removedWrappedBalanceRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"}],"name":"removeLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sendTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address"}],"name":"setProtocolFeeController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"setStaticSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amountHint","type":"uint256"}],"name":"settle","outputs":[{"internalType":"uint256","name":"credit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct VaultSwapParams","name":"vaultSwapParams","type":"tuple"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"tokenTotalSupply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"unlock","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"unpausePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpauseVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpauseVaultBuffers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newAggregateSwapFeePercentage","type":"uint256"}],"name":"updateAggregateSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newAggregateYieldFeePercentage","type":"uint256"}],"name":"updateAggregateYieldFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addLiquidity((address,address,uint256[],uint256,uint8,bytes))":"4af29ec4","addLiquidityToBuffer(address,uint256,uint256,uint256,address)":"e2a92b1a","allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","areBuffersPaused()":"55cba7fe","balanceOf(address,address)":"f7888aec","collectAggregateFees(address)":"8f4ab9ca","computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))":"4d472bdd","disableQuery()":"de1a36a6","disableQueryPermanently()":"821440f2","disableRecoveryMode(address)":"bffb78b2","emitAuxiliaryEvent(bytes32,bytes)":"c8088247","enableQuery()":"e0d55605","enableRecoveryMode(address)":"dc3f574e","erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))":"43583be5","getActionId(bytes4)":"851c1bb3","getAddLiquidityCalledFlag(address)":"ace9b89b","getAggregateSwapFeeAmount(address,address)":"85e0b999","getAggregateYieldFeeAmount(address,address)":"00fdfa13","getAuthorizer()":"aaabadc5","getBptRate(address)":"4f037ee7","getBufferAsset(address)":"0387587d","getBufferBalance(address)":"4021fe0f","getBufferMinimumTotalSupply()":"26a8a991","getBufferOwnerShares(address,address)":"9385e39a","getBufferPeriodDuration()":"20c1fb7a","getBufferPeriodEndTime()":"cd51c12f","getBufferTotalShares(address)":"f2784e07","getCurrentLiveBalances(address)":"535cfd8a","getERC4626BufferAsset(address)":"4afbaf5a","getHooksConfig(address)":"ce8630d4","getMaximumPoolTokens()":"2e42f4d5","getMinimumPoolTokens()":"a8175b27","getMinimumTradeAmount()":"e2cb0ba0","getMinimumWrapAmount()":"53956aa2","getNonzeroDeltaCount()":"db817187","getPauseWindowEndTime()":"8a8d123a","getPoolConfig(address)":"f29486a1","getPoolData(address)":"13d21cdf","getPoolMinimumTotalSupply()":"d0965a6b","getPoolPausedState(address)":"15e32046","getPoolRoleAccounts(address)":"e9ddeb26","getPoolTokenCountAndIndexOfToken(address,address)":"c9c1661b","getPoolTokenInfo(address)":"67e0e076","getPoolTokenRates(address)":"7e361bde","getPoolTokens(address)":"ca4f2803","getProtocolFeeController()":"85f2dbd4","getReservesOf(address)":"96787092","getStaticSwapFeePercentage(address)":"b45090f9","getTokenDelta(address)":"9e825ff5","getVaultAdmin()":"1ba0ae45","getVaultExtension()":"b9a8effa","getVaultPausedState()":"85c8c015","initialize(address,address,address[],uint256[],uint256,bytes)":"ba8a2be0","initializeBuffer(address,uint256,uint256,uint256,address)":"653eb3b0","isERC4626BufferInitialized(address)":"6844846b","isPoolInRecoveryMode(address)":"be7d628a","isPoolInitialized(address)":"532cec7c","isPoolPaused(address)":"6c9bc732","isPoolRegistered(address)":"c673bdaf","isQueryDisabled()":"b4aef0ab","isQueryDisabledPermanently()":"13ef8a5d","isUnlocked()":"8380edb7","isVaultPaused()":"098401f5","pausePool(address)":"55aca1ec","pauseVault()":"9e0879c2","pauseVaultBuffers()":"e085c5a8","quote(bytes)":"edfa3568","quoteAndRevert(bytes)":"757d64b3","registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))":"eeec802f","removeLiquidity((address,address,uint256,uint256[],uint8,bytes))":"21457897","removeLiquidityFromBuffer(address,uint256,uint256,uint256)":"ebc7955c","removeLiquidityRecovery(address,address,uint256,uint256[])":"a07d6040","sendTo(address,address,uint256)":"ae639329","setAuthorizer(address)":"058a628f","setProtocolFeeController(address)":"2d771389","setStaticSwapFeePercentage(address,uint256)":"d15126ba","settle(address,uint256)":"15afd409","swap((uint8,address,address,address,uint256,uint256,bytes))":"2bfb780c","totalSupply(address)":"e4dc2aa4","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,address,uint256)":"15dacbea","unlock(bytes)":"48c89491","unpausePool(address)":"f21c38cd","unpauseVault()":"0b7562be","unpauseVaultBuffers()":"b9212b49","updateAggregateSwapFeePercentage(address,uint256)":"5e0b06f4","updateAggregateYieldFeePercentage(address,uint256)":"e253670a","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AfterAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountGivenZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"AmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"AmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"BptAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"BptAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"BufferTotalSupplyTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotReceiveEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSwapSameToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportAddLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportDonation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportRemoveLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportUnbalancedLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DynamicSwapFeeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeePrecisionTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedSwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"HookRegistrationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRemoveLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"InvalidUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minIssuedShares\",\"type\":\"uint256\"}],\"name\":\"IssuedSharesBelowMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBufferShares\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedUnderlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUnderlyingAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughUnderlying\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedWrappedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualWrappedAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughWrapped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVaultDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PauseBufferPeriodDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeesExceedTotalCollected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueriesDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueriesDisabledPermanently\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteResultSpoofed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterNotTrusted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"SwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualToken\",\"type\":\"address\"}],\"name\":\"TokensMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultBuffersArePaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultIsNotUnlocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultNotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"WrapAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongProtocolFeeControllerDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"name\":\"WrongUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultAdminDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultExtensionDeployment\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateYieldFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAddedRaw\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsRaw\",\"type\":\"uint256[]\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"LiquidityAddedToBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsRemovedRaw\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsRaw\",\"type\":\"uint256[]\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"LiquidityRemovedFromBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PoolPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"recoveryMode\",\"type\":\"bool\"}],\"name\":\"PoolRecoveryModeStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct HooksConfig\",\"name\":\"hooksConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeeAmount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"eventKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"eventData\",\"type\":\"bytes\"}],\"name\":\"VaultAuxiliary\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultBuffersPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultQueriesDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultQueriesEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositedUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"Wrap\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AddLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountUnderlyingInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountWrappedInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactSharesToIssue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"addLiquidityToBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlyingRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrappedRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"areBuffersPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"buffersPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"collectAggregateFees\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"yieldFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"}],\"name\":\"computeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dynamicSwapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableQueryPermanently\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"disableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"eventKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"eventData\",\"type\":\"bytes\"}],\"name\":\"emitAuxiliaryEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"enableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"enum WrappingDirection\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"}],\"internalType\":\"struct BufferWrapOrUnwrapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"erc4626BufferWrapOrUnwrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getAddLiquidityCalledFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"liquidityAdded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAggregateSwapFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAggregateYieldFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"authorizer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getBptRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedBalanceRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferMinimumTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bufferMinimumTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityOwner\",\"type\":\"address\"}],\"name\":\"getBufferOwnerShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferPeriodDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferPeriodEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bufferShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getCurrentLiveBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getERC4626BufferAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getHooksConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"internalType\":\"struct HooksConfig\",\"name\":\"hooksConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaximumPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumTradeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumTradeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumWrapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumWrapAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonzeroDeltaCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonzeroDeltaCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPauseWindowEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"tokenDecimalDiffs\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isPoolRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInRecoveryMode\",\"type\":\"bool\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"poolConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolMinimumTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolMinimumTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"poolPaused\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"poolPauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"poolBufferPeriodEndTime\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolRoleAccounts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenCountAndIndexOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastBalancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokenRates\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getReservesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getStaticSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"tokenDelta\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultAdmin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultExtension\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"vaultPaused\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"vaultPauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"vaultBufferPeriodEndTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUnderlyingRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrappedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minIssuedShares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"initializeBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"isERC4626BufferInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isBufferInitialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolInRecoveryMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"inRecoveryMode\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"poolPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQueryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"queryDisabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQueryDisabledPermanently\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"queryDisabledPermanently\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVaultPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"vaultPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"pausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseVaultBuffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"quoteAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"protocolFeeExempt\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct RemoveLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToRemove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountUnderlyingOutRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountWrappedOutRaw\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"removedUnderlyingBalanceRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"removedWrappedBalanceRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"}],\"name\":\"removeLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setStaticSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountHint\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"vaultSwapParams\",\"type\":\"tuple\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"unpausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseVaultBuffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateAggregateSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateAggregateYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total BPT amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\"}}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\"}}],\"BufferAlreadyInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferNotInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferTotalSupplyTooLow(uint256)\":[{\"params\":{\"totalSupply\":\"The total supply value that was below the minimum\"}}],\"FeePrecisionTooHigh()\":[{\"details\":\"Primary fee percentages are 18-decimal values, stored here in 64 bits, and calculated with full 256-bit precision. However, the resulting aggregate fees are stored in the Vault with 24-bit precision, which corresponds to 0.00001% resolution (i.e., a fee can be 1%, 1.00001%, 1.00002%, but not 1.000005%). Disallow setting fees such that there would be precision loss in the Vault, leading to a discrepancy between the aggregate fee calculated here and that stored in the Vault.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"HookRegistrationFailed(address,address,address)\":[{\"params\":{\"pool\":\"Address of the rejected pool\",\"poolFactory\":\"Address of the pool factory\",\"poolHooksContract\":\"Address of the hook contract that rejected the pool registration\"}}],\"InvalidUnderlyingToken(address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might do this (e.g., in an attempt to re-initialize the buffer).\",\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"IssuedSharesBelowMin(uint256,uint256)\":[{\"details\":\"Shares issued during initialization are below the requested amount.\"}],\"NotEnoughUnderlying(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less underlying tokens than it should.\"}],\"NotEnoughWrapped(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less wrapped tokens than it should.\"}],\"NotVaultDelegateCall()\":[{\"details\":\"It can only be called by the Vault via delegatecall.\"}],\"PoolAlreadyInitialized(address)\":[{\"params\":{\"pool\":\"The already initialized pool\"}}],\"PoolAlreadyRegistered(address)\":[{\"params\":{\"pool\":\"The already registered pool\"}}],\"PoolInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInitialized(address)\":[{\"params\":{\"pool\":\"The uninitialized pool\"}}],\"PoolNotPaused(address)\":[{\"params\":{\"pool\":\"The unpaused pool\"}}],\"PoolNotRegistered(address)\":[{\"params\":{\"pool\":\"The unregistered pool\"}}],\"PoolPauseWindowExpired(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolPaused(address)\":[{\"params\":{\"pool\":\"The paused pool\"}}],\"ProtocolFeesExceedTotalCollected()\":[{\"details\":\"This occurs when the sum of the parts (aggregate swap or yield fee) is greater than the whole (total swap or yield fee). Also validated when the protocol fee controller updates aggregate fee percentages in the Vault.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}],\"SwapFeePercentageTooHigh()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is above the maximum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapFeePercentageTooLow()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is below the minimum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"TokenAlreadyRegistered(address)\":[{\"params\":{\"token\":\"The duplicate token\"}}],\"TokenNotRegistered(address)\":[{\"params\":{\"token\":\"The unregistered token\"}}],\"TokensMismatch(address,address,address)\":[{\"params\":{\"actualToken\":\"The actual token found at that index\",\"expectedToken\":\"The correct token at a given index in the pool\",\"pool\":\"Address of the pool\"}}],\"WrapAmountTooSmall(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"WrongUnderlyingToken(address,address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might not return the correct address. Legitimate wrapper contracts should make the asset a constant or immutable value.\",\"params\":{\"underlyingToken\":\"The underlying token returned by `asset`\",\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}]},\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose aggregate swap fee percentage changed\"}},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose aggregate yield fee percentage changed\"}},\"AuthorizerChanged(address)\":{\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"BufferSharesBurned(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"burnedShares\":\"The amount of \\\"internal BPT\\\" shares burned\",\"from\":\"The owner of the burned shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"BufferSharesMinted(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"issuedShares\":\"The amount of \\\"internal BPT\\\" shares created\",\"to\":\"The owner of the minted shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityAdded(address,address,uint8,uint256,uint256[],uint256[])\":{\"params\":{\"amountsAddedRaw\":\"The amount of each token that was added, sorted in token registration order\",\"kind\":\"The add liquidity operation type (e.g., proportional, custom)\",\"liquidityProvider\":\"The user performing the operation\",\"pool\":\"The pool with liquidity added\",\"swapFeeAmountsRaw\":\"The total swap fees charged, sorted in token registration order\",\"totalSupply\":\"The total supply of the pool after the operation\"}},\"LiquidityAddedToBuffer(address,uint256,uint256,bytes32)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was deposited\",\"amountWrapped\":\"The amount of the wrapped token that was deposited\",\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityRemoved(address,address,uint8,uint256,uint256[],uint256[])\":{\"params\":{\"amountsRemovedRaw\":\"The amount of each token that was removed, sorted in token registration order\",\"kind\":\"The remove liquidity operation type (e.g., proportional, custom)\",\"liquidityProvider\":\"The user performing the operation\",\"pool\":\"The pool with liquidity removed\",\"swapFeeAmountsRaw\":\"The total swap fees charged, sorted in token registration order\",\"totalSupply\":\"The total supply of the pool after the operation\"}},\"LiquidityRemovedFromBuffer(address,uint256,uint256,bytes32)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was withdrawn\",\"amountWrapped\":\"The amount of the wrapped token that was withdrawn\",\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"PoolInitialized(address)\":{\"params\":{\"pool\":\"The pool being initialized\"}},\"PoolPausedStateChanged(address,bool)\":{\"params\":{\"paused\":\"True if the pool was paused\",\"pool\":\"The pool that was just paused or unpaused\"}},\"PoolRecoveryModeStateChanged(address,bool)\":{\"params\":{\"pool\":\"The pool\",\"recoveryMode\":\"True if recovery mode was enabled\"}},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"params\":{\"factory\":\"The factory creating the pool\",\"hooksConfig\":\"Flags indicating which hooks the pool supports and address of hooks contract\",\"liquidityManagement\":\"Supported liquidity management hook flags\",\"pauseWindowEndTime\":\"The pool's pause window end time\",\"pool\":\"The pool being registered\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The static swap fee of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"ProtocolFeeControllerChanged(address)\":{\"params\":{\"newProtocolFeeController\":\"The address of the new protocol fee controller\"}},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Number of tokenIn tokens\",\"amountOut\":\"Number of tokenOut tokens\",\"pool\":\"The pool with the tokens being swapped\",\"swapFeeAmount\":\"Swap fee amount paid\",\"swapFeePercentage\":\"Swap fee percentage applied (can differ if dynamic)\",\"tokenIn\":\"The token entering the Vault (balance increases)\",\"tokenOut\":\"The token leaving the Vault (balance decreases)\"}},\"SwapFeePercentageChanged(address,uint256)\":{\"params\":{\"swapFeePercentage\":\"The new swap fee percentage for the pool\"}},\"Unwrap(address,uint256,uint256,bytes32)\":{\"params\":{\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"burnedShares\":\"Number of shares (wrapped tokens) burned\",\"withdrawnUnderlying\":\"Number of underlying tokens withdrawn\",\"wrappedToken\":\"The wrapped token address\"}},\"VaultAuxiliary(address,bytes32,bytes)\":{\"params\":{\"eventData\":\"Encoded event data\",\"eventKey\":\"Event key\",\"pool\":\"Pool address\"}},\"VaultBuffersPausedStateChanged(bool)\":{\"details\":\"If buffers all paused, all buffer operations (i.e., all calls through the Router with `isBuffer` set to true) will revert.\",\"params\":{\"paused\":\"True if the Vault buffers were paused\"}},\"VaultPausedStateChanged(bool)\":{\"params\":{\"paused\":\"True if the Vault was paused\"}},\"Wrap(address,uint256,uint256,bytes32)\":{\"params\":{\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"depositedUnderlying\":\"Number of underlying tokens deposited\",\"mintedShares\":\"Number of shares (wrapped tokens) minted\",\"wrappedToken\":\"The wrapped token address\"}}},\"kind\":\"dev\",\"methods\":{\"addLiquidity((address,address,uint256[],uint256,uint8,bytes))\":{\"details\":\"Caution should be exercised when adding liquidity because the Vault has the capability to transfer tokens from any user, given that it holds all allowances.\",\"params\":{\"params\":\"Parameters for the add liquidity (see above for struct definition)\"},\"returns\":{\"amountsIn\":\"Actual amounts of input tokens\",\"bptAmountOut\":\"Output pool token amount\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"addLiquidityToBuffer(address,uint256,uint256,uint256,address)\":{\"details\":\"The buffer needs to be initialized beforehand.\",\"params\":{\"exactSharesToIssue\":\"The value in underlying tokens that `sharesOwner` wants to add to the buffer, in underlying token decimals\",\"maxAmountUnderlyingInRaw\":\"Maximum amount of underlying tokens to add to the buffer. It is expressed in underlying token native decimals\",\"maxAmountWrappedInRaw\":\"Maximum amount of wrapped tokens to add to the buffer. It is expressed in wrapped token native decimals\",\"sharesOwner\":\"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"amountUnderlyingRaw\":\"Amount of underlying tokens deposited into the buffer\",\"amountWrappedRaw\":\"Amount of wrapped tokens deposited into the buffer\"}},\"allowance(address,address,address)\":{\"params\":{\"owner\":\"Address of the owner\",\"spender\":\"Address of the spender\",\"token\":\"Address of the token\"},\"returns\":{\"tokenAllowance\":\"Amount of tokens the spender is allowed to spend\"}},\"approve(address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to approve\",\"owner\":\"Address of the owner\",\"spender\":\"Address of the spender\"},\"returns\":{\"success\":\"True if successful, false otherwise\"}},\"areBuffersPaused()\":{\"details\":\"When buffers are paused, all buffer operations (i.e., calls on the Router with `isBuffer` true) will revert. Pausing buffers is reversible. Note that ERC4626 buffers and the Vault have separate and independent pausing mechanisms. Pausing the Vault does not also pause buffers (though we anticipate they would likely be paused and unpaused together). Call `isVaultPaused` to check the pause state of the Vault.\",\"returns\":{\"buffersPaused\":\"True if the Vault buffers are paused\"}},\"balanceOf(address,address)\":{\"params\":{\"account\":\"Address of the account\",\"token\":\"Address of the token\"},\"returns\":{\"tokenBalance\":\"Token balance of the account\"}},\"collectAggregateFees(address)\":{\"details\":\"Fees are sent to the ProtocolFeeController address.\",\"params\":{\"pool\":\"The pool on which all aggregate fees should be collected\"},\"returns\":{\"swapFeeAmounts\":\"An array with the total swap fees collected, sorted in token registration order\",\"yieldFeeAmounts\":\"An array with the total yield fees collected, sorted in token registration order\"}},\"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))\":{\"details\":\"Reverts if the hook doesn't return the success flag set to `true`.\",\"params\":{\"pool\":\"The pool\",\"swapParams\":\"The swap parameters used to compute the fee\"},\"returns\":{\"dynamicSwapFeePercentage\":\"The dynamic swap fee percentage\"}},\"disableQuery()\":{\"details\":\"The query functions rely on a specific EVM feature to detect static calls. Query operations are exempt from settlement constraints, so it's critical that no state changes can occur. We retain the ability to disable queries in the unlikely event that EVM changes violate its assumptions (perhaps on an L2). This function can be acted upon as an emergency measure in ambiguous contexts where it's not 100% clear whether disabling queries is completely necessary; queries can still be re-enabled after this call.\"},\"disableQueryPermanently()\":{\"details\":\"Shall only be used when there is no doubt that queries pose a fundamental threat to the system.\"},\"disableRecoveryMode(address)\":{\"details\":\"This is a permissioned function. It re-syncs live balances (which could not be updated during Recovery Mode), forfeiting any yield fees that accrued while enabled. It makes external calls, and could potentially fail if there is an issue with any associated Rate Providers.\",\"params\":{\"pool\":\"The address of the pool\"}},\"emitAuxiliaryEvent(bytes32,bytes)\":{\"params\":{\"eventData\":\"Encoded event data\",\"eventKey\":\"Event key\"}},\"enableQuery()\":{\"details\":\"Only works if queries are not permanently disabled.\"},\"enableRecoveryMode(address)\":{\"details\":\"This is a permissioned function. It enables a safe proportional withdrawal, with no external calls. Since there are no external calls, ensuring that entering Recovery Mode cannot fail, we cannot compute and so must forfeit any yield fees between the last operation and enabling Recovery Mode. For the same reason, live balances cannot be updated while in Recovery Mode, as doing so might cause withdrawals to fail.\",\"params\":{\"pool\":\"The address of the pool\"}},\"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))\":{\"details\":\"All parameters are given in raw token decimal encoding. It requires the buffer to be initialized, and uses the internal wrapped token buffer when it has enough liquidity to avoid external calls.\",\"params\":{\"params\":\"Parameters for the wrap/unwrap operation (see struct definition)\"},\"returns\":{\"amountCalculatedRaw\":\"Calculated swap amount\",\"amountInRaw\":\"Amount of input tokens for the swap\",\"amountOutRaw\":\"Amount of output tokens from the swap\"}},\"getActionId(bytes4)\":{\"params\":{\"selector\":\"The 4-byte selector of the permissioned function\"},\"returns\":{\"actionId\":\"The computed actionId\"}},\"getAddLiquidityCalledFlag(address)\":{\"details\":\"Taxing remove liquidity proportional whenever liquidity was added in the same `unlock` call adds an extra layer of security, discouraging operations that try to undo others for profit. Remove liquidity proportional is the only standard way to exit a position without fees, and this flag is used to enable fees in that case. It also discourages indirect swaps via unbalanced add and remove proportional, as they are expected to be worse than a simple swap for every pool type.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"liquidityAdded\":\"True if liquidity has been added to this pool in the current transaction Note that there is no `sessionId` argument; it always returns the value for the current (i.e., latest) session.\"}},\"getAggregateSwapFeeAmount(address,address)\":{\"params\":{\"pool\":\"The address of the pool for which aggregate fees have been collected\",\"token\":\"The address of the token in which fees have been accumulated\"},\"returns\":{\"swapFeeAmount\":\"The total amount of fees accumulated in the specified token\"}},\"getAggregateYieldFeeAmount(address,address)\":{\"params\":{\"pool\":\"The address of the pool for which aggregate fees have been collected\",\"token\":\"The address of the token in which fees have been accumulated\"},\"returns\":{\"yieldFeeAmount\":\"The total amount of fees accumulated in the specified token\"}},\"getAuthorizer()\":{\"details\":\"The authorizer holds the permissions granted by governance. It is set on Vault deployment, and can be changed through a permissioned call.\",\"returns\":{\"authorizer\":\"Address of the authorizer contract\"}},\"getBptRate(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"rate\":\"BPT rate\"}},\"getBufferAsset(address)\":{\"details\":\"The asset can never change after buffer initialization.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"underlyingToken\":\"Address of the underlying token registered for the wrapper; `address(0)` if the buffer has not been initialized.\"}},\"getBufferBalance(address)\":{\"details\":\"All values are in native token decimals of the wrapped or underlying tokens.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"underlyingBalanceRaw\":\"Amount of underlying tokens deposited into the buffer, in native token decimals\",\"wrappedBalanceRaw\":\"Amount of wrapped tokens deposited into the buffer, in native token decimals\"}},\"getBufferMinimumTotalSupply()\":{\"details\":\"This prevents buffers from being completely drained. When the buffer is initialized, this minimum number of shares is added to the shares resulting from the initial deposit. Buffer total supply accounting is internal to the Vault, as buffers are not tokenized.\",\"returns\":{\"bufferMinimumTotalSupply\":\"The minimum total supply a buffer can have after initialization\"}},\"getBufferOwnerShares(address,address)\":{\"params\":{\"liquidityOwner\":\"Address of the user that owns liquidity in the wrapped token's buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"ownerShares\":\"Amount of shares allocated to the liquidity owner, in native underlying token decimals\"}},\"getBufferPeriodDuration()\":{\"details\":\"This value is immutable. It represents the period during which, if paused, the Vault will remain paused. This ensures there is time available to address whatever issue caused the Vault to be paused. Balancer timestamps are 32 bits.\",\"returns\":{\"bufferPeriodDuration\":\"The length of the buffer period in seconds\"}},\"getBufferPeriodEndTime()\":{\"details\":\"This value is immutable. If already paused, the Vault can be unpaused until this timestamp. Balancer timestamps are 32 bits.\",\"returns\":{\"bufferPeriodEndTime\":\"The timestamp after which the Vault remains permanently unpaused\"}},\"getBufferTotalShares(address)\":{\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"bufferShares\":\"Amount of supply shares of the buffer, in native underlying token decimals\"}},\"getCurrentLiveBalances(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"balancesLiveScaled18\":\"Token balances after paying yield fees, applying decimal scaling and rates\"}},\"getERC4626BufferAsset(address)\":{\"details\":\"To avoid malicious wrappers (e.g., that might potentially change their asset after deployment), routers should never call `wrapper.asset()` directly, at least without checking it against the asset registered with the Vault on initialization.\",\"params\":{\"wrappedToken\":\"The wrapped token specifying the buffer\"},\"returns\":{\"asset\":\"The underlying asset of the wrapped token\"}},\"getHooksConfig(address)\":{\"details\":\"The `HooksConfig` contains flags indicating which pool hooks are implemented.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"hooksConfig\":\"The hooks configuration as a `HooksConfig` struct\"}},\"getMaximumPoolTokens()\":{\"returns\":{\"maxTokens\":\"The maximum token count of a pool\"}},\"getMinimumPoolTokens()\":{\"details\":\"We expect the vast majority of pools to be 2-token.\",\"returns\":{\"minTokens\":\"The minimum token count of a pool\"}},\"getMinimumTradeAmount()\":{\"details\":\"This limit is applied to the 18-decimal \\\"upscaled\\\" amount in any operation (swap, add/remove liquidity).\",\"returns\":{\"minimumTradeAmount\":\"The minimum trade amount as an 18-decimal floating point number\"}},\"getMinimumWrapAmount()\":{\"details\":\"This limit is applied to the wrap operation amount, in native underlying token decimals.\",\"returns\":{\"minimumWrapAmount\":\"The minimum wrap amount in native underlying token decimals\"}},\"getNonzeroDeltaCount()\":{\"returns\":{\"nonzeroDeltaCount\":\"The current value of `_nonzeroDeltaCount`\"}},\"getPauseWindowEndTime()\":{\"details\":\"This value is immutable, and represents the timestamp after which the Vault can no longer be paused by governance. Balancer timestamps are 32 bits.\",\"returns\":{\"pauseWindowEndTime\":\"The timestamp when the Vault's pause window ends\"}},\"getPoolConfig(address)\":{\"details\":\"The `PoolConfig` contains liquidity management and other state flags, fee percentages, the pause window.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"poolConfig\":\"The pool configuration as a `PoolConfig` struct\"}},\"getPoolData(address)\":{\"details\":\"This contains the pool configuration (flags), tokens and token types, rates, scaling factors, and balances.\",\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"poolData\":\"The `PoolData` result\"}},\"getPoolMinimumTotalSupply()\":{\"details\":\"This prevents pools from being completely drained. When the pool is initialized, this minimum amount of BPT is minted to the zero address. This is an 18-decimal floating point number; BPT are always 18 decimals.\",\"returns\":{\"poolMinimumTotalSupply\":\"The minimum total supply a pool can have after initialization\"}},\"getPoolPausedState(address)\":{\"details\":\"Note that even when set to a paused state, the pool will automatically unpause at the end of the buffer period. Balancer timestamps are 32 bits.\",\"params\":{\"pool\":\"The pool whose data is requested\"},\"returns\":{\"pauseManager\":\"The pause manager, or the zero address\",\"poolBufferPeriodEndTime\":\"The timestamp after which the Pool unpauses itself (if paused)\",\"poolPauseWindowEndTime\":\"The timestamp of the end of the Pool's pause window\",\"poolPaused\":\"True if the Pool is paused\"}},\"getPoolRoleAccounts(address)\":{\"params\":{\"pool\":\"The address of the pool whose roles are being queried\"},\"returns\":{\"roleAccounts\":\"A struct containing the role accounts for the pool (or 0 if unassigned)\"}},\"getPoolTokenCountAndIndexOfToken(address,address)\":{\"details\":\"Reverts if the pool is not registered, or if the token does not belong to the pool.\",\"params\":{\"pool\":\"Address of the pool\",\"token\":\"Address of the token\"},\"returns\":{\"index\":\"Index corresponding to the given token in the pool's token list\",\"tokenCount\":\"Number of tokens in the pool\"}},\"getPoolTokenInfo(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"balancesRaw\":\"Current native decimal balances of the pool tokens, sorted in token registration order\",\"lastBalancesLiveScaled18\":\"Last saved live balances, sorted in token registration order\",\"tokenInfo\":\"Token info structs (type, rate provider, yield flag), sorted in token registration order\",\"tokens\":\"The pool tokens, sorted in registration order\"}},\"getPoolTokenRates(address)\":{\"details\":\"This function performs external calls if tokens are yield-bearing. All returned arrays are in token registration order.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"decimalScalingFactors\":\"Conversion factor used to adjust for token decimals for uniform precision in calculations. FP(1) for 18-decimal tokens\",\"tokenRates\":\"18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens\"}},\"getPoolTokens(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"tokens\":\"List of tokens in the pool\"}},\"getProtocolFeeController()\":{\"returns\":{\"protocolFeeController\":\"Address of the ProtocolFeeController\"}},\"getReservesOf(address)\":{\"params\":{\"token\":\"The token for which to retrieve the reserve\"},\"returns\":{\"reserveAmount\":\"The amount of reserves for the given token\"}},\"getStaticSwapFeePercentage(address)\":{\"params\":{\"pool\":\"The address of the pool whose static swap fee percentage is being queried\"},\"returns\":{\"swapFeePercentage\":\"The current static swap fee percentage for the specified pool\"}},\"getTokenDelta(address)\":{\"details\":\"This function allows reading the value from the `_tokenDeltas` mapping.\",\"params\":{\"token\":\"The token for which the delta is being fetched\"},\"returns\":{\"tokenDelta\":\"The delta of the specified token\"}},\"getVaultAdmin()\":{\"details\":\"The VaultAdmin contract mostly implements permissioned functions.\",\"returns\":{\"vaultAdmin\":\"The address of the Vault admin\"}},\"getVaultExtension()\":{\"details\":\"Function is in the main Vault contract. The VaultExtension handles less critical or frequently used functions, since delegate calls through the Vault are more expensive than direct calls.\",\"returns\":{\"vaultExtension\":\"Address of the VaultExtension\"}},\"getVaultPausedState()\":{\"details\":\"Balancer timestamps are 32 bits.\",\"returns\":{\"vaultBufferPeriodEndTime\":\"The timestamp of the end of the Vault's buffer period\",\"vaultPauseWindowEndTime\":\"The timestamp of the end of the Vault's pause window\",\"vaultPaused\":\"True if the Vault is paused\"}},\"initialize(address,address,address[],uint256[],uint256,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Address of the pool to initialize\",\"to\":\"Address that will receive the output BPT\",\"tokens\":\"Tokens used to seed the pool (must match the registered tokens)\",\"userData\":\"Additional (optional) data required for adding initial liquidity\"},\"returns\":{\"bptAmountOut\":\"Output pool token amount\"}},\"initializeBuffer(address,uint256,uint256,uint256,address)\":{\"params\":{\"amountUnderlyingRaw\":\"Amount of underlying tokens that will be deposited into the buffer\",\"amountWrappedRaw\":\"Amount of wrapped tokens that will be deposited into the buffer\",\"minIssuedShares\":\"Minimum amount of shares to receive from the buffer, expressed in underlying token native decimals\",\"sharesOwner\":\"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"issuedShares\":\"the amount of tokens sharesOwner has in the buffer, expressed in underlying token amounts. (it is the BPT of an internal ERC4626 buffer). It is expressed in underlying token native decimals.\"}},\"isERC4626BufferInitialized(address)\":{\"details\":\"An initialized buffer should have an asset registered in the Vault.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"isBufferInitialized\":\"True if the ERC4626 buffer is initialized\"}},\"isPoolInRecoveryMode(address)\":{\"details\":\"Recovery Mode enables a safe proportional withdrawal path, with no external calls.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"inRecoveryMode\":\"True if the pool is in Recovery Mode, false otherwise\"}},\"isPoolInitialized(address)\":{\"details\":\"An initialized pool can be considered registered as well.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"initialized\":\"True if the pool is initialized, false otherwise\"}},\"isPoolPaused(address)\":{\"details\":\"If a pool is paused, all non-Recovery Mode state-changing operations will revert.\",\"params\":{\"pool\":\"The pool to be checked\"},\"returns\":{\"poolPaused\":\"True if the pool is paused\"}},\"isPoolRegistered(address)\":{\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"registered\":\"True if the pool is registered, false otherwise\"}},\"isQueryDisabled()\":{\"details\":\"If true, queries might either be disabled temporarily or permanently.\",\"returns\":{\"queryDisabled\":\"True if query functionality is reversibly disabled\"}},\"isQueryDisabledPermanently()\":{\"details\":\"This is a one-way switch. Once queries are disabled permanently, they can never be re-enabled.\",\"returns\":{\"queryDisabledPermanently\":\"True if query functionality is permanently disabled\"}},\"isUnlocked()\":{\"details\":\"The Vault must be unlocked to perform state-changing liquidity operations.\",\"returns\":{\"unlocked\":\"True if the Vault is unlocked, false otherwise\"}},\"isVaultPaused()\":{\"details\":\"If the Vault is paused, all non-Recovery Mode state-changing operations on pools will revert. Note that ERC4626 buffers and the Vault have separate and independent pausing mechanisms. Pausing the Vault does not also pause buffers (though we anticipate they would likely be paused and unpaused together). Call `areBuffersPaused` to check the pause state of the buffers.\",\"returns\":{\"vaultPaused\":\"True if the Vault is paused\"}},\"pausePool(address)\":{\"details\":\"This is a permissioned function that will only work during the Pause Window set during pool factory deployment.\",\"params\":{\"pool\":\"The pool being paused\"}},\"pauseVault()\":{\"details\":\"This is a permissioned function that will only work during the Pause Window set during deployment. Note that ERC4626 buffer operations have an independent pause mechanism, which is not affected by pausing the Vault. Custom routers could still wrap/unwrap using buffers while the Vault is paused, unless buffers are also paused (with `pauseVaultBuffers`).\"},\"pauseVaultBuffers()\":{\"details\":\"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. Currently it's not possible to pause vault buffers individually. This is a permissioned call, and is reversible (see `unpauseVaultBuffers`). Note that the Vault has a separate and independent pausing mechanism. It is possible to pause the Vault (i.e. pool operations), without affecting buffers, and vice versa.\"},\"quote(bytes)\":{\"details\":\"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"},\"returns\":{\"result\":\"Resulting data from the call\"}},\"quoteAndRevert(bytes)\":{\"details\":\"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled. This call always reverts, returning the result in the revert reason.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"}},\"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))\":{\"details\":\"A pool can opt-out of pausing by providing a zero value for the pause window, or allow pausing indefinitely by providing a large value. (Pool pause windows are not limited by the Vault maximums.) The vault defines an additional buffer period during which a paused pool will stay paused. After the buffer period passes, a paused pool will automatically unpause. Balancer timestamps are 32 bits. A pool can opt out of Balancer governance pausing by providing a custom `pauseManager`. This might be a multi-sig contract or an arbitrary smart contract with its own access controls, that forwards calls to the Vault. If the zero address is provided for the `pauseManager`, permissions for pausing the pool will default to the authorizer.\",\"params\":{\"liquidityManagement\":\"Liquidity management flags with implemented methods\",\"pauseWindowEndTime\":\"The timestamp after which it is no longer possible to pause the pool\",\"pool\":\"The address of the pool being registered\",\"poolHooksContract\":\"Contract that implements the hooks for the pool\",\"protocolFeeExempt\":\"If true, the pool's initial aggregate fees will be set to 0\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The initial static swap fee percentage of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))\":{\"details\":\"Trusted routers can burn pool tokens belonging to any user and require no prior approval from the user. Untrusted routers require prior approval from the user. This is the only function allowed to call _queryModeBalanceIncrease (and only in a query context).\",\"params\":{\"params\":\"Parameters for the remove liquidity (see above for struct definition)\"},\"returns\":{\"amountsOut\":\"Actual amounts of output tokens\",\"bptAmountIn\":\"Actual amount of BPT burned\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"removeLiquidityFromBuffer(address,uint256,uint256,uint256)\":{\"details\":\"Only proportional exits are supported, and the sender has to be the owner of the shares. This function unlocks the Vault just for this operation; it does not work with a Router as an entrypoint. Pre-conditions: - The buffer needs to be initialized. - sharesOwner is the original msg.sender, it needs to be checked in the Router. That's why   this call is authenticated; only routers approved by the DAO can remove the liquidity of a buffer. - The buffer needs to have some liquidity and have its asset registered in `_bufferAssets` storage.\",\"params\":{\"minAmountUnderlyingOutRaw\":\"Minimum amount of underlying tokens to receive from the buffer. It is expressed in underlying token native decimals\",\"minAmountWrappedOutRaw\":\"Minimum amount of wrapped tokens to receive from the buffer. It is expressed in wrapped token native decimals\",\"sharesToRemove\":\"Amount of shares to remove from the buffer. Cannot be greater than sharesOwner's total shares. It is expressed in underlying token native decimals\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"removedUnderlyingBalanceRaw\":\"Amount of underlying tokens returned to the user\",\"removedWrappedBalanceRaw\":\"Amount of wrapped tokens returned to the user\"}},\"removeLiquidityRecovery(address,address,uint256,uint256[])\":{\"params\":{\"exactBptAmountIn\":\"Input pool token amount\",\"from\":\"Address of user to burn pool tokens from\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the pool\"},\"returns\":{\"amountsOut\":\"Actual calculated amounts of output tokens, sorted in token registration order\"}},\"sendTo(address,address,uint256)\":{\"details\":\"There is no inverse operation for this function. Transfer funds to the Vault and call `settle` to cancel debts.\",\"params\":{\"amount\":\"Amount of tokens to send\",\"to\":\"Recipient address\",\"token\":\"Address of the token\"}},\"setAuthorizer(address)\":{\"details\":\"This is a permissioned call. Emits an `AuthorizerChanged` event.\",\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"setProtocolFeeController(address)\":{\"details\":\"This is a permissioned call. Emits a `ProtocolFeeControllerChanged` event.\",\"params\":{\"newProtocolFeeController\":\"The address of the new Protocol Fee Controller\"}},\"setStaticSwapFeePercentage(address,uint256)\":{\"details\":\"This is a permissioned function, disabled if the pool is paused. The swap fee percentage must be within the bounds specified by the pool's implementation of `ISwapFeePercentageBounds`. Emits the SwapFeePercentageChanged event.\",\"params\":{\"pool\":\"The address of the pool for which the static swap fee will be changed\",\"swapFeePercentage\":\"The new swap fee percentage to apply to the pool\"}},\"settle(address,uint256)\":{\"details\":\"Protects the caller against leftover dust in the Vault for the token being settled. The caller should know in advance how many tokens were paid to the Vault, so it can provide it as a hint to discard any excess in the Vault balance. If the given hint is equal to or higher than the difference in reserves, the difference in reserves is given as credit to the caller. If it's higher, the caller sent fewer tokens than expected, so settlement would fail. If the given hint is lower than the difference in reserves, the hint is given as credit to the caller. In this case, the excess would be absorbed by the Vault (and reflected correctly in the reserves), but would not affect settlement. The credit supplied by the Vault can be calculated as `min(reserveDifference, amountHint)`, where the reserve difference equals current balance of the token minus existing reserves of the token when the function is called.\",\"params\":{\"amountHint\":\"Amount paid as reported by the caller\",\"token\":\"Address of the token\"},\"returns\":{\"credit\":\"Credit received in return of the payment\"}},\"swap((uint8,address,address,address,uint256,uint256,bytes))\":{\"details\":\"All parameters are given in raw token decimal encoding.\",\"params\":{\"vaultSwapParams\":\"Parameters for the swap (see above for struct definition)\"},\"returns\":{\"amountCalculatedRaw\":\"Calculated swap amount\",\"amountInRaw\":\"Amount of input tokens for the swap\",\"amountOutRaw\":\"Amount of output tokens from the swap\"}},\"totalSupply(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"tokenTotalSupply\":\"Total supply of the token\"}},\"transfer(address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"owner\":\"Address of the owner\",\"to\":\"Address of the recipient\"},\"returns\":{\"_0\":\"success True if successful, false otherwise\"}},\"transferFrom(address,address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Address of the sender\",\"spender\":\"Address allowed to perform the transfer\",\"to\":\"Address of the recipient\"},\"returns\":{\"success\":\"True if successful, false otherwise\"}},\"unlock(bytes)\":{\"details\":\"Performs a callback on msg.sender with arguments provided in `data`. The Callback is `transient`, meaning all balances for the caller have to be settled at the end.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"},\"returns\":{\"result\":\"Resulting data from the call\"}},\"unpausePool(address)\":{\"details\":\"This is a permissioned function that will only work on a paused Pool within the Buffer Period set during deployment. Note that the Pool will automatically unpause after the Buffer Period expires.\",\"params\":{\"pool\":\"The pool being unpaused\"}},\"unpauseVault()\":{\"details\":\"This is a permissioned function that will only work on a paused Vault within the Buffer Period set during deployment. Note that the Vault will automatically unpause after the Buffer Period expires. As noted above, ERC4626 buffers and Vault operations on pools are independent. Unpausing the Vault does not reverse `pauseVaultBuffers`. If buffers were also paused, they will remain in that state until explicitly unpaused.\"},\"unpauseVaultBuffers()\":{\"details\":\"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. As noted above, ERC4626 buffers and Vault operations on pools are independent. Unpausing buffers does not reverse `pauseVault`. If the Vault was also paused, it will remain in that state until explicitly unpaused. This is a permissioned call.\"},\"updateAggregateSwapFeePercentage(address,uint256)\":{\"details\":\"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateSwapFeePercentageChanged` event.\",\"params\":{\"newAggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose swap fee percentage will be updated\"}},\"updateAggregateYieldFeePercentage(address,uint256)\":{\"details\":\"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateYieldFeePercentageChanged` event.\",\"params\":{\"newAggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose yield fee percentage will be updated\"}},\"vault()\":{\"returns\":{\"_0\":\"vault The main Vault address.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AfterAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterAddLiquidity hook, indicating the transaction should revert.\"}],\"AfterInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the afterInitialize hook, indicating the transaction should revert.\"}],\"AfterRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterRemoveLiquidity hook, indicating the transaction should revert.\"}],\"AfterSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the afterSwap hook, indicating the transaction should revert.\"}],\"AmountGivenZero()\":[{\"notice\":\"The user tried to swap zero tokens.\"}],\"AmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A required amountIn exceeds the maximum limit specified for the operation.\"}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The actual amount out is below the minimum limit specified for the operation.\"}],\"BalanceNotSettled()\":[{\"notice\":\"A transient accounting operation completed with outstanding token deltas.\"}],\"BeforeAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeAddLiquidity hook, indicating the transaction should revert.\"}],\"BeforeInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeInitialize hook, indicating the transaction should revert.\"}],\"BeforeRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeRemoveLiquidity hook, indicating the transaction should revert.\"}],\"BeforeSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"notice\":\"The required BPT amount in exceeds the maximum limit specified for the operation.\"}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"notice\":\"The BPT amount received from adding liquidity is below the minimum specified for the operation.\"}],\"BufferAlreadyInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was already initialized.\"}],\"BufferNotInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was not initialized.\"}],\"BufferSharesInvalidOwner()\":[{\"notice\":\"Buffer shares were burned from the zero address.\"}],\"BufferSharesInvalidReceiver()\":[{\"notice\":\"Buffer shares were minted to the zero address.\"}],\"BufferTotalSupplyTooLow(uint256)\":[{\"notice\":\"The total supply of a buffer can't be lower than the absolute minimum.\"}],\"CannotReceiveEth()\":[{\"notice\":\"The contract should not receive ETH.\"}],\"CannotSwapSameToken()\":[{\"notice\":\"The user attempted to swap a token for itself.\"}],\"DoesNotSupportAddLiquidityCustom()\":[{\"notice\":\"Pool does not support adding liquidity with a customized input.\"}],\"DoesNotSupportDonation()\":[{\"notice\":\"Pool does not support adding liquidity through donation.\"}],\"DoesNotSupportRemoveLiquidityCustom()\":[{\"notice\":\"Pool does not support removing liquidity with a customized input.\"}],\"DoesNotSupportUnbalancedLiquidity()\":[{\"notice\":\"Pool does not support adding / removing liquidity with an unbalanced input.\"}],\"DynamicSwapFeeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"FeePrecisionTooHigh()\":[{\"notice\":\"Primary fee percentages result in an aggregate fee that cannot be stored with the required precision.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A hook adjusted amountIn exceeds the maximum limit specified for the operation.\"}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The hook adjusted amount out is below the minimum limit specified for the operation.\"}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"notice\":\"A hook adjusted amount in or out has exceeded the limit specified in the swap request.\"}],\"HookRegistrationFailed(address,address,address)\":[{\"notice\":\"A hook contract rejected a pool on registration.\"}],\"InvalidAddLiquidityKind()\":[{\"notice\":\"Add liquidity kind not supported.\"}],\"InvalidRemoveLiquidityKind()\":[{\"notice\":\"Remove liquidity kind not supported.\"}],\"InvalidToken()\":[{\"notice\":\"Invalid tokens (e.g., zero) cannot be registered.\"}],\"InvalidTokenConfiguration()\":[{\"notice\":\"The data in a TokenConfig struct is inconsistent or unsupported.\"}],\"InvalidTokenDecimals()\":[{\"notice\":\"Tokens with more than 18 decimals are not supported.\"}],\"InvalidTokenType()\":[{\"notice\":\"The token type given in a TokenConfig during pool registration is invalid.\"}],\"InvalidUnderlyingToken(address)\":[{\"notice\":\"A wrapped token reported the zero address as its underlying token asset.\"}],\"MaxTokens()\":[{\"notice\":\"The token count is above the maximum allowed.\"}],\"MinTokens()\":[{\"notice\":\"The token count is below the minimum allowed.\"}],\"NotEnoughBufferShares()\":[{\"notice\":\"The user is trying to remove more than their allocated shares from the buffer.\"}],\"NotVaultDelegateCall()\":[{\"notice\":\"The `VaultExtension` contract was called by an account directly.\"}],\"PauseBufferPeriodDurationTooLarge()\":[{\"notice\":\"The caller specified a buffer period longer than the maximum.\"}],\"PercentageAboveMax()\":[{\"notice\":\"A given percentage is above the maximum (usually a value close to FixedPoint.ONE, or 1e18 wei).\"}],\"PoolAlreadyInitialized(address)\":[{\"notice\":\"A pool has already been initialized. `initialize` may only be called once.\"}],\"PoolAlreadyRegistered(address)\":[{\"notice\":\"A pool has already been registered. `registerPool` may only be called once.\"}],\"PoolInRecoveryMode(address)\":[{\"notice\":\"Cannot enable recovery mode when already enabled.\"}],\"PoolNotInRecoveryMode(address)\":[{\"notice\":\"Cannot disable recovery mode when not enabled.\"}],\"PoolNotInitialized(address)\":[{\"notice\":\"A referenced pool has not been initialized.\"}],\"PoolNotPaused(address)\":[{\"notice\":\"Governance tried to unpause the Pool when it was not paused.\"}],\"PoolNotRegistered(address)\":[{\"notice\":\"A pool has not been registered.\"}],\"PoolPauseWindowExpired(address)\":[{\"notice\":\"Governance tried to pause a Pool after the pause period expired.\"}],\"PoolPaused(address)\":[{\"notice\":\"A user tried to perform an operation involving a paused Pool.\"}],\"ProtocolFeesExceedTotalCollected()\":[{\"notice\":\"Error raised when there is an overflow in the fee calculation.\"}],\"QueriesDisabled()\":[{\"notice\":\"A user tried to execute a query operation when they were disabled.\"}],\"QueriesDisabledPermanently()\":[{\"notice\":\"An admin tried to re-enable queries, but they were disabled permanently.\"}],\"QuoteResultSpoofed()\":[{\"notice\":\"Quote reverted with a reserved error code.\"}],\"RouterNotTrusted()\":[{\"notice\":\"An unauthorized Router tried to call a permissioned function (i.e., using the Vault's token allowance).\"}],\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}],\"SenderNotAllowed()\":[{\"notice\":\"The sender does not have permission to call a function.\"}],\"SwapFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the swap fee percentage is greater than the maximum allowed value.\"}],\"SwapFeePercentageTooLow()\":[{\"notice\":\"Error raised when the swap fee percentage is less than the minimum allowed value.\"}],\"SwapLimit(uint256,uint256)\":[{\"notice\":\"An amount in or out has exceeded the limit specified in the swap request.\"}],\"TokenAlreadyRegistered(address)\":[{\"notice\":\"A token was already registered (i.e., it is a duplicate in the pool).\"}],\"TokenNotRegistered(address)\":[{\"notice\":\"The user attempted to operate with a token that is not in the pool.\"}],\"TokensMismatch(address,address,address)\":[{\"notice\":\"The token list passed into an operation does not match the pool tokens in the pool.\"}],\"TradeAmountTooSmall()\":[{\"notice\":\"The amount given or calculated for an operation is below the minimum limit.\"}],\"VaultBuffersArePaused()\":[{\"notice\":\"Buffer operation attempted while vault buffers are paused.\"}],\"VaultIsNotUnlocked()\":[{\"notice\":\"A user called a Vault function (swap, add/remove liquidity) outside the lock context.\"}],\"VaultNotPaused()\":[{\"notice\":\"Governance tried to unpause the Vault when it was not paused.\"}],\"VaultPauseWindowDurationTooLarge()\":[{\"notice\":\"The caller specified a pause window period longer than the maximum.\"}],\"VaultPauseWindowExpired()\":[{\"notice\":\"Governance tried to pause the Vault after the pause period expired.\"}],\"VaultPaused()\":[{\"notice\":\"A user tried to perform an operation while the Vault was paused.\"}],\"WrapAmountTooSmall(address)\":[{\"notice\":\"The amount given to wrap/unwrap was too small, which can introduce rounding issues.\"}],\"WrongProtocolFeeControllerDeployment()\":[{\"notice\":\"The `ProtocolFeeController` contract was configured with an incorrect Vault address.\"}],\"WrongUnderlyingToken(address,address)\":[{\"notice\":\"The wrapped token asset does not match the underlying token.\"}],\"WrongVaultAdminDeployment()\":[{\"notice\":\"The `VaultAdmin` contract was configured with an incorrect Vault address.\"}],\"WrongVaultExtensionDeployment()\":[{\"notice\":\"The `VaultExtension` contract was configured with an incorrect Vault address.\"}]},\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate swap fee.\"},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate yield fee.\"},\"AuthorizerChanged(address)\":{\"notice\":\"A new authorizer is set by `setAuthorizer`.\"},\"BufferSharesBurned(address,address,uint256)\":{\"notice\":\"Buffer shares were burned for an ERC4626 buffer corresponding to a given wrapped token.\"},\"BufferSharesMinted(address,address,uint256)\":{\"notice\":\"Buffer shares were minted for an ERC4626 buffer corresponding to a given wrapped token.\"},\"LiquidityAdded(address,address,uint8,uint256,uint256[],uint256[])\":{\"notice\":\"Liquidity has been added to a pool (including initialization).\"},\"LiquidityAddedToBuffer(address,uint256,uint256,bytes32)\":{\"notice\":\"Liquidity was added to an ERC4626 buffer corresponding to the given wrapped token.\"},\"LiquidityRemoved(address,address,uint8,uint256,uint256[],uint256[])\":{\"notice\":\"Liquidity has been removed from a pool.\"},\"LiquidityRemovedFromBuffer(address,uint256,uint256,bytes32)\":{\"notice\":\"Liquidity was removed from an ERC4626 buffer.\"},\"PoolInitialized(address)\":{\"notice\":\"A Pool was initialized by calling `initialize`.\"},\"PoolPausedStateChanged(address,bool)\":{\"notice\":\"A Pool's pause status has changed.\"},\"PoolRecoveryModeStateChanged(address,bool)\":{\"notice\":\"Recovery mode has been enabled or disabled for a pool.\"},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"notice\":\"A Pool was registered by calling `registerPool`.\"},\"ProtocolFeeControllerChanged(address)\":{\"notice\":\"A new protocol fee controller is set by `setProtocolFeeController`.\"},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"A swap has occurred.\"},\"SwapFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the swap fee percentage of a pool is updated.\"},\"Unwrap(address,uint256,uint256,bytes32)\":{\"notice\":\"An unwrap operation has occurred.\"},\"VaultAuxiliary(address,bytes32,bytes)\":{\"notice\":\"Pools can use this event to emit event data from the Vault.\"},\"VaultBuffersPausedStateChanged(bool)\":{\"notice\":\"The Vault buffers pause status has changed.\"},\"VaultPausedStateChanged(bool)\":{\"notice\":\"The Vault's pause status has changed.\"},\"VaultQueriesDisabled()\":{\"notice\":\"`disableQuery` has been called on the Vault, disabling query functionality.\"},\"VaultQueriesEnabled()\":{\"notice\":\"`enableQuery` has been called on the Vault, enabling query functionality.\"},\"Wrap(address,uint256,uint256,bytes32)\":{\"notice\":\"A wrap operation has occurred.\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity((address,address,uint256[],uint256,uint8,bytes))\":{\"notice\":\"Adds liquidity to a pool.\"},\"addLiquidityToBuffer(address,uint256,uint256,uint256,address)\":{\"notice\":\"Adds liquidity to an internal ERC4626 buffer in the Vault, proportionally.\"},\"allowance(address,address,address)\":{\"notice\":\"Gets the allowance of a spender for a given ERC20 token and owner.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to spend pool tokens on behalf of sender.\"},\"areBuffersPaused()\":{\"notice\":\"Indicates whether the Vault buffers are paused.\"},\"balanceOf(address,address)\":{\"notice\":\"Gets the balance of an account for a given ERC20 token.\"},\"collectAggregateFees(address)\":{\"notice\":\"Collects accumulated aggregate swap and yield fees for the specified pool.\"},\"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))\":{\"notice\":\"Query the current dynamic swap fee percentage of a pool, given a set of swap parameters.\"},\"disableQuery()\":{\"notice\":\"Disables query functionality on the Vault. Can only be called by governance.\"},\"disableQueryPermanently()\":{\"notice\":\"Disables query functionality permanently on the Vault. Can only be called by governance.\"},\"disableRecoveryMode(address)\":{\"notice\":\"Disable recovery mode for a pool.\"},\"emitAuxiliaryEvent(bytes32,bytes)\":{\"notice\":\"Pools can use this event to emit event data from the Vault.\"},\"enableQuery()\":{\"notice\":\"Enables query functionality on the Vault. Can only be called by governance.\"},\"enableRecoveryMode(address)\":{\"notice\":\"Enable recovery mode for a pool.\"},\"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))\":{\"notice\":\"Wraps/unwraps tokens based on the parameters provided.\"},\"getActionId(bytes4)\":{\"notice\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAddLiquidityCalledFlag(address)\":{\"notice\":\"This flag is used to detect and tax \\\"round-trip\\\" interactions (adding and removing liquidity in the same pool).\"},\"getAggregateSwapFeeAmount(address,address)\":{\"notice\":\"Returns the accumulated swap fees (including aggregate fees) in `token` collected by the pool.\"},\"getAggregateYieldFeeAmount(address,address)\":{\"notice\":\"Returns the accumulated yield fees (including aggregate fees) in `token` collected by the pool.\"},\"getAuthorizer()\":{\"notice\":\"Returns the Authorizer address.\"},\"getBptRate(address)\":{\"notice\":\"The current rate of a pool token (BPT) = invariant / totalSupply.\"},\"getBufferAsset(address)\":{\"notice\":\"Returns the asset registered for a given wrapped token.\"},\"getBufferBalance(address)\":{\"notice\":\"Returns the amount of underlying and wrapped tokens deposited in the internal buffer of the Vault.\"},\"getBufferMinimumTotalSupply()\":{\"notice\":\"Get the minimum total supply of an ERC4626 wrapped token buffer in the Vault.\"},\"getBufferOwnerShares(address,address)\":{\"notice\":\"Returns the shares (internal buffer BPT) of a liquidity owner: a user that deposited assets in the buffer.\"},\"getBufferPeriodDuration()\":{\"notice\":\"Returns the Vault's buffer period duration.\"},\"getBufferPeriodEndTime()\":{\"notice\":\"Returns the Vault's buffer period end time.\"},\"getBufferTotalShares(address)\":{\"notice\":\"Returns the supply shares (internal buffer BPT) of the ERC4626 buffer.\"},\"getCurrentLiveBalances(address)\":{\"notice\":\"Gets current live balances of a given pool (fixed-point, 18 decimals), corresponding to its tokens in registration order.\"},\"getERC4626BufferAsset(address)\":{\"notice\":\"Gets the registered asset for a given buffer.\"},\"getHooksConfig(address)\":{\"notice\":\"Gets the hooks configuration parameters of a pool.\"},\"getMaximumPoolTokens()\":{\"notice\":\"Get the maximum number of tokens in a pool.\"},\"getMinimumPoolTokens()\":{\"notice\":\"Get the minimum number of tokens in a pool.\"},\"getMinimumTradeAmount()\":{\"notice\":\"Get the minimum trade amount in a pool operation.\"},\"getMinimumWrapAmount()\":{\"notice\":\"Get the minimum wrap amount in a buffer operation.\"},\"getNonzeroDeltaCount()\":{\"notice\":\"Returns the count of non-zero deltas.\"},\"getPauseWindowEndTime()\":{\"notice\":\"Returns the Vault's pause window end time.\"},\"getPoolConfig(address)\":{\"notice\":\"Gets the configuration parameters of a pool.\"},\"getPoolData(address)\":{\"notice\":\"Returns comprehensive pool data for the given pool.\"},\"getPoolMinimumTotalSupply()\":{\"notice\":\"Get the minimum total supply of pool tokens (BPT) for an initialized pool.\"},\"getPoolPausedState(address)\":{\"notice\":\"Returns the paused status, and end times of the Pool's pause window and buffer period.\"},\"getPoolRoleAccounts(address)\":{\"notice\":\"Fetches the role accounts for a given pool (pause manager, swap manager, pool creator)\"},\"getPoolTokenCountAndIndexOfToken(address,address)\":{\"notice\":\"Gets the index of a token in a given pool.\"},\"getPoolTokenInfo(address)\":{\"notice\":\"Gets the raw data for a pool: tokens, raw balances, scaling factors.\"},\"getPoolTokenRates(address)\":{\"notice\":\"Gets pool token rates.\"},\"getPoolTokens(address)\":{\"notice\":\"Gets the tokens registered to a pool.\"},\"getProtocolFeeController()\":{\"notice\":\"Returns the Protocol Fee Controller address.\"},\"getReservesOf(address)\":{\"notice\":\"Retrieves the reserve (i.e., total Vault balance) of a given token.\"},\"getStaticSwapFeePercentage(address)\":{\"notice\":\"Fetches the static swap fee percentage for a given pool.\"},\"getTokenDelta(address)\":{\"notice\":\"Retrieves the token delta for a specific token.\"},\"getVaultAdmin()\":{\"notice\":\"Returns the VaultAdmin contract address.\"},\"getVaultExtension()\":{\"notice\":\"Returns the VaultExtension contract address.\"},\"getVaultPausedState()\":{\"notice\":\"Returns the paused status, and end times of the Vault's pause window and buffer period.\"},\"initialize(address,address,address[],uint256[],uint256,bytes)\":{\"notice\":\"Initializes a registered pool by adding liquidity; mints BPT tokens for the first time in exchange.\"},\"initializeBuffer(address,uint256,uint256,uint256,address)\":{\"notice\":\"Initializes buffer for the given wrapped token.\"},\"isERC4626BufferInitialized(address)\":{\"notice\":\"Checks if the wrapped token has an initialized buffer in the Vault.\"},\"isPoolInRecoveryMode(address)\":{\"notice\":\"Checks whether a pool is in Recovery Mode.\"},\"isPoolInitialized(address)\":{\"notice\":\"Checks whether a pool is initialized.\"},\"isPoolPaused(address)\":{\"notice\":\"Indicates whether a pool is paused.\"},\"isPoolRegistered(address)\":{\"notice\":\"Checks whether a pool is registered.\"},\"isQueryDisabled()\":{\"notice\":\"Returns true if queries are disabled on the Vault.\"},\"isQueryDisabledPermanently()\":{\"notice\":\"Returns true if queries are disabled permanently; false if they are enabled.\"},\"isUnlocked()\":{\"notice\":\"Returns whether the Vault is unlocked (i.e., executing an operation).\"},\"isVaultPaused()\":{\"notice\":\"Indicates whether the Vault is paused.\"},\"pausePool(address)\":{\"notice\":\"Pause the Pool: an emergency action which disables all pool functions.\"},\"pauseVault()\":{\"notice\":\"Pause the Vault: an emergency action which disables all operational state-changing functions on pools.\"},\"pauseVaultBuffers()\":{\"notice\":\"Pauses native vault buffers globally.\"},\"quote(bytes)\":{\"notice\":\"Performs a callback on msg.sender with arguments provided in `data`.\"},\"quoteAndRevert(bytes)\":{\"notice\":\"Performs a callback on msg.sender with arguments provided in `data`.\"},\"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))\":{\"notice\":\"Registers a pool, associating it with its factory and the tokens it manages.\"},\"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))\":{\"notice\":\"Removes liquidity from a pool.\"},\"removeLiquidityFromBuffer(address,uint256,uint256,uint256)\":{\"notice\":\"Removes liquidity from an internal ERC4626 buffer in the Vault.\"},\"removeLiquidityRecovery(address,address,uint256,uint256[])\":{\"notice\":\"Remove liquidity from a pool specifying exact pool tokens in, with proportional token amounts out. The request is implemented by the Vault without any interaction with the pool, ensuring that it works the same for all pools, and cannot be disabled by a new pool type.\"},\"sendTo(address,address,uint256)\":{\"notice\":\"Sends tokens to a recipient.\"},\"setAuthorizer(address)\":{\"notice\":\"Sets a new Authorizer for the Vault.\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets a new Protocol Fee Controller for the Vault.\"},\"setStaticSwapFeePercentage(address,uint256)\":{\"notice\":\"Assigns a new static swap fee percentage to the specified pool.\"},\"settle(address,uint256)\":{\"notice\":\"Settles deltas for a token; must be successful for the current lock to be released.\"},\"swap((uint8,address,address,address,uint256,uint256,bytes))\":{\"notice\":\"Swaps tokens based on provided parameters.\"},\"totalSupply(address)\":{\"notice\":\"Gets the total supply of a given ERC20 token.\"},\"transfer(address,address,uint256)\":{\"notice\":\"Transfers pool token from owner to a recipient.\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Transfers pool token from a sender to a recipient using an allowance.\"},\"unlock(bytes)\":{\"notice\":\"Creates a context for a sequence of operations (i.e., \\\"unlocks\\\" the Vault).\"},\"unpausePool(address)\":{\"notice\":\"Reverse a `pause` operation, and restore the Pool to normal functionality.\"},\"unpauseVault()\":{\"notice\":\"Reverse a `pause` operation, and restore Vault pool operations to normal functionality.\"},\"unpauseVaultBuffers()\":{\"notice\":\"Unpauses native vault buffers globally.\"},\"updateAggregateSwapFeePercentage(address,uint256)\":{\"notice\":\"Update an aggregate swap fee percentage.\"},\"updateAggregateYieldFeePercentage(address,uint256)\":{\"notice\":\"Update an aggregate yield fee percentage.\"}},\"notice\":\"Composite interface for all Vault operations: swap, add/remove liquidity, and associated queries.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVault.sol\":\"IVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVaultAdmin.sol":{"IVaultAdmin":{"abi":[{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"maxAmountUnderlyingInRaw","type":"uint256"},{"internalType":"uint256","name":"maxAmountWrappedInRaw","type":"uint256"},{"internalType":"uint256","name":"exactSharesToIssue","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"name":"addLiquidityToBuffer","outputs":[{"internalType":"uint256","name":"amountUnderlyingRaw","type":"uint256"},{"internalType":"uint256","name":"amountWrappedRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"areBuffersPaused","outputs":[{"internalType":"bool","name":"buffersPaused","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"collectAggregateFees","outputs":[{"internalType":"uint256[]","name":"swapFeeAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"yieldFeeAmounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disableQuery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disableQueryPermanently","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"disableRecoveryMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enableQuery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"enableRecoveryMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getBufferAsset","outputs":[{"internalType":"address","name":"underlyingToken","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getBufferBalance","outputs":[{"internalType":"uint256","name":"underlyingBalanceRaw","type":"uint256"},{"internalType":"uint256","name":"wrappedBalanceRaw","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBufferMinimumTotalSupply","outputs":[{"internalType":"uint256","name":"bufferMinimumTotalSupply","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"liquidityOwner","type":"address"}],"name":"getBufferOwnerShares","outputs":[{"internalType":"uint256","name":"ownerShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBufferPeriodDuration","outputs":[{"internalType":"uint32","name":"bufferPeriodDuration","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBufferPeriodEndTime","outputs":[{"internalType":"uint32","name":"bufferPeriodEndTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getBufferTotalShares","outputs":[{"internalType":"uint256","name":"bufferShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaximumPoolTokens","outputs":[{"internalType":"uint256","name":"maxTokens","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getMinimumPoolTokens","outputs":[{"internalType":"uint256","name":"minTokens","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getMinimumTradeAmount","outputs":[{"internalType":"uint256","name":"minimumTradeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMinimumWrapAmount","outputs":[{"internalType":"uint256","name":"minimumWrapAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPauseWindowEndTime","outputs":[{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolMinimumTotalSupply","outputs":[{"internalType":"uint256","name":"poolMinimumTotalSupply","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getVaultPausedState","outputs":[{"internalType":"bool","name":"vaultPaused","type":"bool"},{"internalType":"uint32","name":"vaultPauseWindowEndTime","type":"uint32"},{"internalType":"uint32","name":"vaultBufferPeriodEndTime","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountUnderlyingRaw","type":"uint256"},{"internalType":"uint256","name":"amountWrappedRaw","type":"uint256"},{"internalType":"uint256","name":"minIssuedShares","type":"uint256"},{"internalType":"address","name":"sharesOwner","type":"address"}],"name":"initializeBuffer","outputs":[{"internalType":"uint256","name":"issuedShares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isVaultPaused","outputs":[{"internalType":"bool","name":"vaultPaused","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"pausePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pauseVaultBuffers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"sharesToRemove","type":"uint256"},{"internalType":"uint256","name":"minAmountUnderlyingOutRaw","type":"uint256"},{"internalType":"uint256","name":"minAmountWrappedOutRaw","type":"uint256"}],"name":"removeLiquidityFromBuffer","outputs":[{"internalType":"uint256","name":"removedUnderlyingBalanceRaw","type":"uint256"},{"internalType":"uint256","name":"removedWrappedBalanceRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address"}],"name":"setProtocolFeeController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"setStaticSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"unpausePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpauseVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpauseVaultBuffers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newAggregateSwapFeePercentage","type":"uint256"}],"name":"updateAggregateSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"newAggregateYieldFeePercentage","type":"uint256"}],"name":"updateAggregateYieldFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addLiquidityToBuffer(address,uint256,uint256,uint256,address)":"e2a92b1a","areBuffersPaused()":"55cba7fe","collectAggregateFees(address)":"8f4ab9ca","disableQuery()":"de1a36a6","disableQueryPermanently()":"821440f2","disableRecoveryMode(address)":"bffb78b2","enableQuery()":"e0d55605","enableRecoveryMode(address)":"dc3f574e","getBufferAsset(address)":"0387587d","getBufferBalance(address)":"4021fe0f","getBufferMinimumTotalSupply()":"26a8a991","getBufferOwnerShares(address,address)":"9385e39a","getBufferPeriodDuration()":"20c1fb7a","getBufferPeriodEndTime()":"cd51c12f","getBufferTotalShares(address)":"f2784e07","getMaximumPoolTokens()":"2e42f4d5","getMinimumPoolTokens()":"a8175b27","getMinimumTradeAmount()":"e2cb0ba0","getMinimumWrapAmount()":"53956aa2","getPauseWindowEndTime()":"8a8d123a","getPoolMinimumTotalSupply()":"d0965a6b","getVaultPausedState()":"85c8c015","initializeBuffer(address,uint256,uint256,uint256,address)":"653eb3b0","isVaultPaused()":"098401f5","pausePool(address)":"55aca1ec","pauseVault()":"9e0879c2","pauseVaultBuffers()":"e085c5a8","removeLiquidityFromBuffer(address,uint256,uint256,uint256)":"ebc7955c","setAuthorizer(address)":"058a628f","setProtocolFeeController(address)":"2d771389","setStaticSwapFeePercentage(address,uint256)":"d15126ba","unpausePool(address)":"f21c38cd","unpauseVault()":"0b7562be","unpauseVaultBuffers()":"b9212b49","updateAggregateSwapFeePercentage(address,uint256)":"5e0b06f4","updateAggregateYieldFeePercentage(address,uint256)":"e253670a","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountUnderlyingInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountWrappedInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactSharesToIssue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"addLiquidityToBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlyingRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrappedRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"areBuffersPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"buffersPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"collectAggregateFees\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"yieldFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableQueryPermanently\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"disableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"enableRecoveryMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wrappedBalanceRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferMinimumTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bufferMinimumTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityOwner\",\"type\":\"address\"}],\"name\":\"getBufferOwnerShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferPeriodDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBufferPeriodEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getBufferTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bufferShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaximumPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumPoolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumTradeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumTradeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumWrapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumWrapAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPauseWindowEndTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolMinimumTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolMinimumTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"vaultPaused\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"vaultPauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"vaultBufferPeriodEndTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountUnderlyingRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWrappedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minIssuedShares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sharesOwner\",\"type\":\"address\"}],\"name\":\"initializeBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVaultPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"vaultPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"pausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseVaultBuffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToRemove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountUnderlyingOutRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountWrappedOutRaw\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityFromBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"removedUnderlyingBalanceRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"removedWrappedBalanceRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"setProtocolFeeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setStaticSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"unpausePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseVaultBuffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateAggregateSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newAggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateAggregateYieldFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"`VaultAdmin` is the Proxy extension of `VaultExtension`, and handles the least critical operations, as two delegate calls add gas to each call. Most of the permissioned calls are here.\",\"kind\":\"dev\",\"methods\":{\"addLiquidityToBuffer(address,uint256,uint256,uint256,address)\":{\"details\":\"The buffer needs to be initialized beforehand.\",\"params\":{\"exactSharesToIssue\":\"The value in underlying tokens that `sharesOwner` wants to add to the buffer, in underlying token decimals\",\"maxAmountUnderlyingInRaw\":\"Maximum amount of underlying tokens to add to the buffer. It is expressed in underlying token native decimals\",\"maxAmountWrappedInRaw\":\"Maximum amount of wrapped tokens to add to the buffer. It is expressed in wrapped token native decimals\",\"sharesOwner\":\"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"amountUnderlyingRaw\":\"Amount of underlying tokens deposited into the buffer\",\"amountWrappedRaw\":\"Amount of wrapped tokens deposited into the buffer\"}},\"areBuffersPaused()\":{\"details\":\"When buffers are paused, all buffer operations (i.e., calls on the Router with `isBuffer` true) will revert. Pausing buffers is reversible. Note that ERC4626 buffers and the Vault have separate and independent pausing mechanisms. Pausing the Vault does not also pause buffers (though we anticipate they would likely be paused and unpaused together). Call `isVaultPaused` to check the pause state of the Vault.\",\"returns\":{\"buffersPaused\":\"True if the Vault buffers are paused\"}},\"collectAggregateFees(address)\":{\"details\":\"Fees are sent to the ProtocolFeeController address.\",\"params\":{\"pool\":\"The pool on which all aggregate fees should be collected\"},\"returns\":{\"swapFeeAmounts\":\"An array with the total swap fees collected, sorted in token registration order\",\"yieldFeeAmounts\":\"An array with the total yield fees collected, sorted in token registration order\"}},\"disableQuery()\":{\"details\":\"The query functions rely on a specific EVM feature to detect static calls. Query operations are exempt from settlement constraints, so it's critical that no state changes can occur. We retain the ability to disable queries in the unlikely event that EVM changes violate its assumptions (perhaps on an L2). This function can be acted upon as an emergency measure in ambiguous contexts where it's not 100% clear whether disabling queries is completely necessary; queries can still be re-enabled after this call.\"},\"disableQueryPermanently()\":{\"details\":\"Shall only be used when there is no doubt that queries pose a fundamental threat to the system.\"},\"disableRecoveryMode(address)\":{\"details\":\"This is a permissioned function. It re-syncs live balances (which could not be updated during Recovery Mode), forfeiting any yield fees that accrued while enabled. It makes external calls, and could potentially fail if there is an issue with any associated Rate Providers.\",\"params\":{\"pool\":\"The address of the pool\"}},\"enableQuery()\":{\"details\":\"Only works if queries are not permanently disabled.\"},\"enableRecoveryMode(address)\":{\"details\":\"This is a permissioned function. It enables a safe proportional withdrawal, with no external calls. Since there are no external calls, ensuring that entering Recovery Mode cannot fail, we cannot compute and so must forfeit any yield fees between the last operation and enabling Recovery Mode. For the same reason, live balances cannot be updated while in Recovery Mode, as doing so might cause withdrawals to fail.\",\"params\":{\"pool\":\"The address of the pool\"}},\"getBufferAsset(address)\":{\"details\":\"The asset can never change after buffer initialization.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"underlyingToken\":\"Address of the underlying token registered for the wrapper; `address(0)` if the buffer has not been initialized.\"}},\"getBufferBalance(address)\":{\"details\":\"All values are in native token decimals of the wrapped or underlying tokens.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"underlyingBalanceRaw\":\"Amount of underlying tokens deposited into the buffer, in native token decimals\",\"wrappedBalanceRaw\":\"Amount of wrapped tokens deposited into the buffer, in native token decimals\"}},\"getBufferMinimumTotalSupply()\":{\"details\":\"This prevents buffers from being completely drained. When the buffer is initialized, this minimum number of shares is added to the shares resulting from the initial deposit. Buffer total supply accounting is internal to the Vault, as buffers are not tokenized.\",\"returns\":{\"bufferMinimumTotalSupply\":\"The minimum total supply a buffer can have after initialization\"}},\"getBufferOwnerShares(address,address)\":{\"params\":{\"liquidityOwner\":\"Address of the user that owns liquidity in the wrapped token's buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"ownerShares\":\"Amount of shares allocated to the liquidity owner, in native underlying token decimals\"}},\"getBufferPeriodDuration()\":{\"details\":\"This value is immutable. It represents the period during which, if paused, the Vault will remain paused. This ensures there is time available to address whatever issue caused the Vault to be paused. Balancer timestamps are 32 bits.\",\"returns\":{\"bufferPeriodDuration\":\"The length of the buffer period in seconds\"}},\"getBufferPeriodEndTime()\":{\"details\":\"This value is immutable. If already paused, the Vault can be unpaused until this timestamp. Balancer timestamps are 32 bits.\",\"returns\":{\"bufferPeriodEndTime\":\"The timestamp after which the Vault remains permanently unpaused\"}},\"getBufferTotalShares(address)\":{\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"bufferShares\":\"Amount of supply shares of the buffer, in native underlying token decimals\"}},\"getMaximumPoolTokens()\":{\"returns\":{\"maxTokens\":\"The maximum token count of a pool\"}},\"getMinimumPoolTokens()\":{\"details\":\"We expect the vast majority of pools to be 2-token.\",\"returns\":{\"minTokens\":\"The minimum token count of a pool\"}},\"getMinimumTradeAmount()\":{\"details\":\"This limit is applied to the 18-decimal \\\"upscaled\\\" amount in any operation (swap, add/remove liquidity).\",\"returns\":{\"minimumTradeAmount\":\"The minimum trade amount as an 18-decimal floating point number\"}},\"getMinimumWrapAmount()\":{\"details\":\"This limit is applied to the wrap operation amount, in native underlying token decimals.\",\"returns\":{\"minimumWrapAmount\":\"The minimum wrap amount in native underlying token decimals\"}},\"getPauseWindowEndTime()\":{\"details\":\"This value is immutable, and represents the timestamp after which the Vault can no longer be paused by governance. Balancer timestamps are 32 bits.\",\"returns\":{\"pauseWindowEndTime\":\"The timestamp when the Vault's pause window ends\"}},\"getPoolMinimumTotalSupply()\":{\"details\":\"This prevents pools from being completely drained. When the pool is initialized, this minimum amount of BPT is minted to the zero address. This is an 18-decimal floating point number; BPT are always 18 decimals.\",\"returns\":{\"poolMinimumTotalSupply\":\"The minimum total supply a pool can have after initialization\"}},\"getVaultPausedState()\":{\"details\":\"Balancer timestamps are 32 bits.\",\"returns\":{\"vaultBufferPeriodEndTime\":\"The timestamp of the end of the Vault's buffer period\",\"vaultPauseWindowEndTime\":\"The timestamp of the end of the Vault's pause window\",\"vaultPaused\":\"True if the Vault is paused\"}},\"initializeBuffer(address,uint256,uint256,uint256,address)\":{\"params\":{\"amountUnderlyingRaw\":\"Amount of underlying tokens that will be deposited into the buffer\",\"amountWrappedRaw\":\"Amount of wrapped tokens that will be deposited into the buffer\",\"minIssuedShares\":\"Minimum amount of shares to receive from the buffer, expressed in underlying token native decimals\",\"sharesOwner\":\"Address that will own the deposited liquidity. Only this address will be able to remove liquidity from the buffer\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"issuedShares\":\"the amount of tokens sharesOwner has in the buffer, expressed in underlying token amounts. (it is the BPT of an internal ERC4626 buffer). It is expressed in underlying token native decimals.\"}},\"isVaultPaused()\":{\"details\":\"If the Vault is paused, all non-Recovery Mode state-changing operations on pools will revert. Note that ERC4626 buffers and the Vault have separate and independent pausing mechanisms. Pausing the Vault does not also pause buffers (though we anticipate they would likely be paused and unpaused together). Call `areBuffersPaused` to check the pause state of the buffers.\",\"returns\":{\"vaultPaused\":\"True if the Vault is paused\"}},\"pausePool(address)\":{\"details\":\"This is a permissioned function that will only work during the Pause Window set during pool factory deployment.\",\"params\":{\"pool\":\"The pool being paused\"}},\"pauseVault()\":{\"details\":\"This is a permissioned function that will only work during the Pause Window set during deployment. Note that ERC4626 buffer operations have an independent pause mechanism, which is not affected by pausing the Vault. Custom routers could still wrap/unwrap using buffers while the Vault is paused, unless buffers are also paused (with `pauseVaultBuffers`).\"},\"pauseVaultBuffers()\":{\"details\":\"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. Currently it's not possible to pause vault buffers individually. This is a permissioned call, and is reversible (see `unpauseVaultBuffers`). Note that the Vault has a separate and independent pausing mechanism. It is possible to pause the Vault (i.e. pool operations), without affecting buffers, and vice versa.\"},\"removeLiquidityFromBuffer(address,uint256,uint256,uint256)\":{\"details\":\"Only proportional exits are supported, and the sender has to be the owner of the shares. This function unlocks the Vault just for this operation; it does not work with a Router as an entrypoint. Pre-conditions: - The buffer needs to be initialized. - sharesOwner is the original msg.sender, it needs to be checked in the Router. That's why   this call is authenticated; only routers approved by the DAO can remove the liquidity of a buffer. - The buffer needs to have some liquidity and have its asset registered in `_bufferAssets` storage.\",\"params\":{\"minAmountUnderlyingOutRaw\":\"Minimum amount of underlying tokens to receive from the buffer. It is expressed in underlying token native decimals\",\"minAmountWrappedOutRaw\":\"Minimum amount of wrapped tokens to receive from the buffer. It is expressed in wrapped token native decimals\",\"sharesToRemove\":\"Amount of shares to remove from the buffer. Cannot be greater than sharesOwner's total shares. It is expressed in underlying token native decimals\",\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"removedUnderlyingBalanceRaw\":\"Amount of underlying tokens returned to the user\",\"removedWrappedBalanceRaw\":\"Amount of wrapped tokens returned to the user\"}},\"setAuthorizer(address)\":{\"details\":\"This is a permissioned call. Emits an `AuthorizerChanged` event.\",\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"setProtocolFeeController(address)\":{\"details\":\"This is a permissioned call. Emits a `ProtocolFeeControllerChanged` event.\",\"params\":{\"newProtocolFeeController\":\"The address of the new Protocol Fee Controller\"}},\"setStaticSwapFeePercentage(address,uint256)\":{\"details\":\"This is a permissioned function, disabled if the pool is paused. The swap fee percentage must be within the bounds specified by the pool's implementation of `ISwapFeePercentageBounds`. Emits the SwapFeePercentageChanged event.\",\"params\":{\"pool\":\"The address of the pool for which the static swap fee will be changed\",\"swapFeePercentage\":\"The new swap fee percentage to apply to the pool\"}},\"unpausePool(address)\":{\"details\":\"This is a permissioned function that will only work on a paused Pool within the Buffer Period set during deployment. Note that the Pool will automatically unpause after the Buffer Period expires.\",\"params\":{\"pool\":\"The pool being unpaused\"}},\"unpauseVault()\":{\"details\":\"This is a permissioned function that will only work on a paused Vault within the Buffer Period set during deployment. Note that the Vault will automatically unpause after the Buffer Period expires. As noted above, ERC4626 buffers and Vault operations on pools are independent. Unpausing the Vault does not reverse `pauseVaultBuffers`. If buffers were also paused, they will remain in that state until explicitly unpaused.\"},\"unpauseVaultBuffers()\":{\"details\":\"When buffers are paused, it's not possible to add liquidity or wrap/unwrap tokens using the Vault's `erc4626BufferWrapOrUnwrap` primitive. However, it's still possible to remove liquidity. As noted above, ERC4626 buffers and Vault operations on pools are independent. Unpausing buffers does not reverse `pauseVault`. If the Vault was also paused, it will remain in that state until explicitly unpaused. This is a permissioned call.\"},\"updateAggregateSwapFeePercentage(address,uint256)\":{\"details\":\"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateSwapFeePercentageChanged` event.\",\"params\":{\"newAggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose swap fee percentage will be updated\"}},\"updateAggregateYieldFeePercentage(address,uint256)\":{\"details\":\"Can only be called by the current protocol fee controller. Called when governance overrides a protocol fee for a specific pool, or to permissionlessly update a pool to a changed global protocol fee value (if the pool's fee has not previously been set by governance). Ensures the aggregate percentage <= FixedPoint.ONE, and also that the final value does not lose precision when stored in 24 bits (see `FEE_BITLENGTH` in VaultTypes.sol). Emits an `AggregateYieldFeePercentageChanged` event.\",\"params\":{\"newAggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose yield fee percentage will be updated\"}},\"vault()\":{\"details\":\"The main Vault contains the entrypoint and main liquidity operation implementations.\",\"returns\":{\"_0\":\"vault The address of the main Vault\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidityToBuffer(address,uint256,uint256,uint256,address)\":{\"notice\":\"Adds liquidity to an internal ERC4626 buffer in the Vault, proportionally.\"},\"areBuffersPaused()\":{\"notice\":\"Indicates whether the Vault buffers are paused.\"},\"collectAggregateFees(address)\":{\"notice\":\"Collects accumulated aggregate swap and yield fees for the specified pool.\"},\"disableQuery()\":{\"notice\":\"Disables query functionality on the Vault. Can only be called by governance.\"},\"disableQueryPermanently()\":{\"notice\":\"Disables query functionality permanently on the Vault. Can only be called by governance.\"},\"disableRecoveryMode(address)\":{\"notice\":\"Disable recovery mode for a pool.\"},\"enableQuery()\":{\"notice\":\"Enables query functionality on the Vault. Can only be called by governance.\"},\"enableRecoveryMode(address)\":{\"notice\":\"Enable recovery mode for a pool.\"},\"getBufferAsset(address)\":{\"notice\":\"Returns the asset registered for a given wrapped token.\"},\"getBufferBalance(address)\":{\"notice\":\"Returns the amount of underlying and wrapped tokens deposited in the internal buffer of the Vault.\"},\"getBufferMinimumTotalSupply()\":{\"notice\":\"Get the minimum total supply of an ERC4626 wrapped token buffer in the Vault.\"},\"getBufferOwnerShares(address,address)\":{\"notice\":\"Returns the shares (internal buffer BPT) of a liquidity owner: a user that deposited assets in the buffer.\"},\"getBufferPeriodDuration()\":{\"notice\":\"Returns the Vault's buffer period duration.\"},\"getBufferPeriodEndTime()\":{\"notice\":\"Returns the Vault's buffer period end time.\"},\"getBufferTotalShares(address)\":{\"notice\":\"Returns the supply shares (internal buffer BPT) of the ERC4626 buffer.\"},\"getMaximumPoolTokens()\":{\"notice\":\"Get the maximum number of tokens in a pool.\"},\"getMinimumPoolTokens()\":{\"notice\":\"Get the minimum number of tokens in a pool.\"},\"getMinimumTradeAmount()\":{\"notice\":\"Get the minimum trade amount in a pool operation.\"},\"getMinimumWrapAmount()\":{\"notice\":\"Get the minimum wrap amount in a buffer operation.\"},\"getPauseWindowEndTime()\":{\"notice\":\"Returns the Vault's pause window end time.\"},\"getPoolMinimumTotalSupply()\":{\"notice\":\"Get the minimum total supply of pool tokens (BPT) for an initialized pool.\"},\"getVaultPausedState()\":{\"notice\":\"Returns the paused status, and end times of the Vault's pause window and buffer period.\"},\"initializeBuffer(address,uint256,uint256,uint256,address)\":{\"notice\":\"Initializes buffer for the given wrapped token.\"},\"isVaultPaused()\":{\"notice\":\"Indicates whether the Vault is paused.\"},\"pausePool(address)\":{\"notice\":\"Pause the Pool: an emergency action which disables all pool functions.\"},\"pauseVault()\":{\"notice\":\"Pause the Vault: an emergency action which disables all operational state-changing functions on pools.\"},\"pauseVaultBuffers()\":{\"notice\":\"Pauses native vault buffers globally.\"},\"removeLiquidityFromBuffer(address,uint256,uint256,uint256)\":{\"notice\":\"Removes liquidity from an internal ERC4626 buffer in the Vault.\"},\"setAuthorizer(address)\":{\"notice\":\"Sets a new Authorizer for the Vault.\"},\"setProtocolFeeController(address)\":{\"notice\":\"Sets a new Protocol Fee Controller for the Vault.\"},\"setStaticSwapFeePercentage(address,uint256)\":{\"notice\":\"Assigns a new static swap fee percentage to the specified pool.\"},\"unpausePool(address)\":{\"notice\":\"Reverse a `pause` operation, and restore the Pool to normal functionality.\"},\"unpauseVault()\":{\"notice\":\"Reverse a `pause` operation, and restore Vault pool operations to normal functionality.\"},\"unpauseVaultBuffers()\":{\"notice\":\"Unpauses native vault buffers globally.\"},\"updateAggregateSwapFeePercentage(address,uint256)\":{\"notice\":\"Update an aggregate swap fee percentage.\"},\"updateAggregateYieldFeePercentage(address,uint256)\":{\"notice\":\"Update an aggregate yield fee percentage.\"},\"vault()\":{\"notice\":\"Returns the main Vault address.\"}},\"notice\":\"Interface for functions defined on the `VaultAdmin` contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVaultAdmin.sol\":\"IVaultAdmin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVaultErrors.sol":{"IVaultErrors":{"abi":[{"inputs":[],"name":"AfterAddLiquidityHookFailed","type":"error"},{"inputs":[],"name":"AfterInitializeHookFailed","type":"error"},{"inputs":[],"name":"AfterRemoveLiquidityHookFailed","type":"error"},{"inputs":[],"name":"AfterSwapHookFailed","type":"error"},{"inputs":[],"name":"AmountGivenZero","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"name":"AmountInAboveMax","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"AmountOutBelowMin","type":"error"},{"inputs":[],"name":"BalanceNotSettled","type":"error"},{"inputs":[],"name":"BeforeAddLiquidityHookFailed","type":"error"},{"inputs":[],"name":"BeforeInitializeHookFailed","type":"error"},{"inputs":[],"name":"BeforeRemoveLiquidityHookFailed","type":"error"},{"inputs":[],"name":"BeforeSwapHookFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"name":"BptAmountInAboveMax","type":"error"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"BptAmountOutBelowMin","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"BufferAlreadyInitialized","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"BufferNotInitialized","type":"error"},{"inputs":[],"name":"BufferSharesInvalidOwner","type":"error"},{"inputs":[],"name":"BufferSharesInvalidReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"BufferTotalSupplyTooLow","type":"error"},{"inputs":[],"name":"CannotReceiveEth","type":"error"},{"inputs":[],"name":"CannotSwapSameToken","type":"error"},{"inputs":[],"name":"DoesNotSupportAddLiquidityCustom","type":"error"},{"inputs":[],"name":"DoesNotSupportDonation","type":"error"},{"inputs":[],"name":"DoesNotSupportRemoveLiquidityCustom","type":"error"},{"inputs":[],"name":"DoesNotSupportUnbalancedLiquidity","type":"error"},{"inputs":[],"name":"DynamicSwapFeeHookFailed","type":"error"},{"inputs":[],"name":"FeePrecisionTooHigh","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"}],"name":"HookAdjustedAmountInAboveMax","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"}],"name":"HookAdjustedAmountOutBelowMin","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"HookAdjustedSwapLimit","type":"error"},{"inputs":[{"internalType":"address","name":"poolHooksContract","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"poolFactory","type":"address"}],"name":"HookRegistrationFailed","type":"error"},{"inputs":[],"name":"InvalidAddLiquidityKind","type":"error"},{"inputs":[],"name":"InvalidRemoveLiquidityKind","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"InvalidTokenConfiguration","type":"error"},{"inputs":[],"name":"InvalidTokenDecimals","type":"error"},{"inputs":[],"name":"InvalidTokenType","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"InvalidUnderlyingToken","type":"error"},{"inputs":[{"internalType":"uint256","name":"issuedShares","type":"uint256"},{"internalType":"uint256","name":"minIssuedShares","type":"uint256"}],"name":"IssuedSharesBelowMin","type":"error"},{"inputs":[],"name":"MaxTokens","type":"error"},{"inputs":[],"name":"MinTokens","type":"error"},{"inputs":[],"name":"NotEnoughBufferShares","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedUnderlyingAmount","type":"uint256"},{"internalType":"uint256","name":"actualUnderlyingAmount","type":"uint256"}],"name":"NotEnoughUnderlying","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"expectedWrappedAmount","type":"uint256"},{"internalType":"uint256","name":"actualWrappedAmount","type":"uint256"}],"name":"NotEnoughWrapped","type":"error"},{"inputs":[],"name":"NotVaultDelegateCall","type":"error"},{"inputs":[],"name":"PauseBufferPeriodDurationTooLarge","type":"error"},{"inputs":[],"name":"PercentageAboveMax","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolAlreadyInitialized","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolAlreadyRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolInRecoveryMode","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotInRecoveryMode","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotInitialized","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotPaused","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolNotRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolPauseWindowExpired","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"PoolPaused","type":"error"},{"inputs":[],"name":"ProtocolFeesExceedTotalCollected","type":"error"},{"inputs":[],"name":"QueriesDisabled","type":"error"},{"inputs":[],"name":"QueriesDisabledPermanently","type":"error"},{"inputs":[],"name":"QuoteResultSpoofed","type":"error"},{"inputs":[],"name":"RouterNotTrusted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderIsNotVault","type":"error"},{"inputs":[],"name":"SwapFeePercentageTooHigh","type":"error"},{"inputs":[],"name":"SwapFeePercentageTooLow","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"SwapLimit","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"TokenAlreadyRegistered","type":"error"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"TokenNotRegistered","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"expectedToken","type":"address"},{"internalType":"address","name":"actualToken","type":"address"}],"name":"TokensMismatch","type":"error"},{"inputs":[],"name":"TradeAmountTooSmall","type":"error"},{"inputs":[],"name":"VaultBuffersArePaused","type":"error"},{"inputs":[],"name":"VaultIsNotUnlocked","type":"error"},{"inputs":[],"name":"VaultNotPaused","type":"error"},{"inputs":[],"name":"VaultPauseWindowDurationTooLarge","type":"error"},{"inputs":[],"name":"VaultPauseWindowExpired","type":"error"},{"inputs":[],"name":"VaultPaused","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"WrapAmountTooSmall","type":"error"},{"inputs":[],"name":"WrongProtocolFeeControllerDeployment","type":"error"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"address","name":"underlyingToken","type":"address"}],"name":"WrongUnderlyingToken","type":"error"},{"inputs":[],"name":"WrongVaultAdminDeployment","type":"error"},{"inputs":[],"name":"WrongVaultExtensionDeployment","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AfterAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AfterSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountGivenZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"AmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"AmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeAddLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeInitializeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeRemoveLiquidityHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BeforeSwapHookFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"BptAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"BptAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"BufferNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BufferSharesInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"BufferTotalSupplyTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotReceiveEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSwapSameToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportAddLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportDonation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportRemoveLiquidityCustom\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DoesNotSupportUnbalancedLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DynamicSwapFeeHookFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeePrecisionTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountInAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedAmountOutBelowMin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"HookAdjustedSwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"HookRegistrationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRemoveLiquidityKind\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"InvalidUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minIssuedShares\",\"type\":\"uint256\"}],\"name\":\"IssuedSharesBelowMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBufferShares\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedUnderlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUnderlyingAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughUnderlying\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedWrappedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualWrappedAmount\",\"type\":\"uint256\"}],\"name\":\"NotEnoughWrapped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVaultDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PauseBufferPeriodDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageAboveMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInRecoveryMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeesExceedTotalCollected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueriesDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueriesDisabledPermanently\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteResultSpoofed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterNotTrusted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFeePercentageTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"SwapLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expectedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualToken\",\"type\":\"address\"}],\"name\":\"TokensMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultBuffersArePaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultIsNotUnlocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultNotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowDurationTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPauseWindowExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"WrapAmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongProtocolFeeControllerDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"}],\"name\":\"WrongUnderlyingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultAdminDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongVaultExtensionDeployment\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"AmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total BPT amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\"}}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\"}}],\"BufferAlreadyInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferNotInitialized(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"BufferTotalSupplyTooLow(uint256)\":[{\"params\":{\"totalSupply\":\"The total supply value that was below the minimum\"}}],\"FeePrecisionTooHigh()\":[{\"details\":\"Primary fee percentages are 18-decimal values, stored here in 64 bits, and calculated with full 256-bit precision. However, the resulting aggregate fees are stored in the Vault with 24-bit precision, which corresponds to 0.00001% resolution (i.e., a fee can be 1%, 1.00001%, 1.00002%, but not 1.000005%). Disallow setting fees such that there would be precision loss in the Vault, leading to a discrepancy between the aggregate fee calculated here and that stored in the Vault.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"params\":{\"amountIn\":\"The total token amount in\",\"maxAmountIn\":\"The amount of the limit that has been exceeded\",\"tokenIn\":\"The incoming token\"}}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"params\":{\"amountOut\":\"The total BPT amount out\",\"minAmountOut\":\"The amount of the limit that has been exceeded\",\"tokenOut\":\"The outgoing token\"}}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"HookRegistrationFailed(address,address,address)\":[{\"params\":{\"pool\":\"Address of the rejected pool\",\"poolFactory\":\"Address of the pool factory\",\"poolHooksContract\":\"Address of the hook contract that rejected the pool registration\"}}],\"InvalidUnderlyingToken(address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might do this (e.g., in an attempt to re-initialize the buffer).\",\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"IssuedSharesBelowMin(uint256,uint256)\":[{\"details\":\"Shares issued during initialization are below the requested amount.\"}],\"NotEnoughUnderlying(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less underlying tokens than it should.\"}],\"NotEnoughWrapped(address,uint256,uint256)\":[{\"details\":\"A wrap/unwrap operation consumed more or returned less wrapped tokens than it should.\"}],\"NotVaultDelegateCall()\":[{\"details\":\"It can only be called by the Vault via delegatecall.\"}],\"PoolAlreadyInitialized(address)\":[{\"params\":{\"pool\":\"The already initialized pool\"}}],\"PoolAlreadyRegistered(address)\":[{\"params\":{\"pool\":\"The already registered pool\"}}],\"PoolInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInRecoveryMode(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolNotInitialized(address)\":[{\"params\":{\"pool\":\"The uninitialized pool\"}}],\"PoolNotPaused(address)\":[{\"params\":{\"pool\":\"The unpaused pool\"}}],\"PoolNotRegistered(address)\":[{\"params\":{\"pool\":\"The unregistered pool\"}}],\"PoolPauseWindowExpired(address)\":[{\"params\":{\"pool\":\"The pool\"}}],\"PoolPaused(address)\":[{\"params\":{\"pool\":\"The paused pool\"}}],\"ProtocolFeesExceedTotalCollected()\":[{\"details\":\"This occurs when the sum of the parts (aggregate swap or yield fee) is greater than the whole (total swap or yield fee). Also validated when the protocol fee controller updates aggregate fee percentages in the Vault.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}],\"SwapFeePercentageTooHigh()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is above the maximum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapFeePercentageTooLow()\":[{\"details\":\"The Vault itself does not impose a universal minimum. Rather, it validates against the range specified by the `ISwapFeePercentageBounds` interface. and reverts with this error if it is below the minimum value returned by the pool. Pools with dynamic fees do not check these limits.\"}],\"SwapLimit(uint256,uint256)\":[{\"params\":{\"amount\":\"The total amount in or out\",\"limit\":\"The amount of the limit that has been exceeded\"}}],\"TokenAlreadyRegistered(address)\":[{\"params\":{\"token\":\"The duplicate token\"}}],\"TokenNotRegistered(address)\":[{\"params\":{\"token\":\"The unregistered token\"}}],\"TokensMismatch(address,address,address)\":[{\"params\":{\"actualToken\":\"The actual token found at that index\",\"expectedToken\":\"The correct token at a given index in the pool\",\"pool\":\"Address of the pool\"}}],\"WrapAmountTooSmall(address)\":[{\"params\":{\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}],\"WrongUnderlyingToken(address,address)\":[{\"details\":\"This should never happen, but a malicious wrapper contract might not return the correct address. Legitimate wrapper contracts should make the asset a constant or immutable value.\",\"params\":{\"underlyingToken\":\"The underlying token returned by `asset`\",\"wrappedToken\":\"The wrapped token corresponding to the buffer\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"AfterAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterAddLiquidity hook, indicating the transaction should revert.\"}],\"AfterInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the afterInitialize hook, indicating the transaction should revert.\"}],\"AfterRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the afterRemoveLiquidity hook, indicating the transaction should revert.\"}],\"AfterSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the afterSwap hook, indicating the transaction should revert.\"}],\"AmountGivenZero()\":[{\"notice\":\"The user tried to swap zero tokens.\"}],\"AmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A required amountIn exceeds the maximum limit specified for the operation.\"}],\"AmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The actual amount out is below the minimum limit specified for the operation.\"}],\"BalanceNotSettled()\":[{\"notice\":\"A transient accounting operation completed with outstanding token deltas.\"}],\"BeforeAddLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeAddLiquidity hook, indicating the transaction should revert.\"}],\"BeforeInitializeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeInitialize hook, indicating the transaction should revert.\"}],\"BeforeRemoveLiquidityHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeRemoveLiquidity hook, indicating the transaction should revert.\"}],\"BeforeSwapHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"BptAmountInAboveMax(uint256,uint256)\":[{\"notice\":\"The required BPT amount in exceeds the maximum limit specified for the operation.\"}],\"BptAmountOutBelowMin(uint256,uint256)\":[{\"notice\":\"The BPT amount received from adding liquidity is below the minimum specified for the operation.\"}],\"BufferAlreadyInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was already initialized.\"}],\"BufferNotInitialized(address)\":[{\"notice\":\"The buffer for the given wrapped token was not initialized.\"}],\"BufferSharesInvalidOwner()\":[{\"notice\":\"Buffer shares were burned from the zero address.\"}],\"BufferSharesInvalidReceiver()\":[{\"notice\":\"Buffer shares were minted to the zero address.\"}],\"BufferTotalSupplyTooLow(uint256)\":[{\"notice\":\"The total supply of a buffer can't be lower than the absolute minimum.\"}],\"CannotReceiveEth()\":[{\"notice\":\"The contract should not receive ETH.\"}],\"CannotSwapSameToken()\":[{\"notice\":\"The user attempted to swap a token for itself.\"}],\"DoesNotSupportAddLiquidityCustom()\":[{\"notice\":\"Pool does not support adding liquidity with a customized input.\"}],\"DoesNotSupportDonation()\":[{\"notice\":\"Pool does not support adding liquidity through donation.\"}],\"DoesNotSupportRemoveLiquidityCustom()\":[{\"notice\":\"Pool does not support removing liquidity with a customized input.\"}],\"DoesNotSupportUnbalancedLiquidity()\":[{\"notice\":\"Pool does not support adding / removing liquidity with an unbalanced input.\"}],\"DynamicSwapFeeHookFailed()\":[{\"notice\":\"The pool has returned false to the beforeSwap hook, indicating the transaction should revert.\"}],\"FeePrecisionTooHigh()\":[{\"notice\":\"Primary fee percentages result in an aggregate fee that cannot be stored with the required precision.\"}],\"HookAdjustedAmountInAboveMax(address,uint256,uint256)\":[{\"notice\":\"A hook adjusted amountIn exceeds the maximum limit specified for the operation.\"}],\"HookAdjustedAmountOutBelowMin(address,uint256,uint256)\":[{\"notice\":\"The hook adjusted amount out is below the minimum limit specified for the operation.\"}],\"HookAdjustedSwapLimit(uint256,uint256)\":[{\"notice\":\"A hook adjusted amount in or out has exceeded the limit specified in the swap request.\"}],\"HookRegistrationFailed(address,address,address)\":[{\"notice\":\"A hook contract rejected a pool on registration.\"}],\"InvalidAddLiquidityKind()\":[{\"notice\":\"Add liquidity kind not supported.\"}],\"InvalidRemoveLiquidityKind()\":[{\"notice\":\"Remove liquidity kind not supported.\"}],\"InvalidToken()\":[{\"notice\":\"Invalid tokens (e.g., zero) cannot be registered.\"}],\"InvalidTokenConfiguration()\":[{\"notice\":\"The data in a TokenConfig struct is inconsistent or unsupported.\"}],\"InvalidTokenDecimals()\":[{\"notice\":\"Tokens with more than 18 decimals are not supported.\"}],\"InvalidTokenType()\":[{\"notice\":\"The token type given in a TokenConfig during pool registration is invalid.\"}],\"InvalidUnderlyingToken(address)\":[{\"notice\":\"A wrapped token reported the zero address as its underlying token asset.\"}],\"MaxTokens()\":[{\"notice\":\"The token count is above the maximum allowed.\"}],\"MinTokens()\":[{\"notice\":\"The token count is below the minimum allowed.\"}],\"NotEnoughBufferShares()\":[{\"notice\":\"The user is trying to remove more than their allocated shares from the buffer.\"}],\"NotVaultDelegateCall()\":[{\"notice\":\"The `VaultExtension` contract was called by an account directly.\"}],\"PauseBufferPeriodDurationTooLarge()\":[{\"notice\":\"The caller specified a buffer period longer than the maximum.\"}],\"PercentageAboveMax()\":[{\"notice\":\"A given percentage is above the maximum (usually a value close to FixedPoint.ONE, or 1e18 wei).\"}],\"PoolAlreadyInitialized(address)\":[{\"notice\":\"A pool has already been initialized. `initialize` may only be called once.\"}],\"PoolAlreadyRegistered(address)\":[{\"notice\":\"A pool has already been registered. `registerPool` may only be called once.\"}],\"PoolInRecoveryMode(address)\":[{\"notice\":\"Cannot enable recovery mode when already enabled.\"}],\"PoolNotInRecoveryMode(address)\":[{\"notice\":\"Cannot disable recovery mode when not enabled.\"}],\"PoolNotInitialized(address)\":[{\"notice\":\"A referenced pool has not been initialized.\"}],\"PoolNotPaused(address)\":[{\"notice\":\"Governance tried to unpause the Pool when it was not paused.\"}],\"PoolNotRegistered(address)\":[{\"notice\":\"A pool has not been registered.\"}],\"PoolPauseWindowExpired(address)\":[{\"notice\":\"Governance tried to pause a Pool after the pause period expired.\"}],\"PoolPaused(address)\":[{\"notice\":\"A user tried to perform an operation involving a paused Pool.\"}],\"ProtocolFeesExceedTotalCollected()\":[{\"notice\":\"Error raised when there is an overflow in the fee calculation.\"}],\"QueriesDisabled()\":[{\"notice\":\"A user tried to execute a query operation when they were disabled.\"}],\"QueriesDisabledPermanently()\":[{\"notice\":\"An admin tried to re-enable queries, but they were disabled permanently.\"}],\"QuoteResultSpoofed()\":[{\"notice\":\"Quote reverted with a reserved error code.\"}],\"RouterNotTrusted()\":[{\"notice\":\"An unauthorized Router tried to call a permissioned function (i.e., using the Vault's token allowance).\"}],\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}],\"SwapFeePercentageTooHigh()\":[{\"notice\":\"Error raised when the swap fee percentage is greater than the maximum allowed value.\"}],\"SwapFeePercentageTooLow()\":[{\"notice\":\"Error raised when the swap fee percentage is less than the minimum allowed value.\"}],\"SwapLimit(uint256,uint256)\":[{\"notice\":\"An amount in or out has exceeded the limit specified in the swap request.\"}],\"TokenAlreadyRegistered(address)\":[{\"notice\":\"A token was already registered (i.e., it is a duplicate in the pool).\"}],\"TokenNotRegistered(address)\":[{\"notice\":\"The user attempted to operate with a token that is not in the pool.\"}],\"TokensMismatch(address,address,address)\":[{\"notice\":\"The token list passed into an operation does not match the pool tokens in the pool.\"}],\"TradeAmountTooSmall()\":[{\"notice\":\"The amount given or calculated for an operation is below the minimum limit.\"}],\"VaultBuffersArePaused()\":[{\"notice\":\"Buffer operation attempted while vault buffers are paused.\"}],\"VaultIsNotUnlocked()\":[{\"notice\":\"A user called a Vault function (swap, add/remove liquidity) outside the lock context.\"}],\"VaultNotPaused()\":[{\"notice\":\"Governance tried to unpause the Vault when it was not paused.\"}],\"VaultPauseWindowDurationTooLarge()\":[{\"notice\":\"The caller specified a pause window period longer than the maximum.\"}],\"VaultPauseWindowExpired()\":[{\"notice\":\"Governance tried to pause the Vault after the pause period expired.\"}],\"VaultPaused()\":[{\"notice\":\"A user tried to perform an operation while the Vault was paused.\"}],\"WrapAmountTooSmall(address)\":[{\"notice\":\"The amount given to wrap/unwrap was too small, which can introduce rounding issues.\"}],\"WrongProtocolFeeControllerDeployment()\":[{\"notice\":\"The `ProtocolFeeController` contract was configured with an incorrect Vault address.\"}],\"WrongUnderlyingToken(address,address)\":[{\"notice\":\"The wrapped token asset does not match the underlying token.\"}],\"WrongVaultAdminDeployment()\":[{\"notice\":\"The `VaultAdmin` contract was configured with an incorrect Vault address.\"}],\"WrongVaultExtensionDeployment()\":[{\"notice\":\"The `VaultExtension` contract was configured with an incorrect Vault address.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Errors are declared inside an interface (namespace) to improve DX with Typechain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVaultErrors.sol\":\"IVaultErrors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVaultEvents.sol":{"IVaultEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"}],"name":"AggregateSwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"}],"name":"AggregateYieldFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"burnedShares","type":"uint256"}],"name":"BufferSharesBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"issuedShares","type":"uint256"}],"name":"BufferSharesMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":true,"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"amountsAddedRaw","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"swapFeeAmountsRaw","type":"uint256[]"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountUnderlying","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountWrapped","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"LiquidityAddedToBuffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":true,"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"amountsRemovedRaw","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"swapFeeAmountsRaw","type":"uint256[]"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountUnderlying","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountWrapped","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"LiquidityRemovedFromBuffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"}],"name":"PoolInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PoolPausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"bool","name":"recoveryMode","type":"bool"}],"name":"PoolRecoveryModeStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"address","name":"factory","type":"address"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"indexed":false,"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"indexed":false,"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple"},{"components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}],"indexed":false,"internalType":"struct HooksConfig","name":"hooksConfig","type":"tuple"},{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"indexed":false,"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IProtocolFeeController","name":"newProtocolFeeController","type":"address"}],"name":"ProtocolFeeControllerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"swapFeeAmount","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"burnedShares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"withdrawnUnderlying","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"Unwrap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"bytes32","name":"eventKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"eventData","type":"bytes"}],"name":"VaultAuxiliary","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"VaultBuffersPausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"VaultPausedStateChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"VaultQueriesDisabled","type":"event"},{"anonymous":false,"inputs":[],"name":"VaultQueriesEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"depositedUnderlying","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mintedShares","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"bufferBalances","type":"bytes32"}],"name":"Wrap","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateSwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"}],\"name\":\"AggregateYieldFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuedShares\",\"type\":\"uint256\"}],\"name\":\"BufferSharesMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAddedRaw\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsRaw\",\"type\":\"uint256[]\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"LiquidityAddedToBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsRemovedRaw\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"swapFeeAmountsRaw\",\"type\":\"uint256[]\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWrapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"LiquidityRemovedFromBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PoolPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"recoveryMode\",\"type\":\"bool\"}],\"name\":\"PoolRecoveryModeStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct HooksConfig\",\"name\":\"hooksConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IProtocolFeeController\",\"name\":\"newProtocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeeAmount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"eventKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"eventData\",\"type\":\"bytes\"}],\"name\":\"VaultAuxiliary\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultBuffersPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"VaultPausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultQueriesDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultQueriesEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositedUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bufferBalances\",\"type\":\"bytes32\"}],\"name\":\"Wrap\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Events are declared inside an interface (namespace) to improve DX with Typechain.\",\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateSwapFeePercentage\":\"The new aggregate swap fee percentage\",\"pool\":\"The pool whose aggregate swap fee percentage changed\"}},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"details\":\"The `ProtocolFeeController` will emit an event with the underlying change.\",\"params\":{\"aggregateYieldFeePercentage\":\"The new aggregate yield fee percentage\",\"pool\":\"The pool whose aggregate yield fee percentage changed\"}},\"AuthorizerChanged(address)\":{\"params\":{\"newAuthorizer\":\"The address of the new authorizer\"}},\"BufferSharesBurned(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"burnedShares\":\"The amount of \\\"internal BPT\\\" shares burned\",\"from\":\"The owner of the burned shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"BufferSharesMinted(address,address,uint256)\":{\"details\":\"The shares are not tokenized like pool BPT, but accounted for in the Vault. `getBufferOwnerShares` retrieves the current total shares for a given buffer and address, and `getBufferTotalShares` returns the \\\"totalSupply\\\" of a buffer.\",\"params\":{\"issuedShares\":\"The amount of \\\"internal BPT\\\" shares created\",\"to\":\"The owner of the minted shares\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityAdded(address,address,uint8,uint256,uint256[],uint256[])\":{\"params\":{\"amountsAddedRaw\":\"The amount of each token that was added, sorted in token registration order\",\"kind\":\"The add liquidity operation type (e.g., proportional, custom)\",\"liquidityProvider\":\"The user performing the operation\",\"pool\":\"The pool with liquidity added\",\"swapFeeAmountsRaw\":\"The total swap fees charged, sorted in token registration order\",\"totalSupply\":\"The total supply of the pool after the operation\"}},\"LiquidityAddedToBuffer(address,uint256,uint256,bytes32)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was deposited\",\"amountWrapped\":\"The amount of the wrapped token that was deposited\",\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"LiquidityRemoved(address,address,uint8,uint256,uint256[],uint256[])\":{\"params\":{\"amountsRemovedRaw\":\"The amount of each token that was removed, sorted in token registration order\",\"kind\":\"The remove liquidity operation type (e.g., proportional, custom)\",\"liquidityProvider\":\"The user performing the operation\",\"pool\":\"The pool with liquidity removed\",\"swapFeeAmountsRaw\":\"The total swap fees charged, sorted in token registration order\",\"totalSupply\":\"The total supply of the pool after the operation\"}},\"LiquidityRemovedFromBuffer(address,uint256,uint256,bytes32)\":{\"details\":\"The underlying token can be derived from the wrapped token, so it's not included here.\",\"params\":{\"amountUnderlying\":\"The amount of the underlying token that was withdrawn\",\"amountWrapped\":\"The amount of the wrapped token that was withdrawn\",\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"wrappedToken\":\"The wrapped token that identifies the buffer\"}},\"PoolInitialized(address)\":{\"params\":{\"pool\":\"The pool being initialized\"}},\"PoolPausedStateChanged(address,bool)\":{\"params\":{\"paused\":\"True if the pool was paused\",\"pool\":\"The pool that was just paused or unpaused\"}},\"PoolRecoveryModeStateChanged(address,bool)\":{\"params\":{\"pool\":\"The pool\",\"recoveryMode\":\"True if recovery mode was enabled\"}},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"params\":{\"factory\":\"The factory creating the pool\",\"hooksConfig\":\"Flags indicating which hooks the pool supports and address of hooks contract\",\"liquidityManagement\":\"Supported liquidity management hook flags\",\"pauseWindowEndTime\":\"The pool's pause window end time\",\"pool\":\"The pool being registered\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The static swap fee of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"ProtocolFeeControllerChanged(address)\":{\"params\":{\"newProtocolFeeController\":\"The address of the new protocol fee controller\"}},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\"Number of tokenIn tokens\",\"amountOut\":\"Number of tokenOut tokens\",\"pool\":\"The pool with the tokens being swapped\",\"swapFeeAmount\":\"Swap fee amount paid\",\"swapFeePercentage\":\"Swap fee percentage applied (can differ if dynamic)\",\"tokenIn\":\"The token entering the Vault (balance increases)\",\"tokenOut\":\"The token leaving the Vault (balance decreases)\"}},\"SwapFeePercentageChanged(address,uint256)\":{\"params\":{\"swapFeePercentage\":\"The new swap fee percentage for the pool\"}},\"Unwrap(address,uint256,uint256,bytes32)\":{\"params\":{\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"burnedShares\":\"Number of shares (wrapped tokens) burned\",\"withdrawnUnderlying\":\"Number of underlying tokens withdrawn\",\"wrappedToken\":\"The wrapped token address\"}},\"VaultAuxiliary(address,bytes32,bytes)\":{\"params\":{\"eventData\":\"Encoded event data\",\"eventKey\":\"Event key\",\"pool\":\"Pool address\"}},\"VaultBuffersPausedStateChanged(bool)\":{\"details\":\"If buffers all paused, all buffer operations (i.e., all calls through the Router with `isBuffer` set to true) will revert.\",\"params\":{\"paused\":\"True if the Vault buffers were paused\"}},\"VaultPausedStateChanged(bool)\":{\"params\":{\"paused\":\"True if the Vault was paused\"}},\"Wrap(address,uint256,uint256,bytes32)\":{\"params\":{\"bufferBalances\":\"The final buffer balances, packed in 128-bit words (underlying, wrapped)\",\"depositedUnderlying\":\"Number of underlying tokens deposited\",\"mintedShares\":\"Number of shares (wrapped tokens) minted\",\"wrappedToken\":\"The wrapped token address\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"AggregateSwapFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate swap fee.\"},\"AggregateYieldFeePercentageChanged(address,uint256)\":{\"notice\":\"A protocol or pool creator fee has changed, causing an update to the aggregate yield fee.\"},\"AuthorizerChanged(address)\":{\"notice\":\"A new authorizer is set by `setAuthorizer`.\"},\"BufferSharesBurned(address,address,uint256)\":{\"notice\":\"Buffer shares were burned for an ERC4626 buffer corresponding to a given wrapped token.\"},\"BufferSharesMinted(address,address,uint256)\":{\"notice\":\"Buffer shares were minted for an ERC4626 buffer corresponding to a given wrapped token.\"},\"LiquidityAdded(address,address,uint8,uint256,uint256[],uint256[])\":{\"notice\":\"Liquidity has been added to a pool (including initialization).\"},\"LiquidityAddedToBuffer(address,uint256,uint256,bytes32)\":{\"notice\":\"Liquidity was added to an ERC4626 buffer corresponding to the given wrapped token.\"},\"LiquidityRemoved(address,address,uint8,uint256,uint256[],uint256[])\":{\"notice\":\"Liquidity has been removed from a pool.\"},\"LiquidityRemovedFromBuffer(address,uint256,uint256,bytes32)\":{\"notice\":\"Liquidity was removed from an ERC4626 buffer.\"},\"PoolInitialized(address)\":{\"notice\":\"A Pool was initialized by calling `initialize`.\"},\"PoolPausedStateChanged(address,bool)\":{\"notice\":\"A Pool's pause status has changed.\"},\"PoolRecoveryModeStateChanged(address,bool)\":{\"notice\":\"Recovery mode has been enabled or disabled for a pool.\"},\"PoolRegistered(address,address,(address,uint8,address,bool)[],uint256,uint32,(address,address,address),(bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,address),(bool,bool,bool,bool))\":{\"notice\":\"A Pool was registered by calling `registerPool`.\"},\"ProtocolFeeControllerChanged(address)\":{\"notice\":\"A new protocol fee controller is set by `setProtocolFeeController`.\"},\"Swap(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"A swap has occurred.\"},\"SwapFeePercentageChanged(address,uint256)\":{\"notice\":\"Emitted when the swap fee percentage of a pool is updated.\"},\"Unwrap(address,uint256,uint256,bytes32)\":{\"notice\":\"An unwrap operation has occurred.\"},\"VaultAuxiliary(address,bytes32,bytes)\":{\"notice\":\"Pools can use this event to emit event data from the Vault.\"},\"VaultBuffersPausedStateChanged(bool)\":{\"notice\":\"The Vault buffers pause status has changed.\"},\"VaultPausedStateChanged(bool)\":{\"notice\":\"The Vault's pause status has changed.\"},\"VaultQueriesDisabled()\":{\"notice\":\"`disableQuery` has been called on the Vault, disabling query functionality.\"},\"VaultQueriesEnabled()\":{\"notice\":\"`enableQuery` has been called on the Vault, enabling query functionality.\"},\"Wrap(address,uint256,uint256,bytes32)\":{\"notice\":\"A wrap operation has occurred.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVaultEvents.sol\":\"IVaultEvents\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVaultExtension.sol":{"IVaultExtension":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"tokenAllowance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"tokenBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"uint256","name":"amountGivenScaled18","type":"uint256"},{"internalType":"uint256[]","name":"balancesScaled18","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"},{"internalType":"address","name":"router","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct PoolSwapParams","name":"swapParams","type":"tuple"}],"name":"computeDynamicSwapFeePercentage","outputs":[{"internalType":"uint256","name":"dynamicSwapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"eventKey","type":"bytes32"},{"internalType":"bytes","name":"eventData","type":"bytes"}],"name":"emitAuxiliaryEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getAddLiquidityCalledFlag","outputs":[{"internalType":"bool","name":"liquidityAdded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getAggregateSwapFeeAmount","outputs":[{"internalType":"uint256","name":"swapFeeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getAggregateYieldFeeAmount","outputs":[{"internalType":"uint256","name":"yieldFeeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"authorizer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getBptRate","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getCurrentLiveBalances","outputs":[{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"getERC4626BufferAsset","outputs":[{"internalType":"address","name":"asset","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getHooksConfig","outputs":[{"components":[{"internalType":"bool","name":"enableHookAdjustedAmounts","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallAfterInitialize","type":"bool"},{"internalType":"bool","name":"shouldCallComputeDynamicSwapFee","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeSwap","type":"bool"},{"internalType":"bool","name":"shouldCallAfterSwap","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterAddLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallBeforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"shouldCallAfterRemoveLiquidity","type":"bool"},{"internalType":"address","name":"hooksContract","type":"address"}],"internalType":"struct HooksConfig","name":"hooksConfig","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonzeroDeltaCount","outputs":[{"internalType":"uint256","name":"nonzeroDeltaCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolConfig","outputs":[{"components":[{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"},{"internalType":"uint256","name":"staticSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateSwapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"aggregateYieldFeePercentage","type":"uint256"},{"internalType":"uint40","name":"tokenDecimalDiffs","type":"uint40"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"isPoolRegistered","type":"bool"},{"internalType":"bool","name":"isPoolInitialized","type":"bool"},{"internalType":"bool","name":"isPoolPaused","type":"bool"},{"internalType":"bool","name":"isPoolInRecoveryMode","type":"bool"}],"internalType":"struct PoolConfig","name":"poolConfig","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolData","outputs":[{"components":[{"internalType":"PoolConfigBits","name":"poolConfigBits","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]"},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"balancesLiveScaled18","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"},{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"}],"internalType":"struct PoolData","name":"poolData","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolPausedState","outputs":[{"internalType":"bool","name":"poolPaused","type":"bool"},{"internalType":"uint32","name":"poolPauseWindowEndTime","type":"uint32"},{"internalType":"uint32","name":"poolBufferPeriodEndTime","type":"uint32"},{"internalType":"address","name":"pauseManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolRoleAccounts","outputs":[{"components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"components":[{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenInfo[]","name":"tokenInfo","type":"tuple[]"},{"internalType":"uint256[]","name":"balancesRaw","type":"uint256[]"},{"internalType":"uint256[]","name":"lastBalancesLiveScaled18","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolTokenRates","outputs":[{"internalType":"uint256[]","name":"decimalScalingFactors","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenRates","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeeController","outputs":[{"internalType":"contract IProtocolFeeController","name":"protocolFeeController","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getReservesOf","outputs":[{"internalType":"uint256","name":"reserveAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getStaticSwapFeePercentage","outputs":[{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getTokenDelta","outputs":[{"internalType":"int256","name":"tokenDelta","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultAdmin","outputs":[{"internalType":"address","name":"vaultAdmin","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"initialize","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"}],"name":"isERC4626BufferInitialized","outputs":[{"internalType":"bool","name":"isBufferInitialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolInRecoveryMode","outputs":[{"internalType":"bool","name":"inRecoveryMode","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolInitialized","outputs":[{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolPaused","outputs":[{"internalType":"bool","name":"poolPaused","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolRegistered","outputs":[{"internalType":"bool","name":"registered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isQueryDisabled","outputs":[{"internalType":"bool","name":"queryDisabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isQueryDisabledPermanently","outputs":[{"internalType":"bool","name":"queryDisabledPermanently","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isUnlocked","outputs":[{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"quote","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"quoteAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"},{"internalType":"contract IRateProvider","name":"rateProvider","type":"address"},{"internalType":"bool","name":"paysYieldFees","type":"bool"}],"internalType":"struct TokenConfig[]","name":"tokenConfig","type":"tuple[]"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"internalType":"uint32","name":"pauseWindowEndTime","type":"uint32"},{"internalType":"bool","name":"protocolFeeExempt","type":"bool"},{"components":[{"internalType":"address","name":"pauseManager","type":"address"},{"internalType":"address","name":"swapFeeManager","type":"address"},{"internalType":"address","name":"poolCreator","type":"address"}],"internalType":"struct PoolRoleAccounts","name":"roleAccounts","type":"tuple"},{"internalType":"address","name":"poolHooksContract","type":"address"},{"components":[{"internalType":"bool","name":"disableUnbalancedLiquidity","type":"bool"},{"internalType":"bool","name":"enableAddLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableRemoveLiquidityCustom","type":"bool"},{"internalType":"bool","name":"enableDonation","type":"bool"}],"internalType":"struct LiquidityManagement","name":"liquidityManagement","type":"tuple"}],"name":"registerPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"}],"name":"removeLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"tokenTotalSupply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address,address)":"927da105","approve(address,address,uint256)":"e1f21c67","balanceOf(address,address)":"f7888aec","computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))":"4d472bdd","emitAuxiliaryEvent(bytes32,bytes)":"c8088247","getAddLiquidityCalledFlag(address)":"ace9b89b","getAggregateSwapFeeAmount(address,address)":"85e0b999","getAggregateYieldFeeAmount(address,address)":"00fdfa13","getAuthorizer()":"aaabadc5","getBptRate(address)":"4f037ee7","getCurrentLiveBalances(address)":"535cfd8a","getERC4626BufferAsset(address)":"4afbaf5a","getHooksConfig(address)":"ce8630d4","getNonzeroDeltaCount()":"db817187","getPoolConfig(address)":"f29486a1","getPoolData(address)":"13d21cdf","getPoolPausedState(address)":"15e32046","getPoolRoleAccounts(address)":"e9ddeb26","getPoolTokenInfo(address)":"67e0e076","getPoolTokenRates(address)":"7e361bde","getPoolTokens(address)":"ca4f2803","getProtocolFeeController()":"85f2dbd4","getReservesOf(address)":"96787092","getStaticSwapFeePercentage(address)":"b45090f9","getTokenDelta(address)":"9e825ff5","getVaultAdmin()":"1ba0ae45","initialize(address,address,address[],uint256[],uint256,bytes)":"ba8a2be0","isERC4626BufferInitialized(address)":"6844846b","isPoolInRecoveryMode(address)":"be7d628a","isPoolInitialized(address)":"532cec7c","isPoolPaused(address)":"6c9bc732","isPoolRegistered(address)":"c673bdaf","isQueryDisabled()":"b4aef0ab","isQueryDisabledPermanently()":"13ef8a5d","isUnlocked()":"8380edb7","quote(bytes)":"edfa3568","quoteAndRevert(bytes)":"757d64b3","registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))":"eeec802f","removeLiquidityRecovery(address,address,uint256,uint256[])":"a07d6040","totalSupply(address)":"e4dc2aa4","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenScaled18\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct PoolSwapParams\",\"name\":\"swapParams\",\"type\":\"tuple\"}],\"name\":\"computeDynamicSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dynamicSwapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"eventKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"eventData\",\"type\":\"bytes\"}],\"name\":\"emitAuxiliaryEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getAddLiquidityCalledFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"liquidityAdded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAggregateSwapFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAggregateYieldFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldFeeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"authorizer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getBptRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getCurrentLiveBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"getERC4626BufferAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getHooksConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"enableHookAdjustedAmounts\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallComputeDynamicSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallBeforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldCallAfterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"hooksContract\",\"type\":\"address\"}],\"internalType\":\"struct HooksConfig\",\"name\":\"hooksConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonzeroDeltaCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonzeroDeltaCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"staticSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aggregateYieldFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"tokenDecimalDiffs\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isPoolRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPoolInRecoveryMode\",\"type\":\"bool\"}],\"internalType\":\"struct PoolConfig\",\"name\":\"poolConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolData\",\"outputs\":[{\"components\":[{\"internalType\":\"PoolConfigBits\",\"name\":\"poolConfigBits\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesLiveScaled18\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"}],\"internalType\":\"struct PoolData\",\"name\":\"poolData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"poolPaused\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"poolPauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"poolBufferPeriodEndTime\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolRoleAccounts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"tokenInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balancesRaw\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lastBalancesLiveScaled18\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokenRates\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"decimalScalingFactors\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenRates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeController\",\"outputs\":[{\"internalType\":\"contract IProtocolFeeController\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getReservesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getStaticSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"tokenDelta\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultAdmin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"}],\"name\":\"isERC4626BufferInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isBufferInitialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolInRecoveryMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"inRecoveryMode\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"poolPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"registered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQueryDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"queryDisabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQueryDisabledPermanently\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"queryDisabledPermanently\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"quoteAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract IRateProvider\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paysYieldFees\",\"type\":\"bool\"}],\"internalType\":\"struct TokenConfig[]\",\"name\":\"tokenConfig\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"protocolFeeExempt\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"pauseManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolCreator\",\"type\":\"address\"}],\"internalType\":\"struct PoolRoleAccounts\",\"name\":\"roleAccounts\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"poolHooksContract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableUnbalancedLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableAddLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableRemoveLiquidityCustom\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enableDonation\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidityManagement\",\"name\":\"liquidityManagement\",\"type\":\"tuple\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"}],\"name\":\"removeLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenTotalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"`VaultExtension` handles less critical or frequently used functions, since delegate calls through the Vault are more expensive than direct calls. The main Vault contains the core code for swaps and liquidity operations.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"params\":{\"owner\":\"Address of the owner\",\"spender\":\"Address of the spender\",\"token\":\"Address of the token\"},\"returns\":{\"tokenAllowance\":\"Amount of tokens the spender is allowed to spend\"}},\"approve(address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to approve\",\"owner\":\"Address of the owner\",\"spender\":\"Address of the spender\"},\"returns\":{\"success\":\"True if successful, false otherwise\"}},\"balanceOf(address,address)\":{\"params\":{\"account\":\"Address of the account\",\"token\":\"Address of the token\"},\"returns\":{\"tokenBalance\":\"Token balance of the account\"}},\"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))\":{\"details\":\"Reverts if the hook doesn't return the success flag set to `true`.\",\"params\":{\"pool\":\"The pool\",\"swapParams\":\"The swap parameters used to compute the fee\"},\"returns\":{\"dynamicSwapFeePercentage\":\"The dynamic swap fee percentage\"}},\"emitAuxiliaryEvent(bytes32,bytes)\":{\"params\":{\"eventData\":\"Encoded event data\",\"eventKey\":\"Event key\"}},\"getAddLiquidityCalledFlag(address)\":{\"details\":\"Taxing remove liquidity proportional whenever liquidity was added in the same `unlock` call adds an extra layer of security, discouraging operations that try to undo others for profit. Remove liquidity proportional is the only standard way to exit a position without fees, and this flag is used to enable fees in that case. It also discourages indirect swaps via unbalanced add and remove proportional, as they are expected to be worse than a simple swap for every pool type.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"liquidityAdded\":\"True if liquidity has been added to this pool in the current transaction Note that there is no `sessionId` argument; it always returns the value for the current (i.e., latest) session.\"}},\"getAggregateSwapFeeAmount(address,address)\":{\"params\":{\"pool\":\"The address of the pool for which aggregate fees have been collected\",\"token\":\"The address of the token in which fees have been accumulated\"},\"returns\":{\"swapFeeAmount\":\"The total amount of fees accumulated in the specified token\"}},\"getAggregateYieldFeeAmount(address,address)\":{\"params\":{\"pool\":\"The address of the pool for which aggregate fees have been collected\",\"token\":\"The address of the token in which fees have been accumulated\"},\"returns\":{\"yieldFeeAmount\":\"The total amount of fees accumulated in the specified token\"}},\"getAuthorizer()\":{\"details\":\"The authorizer holds the permissions granted by governance. It is set on Vault deployment, and can be changed through a permissioned call.\",\"returns\":{\"authorizer\":\"Address of the authorizer contract\"}},\"getBptRate(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"rate\":\"BPT rate\"}},\"getCurrentLiveBalances(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"balancesLiveScaled18\":\"Token balances after paying yield fees, applying decimal scaling and rates\"}},\"getERC4626BufferAsset(address)\":{\"details\":\"To avoid malicious wrappers (e.g., that might potentially change their asset after deployment), routers should never call `wrapper.asset()` directly, at least without checking it against the asset registered with the Vault on initialization.\",\"params\":{\"wrappedToken\":\"The wrapped token specifying the buffer\"},\"returns\":{\"asset\":\"The underlying asset of the wrapped token\"}},\"getHooksConfig(address)\":{\"details\":\"The `HooksConfig` contains flags indicating which pool hooks are implemented.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"hooksConfig\":\"The hooks configuration as a `HooksConfig` struct\"}},\"getNonzeroDeltaCount()\":{\"returns\":{\"nonzeroDeltaCount\":\"The current value of `_nonzeroDeltaCount`\"}},\"getPoolConfig(address)\":{\"details\":\"The `PoolConfig` contains liquidity management and other state flags, fee percentages, the pause window.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"poolConfig\":\"The pool configuration as a `PoolConfig` struct\"}},\"getPoolData(address)\":{\"details\":\"This contains the pool configuration (flags), tokens and token types, rates, scaling factors, and balances.\",\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"poolData\":\"The `PoolData` result\"}},\"getPoolPausedState(address)\":{\"details\":\"Note that even when set to a paused state, the pool will automatically unpause at the end of the buffer period. Balancer timestamps are 32 bits.\",\"params\":{\"pool\":\"The pool whose data is requested\"},\"returns\":{\"pauseManager\":\"The pause manager, or the zero address\",\"poolBufferPeriodEndTime\":\"The timestamp after which the Pool unpauses itself (if paused)\",\"poolPauseWindowEndTime\":\"The timestamp of the end of the Pool's pause window\",\"poolPaused\":\"True if the Pool is paused\"}},\"getPoolRoleAccounts(address)\":{\"params\":{\"pool\":\"The address of the pool whose roles are being queried\"},\"returns\":{\"roleAccounts\":\"A struct containing the role accounts for the pool (or 0 if unassigned)\"}},\"getPoolTokenInfo(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"balancesRaw\":\"Current native decimal balances of the pool tokens, sorted in token registration order\",\"lastBalancesLiveScaled18\":\"Last saved live balances, sorted in token registration order\",\"tokenInfo\":\"Token info structs (type, rate provider, yield flag), sorted in token registration order\",\"tokens\":\"The pool tokens, sorted in registration order\"}},\"getPoolTokenRates(address)\":{\"details\":\"This function performs external calls if tokens are yield-bearing. All returned arrays are in token registration order.\",\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"decimalScalingFactors\":\"Conversion factor used to adjust for token decimals for uniform precision in calculations. FP(1) for 18-decimal tokens\",\"tokenRates\":\"18-decimal FP values for rate tokens (e.g., yield-bearing), or FP(1) for standard tokens\"}},\"getPoolTokens(address)\":{\"params\":{\"pool\":\"Address of the pool\"},\"returns\":{\"tokens\":\"List of tokens in the pool\"}},\"getProtocolFeeController()\":{\"returns\":{\"protocolFeeController\":\"Address of the ProtocolFeeController\"}},\"getReservesOf(address)\":{\"params\":{\"token\":\"The token for which to retrieve the reserve\"},\"returns\":{\"reserveAmount\":\"The amount of reserves for the given token\"}},\"getStaticSwapFeePercentage(address)\":{\"params\":{\"pool\":\"The address of the pool whose static swap fee percentage is being queried\"},\"returns\":{\"swapFeePercentage\":\"The current static swap fee percentage for the specified pool\"}},\"getTokenDelta(address)\":{\"details\":\"This function allows reading the value from the `_tokenDeltas` mapping.\",\"params\":{\"token\":\"The token for which the delta is being fetched\"},\"returns\":{\"tokenDelta\":\"The delta of the specified token\"}},\"getVaultAdmin()\":{\"details\":\"The VaultAdmin contract mostly implements permissioned functions.\",\"returns\":{\"vaultAdmin\":\"The address of the Vault admin\"}},\"initialize(address,address,address[],uint256[],uint256,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of input tokens\",\"minBptAmountOut\":\"Minimum amount of output pool tokens\",\"pool\":\"Address of the pool to initialize\",\"to\":\"Address that will receive the output BPT\",\"tokens\":\"Tokens used to seed the pool (must match the registered tokens)\",\"userData\":\"Additional (optional) data required for adding initial liquidity\"},\"returns\":{\"bptAmountOut\":\"Output pool token amount\"}},\"isERC4626BufferInitialized(address)\":{\"details\":\"An initialized buffer should have an asset registered in the Vault.\",\"params\":{\"wrappedToken\":\"Address of the wrapped token that implements IERC4626\"},\"returns\":{\"isBufferInitialized\":\"True if the ERC4626 buffer is initialized\"}},\"isPoolInRecoveryMode(address)\":{\"details\":\"Recovery Mode enables a safe proportional withdrawal path, with no external calls.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"inRecoveryMode\":\"True if the pool is in Recovery Mode, false otherwise\"}},\"isPoolInitialized(address)\":{\"details\":\"An initialized pool can be considered registered as well.\",\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"initialized\":\"True if the pool is initialized, false otherwise\"}},\"isPoolPaused(address)\":{\"details\":\"If a pool is paused, all non-Recovery Mode state-changing operations will revert.\",\"params\":{\"pool\":\"The pool to be checked\"},\"returns\":{\"poolPaused\":\"True if the pool is paused\"}},\"isPoolRegistered(address)\":{\"params\":{\"pool\":\"Address of the pool to check\"},\"returns\":{\"registered\":\"True if the pool is registered, false otherwise\"}},\"isQueryDisabled()\":{\"details\":\"If true, queries might either be disabled temporarily or permanently.\",\"returns\":{\"queryDisabled\":\"True if query functionality is reversibly disabled\"}},\"isQueryDisabledPermanently()\":{\"details\":\"This is a one-way switch. Once queries are disabled permanently, they can never be re-enabled.\",\"returns\":{\"queryDisabledPermanently\":\"True if query functionality is permanently disabled\"}},\"isUnlocked()\":{\"details\":\"The Vault must be unlocked to perform state-changing liquidity operations.\",\"returns\":{\"unlocked\":\"True if the Vault is unlocked, false otherwise\"}},\"quote(bytes)\":{\"details\":\"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"},\"returns\":{\"result\":\"Resulting data from the call\"}},\"quoteAndRevert(bytes)\":{\"details\":\"Used to query a set of operations on the Vault. Only off-chain eth_call are allowed, anything else will revert. Allows querying any operation on the Vault that has the `onlyWhenUnlocked` modifier. Allows the external calling of a function via the Vault contract to access Vault's functions guarded by `onlyWhenUnlocked`. `transient` modifier ensuring balances changes within the Vault are settled. This call always reverts, returning the result in the revert reason.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"}},\"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))\":{\"details\":\"A pool can opt-out of pausing by providing a zero value for the pause window, or allow pausing indefinitely by providing a large value. (Pool pause windows are not limited by the Vault maximums.) The vault defines an additional buffer period during which a paused pool will stay paused. After the buffer period passes, a paused pool will automatically unpause. Balancer timestamps are 32 bits. A pool can opt out of Balancer governance pausing by providing a custom `pauseManager`. This might be a multi-sig contract or an arbitrary smart contract with its own access controls, that forwards calls to the Vault. If the zero address is provided for the `pauseManager`, permissions for pausing the pool will default to the authorizer.\",\"params\":{\"liquidityManagement\":\"Liquidity management flags with implemented methods\",\"pauseWindowEndTime\":\"The timestamp after which it is no longer possible to pause the pool\",\"pool\":\"The address of the pool being registered\",\"poolHooksContract\":\"Contract that implements the hooks for the pool\",\"protocolFeeExempt\":\"If true, the pool's initial aggregate fees will be set to 0\",\"roleAccounts\":\"Addresses the Vault will allow to change certain pool settings\",\"swapFeePercentage\":\"The initial static swap fee percentage of the pool\",\"tokenConfig\":\"An array of descriptors for the tokens the pool will manage\"}},\"removeLiquidityRecovery(address,address,uint256,uint256[])\":{\"params\":{\"exactBptAmountIn\":\"Input pool token amount\",\"from\":\"Address of user to burn pool tokens from\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the pool\"},\"returns\":{\"amountsOut\":\"Actual calculated amounts of output tokens, sorted in token registration order\"}},\"totalSupply(address)\":{\"params\":{\"token\":\"The token address\"},\"returns\":{\"tokenTotalSupply\":\"Total supply of the token\"}},\"vault()\":{\"details\":\"The main Vault contains the entrypoint and main liquidity operation implementations.\",\"returns\":{\"_0\":\"vault The address of the main Vault\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"Gets the allowance of a spender for a given ERC20 token and owner.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to spend pool tokens on behalf of sender.\"},\"balanceOf(address,address)\":{\"notice\":\"Gets the balance of an account for a given ERC20 token.\"},\"computeDynamicSwapFeePercentage(address,(uint8,uint256,uint256[],uint256,uint256,address,bytes))\":{\"notice\":\"Query the current dynamic swap fee percentage of a pool, given a set of swap parameters.\"},\"emitAuxiliaryEvent(bytes32,bytes)\":{\"notice\":\"Pools can use this event to emit event data from the Vault.\"},\"getAddLiquidityCalledFlag(address)\":{\"notice\":\"This flag is used to detect and tax \\\"round-trip\\\" interactions (adding and removing liquidity in the same pool).\"},\"getAggregateSwapFeeAmount(address,address)\":{\"notice\":\"Returns the accumulated swap fees (including aggregate fees) in `token` collected by the pool.\"},\"getAggregateYieldFeeAmount(address,address)\":{\"notice\":\"Returns the accumulated yield fees (including aggregate fees) in `token` collected by the pool.\"},\"getAuthorizer()\":{\"notice\":\"Returns the Authorizer address.\"},\"getBptRate(address)\":{\"notice\":\"The current rate of a pool token (BPT) = invariant / totalSupply.\"},\"getCurrentLiveBalances(address)\":{\"notice\":\"Gets current live balances of a given pool (fixed-point, 18 decimals), corresponding to its tokens in registration order.\"},\"getERC4626BufferAsset(address)\":{\"notice\":\"Gets the registered asset for a given buffer.\"},\"getHooksConfig(address)\":{\"notice\":\"Gets the hooks configuration parameters of a pool.\"},\"getNonzeroDeltaCount()\":{\"notice\":\"Returns the count of non-zero deltas.\"},\"getPoolConfig(address)\":{\"notice\":\"Gets the configuration parameters of a pool.\"},\"getPoolData(address)\":{\"notice\":\"Returns comprehensive pool data for the given pool.\"},\"getPoolPausedState(address)\":{\"notice\":\"Returns the paused status, and end times of the Pool's pause window and buffer period.\"},\"getPoolRoleAccounts(address)\":{\"notice\":\"Fetches the role accounts for a given pool (pause manager, swap manager, pool creator)\"},\"getPoolTokenInfo(address)\":{\"notice\":\"Gets the raw data for a pool: tokens, raw balances, scaling factors.\"},\"getPoolTokenRates(address)\":{\"notice\":\"Gets pool token rates.\"},\"getPoolTokens(address)\":{\"notice\":\"Gets the tokens registered to a pool.\"},\"getProtocolFeeController()\":{\"notice\":\"Returns the Protocol Fee Controller address.\"},\"getReservesOf(address)\":{\"notice\":\"Retrieves the reserve (i.e., total Vault balance) of a given token.\"},\"getStaticSwapFeePercentage(address)\":{\"notice\":\"Fetches the static swap fee percentage for a given pool.\"},\"getTokenDelta(address)\":{\"notice\":\"Retrieves the token delta for a specific token.\"},\"getVaultAdmin()\":{\"notice\":\"Returns the VaultAdmin contract address.\"},\"initialize(address,address,address[],uint256[],uint256,bytes)\":{\"notice\":\"Initializes a registered pool by adding liquidity; mints BPT tokens for the first time in exchange.\"},\"isERC4626BufferInitialized(address)\":{\"notice\":\"Checks if the wrapped token has an initialized buffer in the Vault.\"},\"isPoolInRecoveryMode(address)\":{\"notice\":\"Checks whether a pool is in Recovery Mode.\"},\"isPoolInitialized(address)\":{\"notice\":\"Checks whether a pool is initialized.\"},\"isPoolPaused(address)\":{\"notice\":\"Indicates whether a pool is paused.\"},\"isPoolRegistered(address)\":{\"notice\":\"Checks whether a pool is registered.\"},\"isQueryDisabled()\":{\"notice\":\"Returns true if queries are disabled on the Vault.\"},\"isQueryDisabledPermanently()\":{\"notice\":\"Returns true if queries are disabled permanently; false if they are enabled.\"},\"isUnlocked()\":{\"notice\":\"Returns whether the Vault is unlocked (i.e., executing an operation).\"},\"quote(bytes)\":{\"notice\":\"Performs a callback on msg.sender with arguments provided in `data`.\"},\"quoteAndRevert(bytes)\":{\"notice\":\"Performs a callback on msg.sender with arguments provided in `data`.\"},\"registerPool(address,(address,uint8,address,bool)[],uint256,uint32,bool,(address,address,address),address,(bool,bool,bool,bool))\":{\"notice\":\"Registers a pool, associating it with its factory and the tokens it manages.\"},\"removeLiquidityRecovery(address,address,uint256,uint256[])\":{\"notice\":\"Remove liquidity from a pool specifying exact pool tokens in, with proportional token amounts out. The request is implemented by the Vault without any interaction with the pool, ensuring that it works the same for all pools, and cannot be disabled by a new pool type.\"},\"totalSupply(address)\":{\"notice\":\"Gets the total supply of a given ERC20 token.\"},\"vault()\":{\"notice\":\"Returns the main Vault address.\"}},\"notice\":\"Interface for functions defined on the `VaultExtension` contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVaultExtension.sol\":\"IVaultExtension\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVaultMain.sol":{"IVaultMain":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct AddLiquidityParams","name":"params","type":"tuple"}],"name":"addLiquidity","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"enum WrappingDirection","name":"direction","type":"uint8"},{"internalType":"contract IERC4626","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"}],"internalType":"struct BufferWrapOrUnwrapParams","name":"params","type":"tuple"}],"name":"erc4626BufferWrapOrUnwrap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenCountAndIndexOfToken","outputs":[{"internalType":"uint256","name":"tokenCount","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultExtension","outputs":[{"internalType":"address","name":"vaultExtension","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct RemoveLiquidityParams","name":"params","type":"tuple"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sendTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amountHint","type":"uint256"}],"name":"settle","outputs":[{"internalType":"uint256","name":"credit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGivenRaw","type":"uint256"},{"internalType":"uint256","name":"limitRaw","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct VaultSwapParams","name":"vaultSwapParams","type":"tuple"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountCalculatedRaw","type":"uint256"},{"internalType":"uint256","name":"amountInRaw","type":"uint256"},{"internalType":"uint256","name":"amountOutRaw","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"unlock","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addLiquidity((address,address,uint256[],uint256,uint8,bytes))":"4af29ec4","erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))":"43583be5","getPoolTokenCountAndIndexOfToken(address,address)":"c9c1661b","getVaultExtension()":"b9a8effa","removeLiquidity((address,address,uint256,uint256[],uint8,bytes))":"21457897","sendTo(address,address,uint256)":"ae639329","settle(address,uint256)":"15afd409","swap((uint8,address,address,address,uint256,uint256,bytes))":"2bfb780c","transfer(address,address,uint256)":"beabacc8","transferFrom(address,address,address,uint256)":"15dacbea","unlock(bytes)":"48c89491"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct AddLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"enum WrappingDirection\",\"name\":\"direction\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC4626\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"}],\"internalType\":\"struct BufferWrapOrUnwrapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"erc4626BufferWrapOrUnwrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenCountAndIndexOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultExtension\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vaultExtension\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct RemoveLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountHint\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGivenRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitRaw\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct VaultSwapParams\",\"name\":\"vaultSwapParams\",\"type\":\"tuple\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculatedRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInRaw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutRaw\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These are generally \\\"critical path\\\" functions (swap, add/remove liquidity) that are in the main contract for technical or performance reasons.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity((address,address,uint256[],uint256,uint8,bytes))\":{\"details\":\"Caution should be exercised when adding liquidity because the Vault has the capability to transfer tokens from any user, given that it holds all allowances.\",\"params\":{\"params\":\"Parameters for the add liquidity (see above for struct definition)\"},\"returns\":{\"amountsIn\":\"Actual amounts of input tokens\",\"bptAmountOut\":\"Output pool token amount\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))\":{\"details\":\"All parameters are given in raw token decimal encoding. It requires the buffer to be initialized, and uses the internal wrapped token buffer when it has enough liquidity to avoid external calls.\",\"params\":{\"params\":\"Parameters for the wrap/unwrap operation (see struct definition)\"},\"returns\":{\"amountCalculatedRaw\":\"Calculated swap amount\",\"amountInRaw\":\"Amount of input tokens for the swap\",\"amountOutRaw\":\"Amount of output tokens from the swap\"}},\"getPoolTokenCountAndIndexOfToken(address,address)\":{\"details\":\"Reverts if the pool is not registered, or if the token does not belong to the pool.\",\"params\":{\"pool\":\"Address of the pool\",\"token\":\"Address of the token\"},\"returns\":{\"index\":\"Index corresponding to the given token in the pool's token list\",\"tokenCount\":\"Number of tokens in the pool\"}},\"getVaultExtension()\":{\"details\":\"Function is in the main Vault contract. The VaultExtension handles less critical or frequently used functions, since delegate calls through the Vault are more expensive than direct calls.\",\"returns\":{\"vaultExtension\":\"Address of the VaultExtension\"}},\"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))\":{\"details\":\"Trusted routers can burn pool tokens belonging to any user and require no prior approval from the user. Untrusted routers require prior approval from the user. This is the only function allowed to call _queryModeBalanceIncrease (and only in a query context).\",\"params\":{\"params\":\"Parameters for the remove liquidity (see above for struct definition)\"},\"returns\":{\"amountsOut\":\"Actual amounts of output tokens\",\"bptAmountIn\":\"Actual amount of BPT burned\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"sendTo(address,address,uint256)\":{\"details\":\"There is no inverse operation for this function. Transfer funds to the Vault and call `settle` to cancel debts.\",\"params\":{\"amount\":\"Amount of tokens to send\",\"to\":\"Recipient address\",\"token\":\"Address of the token\"}},\"settle(address,uint256)\":{\"details\":\"Protects the caller against leftover dust in the Vault for the token being settled. The caller should know in advance how many tokens were paid to the Vault, so it can provide it as a hint to discard any excess in the Vault balance. If the given hint is equal to or higher than the difference in reserves, the difference in reserves is given as credit to the caller. If it's higher, the caller sent fewer tokens than expected, so settlement would fail. If the given hint is lower than the difference in reserves, the hint is given as credit to the caller. In this case, the excess would be absorbed by the Vault (and reflected correctly in the reserves), but would not affect settlement. The credit supplied by the Vault can be calculated as `min(reserveDifference, amountHint)`, where the reserve difference equals current balance of the token minus existing reserves of the token when the function is called.\",\"params\":{\"amountHint\":\"Amount paid as reported by the caller\",\"token\":\"Address of the token\"},\"returns\":{\"credit\":\"Credit received in return of the payment\"}},\"swap((uint8,address,address,address,uint256,uint256,bytes))\":{\"details\":\"All parameters are given in raw token decimal encoding.\",\"params\":{\"vaultSwapParams\":\"Parameters for the swap (see above for struct definition)\"},\"returns\":{\"amountCalculatedRaw\":\"Calculated swap amount\",\"amountInRaw\":\"Amount of input tokens for the swap\",\"amountOutRaw\":\"Amount of output tokens from the swap\"}},\"transfer(address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"owner\":\"Address of the owner\",\"to\":\"Address of the recipient\"},\"returns\":{\"_0\":\"success True if successful, false otherwise\"}},\"transferFrom(address,address,address,uint256)\":{\"details\":\"Notice that the pool token address is not included in the params. This function is exclusively called by the pool contract, so msg.sender is used as the token address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Address of the sender\",\"spender\":\"Address allowed to perform the transfer\",\"to\":\"Address of the recipient\"},\"returns\":{\"success\":\"True if successful, false otherwise\"}},\"unlock(bytes)\":{\"details\":\"Performs a callback on msg.sender with arguments provided in `data`. The Callback is `transient`, meaning all balances for the caller have to be settled at the end.\",\"params\":{\"data\":\"Contains function signature and args to be passed to the msg.sender\"},\"returns\":{\"result\":\"Resulting data from the call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity((address,address,uint256[],uint256,uint8,bytes))\":{\"notice\":\"Adds liquidity to a pool.\"},\"erc4626BufferWrapOrUnwrap((uint8,uint8,address,uint256,uint256))\":{\"notice\":\"Wraps/unwraps tokens based on the parameters provided.\"},\"getPoolTokenCountAndIndexOfToken(address,address)\":{\"notice\":\"Gets the index of a token in a given pool.\"},\"getVaultExtension()\":{\"notice\":\"Returns the VaultExtension contract address.\"},\"removeLiquidity((address,address,uint256,uint256[],uint8,bytes))\":{\"notice\":\"Removes liquidity from a pool.\"},\"sendTo(address,address,uint256)\":{\"notice\":\"Sends tokens to a recipient.\"},\"settle(address,uint256)\":{\"notice\":\"Settles deltas for a token; must be successful for the current lock to be released.\"},\"swap((uint8,address,address,address,uint256,uint256,bytes))\":{\"notice\":\"Swaps tokens based on provided parameters.\"},\"transfer(address,address,uint256)\":{\"notice\":\"Transfers pool token from owner to a recipient.\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Transfers pool token from a sender to a recipient using an allowance.\"},\"unlock(bytes)\":{\"notice\":\"Creates a context for a sequence of operations (i.e., \\\"unlocks\\\" the Vault).\"}},\"notice\":\"Interface for functions defined on the main Vault contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVaultMain.sol\":\"IVaultMain\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IVersion.sol":{"IVersion":{"abi":[{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"version()\":{\"details\":\"For standard Balancer contracts, returns a JSON representation of the contract version containing name, version number and task ID. See real examples in the deployment repo; local tests just use plain text strings.\",\"returns\":{\"_0\":\"version The version string corresponding to the current deployed contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Return arbitrary text representing the version of a contract.\"}},\"notice\":\"Simple interface to retrieve the version of a deployed contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IVersion.sol\":\"IVersion\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IVersion.sol\":{\"keccak256\":\"0x8993f223a501fbbe7c1a2f589a12961ea2fab1919dbc02a1eede973692d24e6e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acce7ad2eab8b257f65aa7e20b7814c71787c08d80e02335ccc7b04818ffcdc7\",\"dweb:/ipfs/QmQtDc6mwAijhvXLK5mbNfZ1JyQX7Q4nRsry5qDbcPpQVi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"deposit()\":{\"details\":\"The amount is msg.value.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"\\\"wrap\\\" native ETH to WETH.\"},\"withdraw(uint256)\":{\"notice\":\"\\\"unwrap\\\" WETH to native ETH.\"}},\"notice\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0x75d5964b2f92dba9b9254e0052de28a9378e6759b1b28ccbb51db0bc80024176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec9c862929ccff2be994d0296c0a4de3ddc19bb5a7aae3d4df0887dc7b29c8e\",\"dweb:/ipfs/QmSNr2fkNM2VyAo3B1DG1cuRh41t4A6mJZqeUu6vvYb97G\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/InputHelpers.sol":{"InputHelpers":{"abi":[{"inputs":[],"name":"AllZeroInputs","type":"error"},{"inputs":[],"name":"InputLengthMismatch","type":"error"},{"inputs":[],"name":"MultipleNonZeroInputs","type":"error"},{"inputs":[],"name":"TokensNotSorted","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212209856ba8af55ae421cd27c188b6b8216ed99f2e81b3d131a699a47964d31b5a6264736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 JUMP 0xBA DUP11 CREATE2 GAS 0xE4 0x21 0xCD 0x27 0xC1 DUP9 0xB6 0xB8 0x21 PUSH15 0xD99F2E81B3D131A699A47964D31B5A PUSH3 0x64736F PUSH13 0x634300081A0033000000000000 ","sourceMap":"202:4350:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212209856ba8af55ae421cd27c188b6b8216ed99f2e81b3d131a699a47964d31b5a6264736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 JUMP 0xBA DUP11 CREATE2 GAS 0xE4 0x21 0xCD 0x27 0xC1 DUP9 0xB6 0xB8 0x21 PUSH15 0xD99F2E81B3D131A699A47964D31B5A PUSH3 0x64736F PUSH13 0x634300081A0033000000000000 ","sourceMap":"202:4350:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AllZeroInputs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MultipleNonZeroInputs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensNotSorted\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"AllZeroInputs()\":[{\"details\":\"Input arrays for single token add/remove liquidity operations are expected to have one non-zero value, corresponding to the token being added or removed. This error results if all entries are zero.\"}],\"MultipleNonZeroInputs()\":[{\"details\":\"Input arrays for single token add/remove liquidity operations are expected to have only one non-zero value, corresponding to the token being added or removed. This error results if there are multiple non-zero entries.\"}],\"TokensNotSorted()\":[{\"details\":\"Tokens are not sorted by address on registration. This is an optimization so that off-chain processes can predict the token order without having to query the Vault. (It is also legacy v2 behavior.)\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"AllZeroInputs()\":[{\"notice\":\"No valid input was given for a single token operation.\"}],\"InputLengthMismatch()\":[{\"notice\":\"Arrays passed to a function and intended to be parallel have different lengths.\"}],\"MultipleNonZeroInputs()\":[{\"notice\":\"More than one non-zero value was given for a single token operation.\"}],\"TokensNotSorted()\":[{\"notice\":\"The tokens supplied to an array argument were not sorted in numerical order.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InputHelpers.sol\":\"InputHelpers\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/CastingHelpers.sol\":{\"keccak256\":\"0x8b468c356b40134c158695ad68193093444f1a7783966a03947d67c403c87635\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d2696338f5f2f11663a2123cd5f7df1a2bfb434d49f93f2c0d1486e9d43d6f4\",\"dweb:/ipfs/QmQihSe7BEvWh4s1EPnqSf5RKNL6fLqEBuMETn6nHouweW\"]},\"contracts/InputHelpers.sol\":{\"keccak256\":\"0xe820b139c5ab3a4a26eda124b6c31f755f3203ba80a9b1b187a53e2699c444ab\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://826e19b27c648604e06b5e68ce66ae6fecd3a0214738a7f67046103b12ab1148\",\"dweb:/ipfs/QmZfz3iFQVDMxkyYcAqfh4BJ21FXvSE58Bo1B8snjC92Wf\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/ReentrancyGuardTransient.sol":{"ReentrancyGuardTransient":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"NOTE: This variant only works on networks where EIP-1153 is available.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"notice\":\"Unauthorized reentrant call.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Variant of {ReentrancyGuard} that uses transient storage.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyGuardTransient.sol\":\"ReentrancyGuardTransient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0x0986ee17e49747c89956b4d46947b65b7c2942d5854fd39d764a7cb2735ff8af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38fedef8f551d12a155f54ab1c863db60fed1226a397a321ac729e9db65f4593\",\"dweb:/ipfs/QmaxBFc45J79aehsbSoLzNWVfBhqxkkWnKpunmKrbzV1pL\"]},\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/RevertCodec.sol":{"RevertCodec":{"abi":[{"inputs":[],"name":"ErrorSelectorNotFound","type":"error"},{"inputs":[{"internalType":"bytes","name":"result","type":"bytes"}],"name":"Result","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212202f09bcd0d72529a76e923cc91966c245f2ebb2b0495ed1b82b57cd767c4e03c064736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F MULMOD 0xBC 0xD0 0xD7 0x25 0x29 0xA7 PUSH15 0x923CC91966C245F2EBB2B0495ED1B8 0x2B JUMPI 0xCD PUSH23 0x7C4E03C064736F6C634300081A00330000000000000000 ","sourceMap":"231:2016:33:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212202f09bcd0d72529a76e923cc91966c245f2ebb2b0495ed1b82b57cd767c4e03c064736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F MULMOD 0xBC 0xD0 0xD7 0x25 0x29 0xA7 PUSH15 0x923CC91966C245F2EBB2B0495ED1B8 0x2B JUMPI 0xCD PUSH23 0x7C4E03C064736F6C634300081A00330000000000000000 ","sourceMap":"231:2016:33:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ErrorSelectorNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"Result\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"Result(bytes)\":[{\"params\":{\"result\":\"The result of the query operation\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ErrorSelectorNotFound()\":[{\"notice\":\"Handle the \\\"reverted without a reason\\\" case (i.e., no return data).\"}],\"Result(bytes)\":[{\"notice\":\"On success of the primary operation in a `quoteAndRevert`, this error is thrown with the return data.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Support `quoteAndRevert`: a v2-style query which always reverts, and returns the result in the return data.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RevertCodec.sol\":\"RevertCodec\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/RevertCodec.sol\":{\"keccak256\":\"0xb4ee9e1543d36bdf9eeb4a9d5ab41170723239a1e27a2272f2e31de4765c019b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b70dd5e4fa496c2c1efb6bd20368587ba3c9c0d0afac9dc3631a29ff2628f99\",\"dweb:/ipfs/QmQigXUkpDuVK5VSX67RABrAC9bashPcHMasgPRNJb4k8Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/RouterCommon.sol":{"RouterCommon":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ErrorSelectorNotFound","type":"error"},{"inputs":[],"name":"EthTransfer","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InputLengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SwapDeadline","type":"error"},{"inputs":[],"name":"getPermit2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeth","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct IRouterCommon.PermitApproval[]","name":"permitBatch","type":"tuple[]"},{"internalType":"bytes[]","name":"permitSignatures","type":"bytes[]"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permit2Batch","type":"tuple"},{"internalType":"bytes","name":"permit2Signature","type":"bytes"},{"internalType":"bytes[]","name":"multicallData","type":"bytes[]"}],"name":"permitBatchAndCall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPermit2()":"1bbf2e23","getSender()":"5e01eb5a","getWeth()":"107c279f","multicall(bytes[])":"ac9650d8","permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])":"19c6989f","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorSelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EthTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getPermit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouterCommon.PermitApproval[]\",\"name\":\"permitBatch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"permitSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permit2Batch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"permit2Signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"multicallData\",\"type\":\"bytes[]\"}],\"name\":\"permitBatchAndCall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Common functionality includes access to the sender (which would normally be obscured, since msg.sender in the Vault is the Router contract itself, not the account that invoked the Router), versioning, and the external invocation functions (`permitBatchAndCall` and `multicall`).\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{\"getSender()\":{\"returns\":{\"_0\":\"The address of the sender\"}},\"multicall(bytes[])\":{\"params\":{\"data\":\"Encoded function calls to be executed in the batch.\"},\"returns\":{\"results\":\"Array of bytes arrays, each representing the return data from each function call executed.\"}},\"permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])\":{\"params\":{\"multicallData\":\"An array of bytes arrays, each representing an encoded function call on this contract\",\"permit2Batch\":\"A batch of permit2 approvals\",\"permit2Signature\":\"A permit2 signature for the batch approval\",\"permitBatch\":\"An array of `PermitApproval` structs, each representing an ERC20 permit request\",\"permitSignatures\":\"An array of bytes, corresponding to the permit request signature in `permitBatch`\"},\"returns\":{\"results\":\"Array of bytes arrays, each representing the return data from each function call executed\"}},\"version()\":{\"returns\":{\"_0\":\"version The stored contract version\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ErrorSelectorNotFound()\":[{\"notice\":\"Handle the \\\"reverted without a reason\\\" case (i.e., no return data).\"}],\"EthTransfer()\":[{\"notice\":\"Incoming ETH transfer from an address that is not WETH.\"}],\"InputLengthMismatch()\":[{\"notice\":\"Arrays passed to a function and intended to be parallel have different lengths.\"}],\"ReentrancyGuardReentrantCall()\":[{\"notice\":\"Unauthorized reentrant call.\"}],\"SwapDeadline()\":[{\"notice\":\"The swap transaction was not validated before the specified deadline timestamp.\"}]},\"kind\":\"user\",\"methods\":{\"getPermit2()\":{\"notice\":\"Returns Permit2 contract address.\"},\"getSender()\":{\"notice\":\"Get the first sender which initialized the call to Router.\"},\"getWeth()\":{\"notice\":\"Returns WETH contract address.\"},\"multicall(bytes[])\":{\"notice\":\"Executes a batch of function calls on this contract.\"},\"permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])\":{\"notice\":\"Permits multiple allowances and executes a batch of function calls on this contract.\"},\"version()\":{\"notice\":\"Getter for the version.\"}},\"notice\":\"Abstract base contract for functions shared among all Routers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RouterCommon.sol\":\"RouterCommon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"@uniswap/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/CastingHelpers.sol\":{\"keccak256\":\"0x8b468c356b40134c158695ad68193093444f1a7783966a03947d67c403c87635\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d2696338f5f2f11663a2123cd5f7df1a2bfb434d49f93f2c0d1486e9d43d6f4\",\"dweb:/ipfs/QmQihSe7BEvWh4s1EPnqSf5RKNL6fLqEBuMETn6nHouweW\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IRouterCommon.sol\":{\"keccak256\":\"0x3f5f72378930991c88119acd2f4c36145f285d4347d4a29688648d55d83c0a99\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://191307c8d8cdca0a738b9a5633b2fb3f175ef72aaecfb96130e72386ebdfc123\",\"dweb:/ipfs/QmWs8jjfUDQHixjSL7GB7ZbynRbd1wbRKBEBbw5jSP4w5x\"]},\"contracts/ISenderGuard.sol\":{\"keccak256\":\"0x2ec1ecf5c578aab7502f6985a03fbb79998218bdef819845d70d28a6994cff5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a32637a45f19c29797db11eb25eb9bfda73302f280a64a9d9a4ab123db1b8e6f\",\"dweb:/ipfs/QmXGimviZ4Mr6kwgqkCwpHH5uGHVEjAcCRNvAwvoVYKi6f\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/IVersion.sol\":{\"keccak256\":\"0x8993f223a501fbbe7c1a2f589a12961ea2fab1919dbc02a1eede973692d24e6e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acce7ad2eab8b257f65aa7e20b7814c71787c08d80e02335ccc7b04818ffcdc7\",\"dweb:/ipfs/QmQtDc6mwAijhvXLK5mbNfZ1JyQX7Q4nRsry5qDbcPpQVi\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0x75d5964b2f92dba9b9254e0052de28a9378e6759b1b28ccbb51db0bc80024176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec9c862929ccff2be994d0296c0a4de3ddc19bb5a7aae3d4df0887dc7b29c8e\",\"dweb:/ipfs/QmSNr2fkNM2VyAo3B1DG1cuRh41t4A6mJZqeUu6vvYb97G\"]},\"contracts/InputHelpers.sol\":{\"keccak256\":\"0xe820b139c5ab3a4a26eda124b6c31f755f3203ba80a9b1b187a53e2699c444ab\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://826e19b27c648604e06b5e68ce66ae6fecd3a0214738a7f67046103b12ab1148\",\"dweb:/ipfs/QmZfz3iFQVDMxkyYcAqfh4BJ21FXvSE58Bo1B8snjC92Wf\"]},\"contracts/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0x0986ee17e49747c89956b4d46947b65b7c2942d5854fd39d764a7cb2735ff8af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38fedef8f551d12a155f54ab1c863db60fed1226a397a321ac729e9db65f4593\",\"dweb:/ipfs/QmaxBFc45J79aehsbSoLzNWVfBhqxkkWnKpunmKrbzV1pL\"]},\"contracts/RevertCodec.sol\":{\"keccak256\":\"0xb4ee9e1543d36bdf9eeb4a9d5ab41170723239a1e27a2272f2e31de4765c019b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b70dd5e4fa496c2c1efb6bd20368587ba3c9c0d0afac9dc3631a29ff2628f99\",\"dweb:/ipfs/QmQigXUkpDuVK5VSX67RABrAC9bashPcHMasgPRNJb4k8Z\"]},\"contracts/RouterCommon.sol\":{\"keccak256\":\"0x33bee127a9673be74058d0948c11e26ef6cf5d842d9ba27272cd89e53c8ecbdc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://015a895300adc90a25c2f0acbf6442024ed4a1f2bdc320d167b72d23e0c7324b\",\"dweb:/ipfs/QmbuWJraKh5vp7Y5EGvchkpbPbWMceZm899xdpUJfBhdUD\"]},\"contracts/RouterWethLib.sol\":{\"keccak256\":\"0x506101ae6ac96f5cec2a7a2b0d3a0241aa1772b74c247bbbc30c84901343d0b2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://17bbe2bdc3a411c080ccfbcc1e9ae0460d714078bb9018368b04f20771b1db7f\",\"dweb:/ipfs/QmTUFUN5GXFNciLGV4ijdV7gMM5iNwJ6VamqgQD3qTJ7mk\"]},\"contracts/SenderGuard.sol\":{\"keccak256\":\"0xe63bbcd3cc394da0c3d97e919d95cba027e986ab84060a517536ab524e54ea39\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac91243d274e4f81f382a9c35b0012f351319509860b8f9a62e3c909fc9ceda4\",\"dweb:/ipfs/QmNevUKeaN2F9Lz3fLqUq2FavkqsVPQPVSxkbM6RxfdxSk\"]},\"contracts/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]},\"contracts/TransientStorageHelpers.sol\":{\"keccak256\":\"0x38745433e09a67cbacf3ad5b9bfa8e313421bf1273f4f282b846773c9e11fbcb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://323d867daf0abbbd277b0d01fc8d294759a1e7e364c674fcbfdaeeb7d37f836b\",\"dweb:/ipfs/QmYBPy3k5D7ULtxpnnDiAM6pDp4ij8qrFZD2WP2iJDF3cu\"]},\"contracts/VaultGuard.sol\":{\"keccak256\":\"0x8401db6ba7e14aba66f5f177f3714a007220fd6ebaf50ff91c80f8cc3db85035\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1d51ee35adb7a048baea6d6ca779e47223a9c0c01883f2c318efe8bd61a522ed\",\"dweb:/ipfs/QmYFaPDCNGT6GC5asEFmiGkFSoruFTkVYgZekRwPP29P7A\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]},\"contracts/Version.sol\":{\"keccak256\":\"0x2316ace9382abcc380e19931fcec5899821e55ac72fe70d2f73fd862728270a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9175c5448c160df7b8544e51dd6c53989dcbfcc11c2acaa7b377db3398181626\",\"dweb:/ipfs/Qmbi7gwrN6cNBPKXog3wxJJRiHyDAcai4ucUYmLBKS5mAV\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8512,"contract":"contracts/RouterCommon.sol:RouterCommon","label":"_version","offset":0,"slot":"0","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"contracts/RouterWethLib.sol":{"RouterWethLib":{"abi":[{"inputs":[],"name":"InsufficientEth","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122099347a8cedc283da02a141445d4bf7f94b11a75153c05e35be06d9bccbf0de1864736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CALLVALUE PUSH27 0x8CEDC283DA02A141445D4BF7F94B11A75153C05E35BE06D9BCCBF0 0xDE XOR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"522:1071:35:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122099347a8cedc283da02a141445d4bf7f94b11a75153c05e35be06d9bccbf0de1864736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CALLVALUE PUSH27 0x8CEDC283DA02A141445D4BF7F94B11A75153C05E35BE06D9BCCBF0 0xDE XOR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"522:1071:35:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEth\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientEth()\":[{\"notice\":\"The amount of ETH paid is insufficient to complete this operation.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RouterWethLib.sol\":\"RouterWethLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0x75d5964b2f92dba9b9254e0052de28a9378e6759b1b28ccbb51db0bc80024176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec9c862929ccff2be994d0296c0a4de3ddc19bb5a7aae3d4df0887dc7b29c8e\",\"dweb:/ipfs/QmSNr2fkNM2VyAo3B1DG1cuRh41t4A6mJZqeUu6vvYb97G\"]},\"contracts/RouterWethLib.sol\":{\"keccak256\":\"0x506101ae6ac96f5cec2a7a2b0d3a0241aa1772b74c247bbbc30c84901343d0b2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://17bbe2bdc3a411c080ccfbcc1e9ae0460d714078bb9018368b04f20771b1db7f\",\"dweb:/ipfs/QmTUFUN5GXFNciLGV4ijdV7gMM5iNwJ6VamqgQD3qTJ7mk\"]},\"contracts/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]},\"contracts/TransientStorageHelpers.sol\":{\"keccak256\":\"0x38745433e09a67cbacf3ad5b9bfa8e313421bf1273f4f282b846773c9e11fbcb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://323d867daf0abbbd277b0d01fc8d294759a1e7e364c674fcbfdaeeb7d37f836b\",\"dweb:/ipfs/QmYBPy3k5D7ULtxpnnDiAM6pDp4ij8qrFZD2WP2iJDF3cu\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/SenderGuard.sol":{"SenderGuard":{"abi":[{"inputs":[],"name":"EthTransfer","type":"error"},{"inputs":[],"name":"SwapDeadline","type":"error"},{"inputs":[],"name":"getSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getSender()":"5e01eb5a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EthTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common functionality includes access to the sender (which would normally be obscured, since msg.sender in the Vault is the Router contract itself, not the account that invoked the Router), versioning, and the external invocation functions (`permitBatchAndCall` and `multicall`).\",\"kind\":\"dev\",\"methods\":{\"getSender()\":{\"returns\":{\"_0\":\"The address of the sender\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"EthTransfer()\":[{\"notice\":\"Incoming ETH transfer from an address that is not WETH.\"}],\"SwapDeadline()\":[{\"notice\":\"The swap transaction was not validated before the specified deadline timestamp.\"}]},\"kind\":\"user\",\"methods\":{\"getSender()\":{\"notice\":\"Get the first sender which initialized the call to Router.\"}},\"notice\":\"Abstract base contract for functions shared among all Routers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SenderGuard.sol\":\"SenderGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/ISenderGuard.sol\":{\"keccak256\":\"0x2ec1ecf5c578aab7502f6985a03fbb79998218bdef819845d70d28a6994cff5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a32637a45f19c29797db11eb25eb9bfda73302f280a64a9d9a4ab123db1b8e6f\",\"dweb:/ipfs/QmXGimviZ4Mr6kwgqkCwpHH5uGHVEjAcCRNvAwvoVYKi6f\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0x75d5964b2f92dba9b9254e0052de28a9378e6759b1b28ccbb51db0bc80024176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec9c862929ccff2be994d0296c0a4de3ddc19bb5a7aae3d4df0887dc7b29c8e\",\"dweb:/ipfs/QmSNr2fkNM2VyAo3B1DG1cuRh41t4A6mJZqeUu6vvYb97G\"]},\"contracts/SenderGuard.sol\":{\"keccak256\":\"0xe63bbcd3cc394da0c3d97e919d95cba027e986ab84060a517536ab524e54ea39\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac91243d274e4f81f382a9c35b0012f351319509860b8f9a62e3c909fc9ceda4\",\"dweb:/ipfs/QmNevUKeaN2F9Lz3fLqUq2FavkqsVPQPVSxkbM6RxfdxSk\"]},\"contracts/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]},\"contracts/TransientStorageHelpers.sol\":{\"keccak256\":\"0x38745433e09a67cbacf3ad5b9bfa8e313421bf1273f4f282b846773c9e11fbcb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://323d867daf0abbbd277b0d01fc8d294759a1e7e364c674fcbfdaeeb7d37f836b\",\"dweb:/ipfs/QmYBPy3k5D7ULtxpnnDiAM6pDp4ij8qrFZD2WP2iJDF3cu\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220fe669967f5eda39c2a88ee917d51882193995f9f54a74c74dd8f5c9e4b84c74b64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH7 0x9967F5EDA39C2A DUP9 0xEE SWAP2 PUSH30 0x51882193995F9F54A74C74DD8F5C9E4B84C74B64736F6C634300081A0033 ","sourceMap":"1652:3778:37:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220fe669967f5eda39c2a88ee917d51882193995f9f54a74c74dd8f5c9e4b84c74b64736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH7 0x9967F5EDA39C2A DUP9 0xEE SWAP2 PUSH30 0x51882193995F9F54A74C74DD8F5C9E4B84C74B64736F6C634300081A0033 ","sourceMap":"1652:3778:37:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The derivation method for array and mapping matches the storage layout used by the solidity language/compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/StorageSlotExtension.sol":{"StorageSlotExtension":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212203168e8acef0ce27e0621febf96279aeeda6f9e0602f4d3c56f52cb66cf974f6264736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH9 0xE8ACEF0CE27E0621FE 0xBF SWAP7 0x27 SWAP11 0xEE 0xDA PUSH16 0x9E0602F4D3C56F52CB66CF974F626473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"278:4887:38:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212203168e8acef0ce27e0621febf96279aeeda6f9e0602f4d3c56f52cb66cf974f6264736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH9 0xE8ACEF0CE27E0621FE 0xBF SWAP7 0x27 SWAP11 0xEE 0xDA PUSH16 0x9E0602F4D3C56F52CB66CF974F626473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"278:4887:38:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for reading and writing primitive types to specific storage slots. Based on OpenZeppelin; just adding support for int256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StorageSlotExtension.sol\":\"StorageSlotExtension\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/TransientStorageHelpers.sol":{"TransientStorageHelpers":{"abi":[{"inputs":[],"name":"TransientIndexOutOfBounds","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220698bc5a85107a79da10c42d7a3a261280a22f42a3b70e5d4578fc82e022ef00e64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8BC5A85107A79DA10C42 0xD7 LOG3 LOG2 PUSH2 0x280A 0x22 DELEGATECALL 0x2A EXTCODESIZE PUSH17 0xE5D4578FC82E022EF00E64736F6C634300 ADDMOD BYTE STOP CALLER ","sourceMap":"963:5950:39:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220698bc5a85107a79da10c42d7a3a261280a22f42a3b70e5d4578fc82e022ef00e64736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8BC5A85107A79DA10C42 0xD7 LOG3 LOG2 PUSH2 0x280A 0x22 DELEGATECALL 0x2A EXTCODESIZE PUSH17 0xE5D4578FC82E022EF00E64736F6C634300 ADDMOD BYTE STOP CALLER ","sourceMap":"963:5950:39:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TransientIndexOutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This is temporary, based on Open Zeppelin's partially released library. When the final version is published, we should be able to remove our copies and import directly from OZ. When Solidity catches up and puts direct support for transient storage in the language, we should be able to get rid of this altogether. This only works on networks where EIP-1153 is supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"TransientIndexOutOfBounds()\":[{\"notice\":\"An index is out of bounds on an array operation (e.g., at).\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper functions to read and write values from transient storage, including support for arrays and mappings.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransientStorageHelpers.sol\":\"TransientStorageHelpers\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]},\"contracts/TransientStorageHelpers.sol\":{\"keccak256\":\"0x38745433e09a67cbacf3ad5b9bfa8e313421bf1273f4f282b846773c9e11fbcb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://323d867daf0abbbd277b0d01fc8d294759a1e7e364c674fcbfdaeeb7d37f836b\",\"dweb:/ipfs/QmYBPy3k5D7ULtxpnnDiAM6pDp4ij8qrFZD2WP2iJDF3cu\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/VaultGuard.sol":{"VaultGuard":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a034606057601f60b238819003918201601f19168301916001600160401b03831184841017606457808492602094604052833981010312606057516001600160a01b03811681036060576080526040516039908160798239608051815050f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe5f80fdfea2646970667358221220e56e475863ecb935a354cc51e5ef5af79b768da57e6f976c63337a2d2d0e6f7b64736f6c634300081a0033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH1 0x60 JUMPI PUSH1 0x1F PUSH1 0xB2 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x64 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x60 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH1 0x60 JUMPI PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0x39 SWAP1 DUP2 PUSH1 0x79 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH15 0x475863ECB935A354CC51E5EF5AF79B PUSH23 0x8DA57E6F976C63337A2D2D0E6F7B64736F6C634300081A STOP CALLER ","sourceMap":"222:368:40:-:0;;;;;;;;;;;;;-1:-1:-1;;222:368:40;;;;-1:-1:-1;;;;;222:368:40;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:368:40;;;;;;323:14;;222:368;;;;;;;;323:14;222:368;;;;;;-1:-1:-1;222:368:40;;;;;;-1:-1:-1;222:368:40;;;;;-1:-1:-1;222:368:40"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220e56e475863ecb935a354cc51e5ef5af79b768da57e6f976c63337a2d2d0e6f7b64736f6c634300081a0033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH15 0x475863ECB935A354CC51E5EF5AF79B PUSH23 0x8DA57E6F976C63337A2D2D0E6F7B64736F6C634300081A STOP CALLER ","sourceMap":"222:368:40:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract that shares the modifier `onlyVault`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultGuard.sol\":\"VaultGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/VaultGuard.sol\":{\"keccak256\":\"0x8401db6ba7e14aba66f5f177f3714a007220fd6ebaf50ff91c80f8cc3db85035\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1d51ee35adb7a048baea6d6ca779e47223a9c0c01883f2c318efe8bd61a522ed\",\"dweb:/ipfs/QmYFaPDCNGT6GC5asEFmiGkFSoruFTkVYgZekRwPP29P7A\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Version.sol":{"Version":{"abi":[{"inputs":[{"internalType":"string","name":"version_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346101f4576103ac80380380610019816101f8565b9283398101906020818303126101f4578051906001600160401b0382116101f4570181601f820112156101f4578051906001600160401b0382116101e05761006a601f8301601f19166020016101f8565b92828452602083830101116101f457815f9260208093018386015e8301015280516001600160401b0381116101e0575f54600181811c911680156101d6575b60208210146101c257601f8111610160575b50602091601f8211600114610102579181925f926100f7575b50508160011b915f199060031b1c1916175f555b60405161018e908161021e8239f35b015190505f806100d4565b601f198216925f8052805f20915f5b85811061014857508360019510610130575b505050811b015f556100e8565b01515f1960f88460031b161c191690555f8080610123565b91926020600181928685015181550194019201610111565b5f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c810191602084106101b8575b601f0160051c01905b8181106101ad57506100bb565b5f81556001016101a0565b9091508190610197565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100a9565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101e05760405256fe6080600436101561000e575f80fd5b5f3560e01c6354fd4d5014610021575f80fd5b34610154575f366003190112610154575f8054908160011c6001831692831561014a575b60208210841461013657818552602085019390811561011d57506001146100c9575b50829003601f01601f19168201916001600160401b038311818410176100b5576040918391828452602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b634e487b7160e01b5f52604160045260245ffd5b5f8080529091507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8282106101075750602091508301015f610067565b60018160209254838589010152019101906100f2565b60ff1916845250151560051b830160200190505f610067565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610045565b5f80fdfea26469706673582212206938fd770545434615b2c83c51142c46aa3217176a8fefaf7134d6d45600eb8f64736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1F4 JUMPI PUSH2 0x3AC DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x1F8 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x1F4 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1F4 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1F4 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1E0 JUMPI PUSH2 0x6A PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1F8 JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1F4 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD MCOPY DUP4 ADD ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E0 JUMPI PUSH0 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x1C2 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x160 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x102 JUMPI SWAP2 DUP2 SWAP3 PUSH0 SWAP3 PUSH2 0xF7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH0 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP1 DUP2 PUSH2 0x21E DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH0 DUP1 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP6 DUP2 LT PUSH2 0x148 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x130 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH0 SSTORE PUSH2 0xE8 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x123 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x111 JUMP JUMPDEST PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1AD JUMPI POP PUSH2 0xBB JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1E0 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x54FD4D50 EQ PUSH2 0x21 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x154 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x154 JUMPI PUSH0 DUP1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x20 DUP3 LT DUP5 EQ PUSH2 0x136 JUMPI DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 DUP2 ISZERO PUSH2 0x11D JUMPI POP PUSH1 0x1 EQ PUSH2 0xC9 JUMPI JUMPDEST POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP2 DUP5 LT OR PUSH2 0xB5 JUMPI PUSH1 0x40 SWAP2 DUP4 SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 DUP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP3 LT PUSH2 0x107 JUMPI POP PUSH1 0x20 SWAP2 POP DUP4 ADD ADD PUSH0 PUSH2 0x67 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD PUSH1 0x20 ADD SWAP1 POP PUSH0 PUSH2 0x67 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x45 JUMP JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x38FD770545434615B2C8 EXTCODECOPY MLOAD EQ 0x2C CHAINID 0xAA ORIGIN OR OR PUSH11 0x8FEFAF7134D6D45600EB8F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"606:520:42:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;606:520:42;;;;;;;;;;;;;;;;-1:-1:-1;;;;;606:520:42;;;;;;;;-1:-1:-1;;606:520:42;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;-1:-1:-1;;;;;606:520:42;;;;-1:-1:-1;606:520:42;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;-1:-1:-1;606:520:42;;;-1:-1:-1;606:520:42;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;-1:-1:-1;606:520:42;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;-1:-1:-1;606:520:42;;-1:-1:-1;606:520:42;;;;;;;;;-1:-1:-1;;606:520:42;;;-1:-1:-1;;;;;606:520:42;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080600436101561000e575f80fd5b5f3560e01c6354fd4d5014610021575f80fd5b34610154575f366003190112610154575f8054908160011c6001831692831561014a575b60208210841461013657818552602085019390811561011d57506001146100c9575b50829003601f01601f19168201916001600160401b038311818410176100b5576040918391828452602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b634e487b7160e01b5f52604160045260245ffd5b5f8080529091507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8282106101075750602091508301015f610067565b60018160209254838589010152019101906100f2565b60ff1916845250151560051b830160200190505f610067565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610045565b5f80fdfea26469706673582212206938fd770545434615b2c83c51142c46aa3217176a8fefaf7134d6d45600eb8f64736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x54FD4D50 EQ PUSH2 0x21 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x154 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x154 JUMPI PUSH0 DUP1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x20 DUP3 LT DUP5 EQ PUSH2 0x136 JUMPI DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 DUP2 ISZERO PUSH2 0x11D JUMPI POP PUSH1 0x1 EQ PUSH2 0xC9 JUMPI JUMPDEST POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP2 DUP5 LT OR PUSH2 0xB5 JUMPI PUSH1 0x40 SWAP2 DUP4 SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 DUP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP3 LT PUSH2 0x107 JUMPI POP PUSH1 0x20 SWAP2 POP DUP4 ADD ADD PUSH0 PUSH2 0x67 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD PUSH1 0x20 ADD SWAP1 POP PUSH0 PUSH2 0x67 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x45 JUMP JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x38FD770545434615B2C8 EXTCODECOPY MLOAD EQ 0x2C CHAINID 0xAA ORIGIN OR OR PUSH11 0x8FEFAF7134D6D45600EB8F PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"606:520:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;-1:-1:-1;;606:520:42;;;;-1:-1:-1;;;;;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;606:520:42;;;-1:-1:-1;606:520:42;;;;;;;;;-1:-1:-1;606:520:42;;;;;;;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The version is set at deployment time and cannot be changed. It would be immutable, but immutable strings are not yet supported. Contracts like factories and pools should have versions. These typically take the form of JSON strings containing detailed information about the deployment. For instance: `{name: 'ChildChainGaugeFactory', version: 2, deployment: '20230316-child-chain-gauge-factory-v2'}`\",\"kind\":\"dev\",\"methods\":{\"version()\":{\"returns\":{\"_0\":\"version The stored contract version\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Getter for the version.\"}},\"notice\":\"Retrieves a contract's version from storage.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Version.sol\":\"Version\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IVersion.sol\":{\"keccak256\":\"0x8993f223a501fbbe7c1a2f589a12961ea2fab1919dbc02a1eede973692d24e6e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acce7ad2eab8b257f65aa7e20b7814c71787c08d80e02335ccc7b04818ffcdc7\",\"dweb:/ipfs/QmQtDc6mwAijhvXLK5mbNfZ1JyQX7Q4nRsry5qDbcPpQVi\"]},\"contracts/Version.sol\":{\"keccak256\":\"0x2316ace9382abcc380e19931fcec5899821e55ac72fe70d2f73fd862728270a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9175c5448c160df7b8544e51dd6c53989dcbfcc11c2acaa7b377db3398181626\",\"dweb:/ipfs/Qmbi7gwrN6cNBPKXog3wxJJRiHyDAcai4ucUYmLBKS5mAV\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8512,"contract":"contracts/Version.sol:Version","label":"_version","offset":0,"slot":"0","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"contracts/_Router.sol":{"Router":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"},{"internalType":"contract IWETH","name":"weth","type":"address"},{"internalType":"string","name":"routerVersion","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ErrorSelectorNotFound","type":"error"},{"inputs":[],"name":"EthTransfer","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InputLengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InsufficientEth","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderIsNotVault","type":"error"},{"inputs":[],"name":"SwapDeadline","type":"error"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquidityCustom","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouterCommon.AddLiquidityHookParams","name":"params","type":"tuple"}],"name":"addLiquidityHook","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"addLiquidityUnbalanced","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"donate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getPermit2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeth","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"initialize","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouter.InitializeHookParams","name":"params","type":"tuple"}],"name":"initializeHook","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct IRouterCommon.PermitApproval[]","name":"permitBatch","type":"tuple[]"},{"internalType":"bytes[]","name":"permitSignatures","type":"bytes[]"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permit2Batch","type":"tuple"},{"internalType":"bytes","name":"permit2Signature","type":"bytes"},{"internalType":"bytes[]","name":"multicallData","type":"bytes[]"}],"name":"permitBatchAndCall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquidityCustom","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"uint256","name":"minBptAmountOut","type":"uint256"},{"internalType":"enum AddLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouterCommon.AddLiquidityHookParams","name":"params","type":"tuple"}],"name":"queryAddLiquidityHook","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256","name":"bptAmountOut","type":"uint256"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"exactBptAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"exactAmountsIn","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryAddLiquidityUnbalanced","outputs":[{"internalType":"uint256","name":"bptAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquidityCustom","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouterCommon.RemoveLiquidityHookParams","name":"params","type":"tuple"}],"name":"queryRemoveLiquidityHook","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"}],"name":"queryRemoveLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"}],"name":"queryRemoveLiquidityRecoveryHook","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquiditySingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryRemoveLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGiven","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouter.SwapSingleTokenHookParams","name":"params","type":"tuple"}],"name":"querySwapHook","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountIn","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"querySwapSingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountCalculated","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"querySwapSingleTokenExactOut","outputs":[{"internalType":"uint256","name":"amountCalculated","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquidityCustom","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"enum RemoveLiquidityKind","name":"kind","type":"uint8"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouterCommon.RemoveLiquidityHookParams","name":"params","type":"tuple"}],"name":"removeLiquidityHook","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquidityProportional","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"}],"name":"removeLiquidityRecovery","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"}],"name":"removeLiquidityRecoveryHook","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"exactBptAmountIn","type":"uint256"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquiditySingleTokenExactIn","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"maxBptAmountIn","type":"uint256"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"removeLiquiditySingleTokenExactOut","outputs":[{"internalType":"uint256","name":"bptAmountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountIn","type":"uint256"},{"internalType":"uint256","name":"minAmountOut","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"swapSingleTokenExactIn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"exactAmountOut","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"swapSingleTokenExactOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"enum SwapKind","name":"kind","type":"uint8"},{"internalType":"address","name":"pool","type":"address"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountGiven","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"wethIsEth","type":"bool"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IRouter.SwapSingleTokenHookParams","name":"params","type":"tuple"}],"name":"swapSingleTokenHook","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"finalize_allocation":{"entryPoint":1106,"id":null,"parameterSlots":2,"returnSlots":0},"fun_calculateSlot":{"entryPoint":1141,"id":7614,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH2 0x100 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x44E JUMPI PUSH2 0x4DD0 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1D DUP3 DUP6 PUSH2 0x452 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x44E JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x44E JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x44E JUMPI PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x44E JUMPI ADD DUP4 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x44E JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH2 0x9E PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP8 PUSH2 0x452 JUMP JUMPDEST DUP3 DUP7 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x44E JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP9 ADD MCOPY DUP6 ADD ADD MSTORE PUSH1 0x40 SWAP2 PUSH2 0x10B DUP4 MLOAD PUSH2 0xCE DUP6 DUP3 PUSH2 0x452 JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH11 0x14D95B99195C91DD585C99 PUSH1 0xAA SHL PUSH1 0x20 DUP3 ADD MSTORE DUP5 MLOAD SWAP1 PUSH2 0xF3 DUP7 DUP4 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x39B2B73232B9 PUSH1 0xD1 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x475 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x43A JUMPI PUSH0 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x430 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x41C JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x3BA JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x359 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH0 SWAP3 PUSH2 0x34E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH0 SSTORE JUMPDEST PUSH2 0x1C8 DUP3 MLOAD PUSH2 0x17F DUP5 DUP3 PUSH2 0x452 JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x2937BABA32B921B7B6B6B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 MLOAD SWAP1 PUSH2 0x1A5 DUP6 DUP4 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x11 DUP3 MSTORE PUSH17 0x1A5CD4995D1D5C9B915D1A131BD8DAD959 PUSH1 0x7A SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x475 JUMP JUMPDEST PUSH1 0xC0 MSTORE PUSH1 0xE0 MSTORE MLOAD PUSH2 0x48A3 SWAP1 DUP2 PUSH2 0x52D DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x48A ADD MSTORE DUP2 DUP2 PUSH2 0x894 ADD MSTORE DUP2 DUP2 PUSH2 0xA7F ADD MSTORE DUP2 DUP2 PUSH2 0xED5 ADD MSTORE DUP2 DUP2 PUSH2 0x1BE9 ADD MSTORE DUP2 DUP2 PUSH2 0x22FF ADD MSTORE DUP2 DUP2 PUSH2 0x401E ADD MSTORE PUSH2 0x40DC ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2DC ADD MSTORE DUP2 DUP2 PUSH2 0x41F ADD MSTORE DUP2 DUP2 PUSH2 0x57B ADD MSTORE DUP2 DUP2 PUSH2 0x6E6 ADD MSTORE DUP2 DUP2 PUSH2 0x82C ADD MSTORE DUP2 DUP2 PUSH2 0xA40 ADD MSTORE DUP2 DUP2 PUSH2 0xBCA ADD MSTORE DUP2 DUP2 PUSH2 0xCBF ADD MSTORE DUP2 DUP2 PUSH2 0xDBD ADD MSTORE DUP2 DUP2 PUSH2 0xFF5 ADD MSTORE DUP2 DUP2 PUSH2 0x10D5 ADD MSTORE DUP2 DUP2 PUSH2 0x12F0 ADD MSTORE DUP2 DUP2 PUSH2 0x16EF ADD MSTORE DUP2 DUP2 PUSH2 0x17DD ADD MSTORE DUP2 DUP2 PUSH2 0x1894 ADD MSTORE DUP2 DUP2 PUSH2 0x1976 ADD MSTORE DUP2 DUP2 PUSH2 0x1B05 ADD MSTORE DUP2 DUP2 PUSH2 0x1C31 ADD MSTORE DUP2 DUP2 PUSH2 0x215F ADD MSTORE DUP2 DUP2 PUSH2 0x2298 ADD MSTORE DUP2 DUP2 PUSH2 0x2444 ADD MSTORE DUP2 DUP2 PUSH2 0x25CC ADD MSTORE DUP2 DUP2 PUSH2 0x2B82 ADD MSTORE DUP2 DUP2 PUSH2 0x2D58 ADD MSTORE DUP2 DUP2 PUSH2 0x4141 ADD MSTORE DUP2 DUP2 PUSH2 0x4390 ADD MSTORE DUP2 DUP2 PUSH2 0x453A ADD MSTORE DUP2 DUP2 PUSH2 0x45E6 ADD MSTORE PUSH2 0x462E ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x3FAC ADD MSTORE PUSH2 0x42F3 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH1 0x1A ADD MSTORE DUP2 DUP2 PUSH2 0x1478 ADD MSTORE DUP2 DUP2 PUSH2 0x1500 ADD MSTORE DUP2 DUP2 PUSH2 0x18B5 ADD MSTORE DUP2 DUP2 PUSH2 0x1900 ADD MSTORE DUP2 DUP2 PUSH2 0x1A92 ADD MSTORE DUP2 DUP2 PUSH2 0x1DBE ADD MSTORE DUP2 DUP2 PUSH2 0x1EA9 ADD MSTORE DUP2 DUP2 PUSH2 0x2B14 ADD MSTORE DUP2 DUP2 PUSH2 0x2EFE ADD MSTORE DUP2 DUP2 PUSH2 0x2FE1 ADD MSTORE DUP2 DUP2 PUSH2 0x4607 ADD MSTORE PUSH2 0x46AA ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x15C JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH0 DUP1 MSTORE DUP1 PUSH0 KECCAK256 SWAP2 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3A2 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x38A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH0 SSTORE PUSH2 0x170 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x37D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x368 JUMP JUMPDEST PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x412 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x407 JUMPI POP PUSH2 0x143 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3FA JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x131 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x43A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x4E5 PUSH1 0x1 PUSH1 0x20 SWAP3 PUSH1 0x39 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP2 DUP1 DUP6 ADD SWAP9 PUSH32 0x62616C616E6365722D6C6162732E76332E73746F726167652E00000000000000 DUP11 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 ADD DUP6 DUP8 ADD MCOPY DUP5 ADD SWAP1 PUSH1 0x17 PUSH1 0xF9 SHL DUP5 DUP4 ADD MSTORE DUP1 MLOAD SWAP3 DUP4 SWAP2 ADD PUSH1 0x3A DUP4 ADD MCOPY ADD ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x452 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x518 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x50D PUSH1 0x40 DUP4 PUSH2 0x452 JUMP JUMPDEST SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0xFF NOT AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x59 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4A JUMPI STOP JUMPDEST PUSH4 0x2A06EFB PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26B3D95 EQ PUSH2 0x3094 JUMPI DUP1 PUSH4 0x86FAD66 EQ PUSH2 0x2D38 JUMPI DUP1 PUSH4 0x8C04793 EQ PUSH2 0x2CD8 JUMPI DUP1 PUSH4 0xCA078EC EQ PUSH2 0x2C60 JUMPI DUP1 PUSH4 0xF710888 EQ PUSH2 0x2B43 JUMPI DUP1 PUSH4 0x107C279F EQ PUSH2 0x2AFF JUMPI DUP1 PUSH4 0x175D4408 EQ PUSH2 0x2A64 JUMPI DUP1 PUSH4 0x19C6989F EQ PUSH2 0x2703 JUMPI DUP1 PUSH4 0x1BBF2E23 EQ PUSH2 0x26E9 JUMPI DUP1 PUSH4 0x1D56798D EQ PUSH2 0x2583 JUMPI DUP1 PUSH4 0x23B39241 EQ PUSH2 0x23C8 JUMPI DUP1 PUSH4 0x3EBC54E5 EQ PUSH2 0x2324 JUMPI DUP1 PUSH4 0x452DB952 EQ PUSH2 0x21CA JUMPI DUP1 PUSH4 0x51682750 EQ PUSH2 0x20E4 JUMPI DUP1 PUSH4 0x53D0BB98 EQ PUSH2 0x2058 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1F53 JUMPI DUP1 PUSH4 0x5B343791 EQ PUSH2 0x1C11 JUMPI DUP1 PUSH4 0x5E01EB5A EQ PUSH2 0x1BCC JUMPI DUP1 PUSH4 0x5F9815FF EQ PUSH2 0x1ABA JUMPI DUP1 PUSH4 0x68A24FE0 EQ PUSH2 0x182C JUMPI DUP1 PUSH4 0x724DBA33 EQ PUSH2 0x1761 JUMPI DUP1 PUSH4 0x72657D17 EQ PUSH2 0x162A JUMPI DUP1 PUSH4 0x750283BC EQ PUSH2 0x15AE JUMPI DUP1 PUSH4 0x7B03C7BA EQ PUSH2 0x12D0 JUMPI DUP1 PUSH4 0x82BF2B24 EQ PUSH2 0x1259 JUMPI DUP1 PUSH4 0x82CD54FB EQ PUSH2 0x106F JUMPI DUP1 PUSH4 0x94E86EF8 EQ PUSH2 0xF52 JUMPI DUP1 PUSH4 0x9DE90518 EQ PUSH2 0xD80 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0xD3D JUMPI DUP1 PUSH4 0xB037ED36 EQ PUSH2 0xC40 JUMPI DUP1 PUSH4 0xB24BD571 EQ PUSH2 0xAFD JUMPI DUP1 PUSH4 0xBE5AE841 EQ PUSH2 0xABB JUMPI DUP1 PUSH4 0xBF6EE3FD EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0xC08BC851 EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0xC330C7BE EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0xDA001F7D EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xE7326DEF EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xECB2182C EQ PUSH2 0x365 JUMPI PUSH4 0xEFD85F14 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x218 CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x220 PUSH2 0x413F JUMP JUMPDEST PUSH2 0x22C PUSH1 0x20 DUP3 ADD PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x235 DUP3 PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x243 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x39C3 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP6 ADD CALLDATALOAD SWAP4 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x2B1 PUSH0 SWAP6 PUSH1 0x60 DUP9 PUSH2 0x29C PUSH2 0x2B8 SWAP8 PUSH2 0x272 PUSH1 0xC0 PUSH2 0x2D7 SWAP14 ADD DUP5 PUSH2 0x39F8 JUMP JUMPDEST SWAP8 SWAP1 SWAP9 PUSH1 0x40 MLOAD SWAP12 PUSH2 0x282 DUP14 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP14 MSTORE AND PUSH1 0x20 DUP13 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MSTORE ADD CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD PUSH2 0x3B64 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x12BCA7B1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3EA6 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP3 PUSH0 SWAP2 PUSH2 0x32C JUMPI JUMPDEST POP PUSH2 0x328 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3556 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP PUSH2 0x328 SWAP3 POP PUSH2 0x34F SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x347 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3C13 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x41A PUSH2 0x3F8 PUSH2 0x392 PUSH0 PUSH2 0x3EA PUSH2 0x37B CALLDATASIZE PUSH2 0x38CD JUMP JUMPDEST SWAP3 SWAP9 SWAP5 SWAP4 SWAP8 SWAP1 SWAP2 PUSH2 0x38B CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP10 DUP6 PUSH2 0x435C JUMP JUMPDEST SWAP8 SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x3A1 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP3 PUSH4 0x48C89491 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x470 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x4AF JUMPI JUMPDEST POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x487 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0x47F JUMP JUMPDEST PUSH2 0x4CB SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x397B JUMP JUMPDEST DUP7 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x576 PUSH2 0x4FD PUSH0 PUSH2 0x3EA PUSH2 0x554 PUSH2 0x4E7 CALLDATASIZE PUSH2 0x38CD JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x4F6 SWAP10 SWAP2 SWAP4 SWAP10 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP10 DUP7 PUSH2 0x435C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 PUSH2 0x50B DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP3 PUSH4 0x48C89491 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x5C9 SWAP2 PUSH0 SWAP2 PUSH2 0x5D8 JUMPI JUMPDEST POP DUP4 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5EC SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x5BA JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x60B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x62A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x32C3 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x361 JUMPI PUSH2 0x6BF PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x668 PUSH2 0x662 PUSH2 0x6E1 SWAP9 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP2 PUSH2 0x40D7 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x676 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP3 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x734 SWAP2 PUSH0 SWAP2 PUSH2 0x744 JUMPI JUMPDEST POP DUP4 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST POP SWAP2 SWAP1 POP PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x758 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x725 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x777 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x796 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x79E PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x361 JUMPI PUSH2 0x6BF PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x7CE PUSH2 0x662 PUSH2 0x827 SWAP9 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x7DC DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x87C SWAP2 PUSH0 SWAP2 PUSH2 0x8B9 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x891 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x38A2 JUMP JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8CD SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x8E6 CALLDATASIZE PUSH2 0x34C4 JUMP JUMPDEST SWAP2 PUSH2 0x8F4 SWAP8 SWAP5 SWAP4 SWAP8 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x902 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x95F PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x97E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x361 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH2 0xA19 PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x9B9 PUSH2 0xA3B SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP1 PUSH2 0x9C3 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x9D1 DUP6 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP6 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x48C89491 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0xAA1 JUMPI JUMPDEST POP PUSH2 0xA7C JUMPI STOP JUMPDEST PUSH0 PUSH32 0x0 TSTORE STOP JUMPDEST PUSH2 0xAB4 SWAP1 RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP DUP2 PUSH2 0xA75 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x20 PUSH2 0xAE3 PUSH2 0xACE CALLDATASIZE PUSH2 0x37E9 JUMP JUMPDEST PUSH2 0xAD6 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0xADE PUSH2 0x413F JUMP JUMPDEST PUSH2 0x4415 JUMP JUMPDEST POP POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xB0B CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x413F JUMP JUMPDEST PUSH2 0xB1F PUSH1 0x20 DUP3 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0xB29 DUP2 PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH2 0xB37 PUSH1 0x40 DUP4 ADD DUP4 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x4 DUP6 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x2B1 PUSH0 SWAP6 PUSH2 0xB98 PUSH2 0xBC5 SWAP9 PUSH2 0xBA6 SWAP7 PUSH1 0x60 PUSH2 0xB67 PUSH1 0xC0 DUP9 ADD DUP9 PUSH2 0x39F8 JUMP JUMPDEST SWAP8 SWAP1 SWAP9 PUSH1 0x40 MLOAD SWAP12 PUSH2 0xB77 DUP14 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP14 MSTORE AND PUSH1 0x20 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD PUSH2 0x3D19 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x21457897 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3F1B JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP3 PUSH0 SWAP2 PUSH2 0xC16 JUMPI JUMPDEST POP PUSH2 0x328 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x328 SWAP3 POP PUSH2 0xC39 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xC31 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3D95 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xC05 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0xCBA PUSH0 PUSH2 0xC5D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5F9815FF PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0xC98 PUSH1 0x84 DUP3 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP2 PUSH2 0xD0F SWAP2 PUSH0 SWAP2 PUSH2 0xD23 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3B3F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0xD37 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP4 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0xD74 PUSH2 0xD6E PUSH2 0x328 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP1 PUSH2 0x3F9E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x36B2 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xD99 PUSH2 0xD91 CALLDATASIZE PUSH2 0x357F JUMP JUMPDEST SWAP3 SWAP4 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 SWAP2 SWAP4 PUSH32 0x0 SWAP1 SWAP3 AND SWAP3 SWAP1 PUSH0 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH2 0xF30 JUMPI JUMPDEST POP MLOAD PUSH2 0xE02 DUP2 PUSH2 0x3CE7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF14 JUMPI PUSH0 DUP8 DUP2 PUSH2 0xE8D DUP10 PUSH2 0x3EA PUSH2 0xE69 DUP15 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xE2A DUP6 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP7 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0xEB7 SWAP2 PUSH0 SWAP2 PUSH2 0xEFA JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST POP POP SWAP1 PUSH2 0xED2 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0xD0F JUMP JUMPDEST PUSH2 0xF0E SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0xF29 DUP3 DUP7 PUSH2 0x3E92 JUMP JUMPDEST MSTORE ADD PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xF4C SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3C5D JUMP JUMPDEST DUP7 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0xFCE PUSH0 PUSH2 0x3EA PUSH2 0x554 PUSH2 0xF68 CALLDATASIZE PUSH2 0x381D JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH2 0xF7A SWAP13 SWAP8 SWAP13 SWAP5 SWAP3 SWAP5 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP13 PUSH1 0x40 MLOAD SWAP10 PUSH2 0xF88 DUP12 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP12 MSTORE PUSH1 0x1 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP13 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x60 DUP12 ADD MSTORE AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x345127F PUSH1 0xE5 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 PUSH1 0x24 DUP4 ADD PUSH2 0x3DF1 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP3 PUSH2 0x1053 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 MLOAD SWAP3 DUP2 DUP1 DUP3 ADD SWAP5 DUP6 SWAP3 ADD ADD SUB SLT PUSH2 0x361 JUMPI PUSH1 0x20 SWAP2 MLOAD SWAP1 PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1068 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x102D JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x1088 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x32AD JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x10B4 PUSH2 0x1113 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP1 PUSH2 0x10BD PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x10C5 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x281F581 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH0 SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP10 DUP8 PUSH1 0x4 DUP7 ADD PUSH2 0x3AB1 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP4 PUSH2 0x1235 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH2 0x121B JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x11EA JUMPI PUSH2 0x1171 DUP2 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP1 DUP2 PUSH2 0x1183 JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x115E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1195 DUP3 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI DUP7 PUSH0 SWAP2 PUSH2 0x11BF PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3F7C JUMP JUMPDEST SUB DUP2 DUP4 DUP9 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x11DA JUMPI JUMPDEST POP PUSH2 0x1179 JUMP JUMPDEST PUSH0 PUSH2 0x11E4 SWAP2 PUSH2 0x333F JUMP JUMPDEST DUP7 PUSH2 0x11D4 JUMP JUMPDEST PUSH2 0x328 DUP5 PUSH2 0x11F7 DUP8 PUSH2 0x42EA JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x122F SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x1252 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x124A DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3B3F JUMP JUMPDEST SWAP2 DUP5 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x827 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x126C CALLDATASIZE PUSH2 0x377B JUMP JUMPDEST SWAP2 SWAP7 SWAP4 SWAP3 PUSH2 0x1279 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1287 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x12DE CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x12E6 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x12EE PUSH2 0x413F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 PUSH2 0x1329 DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP4 PUSH2 0x1333 DUP3 PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x1340 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x39C3 JUMP JUMPDEST SWAP7 SWAP1 SWAP2 PUSH1 0x80 DUP6 ADD CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x13C2 SWAP9 PUSH2 0x2B1 PUSH2 0x13A3 SWAP4 PUSH2 0xB98 PUSH0 SWAP8 PUSH2 0x136F PUSH1 0xC0 DUP13 ADD DUP13 PUSH2 0x39F8 JUMP JUMPDEST SWAP6 SWAP1 SWAP7 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x137F DUP12 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP3 PUSH4 0x21457897 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3F1B JUMP JUMPDEST SUB DUP2 DUP4 DUP6 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP5 PUSH0 SWAP7 PUSH0 SWAP3 PUSH2 0x1586 JUMPI JUMPDEST POP PUSH2 0x13E3 SWAP1 PUSH2 0x39AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 PUSH0 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP8 PUSH2 0x156A JUMPI JUMPDEST POP SWAP1 SWAP5 PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1435 DUP2 DUP5 PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO PUSH2 0x152F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x144F DUP3 DUP13 PUSH2 0x3E92 JUMP JUMPDEST MLOAD AND PUSH2 0x145A DUP7 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x14FD JUMPI JUMPDEST ISZERO PUSH2 0x14A2 JUMPI POP PUSH2 0x149C PUSH1 0x1 SWAP3 PUSH2 0x1475 DUP10 PUSH2 0x39AF JUMP JUMPDEST DUP11 PUSH32 0x0 PUSH2 0x46D8 JUMP JUMPDEST ADD PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x14AB DUP9 PUSH2 0x39AF JUMP JUMPDEST DUP8 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH0 SWAP2 PUSH2 0x14D2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3F7C JUMP JUMPDEST SUB DUP2 DUP4 DUP11 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x14ED JUMPI JUMPDEST POP PUSH2 0x149C JUMP JUMPDEST PUSH0 PUSH2 0x14F7 SWAP2 PUSH2 0x333F JUMP JUMPDEST DUP11 PUSH2 0x14E7 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 EQ PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0x149C JUMP JUMPDEST POP PUSH2 0x328 DUP8 PUSH2 0x154E PUSH2 0x1549 DUP9 PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x42EA JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x38A2 JUMP JUMPDEST PUSH2 0x157F SWAP2 SWAP8 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP6 DUP8 PUSH2 0x1417 JUMP JUMPDEST SWAP1 SWAP7 POP PUSH2 0x13E3 SWAP6 POP PUSH2 0x15A2 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xC31 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP7 SWAP2 SWAP6 SWAP1 SWAP7 SWAP2 SWAP1 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0xFCE PUSH0 PUSH2 0x3EA PUSH2 0x554 PUSH2 0x15C4 CALLDATASIZE PUSH2 0x381D JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH2 0x15D6 SWAP13 SWAP8 SWAP13 SWAP5 SWAP3 SWAP5 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP13 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x15E4 DUP12 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP12 MSTORE PUSH1 0x20 DUP12 ADD DUP15 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP13 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x60 DUP12 ADD MSTORE AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x163E PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x1646 PUSH2 0x32AD JUMP JUMPDEST PUSH2 0x164E PUSH2 0x33E3 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x3EA PUSH2 0x3F8 PUSH2 0x16EA SWAP6 PUSH2 0x1678 PUSH0 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x168F PUSH2 0x1684 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x44 CALLDATALOAD SWAP1 DUP5 PUSH2 0x435C JUMP JUMPDEST SWAP7 SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x169E DUP6 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x1740 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x1747 JUMPI JUMPDEST POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST POP POP PUSH2 0x3E92 JUMP JUMPDEST PUSH2 0x175B SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP7 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x17D8 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x1774 CALLDATASIZE PUSH2 0x34C4 JUMP JUMPDEST SWAP2 PUSH2 0x1782 SWAP8 SWAP5 SWAP4 SWAP8 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1790 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP6 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0xEB7 SWAP2 PUSH0 SWAP2 PUSH2 0xEFA JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x183A CALLDATASIZE PUSH2 0x37E9 JUMP JUMPDEST PUSH2 0x1842 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x184A PUSH2 0x413F JUMP JUMPDEST PUSH2 0x1853 DUP2 PUSH2 0x4415 JUMP JUMPDEST PUSH2 0x1861 PUSH1 0x60 DUP6 SWAP4 SWAP6 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x186B DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP5 PUSH2 0x100 DUP5 ADD SWAP6 PUSH2 0x187B DUP8 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x1A84 JUMPI JUMPDEST ISZERO PUSH2 0x195D JUMPI POP SWAP5 PUSH2 0x18FE SWAP2 PUSH2 0x18D9 PUSH1 0x20 SWAP8 PUSH32 0x0 PUSH32 0x0 PUSH2 0x41B5 JUMP JUMPDEST PUSH2 0x18E2 DUP6 PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH2 0x18F8 PUSH2 0x18F2 PUSH1 0x80 DUP9 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH2 0x3A4E JUMP JUMPDEST SWAP3 PUSH2 0x45CD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x194B JUMPI JUMPDEST POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1549 PUSH2 0x1957 SWAP2 PUSH2 0x39AF JUMP JUMPDEST DUP3 PUSH2 0x1932 JUMP JUMPDEST DUP2 PUSH2 0x1971 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP5 PUSH2 0x18FE SWAP2 PUSH2 0x18D9 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP2 PUSH2 0x19AA DUP11 PUSH2 0x4184 JUMP JUMPDEST SWAP4 PUSH2 0x19C9 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3A73 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP9 PUSH1 0x20 SWAP4 PUSH2 0x1A0B SWAP4 PUSH2 0x1A59 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP10 DUP11 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x3A96 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x20 SWAP7 PUSH2 0x18FE SWAP4 PUSH2 0x1A2C JUMPI JUMPDEST POP SWAP2 DUP2 SWAP7 POP PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1A4B SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x1A52 JUMPI JUMPDEST PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x39A0 JUMP JUMPDEST POP DUP8 PUSH2 0x1A22 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1A78 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x1A7D JUMPI JUMPDEST PUSH2 0x1A70 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3A5B JUMP JUMPDEST PUSH2 0x19ED JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A66 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND EQ PUSH2 0x1881 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x1AD3 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x1ADB PUSH2 0x32AD JUMP JUMPDEST PUSH2 0x1AE3 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 SWAP1 PUSH32 0x0 AND PUSH0 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x356 JUMPI PUSH0 PUSH2 0x1B4C PUSH2 0x1B6E SWAP7 DUP3 SWAP7 DUP4 SWAP2 PUSH2 0x1BB2 JUMPI JUMPDEST POP MLOAD PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x281F581 PUSH1 0xE6 SHL DUP2 MSTORE SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3AB1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP2 PUSH0 SWAP2 PUSH2 0x1B98 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x1BAC SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x124A DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x1BC6 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP9 PUSH2 0x1B45 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 TLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x1C1F CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x1C27 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x1C2F PUSH2 0x413F JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C69 DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP3 PUSH2 0x1C73 DUP4 PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x1C80 PUSH1 0x40 DUP6 ADD DUP6 PUSH2 0x39C3 JUMP JUMPDEST SWAP6 SWAP1 SWAP2 PUSH1 0x80 DUP7 ADD CALLDATALOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x1D10 SWAP8 PUSH2 0x2B1 PUSH2 0x1CF1 SWAP4 PUSH2 0x1CD9 PUSH0 SWAP8 PUSH2 0x1CAF PUSH1 0xC0 DUP14 ADD DUP14 PUSH2 0x39F8 JUMP JUMPDEST SWAP6 SWAP1 SWAP7 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x1CBF DUP12 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD PUSH2 0x3B64 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP3 PUSH4 0x12BCA7B1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3EA6 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH0 SWAP6 PUSH0 SWAP6 PUSH2 0x1F2A JUMPI JUMPDEST POP PUSH2 0x1D32 SWAP1 PUSH2 0x39AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH2 0x1F10 JUMPI JUMPDEST POP SWAP4 SWAP5 PUSH1 0xA0 DUP3 ADD SWAP5 SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1EE2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D8B DUP3 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x1D98 DUP2 DUP8 PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP2 DUP3 ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1DA9 DUP10 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x1EA6 JUMPI JUMPDEST ISZERO PUSH2 0x1DE8 JUMPI POP PUSH2 0x1DE2 PUSH1 0x1 SWAP3 DUP12 PUSH32 0x0 PUSH2 0x41B5 JUMP JUMPDEST ADD PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DF1 DUP7 PUSH2 0x39AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP10 PUSH2 0x1DFE DUP4 PUSH2 0x4184 JUMP JUMPDEST SWAP6 PUSH2 0x1E1D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP4 DUP5 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3A73 JUMP JUMPDEST SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x1E52 SWAP5 PUSH1 0x20 SWAP4 PUSH2 0x1E8B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x3A96 JUMP JUMPDEST SUB DUP2 PUSH0 DUP12 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1E6D JUMPI JUMPDEST POP PUSH2 0x1DE2 JUMP JUMPDEST PUSH2 0x1E84 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1A52 JUMPI PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP DUP11 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x1EA1 SWAP1 DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1A7D JUMPI PUSH2 0x1A70 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x1E36 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 EQ PUSH2 0x1DAF JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x1DE2 JUMP JUMPDEST POP DUP4 PUSH2 0x328 DUP9 PUSH2 0x1EF4 PUSH2 0x1549 DUP8 PUSH2 0x39AF JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3556 JUMP JUMPDEST PUSH2 0x1F24 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP8 PUSH2 0x1D65 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH2 0x1F47 SWAP2 SWAP6 POP PUSH2 0x1D32 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x347 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP6 SWAP2 SWAP3 SWAP1 SWAP6 SWAP5 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x204E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x203A JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2016 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FBA JUMPI JUMPDEST PUSH2 0x328 DUP4 PUSH2 0x1FA6 DUP2 DUP6 SUB DUP3 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH0 DUP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1FFC JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1FA6 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1FA6 SWAP1 POP PUSH2 0x1F96 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1F79 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x576 PUSH2 0x2080 PUSH0 PUSH2 0x3EA PUSH2 0x6BF PUSH2 0x2087 PUSH2 0x2076 CALLDATASIZE PUSH2 0x3711 JUMP JUMPDEST SWAP4 SWAP5 SWAP3 SWAP9 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST SWAP8 DUP5 PUSH2 0x435C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2095 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0x80 SHL SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST PUSH2 0x215A PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x20F7 CALLDATASIZE PUSH2 0x377B JUMP JUMPDEST SWAP2 SWAP7 SWAP4 SWAP3 PUSH2 0x2104 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2112 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP6 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x21AE SWAP2 PUSH0 SWAP2 PUSH2 0x8B9 JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST POP SWAP2 SWAP1 POP PUSH2 0xED2 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x21E3 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x2202 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x220A PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x361 JUMPI PUSH2 0x6BF PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x223A PUSH2 0x662 PUSH2 0x2293 SWAP9 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2248 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x22E7 SWAP2 PUSH0 SWAP2 PUSH2 0xEFA JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x22FC JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3556 JUMP JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0x22F0 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xFF0 PUSH2 0x234A PUSH0 PUSH2 0x3EA PUSH2 0x6BF PUSH2 0x233F CALLDATASIZE PUSH2 0x35D6 JUMP JUMPDEST SWAP4 SWAP9 SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2358 DUP7 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP7 MSTORE DUP9 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE DUP5 PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0x80 SHL SUB PUSH1 0xE0 DUP4 ADD MSTORE DUP5 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xBE5AE841 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3DF1 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x23E1 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x23E9 PUSH2 0x32C3 JUMP JUMPDEST PUSH2 0x23F1 PUSH2 0x3297 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x2414 PUSH2 0x241A SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP4 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC9C1661B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP1 DUP4 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP5 PUSH2 0x2546 JUMPI JUMPDEST POP SWAP5 PUSH2 0x3EA PUSH2 0x24F8 PUSH0 SWAP8 SWAP5 PUSH2 0x251C SWAP5 PUSH2 0x249B DUP11 SWAP8 PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x24A7 DUP11 DUP4 PUSH2 0x3E92 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x24B5 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x470 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x4AF JUMPI POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP4 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x257B JUMPI JUMPDEST DUP2 PUSH2 0x2562 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI DUP3 MLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD SWAP3 PUSH2 0x3EA PUSH2 0x2482 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2555 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x259E PUSH2 0x2594 CALLDATASIZE PUSH2 0x3711 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 SWAP3 SWAP4 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC9C1661B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP6 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP5 SWAP2 SWAP4 PUSH32 0x0 AND SWAP3 SWAP1 DUP5 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP6 PUSH2 0x26A8 JUMPI JUMPDEST POP PUSH2 0x24F8 PUSH2 0x267E SWAP4 PUSH0 SWAP9 DUP10 SWAP7 SWAP5 PUSH2 0x261E PUSH2 0x3EA SWAP6 PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x2630 DUP12 DUP4 PUSH2 0x3E92 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD SWAP4 PUSH2 0x263E DUP6 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x1740 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x1747 JUMPI POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST SWAP5 POP POP SWAP2 PUSH1 0x40 DUP5 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x26E1 JUMPI JUMPDEST DUP2 PUSH2 0x26C5 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI DUP4 MLOAD PUSH1 0x20 SWAP1 SWAP5 ADD MLOAD SWAP4 SWAP1 SWAP3 SWAP1 PUSH2 0x24F8 PUSH2 0x2605 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x26B8 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x361 JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0xC0 DUP4 MUL DUP5 ADD ADD GT PUSH2 0x361 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x276C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP1 CALLDATASIZE SUB SWAP1 PUSH1 0x60 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x27AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3685 JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x27CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x27D9 PUSH2 0x4119 JUMP JUMPDEST DUP6 DUP8 SUB PUSH2 0x2A55 JUMPI PUSH0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x2A03 JUMPI PUSH2 0x27F8 PUSH2 0x2B1 DUP3 DUP10 DUP10 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 PUSH0 DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH0 BYTE SWAP2 DUP4 MSTORE DUP4 MSTORE DUP4 MSTORE PUSH1 0xC0 DUP5 MUL DUP13 ADD SWAP1 PUSH1 0xC0 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2862 DUP6 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x286E PUSH1 0x24 DUP5 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 DUP3 DUP7 MSTORE PUSH2 0x287E PUSH1 0x44 DUP6 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD SWAP6 DUP1 DUP8 MSTORE PUSH2 0x2893 PUSH1 0x64 DUP8 ADD PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x84 DUP7 ADD CALLDATALOAD SWAP3 PUSH1 0xFF PUSH1 0xC4 PUSH1 0x60 DUP12 ADD SWAP9 DUP7 DUP11 MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP14 ADD MSTORE ADD CALLDATALOAD SWAP7 DUP8 PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP6 MLOAD AND SWAP1 MLOAD SWAP3 MLOAD SWAP5 DUP1 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH0 SWAP6 PUSH1 0xE4 SWAP5 DUP8 SWAP4 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP10 ADD MSTORE ADDRESS PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0xA4 DUP6 ADD MSTORE PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 PUSH2 0x29DF JUMPI JUMPDEST POP PUSH2 0x29D4 JUMPI PUSH1 0x20 PUSH2 0x2931 PUSH2 0x432D JUMP JUMPDEST SWAP4 MLOAD SWAP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP3 PUSH2 0x29A1 JUMPI JUMPDEST POP MLOAD SUB PUSH2 0x2983 JUMPI POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0x27E2 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2992 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xA7285689 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x29CC JUMPI JUMPDEST DUP2 PUSH2 0x29BC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI MLOAD SWAP1 DUP13 PUSH2 0x2971 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29AF JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x297D JUMP JUMPDEST PUSH0 PUSH2 0x29E9 SWAP2 PUSH2 0x333F JUMP JUMPDEST DUP14 PUSH2 0x2922 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x22 NOT ADD DUP3 SLT ISZERO PUSH2 0x361 JUMPI ADD PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x7 SHL CALLDATASIZE SUB SWAP2 ADD SGT PUSH2 0x361 JUMPI PUSH2 0x328 SWAP2 PUSH2 0xD74 SWAP2 PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH2 0x3F9E JUMP JUMPDEST PUSH4 0xAAAD13F7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xFF0 PUSH2 0x2A7F PUSH0 PUSH2 0x3EA PUSH2 0x6BF PUSH2 0x233F CALLDATASIZE PUSH2 0x35D6 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2A8D DUP7 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0x80 SHL SUB PUSH1 0xC0 DUP4 ADD MSTORE DUP5 NOT PUSH1 0xE0 DUP4 ADD MSTORE DUP5 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xBE5AE841 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3DF1 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x2B5D PUSH2 0x2B54 CALLDATASIZE PUSH2 0x357F JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 SWAP2 SWAP4 SWAP2 PUSH32 0x0 AND SWAP1 PUSH0 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP7 DUP8 SWAP6 PUSH2 0x2C1D SWAP6 PUSH2 0x2BD1 PUSH2 0xE69 SWAP5 PUSH2 0x3EA SWAP7 DUP11 SWAP2 PUSH2 0x2C46 JUMPI POP MLOAD PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2BDE DUP6 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP7 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x21AE SWAP2 PUSH0 SWAP2 PUSH2 0x8B9 JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST PUSH2 0x2C5A SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP13 PUSH2 0x1B45 JUMP JUMPDEST PUSH2 0x2293 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x2C73 CALLDATASIZE PUSH2 0x34C4 JUMP JUMPDEST SWAP2 PUSH2 0x2C81 SWAP8 SWAP5 SWAP4 SWAP8 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2C8F DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x2CEC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0xCBA SWAP2 PUSH2 0xA19 PUSH2 0x2D13 PUSH0 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x82CD54FB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 PUSH2 0x3EA SWAP2 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 CALLER SWAP2 DUP7 ADD PUSH2 0x3AB1 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x2D46 CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x2D4E PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x2D56 PUSH2 0x413F JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2D8E PUSH1 0x20 DUP4 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x2D98 DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP4 PUSH2 0x2DA8 DUP6 DUP3 PUSH2 0x39C3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP4 SWAP2 PUSH2 0x2DB8 DUP6 DUP6 PUSH2 0x39C3 JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x2DC7 PUSH1 0xC0 DUP9 ADD DUP9 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D4515F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP12 SWAP1 SWAP8 AND PUSH1 0x24 DUP13 ADD MSTORE PUSH1 0xC0 PUSH1 0x44 DUP13 ADD MSTORE PUSH1 0xC4 DUP12 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP5 SWAP4 PUSH1 0xE4 DUP11 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x306E JUMPI POP POP POP DUP9 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x64 DUP11 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 SWAP5 DUP5 DUP11 SWAP6 DUP7 SWAP5 DUP9 SWAP7 SWAP5 DUP8 SWAP6 PUSH1 0x5 SHL DUP1 SWAP3 DUP8 DUP4 ADD CALLDATACOPY ADD SWAP3 PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH1 0x84 DUP8 ADD MSTORE PUSH1 0x3 NOT DUP6 DUP8 DUP7 SUB ADD ADD PUSH1 0xA4 DUP8 ADD MSTORE DUP2 DUP6 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATACOPY PUSH0 DUP4 DUP1 DUP4 DUP6 ADD ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SUB ADD DUP2 PUSH0 DUP8 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP5 PUSH2 0x303A JUMPI JUMPDEST POP SWAP3 SWAP4 PUSH1 0xA0 DUP5 ADD SWAP4 SWAP1 PUSH0 JUMPDEST PUSH2 0x2EA4 DUP3 DUP5 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x3013 JUMPI PUSH2 0x2EC9 PUSH2 0x2EC4 DUP3 PUSH2 0x2EBE DUP6 DUP8 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x2ED8 DUP2 PUSH2 0x2EBE DUP8 DUP8 PUSH2 0x39C3 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP3 ISZERO PUSH2 0x3009 JUMPI PUSH2 0x2EE9 DUP9 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x2FD3 JUMPI JUMPDEST ISZERO PUSH2 0x2F28 JUMPI POP PUSH2 0x2F22 PUSH1 0x1 SWAP3 DUP11 PUSH32 0x0 PUSH2 0x41B5 JUMP JUMPDEST ADD PUSH2 0x2E9A JUMP JUMPDEST PUSH2 0x2F31 DUP6 PUSH2 0x39AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP9 PUSH2 0x2F3E DUP4 PUSH2 0x4184 JUMP JUMPDEST SWAP6 PUSH2 0x2F5D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP4 DUP5 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3A73 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x2F9A SWAP5 PUSH1 0x20 SWAP4 PUSH2 0x1E8B JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x3A96 JUMP JUMPDEST SUB DUP2 PUSH0 DUP11 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x2FB5 JUMPI JUMPDEST POP PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x2FCC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1A52 JUMPI PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP DUP10 PUSH2 0x2FAF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND EQ PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x20 DUP8 PUSH2 0x3022 PUSH2 0x1549 DUP7 PUSH2 0x39AF JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3066 JUMPI JUMPDEST DUP2 PUSH2 0x3056 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI MLOAD SWAP3 DUP7 PUSH2 0x2E8F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3049 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP4 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x3086 DUP9 PUSH2 0x32D9 JUMP JUMPDEST AND DUP2 MSTORE ADD SWAP5 ADD SWAP3 SWAP2 ADD PUSH2 0x2E07 JUMP JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x30A8 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x30D3 DUP3 PUSH2 0x3362 JUMP JUMPDEST SWAP2 PUSH2 0x30E1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3269 JUMPI POP POP PUSH1 0x44 CALLDATALOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x3128 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP2 PUSH2 0x3131 PUSH2 0x33E3 JUMP JUMPDEST SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x3151 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x315A CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x3168 DUP8 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x40 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 PUSH1 0x64 CALLDATALOAD DUP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0xC0 DUP9 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP6 PUSH4 0x437D6B3 PUSH1 0xE1 SHL PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP9 ADD MSTORE PUSH2 0x124 DUP8 ADD SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x64 DUP8 ADD MSTORE MLOAD SWAP7 PUSH1 0xE0 PUSH1 0x84 DUP8 ADD MSTORE DUP8 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x144 DUP8 ADD SWAP9 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x324A JUMPI POP POP POP DUP5 SWAP4 PUSH2 0x554 SWAP4 PUSH0 SWAP7 SWAP4 PUSH2 0x3228 PUSH2 0xFF0 SWAP11 PUSH2 0x3EA SWAP6 MLOAD PUSH1 0x43 NOT DUP9 DUP4 SUB ADD PUSH1 0xA4 DUP10 ADD MSTORE PUSH2 0x3491 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0xC4 DUP7 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xE4 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x43 NOT ADD PUSH2 0x104 DUP6 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 MSTORE PUSH1 0x20 SWAP10 DUP11 ADD SWAP10 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31F8 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3276 DUP5 PUSH2 0x32D9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x30FE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x29EF JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x3385 DUP2 PUSH2 0x3362 JUMP JUMPDEST SWAP4 PUSH2 0x3393 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x20 DUP6 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x361 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x33B5 JUMPI POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x33A9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 PUSH1 0x20 PUSH2 0x33E0 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x3379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x29EF JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x3419 DUP3 PUSH2 0x33F2 JUMP JUMPDEST SWAP2 PUSH2 0x3427 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x361 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 PUSH1 0x20 PUSH2 0x33E0 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x340D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH1 0xE0 SWAP1 DUP3 SWAP1 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x34AE JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x34A1 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP3 PUSH2 0x3502 SWAP2 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x356C PUSH2 0x33E0 SWAP5 SWAP3 PUSH1 0x60 DUP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP1 PUSH1 0xC0 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x361 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP2 PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x36E4 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x3702 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x3532 JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP2 PUSH2 0x37BD SWAP2 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x140 SWAP1 DUP3 SWAP1 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0xE4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x389E SWAP2 PUSH1 0x4 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP2 PUSH2 0x38BF SWAP1 PUSH2 0x33E0 SWAP5 SWAP3 DUP5 MSTORE PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP1 PUSH1 0xC0 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x394C DUP3 PUSH2 0x33F2 JUMP JUMPDEST SWAP3 PUSH2 0x395A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x333F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x361 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD MCOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x361 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3935 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x361 JUMPI MLOAD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x361 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x361 JUMPI JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x361 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x361 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x3A3A JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x361 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x33E0 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 MLOAD PUSH2 0x3AF9 DUP2 PUSH2 0x3362 JUMP JUMPDEST SWAP3 PUSH2 0x3B07 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x333F JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3B2F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3B22 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x361 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3AE2 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 PUSH2 0x3BD7 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3BF4 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH1 0xE0 PUSH1 0x1F NOT DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x361 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP3 PUSH2 0x3C3A SWAP2 DUP6 ADD PUSH2 0x3AE2 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD MLOAD SWAP3 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x361 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 MLOAD SWAP1 PUSH2 0x3C91 DUP3 PUSH2 0x3362 JUMP JUMPDEST SWAP3 PUSH2 0x3C9F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x333F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3CC7 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP1 PUSH2 0x3CF1 DUP3 PUSH2 0x3362 JUMP JUMPDEST PUSH2 0x3CFE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x333F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3D0F PUSH1 0x1F NOT SWAP2 PUSH2 0x3362 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 PUSH2 0x3D78 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3BF4 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3D25 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x361 JUMPI DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP4 PUSH2 0x3DC4 SWAP2 DUP4 ADD PUSH2 0x3AE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3935 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST PUSH2 0x160 PUSH2 0x120 PUSH2 0x33E0 SWAP4 PUSH1 0x20 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x3E20 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x140 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3A3A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH2 0x3EEB PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xC0 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3F07 PUSH1 0x80 DUP3 ADD MLOAD DUP4 DUP6 ADD SWAP1 PUSH2 0x3B84 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xC0 PUSH1 0x1F NOT DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH2 0x3F6A PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH2 0x3F07 PUSH1 0x80 DUP3 ADD MLOAD DUP4 DUP6 ADD SWAP1 PUSH2 0x3D25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3FA9 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP1 PUSH32 0x0 SWAP4 DUP5 TLOAD PUSH2 0x40B1 JUMPI PUSH1 0x1 DUP6 TSTORE PUSH2 0x3FDF DUP3 PUSH2 0x3362 JUMP JUMPDEST SWAP2 PUSH2 0x3FED PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x3FFC DUP3 PUSH2 0x3362 JUMP JUMPDEST ADD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x40A0 JUMPI POP POP PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4056 JUMPI POP POP POP SWAP1 PUSH0 PUSH2 0x404B SWAP3 SWAP5 TSTORE PUSH32 0x0 DUP1 TLOAD SWAP2 PUSH2 0x404D JUMPI JUMPDEST POP PUSH2 0x42EA JUMP JUMPDEST JUMP JUMPDEST PUSH0 SWAP1 TSTORE PUSH0 PUSH2 0x4045 JUMP JUMPDEST DUP1 PUSH2 0x4084 PUSH0 DUP1 PUSH2 0x406C PUSH2 0x2B1 PUSH1 0x1 SWAP7 DUP9 DUP11 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD ADDRESS GAS DELEGATECALL PUSH2 0x407D PUSH2 0x432D JUMP JUMPDEST SWAP1 ADDRESS PUSH2 0x47FE JUMP JUMPDEST PUSH2 0x408E DUP3 DUP8 PUSH2 0x3E92 JUMP JUMPDEST MSTORE PUSH2 0x4099 DUP2 DUP7 PUSH2 0x3E92 JUMP JUMPDEST POP ADD PUSH2 0x400A JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP9 ADD ADD MSTORE ADD PUSH2 0x3FFF JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x3A3A JUMPI PUSH2 0x389E SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH0 SWAP2 SWAP1 PUSH32 0x0 DUP1 TLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x410F JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP TSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TLOAD PUSH2 0x40B1 JUMPI PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4171 JUMPI JUMP JUMPDEST PUSH4 0x89676D5 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 GT PUSH2 0x419E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL PUSH0 MSTORE PUSH1 0xA0 PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST DUP3 SELFBALANCE LT PUSH2 0x42DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE PUSH0 SWAP3 SWAP1 DUP4 DUP2 PUSH1 0x4 DUP2 DUP7 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x42C6 JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x20 DUP4 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP8 PUSH1 0x24 DUP3 ADD MSTORE DUP6 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0x422A PUSH1 0x64 DUP3 PUSH2 0x333F JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x42BB JUMPI DUP3 MLOAD RETURNDATASIZE PUSH2 0x42B2 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x42A0 JUMPI SWAP1 PUSH1 0x44 PUSH1 0x20 SWAP3 DUP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4294 JUMPI POP PUSH2 0x4279 JUMPI POP JUMP JUMPDEST PUSH2 0x4291 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A52 JUMPI PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x4241 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x42D3 SWAP2 SWAP4 POP PUSH0 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH0 SWAP2 PUSH0 PUSH2 0x41F1 JUMP JUMPDEST PUSH4 0x500D4EFB PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x4329 JUMPI PUSH32 0x0 TLOAD PUSH2 0x4329 JUMPI PUSH2 0x404B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47AE JUMP JUMPDEST POP POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x4357 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x433E DUP3 PUSH2 0x33F2 JUMP JUMPDEST SWAP2 PUSH2 0x434C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC9C1661B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP3 PUSH0 SWAP5 PUSH2 0x43DA JUMPI JUMPDEST POP PUSH2 0x43D7 PUSH2 0x43D0 DUP6 SWAP5 PUSH2 0x3CE7 JUMP JUMPDEST SWAP5 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH1 0x40 DUP3 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x440D JUMPI JUMPDEST DUP2 PUSH2 0x43F7 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD SWAP3 PUSH0 PUSH2 0x43C2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x43EA JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD CALLDATALOAD TIMESTAMP GT PUSH2 0x45BE JUMPI PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x44F4 PUSH1 0x60 SWAP2 PUSH2 0x4535 PUSH2 0x4443 PUSH1 0x40 DUP7 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP5 PUSH2 0x444F DUP6 DUP3 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x44C8 PUSH2 0x445F PUSH1 0x80 DUP4 ADD PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x446D PUSH2 0x120 DUP5 ADD DUP5 PUSH2 0x39F8 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP8 PUSH2 0x447C DUP10 PUSH2 0x32ED JUMP JUMPDEST DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE DUP10 DUP9 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 PUSH1 0xA0 DUP7 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP11 ADD SWAP7 ADD CALLDATALOAD DUP7 MSTORE CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP9 PUSH4 0xAFEDE03 PUSH1 0xE2 SHL DUP11 MSTORE PUSH1 0x20 PUSH1 0x4 DUP12 ADD MSTORE PUSH1 0x24 DUP11 ADD SWAP1 MLOAD PUSH2 0x3DE4 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x44 DUP10 ADD MSTORE SWAP1 MLOAD DUP2 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP1 MLOAD AND PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE MLOAD PUSH1 0xC4 DUP5 ADD MSTORE MLOAD PUSH1 0xE0 PUSH1 0xE4 DUP5 ADD MSTORE PUSH2 0x104 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH0 SWAP2 PUSH0 SWAP2 PUSH2 0x457C JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x60 DUP2 RETURNDATASIZE PUSH1 0x60 GT PUSH2 0x45B6 JUMPI JUMPDEST DUP2 PUSH2 0x4599 PUSH1 0x60 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI DUP1 MLOAD PUSH1 0x40 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH0 PUSH2 0x4576 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x458C JUMP JUMPDEST PUSH4 0xE08B8AF PUSH1 0xE4 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP3 DUP3 ISZERO PUSH2 0x46D2 JUMPI DUP1 PUSH2 0x469C JUMPI JUMPDEST ISZERO PUSH2 0x462B JUMPI POP PUSH2 0x404B SWAP2 PUSH32 0x0 PUSH32 0x0 PUSH2 0x46D8 JUMP JUMPDEST SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH2 0x4681 SWAP4 PUSH0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3F7C JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x4692 JUMPI POP JUMP JUMPDEST PUSH0 PUSH2 0x404B SWAP2 PUSH2 0x333F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND EQ PUSH2 0x45DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 PUSH1 0x64 DUP2 DUP4 DUP1 SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP8 PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP10 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x4799 JUMPI JUMPDEST POP DUP1 DUP6 SWAP2 EXTCODESIZE ISZERO PUSH2 0x4795 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x478A JUMPI PUSH2 0x4771 JUMPI JUMPDEST POP SWAP2 SWAP3 POP PUSH2 0x404B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47AE JUMP JUMPDEST PUSH2 0x477C DUP6 DUP1 SWAP3 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x4786 JUMPI DUP4 PUSH2 0x475B JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH2 0x47A6 SWAP2 SWAP6 POP PUSH0 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH0 SWAP4 PUSH0 PUSH2 0x4729 JUMP JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x47E7 JUMPI PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x47D0 PUSH2 0x432D JUMP JUMPDEST POP ISZERO PUSH2 0x47D8 JUMPI JUMP JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP SELFBALANCE PUSH4 0xCF479181 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST SWAP1 PUSH2 0x4813 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x47D8 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x4844 JUMPI JUMPDEST PUSH2 0x4824 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x481C JUMP INVALID SWAP12 PUSH24 0x9B17422D0DF92223018B32B4D1FA46E071723D6817E2486D STOP EXTCODESIZE 0xEC 0xC5 PUSH0 STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SWAP14 0xA7 MCOPY CALLVALUE 0xF6 0xF DUP3 0xD2 SGT DUP5 0xE ISZERO 0xC0 0xF7 0x28 PUSH17 0xFD9669CDD5A0A4CC3BC5191D234B106473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"1019:39020:43:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;1241:71:36;1019:39020:43;;;;;;:::i;:::-;;;;-1:-1:-1;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1019:39020:43;;;;1241:71:36;:::i;:::-;;;323:14:40;;1019:39020:43;;-1:-1:-1;;;;;1019:39020:43;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;2383:83:34;1019:39020:43;;;;;;:::i;:::-;;;;-1:-1:-1;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1019:39020:43;;;;2383:83:34;:::i;:::-;;;3603:12;;1019:39020:43;;;;;;;1241:71:36;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:14:40;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2383:83:34;1019:39020:43;;;;;;;;;;3603:12:34;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;-1:-1:-1;1019:39020:43;;;-1:-1:-1;1019:39020:43;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;-1:-1:-1;1019:39020:43;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;-1:-1:-1;1019:39020:43;;-1:-1:-1;1019:39020:43;;;;;;;-1:-1:-1;;1019:39020:43;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;:::o;1248:306:39:-;;1433:67;1019:39020:43;1433:67:39;1248:306;1019:39020:43;;;1433:67:39;;;;;;;1019:39020:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;1019:39020:43;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;1433:67:39;;1019:39020:43;;1433:67:39;;;;;;:::i;:::-;1019:39020:43;1423:78:39;;-1:-1:-1;;1019:39020:43;;;;;;;;;1404:103:39;1433:67;1404:103;;1019:39020:43;;;1433:67:39;1404:103;;;1019:39020:43;1404:103:39;;:::i;:::-;1019:39020:43;;1377:144:39;;-1:-1:-1;;1377:170:39;;1248:306::o;1019:39020:43:-;;;;-1:-1:-1;1019:39020:43;;;;;-1:-1:-1;1019:39020:43"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":13017,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_47324":{"entryPoint":12929,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_47343":{"entryPoint":12951,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_47358":{"entryPoint":12973,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_47392":{"entryPoint":12995,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_array_uint256_dynt_uint256t_boolt_bytes":{"entryPoint":13508,"id":null,"parameterSlots":1,"returnSlots":5},"abi_decode_addresst_contract_IERC20t_contract_IERC20t_uint256t_addresst_bytes":{"entryPoint":13782,"id":null,"parameterSlots":1,"returnSlots":6},"abi_decode_addresst_contract_IERC20t_contract_IERC20t_uint256t_uint256t_uint256t_boolt_bytes_calldata":{"entryPoint":14365,"id":null,"parameterSlots":1,"returnSlots":9},"abi_decode_addresst_contract_IERC20t_uint256t_addresst_bytes":{"entryPoint":14097,"id":null,"parameterSlots":1,"returnSlots":5},"abi_decode_addresst_uint256t_addresst_bytes":{"entryPoint":13695,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_addresst_uint256t_array_uint256_dynt_boolt_bytes":{"entryPoint":14203,"id":null,"parameterSlots":1,"returnSlots":5},"abi_decode_addresst_uint256t_contract_IERC20t_uint256t_boolt_bytes":{"entryPoint":14541,"id":null,"parameterSlots":1,"returnSlots":6},"abi_decode_array_bytes_calldata_dyn_calldata":{"entryPoint":13909,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_contract_IERC20_dyn_fromMemory":{"entryPoint":15453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":13253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":15167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_memory_ptr_fromMemory":{"entryPoint":15074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dynt_uint256t_bytes_fromMemory":{"entryPoint":15379,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_available_length_array_uint256_dyn":{"entryPoint":13177,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":13325,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":13283,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":14939,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":13379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":13957,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_fromMemory":{"entryPoint":14645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_memory_ptr_fromMemory":{"entryPoint":14715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_InitializeHookParams_calldata":{"entryPoint":13406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_struct_SwapSingleTokenHookParams_calldata":{"entryPoint":14313,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":14752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_array_uint256_dynt_bytes_fromMemory":{"entryPoint":15765,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_address_address_uint160":{"entryPoint":14963,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_array_uint256_dyn":{"entryPoint":15025,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":14002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":13457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_uint256_bytes":{"entryPoint":13654,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes":{"entryPoint":13618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_contract_IERC20_address_uint256":{"entryPoint":16252,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_contract_IERC20_uint256":{"entryPoint":14998,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_AddLiquidityKind":{"entryPoint":15236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_RemoveLiquidityKind":{"entryPoint":15653,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_SwapKind":{"entryPoint":15844,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_AddLiquidityHookParams":{"entryPoint":15249,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_AddLiquidityParams":{"entryPoint":16038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_RemoveLiquidityHookParams":{"entryPoint":15666,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_RemoveLiquidityParams":{"entryPoint":16155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_SwapSingleTokenHookParams":{"entryPoint":15857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_array_uint256_dyn_bytes":{"entryPoint":14498,"id":null,"parameterSlots":4,"returnSlots":1},"access_calldata_tail_array_contract_IERC20_dyn_calldata":{"entryPoint":14787,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_bytes_calldata":{"entryPoint":14840,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":15591,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_contract_IERC20_dyn":{"entryPoint":13154,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":13298,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":16576,"id":null,"parameterSlots":3,"returnSlots":2},"calldata_array_index_access_contract_IERC20_dyn_calldata":{"entryPoint":14890,"id":null,"parameterSlots":3,"returnSlots":1},"extract_returndata":{"entryPoint":17197,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":13119,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_47326":{"entryPoint":13037,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_47334":{"entryPoint":13064,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_47336":{"entryPoint":13092,"id":null,"parameterSlots":1,"returnSlots":0},"fun_ensureOnlyVault":{"entryPoint":16703,"id":8193,"parameterSlots":0,"returnSlots":0},"fun_getSingleInputArrayAndTokenIndex":{"entryPoint":17244,"id":6793,"parameterSlots":3,"returnSlots":2},"fun_nonReentrantBefore":{"entryPoint":16665,"id":6180,"parameterSlots":0,"returnSlots":0},"fun_returnEth":{"entryPoint":17130,"id":6749,"parameterSlots":1,"returnSlots":0},"fun_saveSender":{"entryPoint":16599,"id":7162,"parameterSlots":1,"returnSlots":1},"fun_sendTokenOut":{"entryPoint":17869,"id":6890,"parameterSlots":4,"returnSlots":0},"fun_sendValue":{"entryPoint":18350,"id":867,"parameterSlots":2,"returnSlots":0},"fun_swapHook":{"entryPoint":17429,"id":9912,"parameterSlots":1,"returnSlots":3},"fun_toUint160":{"entryPoint":16772,"id":1466,"parameterSlots":1,"returnSlots":1},"fun_unwrapWethAndTransferToSender":{"entryPoint":18136,"id":7077,"parameterSlots":4,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":18430,"id":1026,"parameterSlots":3,"returnSlots":1},"fun_wrapEthAndSettle":{"entryPoint":16821,"id":7038,"parameterSlots":3,"returnSlots":0},"memory_array_index_access_uint256_dyn":{"entryPoint":16018,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_saveSenderAndManageEth":{"entryPoint":16286,"id":6417,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":14767,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bool":{"entryPoint":14926,"id":null,"parameterSlots":1,"returnSlots":1},"write_to_memory_enum_AddLiquidityKind":{"entryPoint":15204,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_RemoveLiquidityKind":{"entryPoint":15641,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"6366":[{"length":32,"start":16300},{"length":32,"start":17139}],"6369":[{"length":32,"start":26},{"length":32,"start":5240},{"length":32,"start":5376},{"length":32,"start":6325},{"length":32,"start":6400},{"length":32,"start":6802},{"length":32,"start":7614},{"length":32,"start":7849},{"length":32,"start":11028},{"length":32,"start":12030},{"length":32,"start":12257},{"length":32,"start":17927},{"length":32,"start":18090}],"7105":[{"length":32,"start":1162},{"length":32,"start":2196},{"length":32,"start":2687},{"length":32,"start":3797},{"length":32,"start":7145},{"length":32,"start":8959},{"length":32,"start":16414},{"length":32,"start":16604}],"8155":[{"length":32,"start":732},{"length":32,"start":1055},{"length":32,"start":1403},{"length":32,"start":1766},{"length":32,"start":2092},{"length":32,"start":2624},{"length":32,"start":3018},{"length":32,"start":3263},{"length":32,"start":3517},{"length":32,"start":4085},{"length":32,"start":4309},{"length":32,"start":4848},{"length":32,"start":5871},{"length":32,"start":6109},{"length":32,"start":6292},{"length":32,"start":6518},{"length":32,"start":6917},{"length":32,"start":7217},{"length":32,"start":8543},{"length":32,"start":8856},{"length":32,"start":9284},{"length":32,"start":9676},{"length":32,"start":11138},{"length":32,"start":11608},{"length":32,"start":16705},{"length":32,"start":17296},{"length":32,"start":17722},{"length":32,"start":17894},{"length":32,"start":17966}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x59 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4A JUMPI STOP JUMPDEST PUSH4 0x2A06EFB PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26B3D95 EQ PUSH2 0x3094 JUMPI DUP1 PUSH4 0x86FAD66 EQ PUSH2 0x2D38 JUMPI DUP1 PUSH4 0x8C04793 EQ PUSH2 0x2CD8 JUMPI DUP1 PUSH4 0xCA078EC EQ PUSH2 0x2C60 JUMPI DUP1 PUSH4 0xF710888 EQ PUSH2 0x2B43 JUMPI DUP1 PUSH4 0x107C279F EQ PUSH2 0x2AFF JUMPI DUP1 PUSH4 0x175D4408 EQ PUSH2 0x2A64 JUMPI DUP1 PUSH4 0x19C6989F EQ PUSH2 0x2703 JUMPI DUP1 PUSH4 0x1BBF2E23 EQ PUSH2 0x26E9 JUMPI DUP1 PUSH4 0x1D56798D EQ PUSH2 0x2583 JUMPI DUP1 PUSH4 0x23B39241 EQ PUSH2 0x23C8 JUMPI DUP1 PUSH4 0x3EBC54E5 EQ PUSH2 0x2324 JUMPI DUP1 PUSH4 0x452DB952 EQ PUSH2 0x21CA JUMPI DUP1 PUSH4 0x51682750 EQ PUSH2 0x20E4 JUMPI DUP1 PUSH4 0x53D0BB98 EQ PUSH2 0x2058 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1F53 JUMPI DUP1 PUSH4 0x5B343791 EQ PUSH2 0x1C11 JUMPI DUP1 PUSH4 0x5E01EB5A EQ PUSH2 0x1BCC JUMPI DUP1 PUSH4 0x5F9815FF EQ PUSH2 0x1ABA JUMPI DUP1 PUSH4 0x68A24FE0 EQ PUSH2 0x182C JUMPI DUP1 PUSH4 0x724DBA33 EQ PUSH2 0x1761 JUMPI DUP1 PUSH4 0x72657D17 EQ PUSH2 0x162A JUMPI DUP1 PUSH4 0x750283BC EQ PUSH2 0x15AE JUMPI DUP1 PUSH4 0x7B03C7BA EQ PUSH2 0x12D0 JUMPI DUP1 PUSH4 0x82BF2B24 EQ PUSH2 0x1259 JUMPI DUP1 PUSH4 0x82CD54FB EQ PUSH2 0x106F JUMPI DUP1 PUSH4 0x94E86EF8 EQ PUSH2 0xF52 JUMPI DUP1 PUSH4 0x9DE90518 EQ PUSH2 0xD80 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0xD3D JUMPI DUP1 PUSH4 0xB037ED36 EQ PUSH2 0xC40 JUMPI DUP1 PUSH4 0xB24BD571 EQ PUSH2 0xAFD JUMPI DUP1 PUSH4 0xBE5AE841 EQ PUSH2 0xABB JUMPI DUP1 PUSH4 0xBF6EE3FD EQ PUSH2 0x94B JUMPI DUP1 PUSH4 0xC08BC851 EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0xC330C7BE EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0xDA001F7D EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xE7326DEF EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xECB2182C EQ PUSH2 0x365 JUMPI PUSH4 0xEFD85F14 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x218 CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x220 PUSH2 0x413F JUMP JUMPDEST PUSH2 0x22C PUSH1 0x20 DUP3 ADD PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x235 DUP3 PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x243 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x39C3 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP6 ADD CALLDATALOAD SWAP4 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x2B1 PUSH0 SWAP6 PUSH1 0x60 DUP9 PUSH2 0x29C PUSH2 0x2B8 SWAP8 PUSH2 0x272 PUSH1 0xC0 PUSH2 0x2D7 SWAP14 ADD DUP5 PUSH2 0x39F8 JUMP JUMPDEST SWAP8 SWAP1 SWAP9 PUSH1 0x40 MLOAD SWAP12 PUSH2 0x282 DUP14 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP14 MSTORE AND PUSH1 0x20 DUP13 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MSTORE ADD CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD PUSH2 0x3B64 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x12BCA7B1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3EA6 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP3 PUSH0 SWAP2 PUSH2 0x32C JUMPI JUMPDEST POP PUSH2 0x328 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3556 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP PUSH2 0x328 SWAP3 POP PUSH2 0x34F SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x347 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3C13 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x41A PUSH2 0x3F8 PUSH2 0x392 PUSH0 PUSH2 0x3EA PUSH2 0x37B CALLDATASIZE PUSH2 0x38CD JUMP JUMPDEST SWAP3 SWAP9 SWAP5 SWAP4 SWAP8 SWAP1 SWAP2 PUSH2 0x38B CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP10 DUP6 PUSH2 0x435C JUMP JUMPDEST SWAP8 SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x3A1 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP3 PUSH4 0x48C89491 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x470 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x4AF JUMPI JUMPDEST POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x487 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0x47F JUMP JUMPDEST PUSH2 0x4CB SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x397B JUMP JUMPDEST DUP7 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x576 PUSH2 0x4FD PUSH0 PUSH2 0x3EA PUSH2 0x554 PUSH2 0x4E7 CALLDATASIZE PUSH2 0x38CD JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x4F6 SWAP10 SWAP2 SWAP4 SWAP10 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP10 DUP7 PUSH2 0x435C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 PUSH2 0x50B DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP3 PUSH4 0x48C89491 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x5C9 SWAP2 PUSH0 SWAP2 PUSH2 0x5D8 JUMPI JUMPDEST POP DUP4 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5EC SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x5BA JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x60B PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x62A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x632 PUSH2 0x32C3 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x361 JUMPI PUSH2 0x6BF PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x668 PUSH2 0x662 PUSH2 0x6E1 SWAP9 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP2 PUSH2 0x40D7 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x676 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP3 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x734 SWAP2 PUSH0 SWAP2 PUSH2 0x744 JUMPI JUMPDEST POP DUP4 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST POP SWAP2 SWAP1 POP PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x758 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x725 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x777 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x796 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x79E PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x361 JUMPI PUSH2 0x6BF PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x7CE PUSH2 0x662 PUSH2 0x827 SWAP9 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x7DC DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x3 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x87C SWAP2 PUSH0 SWAP2 PUSH2 0x8B9 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x891 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x38A2 JUMP JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0x885 JUMP JUMPDEST PUSH2 0x8CD SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x8E6 CALLDATASIZE PUSH2 0x34C4 JUMP JUMPDEST SWAP2 PUSH2 0x8F4 SWAP8 SWAP5 SWAP4 SWAP8 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x902 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x95F PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x97E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x361 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH2 0xA19 PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x9B9 PUSH2 0xA3B SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP1 PUSH2 0x9C3 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x9D1 DUP6 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP6 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x48C89491 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0xAA1 JUMPI JUMPDEST POP PUSH2 0xA7C JUMPI STOP JUMPDEST PUSH0 PUSH32 0x0 TSTORE STOP JUMPDEST PUSH2 0xAB4 SWAP1 RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP DUP2 PUSH2 0xA75 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x20 PUSH2 0xAE3 PUSH2 0xACE CALLDATASIZE PUSH2 0x37E9 JUMP JUMPDEST PUSH2 0xAD6 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0xADE PUSH2 0x413F JUMP JUMPDEST PUSH2 0x4415 JUMP JUMPDEST POP POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xB0B CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0xB13 PUSH2 0x413F JUMP JUMPDEST PUSH2 0xB1F PUSH1 0x20 DUP3 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0xB29 DUP2 PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH2 0xB37 PUSH1 0x40 DUP4 ADD DUP4 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 SWAP4 PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x4 DUP6 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x2B1 PUSH0 SWAP6 PUSH2 0xB98 PUSH2 0xBC5 SWAP9 PUSH2 0xBA6 SWAP7 PUSH1 0x60 PUSH2 0xB67 PUSH1 0xC0 DUP9 ADD DUP9 PUSH2 0x39F8 JUMP JUMPDEST SWAP8 SWAP1 SWAP9 PUSH1 0x40 MLOAD SWAP12 PUSH2 0xB77 DUP14 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP14 MSTORE AND PUSH1 0x20 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD PUSH2 0x3D19 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x21457897 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3F1B JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP3 PUSH0 SWAP2 PUSH2 0xC16 JUMPI JUMPDEST POP PUSH2 0x328 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x328 SWAP3 POP PUSH2 0xC39 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xC31 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3D95 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xC05 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0xCBA PUSH0 PUSH2 0xC5D PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5F9815FF PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0xC98 PUSH1 0x84 DUP3 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP2 PUSH2 0xD0F SWAP2 PUSH0 SWAP2 PUSH2 0xD23 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3B3F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0xD37 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP4 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0xD74 PUSH2 0xD6E PUSH2 0x328 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP1 PUSH2 0x3F9E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x36B2 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xD99 PUSH2 0xD91 CALLDATASIZE PUSH2 0x357F JUMP JUMPDEST SWAP3 SWAP4 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 SWAP2 SWAP4 PUSH32 0x0 SWAP1 SWAP3 AND SWAP3 SWAP1 PUSH0 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH2 0xF30 JUMPI JUMPDEST POP MLOAD PUSH2 0xE02 DUP2 PUSH2 0x3CE7 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF14 JUMPI PUSH0 DUP8 DUP2 PUSH2 0xE8D DUP10 PUSH2 0x3EA PUSH2 0xE69 DUP15 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xE2A DUP6 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP7 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0xEB7 SWAP2 PUSH0 SWAP2 PUSH2 0xEFA JUMPI JUMPDEST POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST POP POP SWAP1 PUSH2 0xED2 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0xD0F JUMP JUMPDEST PUSH2 0xF0E SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0xF29 DUP3 DUP7 PUSH2 0x3E92 JUMP JUMPDEST MSTORE ADD PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xF4C SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3C5D JUMP JUMPDEST DUP7 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0xFCE PUSH0 PUSH2 0x3EA PUSH2 0x554 PUSH2 0xF68 CALLDATASIZE PUSH2 0x381D JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH2 0xF7A SWAP13 SWAP8 SWAP13 SWAP5 SWAP3 SWAP5 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP13 PUSH1 0x40 MLOAD SWAP10 PUSH2 0xF88 DUP12 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP12 MSTORE PUSH1 0x1 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP13 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x60 DUP12 ADD MSTORE AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x345127F PUSH1 0xE5 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 PUSH1 0x24 DUP4 ADD PUSH2 0x3DF1 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP3 PUSH2 0x1053 JUMPI JUMPDEST POP PUSH1 0x20 DUP3 MLOAD SWAP3 DUP2 DUP1 DUP3 ADD SWAP5 DUP6 SWAP3 ADD ADD SUB SLT PUSH2 0x361 JUMPI PUSH1 0x20 SWAP2 MLOAD SWAP1 PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1068 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x102D JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x1088 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x32AD JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x10B4 PUSH2 0x1113 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP1 PUSH2 0x10BD PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x10C5 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x281F581 PUSH1 0xE6 SHL DUP2 MSTORE SWAP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH0 SWAP2 DUP6 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP10 DUP8 PUSH1 0x4 DUP7 ADD PUSH2 0x3AB1 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP4 PUSH2 0x1235 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH2 0x121B JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x11EA JUMPI PUSH2 0x1171 DUP2 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP1 DUP2 PUSH2 0x1183 JUMPI JUMPDEST PUSH1 0x1 SWAP2 POP ADD PUSH2 0x115E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1195 DUP3 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MLOAD AND DUP5 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI DUP7 PUSH0 SWAP2 PUSH2 0x11BF PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3F7C JUMP JUMPDEST SUB DUP2 DUP4 DUP9 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x11DA JUMPI JUMPDEST POP PUSH2 0x1179 JUMP JUMPDEST PUSH0 PUSH2 0x11E4 SWAP2 PUSH2 0x333F JUMP JUMPDEST DUP7 PUSH2 0x11D4 JUMP JUMPDEST PUSH2 0x328 DUP5 PUSH2 0x11F7 DUP8 PUSH2 0x42EA JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x122F SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP5 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x1252 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x124A DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3B3F JUMP JUMPDEST SWAP2 DUP5 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x827 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x126C CALLDATASIZE PUSH2 0x377B JUMP JUMPDEST SWAP2 SWAP7 SWAP4 SWAP3 PUSH2 0x1279 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1287 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x3 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x12DE CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x12E6 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x12EE PUSH2 0x413F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 PUSH2 0x1329 DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP4 PUSH2 0x1333 DUP3 PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x1340 PUSH1 0x40 DUP5 ADD DUP5 PUSH2 0x39C3 JUMP JUMPDEST SWAP7 SWAP1 SWAP2 PUSH1 0x80 DUP6 ADD CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x13C2 SWAP9 PUSH2 0x2B1 PUSH2 0x13A3 SWAP4 PUSH2 0xB98 PUSH0 SWAP8 PUSH2 0x136F PUSH1 0xC0 DUP13 ADD DUP13 PUSH2 0x39F8 JUMP JUMPDEST SWAP6 SWAP1 SWAP7 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x137F DUP12 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP3 PUSH4 0x21457897 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3F1B JUMP JUMPDEST SUB DUP2 DUP4 DUP6 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP5 PUSH0 SWAP7 PUSH0 SWAP3 PUSH2 0x1586 JUMPI JUMPDEST POP PUSH2 0x13E3 SWAP1 PUSH2 0x39AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP6 PUSH0 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP8 PUSH2 0x156A JUMPI JUMPDEST POP SWAP1 SWAP5 PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1435 DUP2 DUP5 PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO PUSH2 0x152F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x144F DUP3 DUP13 PUSH2 0x3E92 JUMP JUMPDEST MLOAD AND PUSH2 0x145A DUP7 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x14FD JUMPI JUMPDEST ISZERO PUSH2 0x14A2 JUMPI POP PUSH2 0x149C PUSH1 0x1 SWAP3 PUSH2 0x1475 DUP10 PUSH2 0x39AF JUMP JUMPDEST DUP11 PUSH32 0x0 PUSH2 0x46D8 JUMP JUMPDEST ADD PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x14AB DUP9 PUSH2 0x39AF JUMP JUMPDEST DUP8 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH0 SWAP2 PUSH2 0x14D2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3F7C JUMP JUMPDEST SUB DUP2 DUP4 DUP11 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x14ED JUMPI JUMPDEST POP PUSH2 0x149C JUMP JUMPDEST PUSH0 PUSH2 0x14F7 SWAP2 PUSH2 0x333F JUMP JUMPDEST DUP11 PUSH2 0x14E7 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 EQ PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0x149C JUMP JUMPDEST POP PUSH2 0x328 DUP8 PUSH2 0x154E PUSH2 0x1549 DUP9 PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x42EA JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x38A2 JUMP JUMPDEST PUSH2 0x157F SWAP2 SWAP8 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP6 DUP8 PUSH2 0x1417 JUMP JUMPDEST SWAP1 SWAP7 POP PUSH2 0x13E3 SWAP6 POP PUSH2 0x15A2 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xC31 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP7 SWAP2 SWAP6 SWAP1 SWAP7 SWAP2 SWAP1 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0xFF0 PUSH2 0xFCE PUSH0 PUSH2 0x3EA PUSH2 0x554 PUSH2 0x15C4 CALLDATASIZE PUSH2 0x381D JUMP JUMPDEST SWAP5 SWAP1 SWAP6 PUSH2 0x15D6 SWAP13 SWAP8 SWAP13 SWAP5 SWAP3 SWAP5 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP13 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x15E4 DUP12 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP12 MSTORE PUSH1 0x20 DUP12 ADD DUP15 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP13 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x60 DUP12 ADD MSTORE AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x163E PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x1646 PUSH2 0x32AD JUMP JUMPDEST PUSH2 0x164E PUSH2 0x33E3 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x3EA PUSH2 0x3F8 PUSH2 0x16EA SWAP6 PUSH2 0x1678 PUSH0 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x168F PUSH2 0x1684 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x44 CALLDATALOAD SWAP1 DUP5 PUSH2 0x435C JUMP JUMPDEST SWAP7 SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x169E DUP6 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x1740 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x1747 JUMPI JUMPDEST POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST POP POP PUSH2 0x3E92 JUMP JUMPDEST PUSH2 0x175B SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x4C3 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP7 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x17D8 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x1774 CALLDATASIZE PUSH2 0x34C4 JUMP JUMPDEST SWAP2 PUSH2 0x1782 SWAP8 SWAP5 SWAP4 SWAP8 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1790 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP6 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0xEB7 SWAP2 PUSH0 SWAP2 PUSH2 0xEFA JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x183A CALLDATASIZE PUSH2 0x37E9 JUMP JUMPDEST PUSH2 0x1842 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x184A PUSH2 0x413F JUMP JUMPDEST PUSH2 0x1853 DUP2 PUSH2 0x4415 JUMP JUMPDEST PUSH2 0x1861 PUSH1 0x60 DUP6 SWAP4 SWAP6 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x186B DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP5 PUSH2 0x100 DUP5 ADD SWAP6 PUSH2 0x187B DUP8 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x1A84 JUMPI JUMPDEST ISZERO PUSH2 0x195D JUMPI POP SWAP5 PUSH2 0x18FE SWAP2 PUSH2 0x18D9 PUSH1 0x20 SWAP8 PUSH32 0x0 PUSH32 0x0 PUSH2 0x41B5 JUMP JUMPDEST PUSH2 0x18E2 DUP6 PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH2 0x18F8 PUSH2 0x18F2 PUSH1 0x80 DUP9 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH2 0x3A4E JUMP JUMPDEST SWAP3 PUSH2 0x45CD JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x194B JUMPI JUMPDEST POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1549 PUSH2 0x1957 SWAP2 PUSH2 0x39AF JUMP JUMPDEST DUP3 PUSH2 0x1932 JUMP JUMPDEST DUP2 PUSH2 0x1971 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP5 PUSH2 0x18FE SWAP2 PUSH2 0x18D9 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP2 PUSH2 0x19AA DUP11 PUSH2 0x4184 JUMP JUMPDEST SWAP4 PUSH2 0x19C9 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3A73 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP9 PUSH1 0x20 SWAP4 PUSH2 0x1A0B SWAP4 PUSH2 0x1A59 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP10 DUP11 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x3A96 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x20 SWAP7 PUSH2 0x18FE SWAP4 PUSH2 0x1A2C JUMPI JUMPDEST POP SWAP2 DUP2 SWAP7 POP PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1A4B SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x1A52 JUMPI JUMPDEST PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x39A0 JUMP JUMPDEST POP DUP8 PUSH2 0x1A22 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1A78 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x1A7D JUMPI JUMPDEST PUSH2 0x1A70 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3A5B JUMP JUMPDEST PUSH2 0x19ED JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A66 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND EQ PUSH2 0x1881 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x1AD3 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x1ADB PUSH2 0x32AD JUMP JUMPDEST PUSH2 0x1AE3 PUSH2 0x413F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 SWAP1 PUSH32 0x0 AND PUSH0 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x356 JUMPI PUSH0 PUSH2 0x1B4C PUSH2 0x1B6E SWAP7 DUP3 SWAP7 DUP4 SWAP2 PUSH2 0x1BB2 JUMPI JUMPDEST POP MLOAD PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x281F581 PUSH1 0xE6 SHL DUP2 MSTORE SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3AB1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP2 PUSH0 SWAP2 PUSH2 0x1B98 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x1BAC SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x124A DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x1BC6 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP9 PUSH2 0x1B45 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 TLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x1C1F CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x1C27 PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x1C2F PUSH2 0x413F JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C69 DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP3 PUSH2 0x1C73 DUP4 PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x1C80 PUSH1 0x40 DUP6 ADD DUP6 PUSH2 0x39C3 JUMP JUMPDEST SWAP6 SWAP1 SWAP2 PUSH1 0x80 DUP7 ADD CALLDATALOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x1D10 SWAP8 PUSH2 0x2B1 PUSH2 0x1CF1 SWAP4 PUSH2 0x1CD9 PUSH0 SWAP8 PUSH2 0x1CAF PUSH1 0xC0 DUP14 ADD DUP14 PUSH2 0x39F8 JUMP JUMPDEST SWAP6 SWAP1 SWAP7 PUSH1 0x40 MLOAD SWAP10 PUSH2 0x1CBF DUP12 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP11 ADD CALLDATALOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD PUSH2 0x3B64 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP3 PUSH4 0x12BCA7B1 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3EA6 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH0 SWAP6 PUSH0 SWAP6 PUSH2 0x1F2A JUMPI JUMPDEST POP PUSH2 0x1D32 SWAP1 PUSH2 0x39AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH0 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH2 0x1F10 JUMPI JUMPDEST POP SWAP4 SWAP5 PUSH1 0xA0 DUP3 ADD SWAP5 SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1EE2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1D8B DUP3 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MLOAD AND SWAP1 PUSH2 0x1D98 DUP2 DUP8 PUSH2 0x3E92 JUMP JUMPDEST MLOAD SWAP2 DUP3 ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1DA9 DUP10 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x1EA6 JUMPI JUMPDEST ISZERO PUSH2 0x1DE8 JUMPI POP PUSH2 0x1DE2 PUSH1 0x1 SWAP3 DUP12 PUSH32 0x0 PUSH2 0x41B5 JUMP JUMPDEST ADD PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x1DF1 DUP7 PUSH2 0x39AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP10 PUSH2 0x1DFE DUP4 PUSH2 0x4184 JUMP JUMPDEST SWAP6 PUSH2 0x1E1D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP4 DUP5 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3A73 JUMP JUMPDEST SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x1E52 SWAP5 PUSH1 0x20 SWAP4 PUSH2 0x1E8B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x3A96 JUMP JUMPDEST SUB DUP2 PUSH0 DUP12 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x1E6D JUMPI JUMPDEST POP PUSH2 0x1DE2 JUMP JUMPDEST PUSH2 0x1E84 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1A52 JUMPI PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP DUP11 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x1EA1 SWAP1 DUP5 RETURNDATASIZE DUP2 GT PUSH2 0x1A7D JUMPI PUSH2 0x1A70 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x1E36 JUMP JUMPDEST POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 EQ PUSH2 0x1DAF JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x1DE2 JUMP JUMPDEST POP DUP4 PUSH2 0x328 DUP9 PUSH2 0x1EF4 PUSH2 0x1549 DUP8 PUSH2 0x39AF JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3556 JUMP JUMPDEST PUSH2 0x1F24 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP8 PUSH2 0x1D65 JUMP JUMPDEST SWAP1 SWAP5 POP PUSH2 0x1F47 SWAP2 SWAP6 POP PUSH2 0x1D32 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x347 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST SWAP6 SWAP2 SWAP3 SWAP1 SWAP6 SWAP5 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x204E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x203A JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2016 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FBA JUMPI JUMPDEST PUSH2 0x328 DUP4 PUSH2 0x1FA6 DUP2 DUP6 SUB DUP3 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST PUSH0 DUP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x1FFC JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x1FA6 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1FA6 SWAP1 POP PUSH2 0x1F96 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1F79 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x576 PUSH2 0x2080 PUSH0 PUSH2 0x3EA PUSH2 0x6BF PUSH2 0x2087 PUSH2 0x2076 CALLDATASIZE PUSH2 0x3711 JUMP JUMPDEST SWAP4 SWAP5 SWAP3 SWAP9 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST SWAP8 DUP5 PUSH2 0x435C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2095 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0x80 SHL SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST PUSH2 0x215A PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x20F7 CALLDATASIZE PUSH2 0x377B JUMP JUMPDEST SWAP2 SWAP7 SWAP4 SWAP3 PUSH2 0x2104 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2112 DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP6 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3D81E3DD PUSH1 0xE1 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x21AE SWAP2 PUSH0 SWAP2 PUSH2 0x8B9 JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST POP SWAP2 SWAP1 POP PUSH2 0xED2 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x21E3 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x2202 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x220A PUSH2 0x3297 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x361 JUMPI PUSH2 0x6BF PUSH0 SWAP3 PUSH2 0x3EA SWAP3 PUSH2 0x223A PUSH2 0x662 PUSH2 0x2293 SWAP9 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2248 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB DUP2 DUP4 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x22E7 SWAP2 PUSH0 SWAP2 PUSH2 0xEFA JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x22FC JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x3556 JUMP JUMPDEST PUSH0 PUSH32 0x0 TSTORE PUSH2 0x22F0 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xFF0 PUSH2 0x234A PUSH0 PUSH2 0x3EA PUSH2 0x6BF PUSH2 0x233F CALLDATASIZE PUSH2 0x35D6 JUMP JUMPDEST SWAP4 SWAP9 SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2358 DUP7 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP7 MSTORE DUP9 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE DUP5 PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0x80 SHL SUB PUSH1 0xE0 DUP4 ADD MSTORE DUP5 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xBE5AE841 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3DF1 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x23E1 PUSH2 0x3281 JUMP JUMPDEST PUSH2 0x23E9 PUSH2 0x32C3 JUMP JUMPDEST PUSH2 0x23F1 PUSH2 0x3297 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x2414 PUSH2 0x241A SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP4 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC9C1661B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP1 DUP4 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP5 PUSH2 0x2546 JUMPI JUMPDEST POP SWAP5 PUSH2 0x3EA PUSH2 0x24F8 PUSH0 SWAP8 SWAP5 PUSH2 0x251C SWAP5 PUSH2 0x249B DUP11 SWAP8 PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x24A7 DUP11 DUP4 PUSH2 0x3E92 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x24B5 DUP5 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DBF46AD PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x470 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x4AF JUMPI POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP4 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x257B JUMPI JUMPDEST DUP2 PUSH2 0x2562 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI DUP3 MLOAD PUSH1 0x20 SWAP1 SWAP4 ADD MLOAD SWAP3 PUSH2 0x3EA PUSH2 0x2482 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2555 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x259E PUSH2 0x2594 CALLDATASIZE PUSH2 0x3711 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 SWAP3 SWAP4 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC9C1661B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP6 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP5 SWAP2 SWAP4 PUSH32 0x0 AND SWAP3 SWAP1 DUP5 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP1 PUSH0 SWAP6 PUSH2 0x26A8 JUMPI JUMPDEST POP PUSH2 0x24F8 PUSH2 0x267E SWAP4 PUSH0 SWAP9 DUP10 SWAP7 SWAP5 PUSH2 0x261E PUSH2 0x3EA SWAP6 PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x2630 DUP12 DUP4 PUSH2 0x3E92 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD SWAP4 PUSH2 0x263E DUP6 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x3BF617C5 PUSH1 0xE2 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH2 0x1740 PUSH2 0x478 SWAP3 PUSH1 0x20 SWAP6 PUSH0 SWAP2 PUSH2 0x1747 JUMPI POP DUP6 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3C13 JUMP JUMPDEST SWAP5 POP POP SWAP2 PUSH1 0x40 DUP5 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x26E1 JUMPI JUMPDEST DUP2 PUSH2 0x26C5 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI DUP4 MLOAD PUSH1 0x20 SWAP1 SWAP5 ADD MLOAD SWAP4 SWAP1 SWAP3 SWAP1 PUSH2 0x24F8 PUSH2 0x2605 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x26B8 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x361 JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0xC0 DUP4 MUL DUP5 ADD ADD GT PUSH2 0x361 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x276C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP1 CALLDATASIZE SUB SWAP1 PUSH1 0x60 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x27AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3685 JUMP JUMPDEST POP POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x27CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x27D9 PUSH2 0x4119 JUMP JUMPDEST DUP6 DUP8 SUB PUSH2 0x2A55 JUMPI PUSH0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x2A03 JUMPI PUSH2 0x27F8 PUSH2 0x2B1 DUP3 DUP10 DUP10 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 PUSH0 DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH0 BYTE SWAP2 DUP4 MSTORE DUP4 MSTORE DUP4 MSTORE PUSH1 0xC0 DUP5 MUL DUP13 ADD SWAP1 PUSH1 0xC0 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2862 DUP6 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x286E PUSH1 0x24 DUP5 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP2 DUP3 DUP7 MSTORE PUSH2 0x287E PUSH1 0x44 DUP6 ADD PUSH2 0x32D9 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD SWAP6 DUP1 DUP8 MSTORE PUSH2 0x2893 PUSH1 0x64 DUP8 ADD PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x84 DUP7 ADD CALLDATALOAD SWAP3 PUSH1 0xFF PUSH1 0xC4 PUSH1 0x60 DUP12 ADD SWAP9 DUP7 DUP11 MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP14 ADD MSTORE ADD CALLDATALOAD SWAP7 DUP8 PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP6 MLOAD AND SWAP1 MLOAD SWAP3 MLOAD SWAP5 DUP1 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH0 SWAP6 PUSH1 0xE4 SWAP5 DUP8 SWAP4 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP10 ADD MSTORE ADDRESS PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0xA4 DUP6 ADD MSTORE PUSH1 0xC4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 PUSH2 0x29DF JUMPI JUMPDEST POP PUSH2 0x29D4 JUMPI PUSH1 0x20 PUSH2 0x2931 PUSH2 0x432D JUMP JUMPDEST SWAP4 MLOAD SWAP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP3 PUSH2 0x29A1 JUMPI JUMPDEST POP MLOAD SUB PUSH2 0x2983 JUMPI POP PUSH1 0x1 SWAP1 JUMPDEST ADD PUSH2 0x27E2 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2992 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xA7285689 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x29CC JUMPI JUMPDEST DUP2 PUSH2 0x29BC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI MLOAD SWAP1 DUP13 PUSH2 0x2971 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29AF JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x297D JUMP JUMPDEST PUSH0 PUSH2 0x29E9 SWAP2 PUSH2 0x333F JUMP JUMPDEST DUP14 PUSH2 0x2922 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x22 NOT ADD DUP3 SLT ISZERO PUSH2 0x361 JUMPI ADD PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x7 SHL CALLDATASIZE SUB SWAP2 ADD SGT PUSH2 0x361 JUMPI PUSH2 0x328 SWAP2 PUSH2 0xD74 SWAP2 PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH2 0x3F9E JUMP JUMPDEST PUSH4 0xAAAD13F7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0xFF0 PUSH2 0x2A7F PUSH0 PUSH2 0x3EA PUSH2 0x6BF PUSH2 0x233F CALLDATASIZE PUSH2 0x35D6 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2A8D DUP7 PUSH2 0x3308 JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0x80 SHL SUB PUSH1 0xC0 DUP4 ADD MSTORE DUP5 NOT PUSH1 0xE0 DUP4 ADD MSTORE DUP5 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xBE5AE841 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3DF1 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x2B5D PUSH2 0x2B54 CALLDATASIZE PUSH2 0x357F JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 PUSH2 0x40D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA4F2803 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP5 SWAP2 SWAP4 SWAP2 PUSH32 0x0 AND SWAP1 PUSH0 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP7 DUP8 SWAP6 PUSH2 0x2C1D SWAP6 PUSH2 0x2BD1 PUSH2 0xE69 SWAP5 PUSH2 0x3EA SWAP7 DUP11 SWAP2 PUSH2 0x2C46 JUMPI POP MLOAD PUSH2 0x3CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH2 0x2BDE DUP6 PUSH2 0x32ED JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE DUP7 PUSH1 0x80 DUP4 ADD MSTORE DUP7 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0xB24BD571 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3D32 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x328 SWAP3 PUSH2 0x21AE SWAP2 PUSH0 SWAP2 PUSH2 0x8B9 JUMPI POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x3D95 JUMP JUMPDEST PUSH2 0x2C5A SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0xF44 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP13 PUSH2 0x1B45 JUMP JUMPDEST PUSH2 0x2293 PUSH2 0x554 PUSH0 PUSH2 0x3EA PUSH2 0x2C73 CALLDATASIZE PUSH2 0x34C4 JUMP JUMPDEST SWAP2 PUSH2 0x2C81 SWAP8 SWAP5 SWAP4 SWAP8 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x2C8F DUP7 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH4 0x5B343791 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x2CEC PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0xCBA SWAP2 PUSH2 0xA19 PUSH2 0x2D13 PUSH0 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x82CD54FB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 PUSH2 0x3EA SWAP2 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 CALLER SWAP2 DUP7 ADD PUSH2 0x3AB1 JUMP JUMPDEST CALLVALUE PUSH2 0x361 JUMPI PUSH2 0x2D46 CALLDATASIZE PUSH2 0x345E JUMP JUMPDEST PUSH2 0x2D4E PUSH2 0x4119 JUMP JUMPDEST PUSH2 0x2D56 PUSH2 0x413F JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2D8E PUSH1 0x20 DUP4 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x2D98 DUP4 PUSH2 0x39AF JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP4 PUSH2 0x2DA8 DUP6 DUP3 PUSH2 0x39C3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP4 SWAP2 PUSH2 0x2DB8 DUP6 DUP6 PUSH2 0x39C3 JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x2DC7 PUSH1 0xC0 DUP9 ADD DUP9 PUSH2 0x39F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D4515F PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP12 SWAP1 SWAP8 AND PUSH1 0x24 DUP13 ADD MSTORE PUSH1 0xC0 PUSH1 0x44 DUP13 ADD MSTORE PUSH1 0xC4 DUP12 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP5 SWAP4 PUSH1 0xE4 DUP11 ADD SWAP2 SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x306E JUMPI POP POP POP DUP9 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x64 DUP11 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 SWAP5 DUP5 DUP11 SWAP6 DUP7 SWAP5 DUP9 SWAP7 SWAP5 DUP8 SWAP6 PUSH1 0x5 SHL DUP1 SWAP3 DUP8 DUP4 ADD CALLDATACOPY ADD SWAP3 PUSH1 0x80 DUP11 ADD CALLDATALOAD PUSH1 0x84 DUP8 ADD MSTORE PUSH1 0x3 NOT DUP6 DUP8 DUP7 SUB ADD ADD PUSH1 0xA4 DUP8 ADD MSTORE DUP2 DUP6 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD CALLDATACOPY PUSH0 DUP4 DUP1 DUP4 DUP6 ADD ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SUB ADD DUP2 PUSH0 DUP8 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP5 PUSH2 0x303A JUMPI JUMPDEST POP SWAP3 SWAP4 PUSH1 0xA0 DUP5 ADD SWAP4 SWAP1 PUSH0 JUMPDEST PUSH2 0x2EA4 DUP3 DUP5 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x3013 JUMPI PUSH2 0x2EC9 PUSH2 0x2EC4 DUP3 PUSH2 0x2EBE DUP6 DUP8 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 PUSH2 0x3A2A JUMP JUMPDEST PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x2ED8 DUP2 PUSH2 0x2EBE DUP8 DUP8 PUSH2 0x39C3 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP3 ISZERO PUSH2 0x3009 JUMPI PUSH2 0x2EE9 DUP9 PUSH2 0x3A4E JUMP JUMPDEST DUP1 PUSH2 0x2FD3 JUMPI JUMPDEST ISZERO PUSH2 0x2F28 JUMPI POP PUSH2 0x2F22 PUSH1 0x1 SWAP3 DUP11 PUSH32 0x0 PUSH2 0x41B5 JUMP JUMPDEST ADD PUSH2 0x2E9A JUMP JUMPDEST PUSH2 0x2F31 DUP6 PUSH2 0x39AF JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP9 PUSH2 0x2F3E DUP4 PUSH2 0x4184 JUMP JUMPDEST SWAP6 PUSH2 0x2F5D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP4 DUP5 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3A73 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH2 0x2F9A SWAP5 PUSH1 0x20 SWAP4 PUSH2 0x1E8B JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x3A96 JUMP JUMPDEST SUB DUP2 PUSH0 DUP11 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x356 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x2FB5 JUMPI JUMPDEST POP PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x2FCC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1A52 JUMPI PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP DUP10 PUSH2 0x2FAF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND EQ PUSH2 0x2EEF JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x20 DUP8 PUSH2 0x3022 PUSH2 0x1549 DUP7 PUSH2 0x39AF JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3066 JUMPI JUMPDEST DUP2 PUSH2 0x3056 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI MLOAD SWAP3 DUP7 PUSH2 0x2E8F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3049 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP4 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x3086 DUP9 PUSH2 0x32D9 JUMP JUMPDEST AND DUP2 MSTORE ADD SWAP5 ADD SWAP3 SWAP2 ADD PUSH2 0x2E07 JUMP JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH2 0x30A8 PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x30D3 DUP3 PUSH2 0x3362 JUMP JUMPDEST SWAP2 PUSH2 0x30E1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3269 JUMPI POP POP PUSH1 0x44 CALLDATALOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x3128 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP2 PUSH2 0x3131 PUSH2 0x33E3 JUMP JUMPDEST SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x3151 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH2 0x315A CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x3168 DUP8 PUSH2 0x32ED JUMP JUMPDEST CALLER DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x40 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 PUSH1 0x64 CALLDATALOAD DUP6 MSTORE PUSH1 0xA0 DUP9 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0xC0 DUP9 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP6 PUSH4 0x437D6B3 PUSH1 0xE1 SHL PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP9 ADD MSTORE PUSH2 0x124 DUP8 ADD SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x44 DUP9 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x64 DUP8 ADD MSTORE MLOAD SWAP7 PUSH1 0xE0 PUSH1 0x84 DUP8 ADD MSTORE DUP8 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x144 DUP8 ADD SWAP9 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x324A JUMPI POP POP POP DUP5 SWAP4 PUSH2 0x554 SWAP4 PUSH0 SWAP7 SWAP4 PUSH2 0x3228 PUSH2 0xFF0 SWAP11 PUSH2 0x3EA SWAP6 MLOAD PUSH1 0x43 NOT DUP9 DUP4 SUB ADD PUSH1 0xA4 DUP10 ADD MSTORE PUSH2 0x3491 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0xC4 DUP7 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xE4 DUP6 ADD MSTORE MLOAD DUP4 DUP3 SUB PUSH1 0x43 NOT ADD PUSH2 0x104 DUP6 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 MSTORE PUSH1 0x20 SWAP10 DUP11 ADD SWAP10 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31F8 JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x3276 DUP5 PUSH2 0x32D9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x30FE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x29EF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x29EF JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x3385 DUP2 PUSH2 0x3362 JUMP JUMPDEST SWAP4 PUSH2 0x3393 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x333F JUMP JUMPDEST PUSH1 0x20 DUP6 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x361 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x33B5 JUMPI POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x33A9 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 PUSH1 0x20 PUSH2 0x33E0 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x3379 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x29EF JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x3419 DUP3 PUSH2 0x33F2 JUMP JUMPDEST SWAP2 PUSH2 0x3427 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x361 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 PUSH1 0x20 PUSH2 0x33E0 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x340D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH1 0xE0 SWAP1 DUP3 SWAP1 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x34AE JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x34A1 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP3 PUSH2 0x3502 SWAP2 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x356C PUSH2 0x33E0 SWAP5 SWAP3 PUSH1 0x60 DUP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP1 PUSH1 0xC0 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x361 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x361 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP2 PUSH1 0x20 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x36E4 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x3702 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x3532 JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP2 PUSH2 0x37BD SWAP2 PUSH1 0x4 ADD PUSH2 0x33C5 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x140 SWAP1 DUP3 SWAP1 SUB PUSH1 0x3 NOT ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0xC4 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0xE4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x389E SWAP2 PUSH1 0x4 ADD PUSH2 0x3685 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP2 PUSH2 0x38BF SWAP1 PUSH2 0x33E0 SWAP5 SWAP3 DUP5 MSTORE PUSH1 0x60 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP1 PUSH1 0xC0 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x361 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP2 PUSH1 0x4 ADD PUSH2 0x3443 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x394C DUP3 PUSH2 0x33F2 JUMP JUMPDEST SWAP3 PUSH2 0x395A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x333F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x361 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD MCOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x361 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3935 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x361 JUMPI MLOAD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x361 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x361 JUMPI JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x361 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x361 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x3A3A JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x361 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x361 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x33E0 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 MLOAD PUSH2 0x3AF9 DUP2 PUSH2 0x3362 JUMP JUMPDEST SWAP3 PUSH2 0x3B07 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x333F JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3B2F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3B22 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x361 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3AE2 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 PUSH2 0x3BD7 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3BF4 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3B84 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH1 0xE0 PUSH1 0x1F NOT DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x361 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP3 PUSH2 0x3C3A SWAP2 DUP6 ADD PUSH2 0x3AE2 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD MLOAD SWAP3 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x361 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x361 JUMPI ADD SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x361 JUMPI DUP2 MLOAD SWAP1 PUSH2 0x3C91 DUP3 PUSH2 0x3362 JUMP JUMPDEST SWAP3 PUSH2 0x3C9F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x333F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x361 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x3CC7 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x361 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP1 PUSH2 0x3CF1 DUP3 PUSH2 0x3362 JUMP JUMPDEST PUSH2 0x3CFE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x333F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3D0F PUSH1 0x1F NOT SWAP2 PUSH2 0x3362 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 PUSH2 0x3D78 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3BF4 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3D25 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x361 JUMPI DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI DUP4 PUSH2 0x3DC4 SWAP2 DUP4 ADD PUSH2 0x3AE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x361 JUMPI PUSH2 0x33E0 SWAP3 ADD PUSH2 0x3935 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x3B70 JUMPI MSTORE JUMP JUMPDEST PUSH2 0x160 PUSH2 0x120 PUSH2 0x33E0 SWAP4 PUSH1 0x20 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x3E20 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x3DE4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x140 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3A3A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH2 0x3EEB PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xC0 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3F07 PUSH1 0x80 DUP3 ADD MLOAD DUP4 DUP6 ADD SWAP1 PUSH2 0x3B84 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xC0 PUSH1 0x1F NOT DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x3532 JUMP JUMPDEST SWAP1 PUSH2 0x33E0 SWAP2 PUSH1 0x20 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH2 0x3F6A PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD SWAP1 PUSH2 0x3491 JUMP JUMPDEST SWAP3 PUSH2 0x3F07 PUSH1 0x80 DUP3 ADD MLOAD DUP4 DUP6 ADD SWAP1 PUSH2 0x3D25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3FA9 CALLER PUSH2 0x40D7 JUMP JUMPDEST SWAP1 PUSH32 0x0 SWAP4 DUP5 TLOAD PUSH2 0x40B1 JUMPI PUSH1 0x1 DUP6 TSTORE PUSH2 0x3FDF DUP3 PUSH2 0x3362 JUMP JUMPDEST SWAP2 PUSH2 0x3FED PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x3FFC DUP3 PUSH2 0x3362 JUMP JUMPDEST ADD PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x40A0 JUMPI POP POP PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4056 JUMPI POP POP POP SWAP1 PUSH0 PUSH2 0x404B SWAP3 SWAP5 TSTORE PUSH32 0x0 DUP1 TLOAD SWAP2 PUSH2 0x404D JUMPI JUMPDEST POP PUSH2 0x42EA JUMP JUMPDEST JUMP JUMPDEST PUSH0 SWAP1 TSTORE PUSH0 PUSH2 0x4045 JUMP JUMPDEST DUP1 PUSH2 0x4084 PUSH0 DUP1 PUSH2 0x406C PUSH2 0x2B1 PUSH1 0x1 SWAP7 DUP9 DUP11 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD ADDRESS GAS DELEGATECALL PUSH2 0x407D PUSH2 0x432D JUMP JUMPDEST SWAP1 ADDRESS PUSH2 0x47FE JUMP JUMPDEST PUSH2 0x408E DUP3 DUP8 PUSH2 0x3E92 JUMP JUMPDEST MSTORE PUSH2 0x4099 DUP2 DUP7 PUSH2 0x3E92 JUMP JUMPDEST POP ADD PUSH2 0x400A JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP9 ADD ADD MSTORE ADD PUSH2 0x3FFF JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x3A3A JUMPI PUSH2 0x389E SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x39F8 JUMP JUMPDEST PUSH0 SWAP2 SWAP1 PUSH32 0x0 DUP1 TLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x410F JUMPI POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP TSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TLOAD PUSH2 0x40B1 JUMPI PUSH1 0x1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x484E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE TSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4171 JUMPI JUMP JUMPDEST PUSH4 0x89676D5 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 GT PUSH2 0x419E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH4 0x6DFCC65 PUSH1 0xE4 SHL PUSH0 MSTORE PUSH1 0xA0 PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST DUP3 SELFBALANCE LT PUSH2 0x42DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP2 MSTORE PUSH0 SWAP3 SWAP1 DUP4 DUP2 PUSH1 0x4 DUP2 DUP7 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x42C6 JUMPI JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x20 DUP4 PUSH1 0x40 MLOAD DUP3 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP8 PUSH1 0x24 DUP3 ADD MSTORE DUP6 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH2 0x422A PUSH1 0x64 DUP3 PUSH2 0x333F JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x42BB JUMPI DUP3 MLOAD RETURNDATASIZE PUSH2 0x42B2 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x42A0 JUMPI SWAP1 PUSH1 0x44 PUSH1 0x20 SWAP3 DUP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x15AFD409 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4294 JUMPI POP PUSH2 0x4279 JUMPI POP JUMP JUMPDEST PUSH2 0x4291 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A52 JUMPI PUSH2 0x1A43 DUP2 DUP4 PUSH2 0x333F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x4241 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x42D3 SWAP2 SWAP4 POP PUSH0 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH0 SWAP2 PUSH0 PUSH2 0x41F1 JUMP JUMPDEST PUSH4 0x500D4EFB PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x4329 JUMPI PUSH32 0x0 TLOAD PUSH2 0x4329 JUMPI PUSH2 0x404B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47AE JUMP JUMPDEST POP POP JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x4357 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x433E DUP3 PUSH2 0x33F2 JUMP JUMPDEST SWAP2 PUSH2 0x434C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x333F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xC9C1661B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP3 PUSH0 SWAP5 PUSH2 0x43DA JUMPI JUMPDEST POP PUSH2 0x43D7 PUSH2 0x43D0 DUP6 SWAP5 PUSH2 0x3CE7 JUMP JUMPDEST SWAP5 DUP6 PUSH2 0x3E92 JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH1 0x40 DUP3 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x440D JUMPI JUMPDEST DUP2 PUSH2 0x43F7 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI PUSH1 0x20 DUP3 MLOAD SWAP3 ADD MLOAD SWAP3 PUSH0 PUSH2 0x43C2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x43EA JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD CALLDATALOAD TIMESTAMP GT PUSH2 0x45BE JUMPI PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH2 0x44F4 PUSH1 0x60 SWAP2 PUSH2 0x4535 PUSH2 0x4443 PUSH1 0x40 DUP7 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP5 PUSH2 0x444F DUP6 DUP3 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP1 PUSH2 0x44C8 PUSH2 0x445F PUSH1 0x80 DUP4 ADD PUSH2 0x39AF JUMP JUMPDEST PUSH2 0x446D PUSH2 0x120 DUP5 ADD DUP5 PUSH2 0x39F8 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP8 PUSH2 0x447C DUP10 PUSH2 0x32ED JUMP JUMPDEST DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP12 MSTORE PUSH1 0x40 DUP9 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE DUP10 DUP9 ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x80 DUP9 ADD SWAP4 PUSH1 0xA0 DUP7 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP11 ADD SWAP7 ADD CALLDATALOAD DUP7 MSTORE CALLDATASIZE SWAP2 PUSH2 0x340D JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP8 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP9 PUSH4 0xAFEDE03 PUSH1 0xE2 SHL DUP11 MSTORE PUSH1 0x20 PUSH1 0x4 DUP12 ADD MSTORE PUSH1 0x24 DUP11 ADD SWAP1 MLOAD PUSH2 0x3DE4 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x44 DUP10 ADD MSTORE SWAP1 MLOAD DUP2 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP1 MLOAD AND PUSH1 0x84 DUP7 ADD MSTORE MLOAD PUSH1 0xA4 DUP6 ADD MSTORE MLOAD PUSH1 0xC4 DUP5 ADD MSTORE MLOAD PUSH1 0xE0 PUSH1 0xE4 DUP5 ADD MSTORE PUSH2 0x104 DUP4 ADD SWAP1 PUSH2 0x3532 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x356 JUMPI PUSH0 SWAP2 PUSH0 SWAP2 PUSH0 SWAP2 PUSH2 0x457C JUMPI JUMPDEST POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x60 DUP2 RETURNDATASIZE PUSH1 0x60 GT PUSH2 0x45B6 JUMPI JUMPDEST DUP2 PUSH2 0x4599 PUSH1 0x60 SWAP4 DUP4 PUSH2 0x333F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x361 JUMPI DUP1 MLOAD PUSH1 0x40 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH0 PUSH2 0x4576 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x458C JUMP JUMPDEST PUSH4 0xE08B8AF PUSH1 0xE4 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST SWAP3 DUP3 ISZERO PUSH2 0x46D2 JUMPI DUP1 PUSH2 0x469C JUMPI JUMPDEST ISZERO PUSH2 0x462B JUMPI POP PUSH2 0x404B SWAP2 PUSH32 0x0 PUSH32 0x0 PUSH2 0x46D8 JUMP JUMPDEST SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH2 0x4681 SWAP4 PUSH0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3F7C JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x4692 JUMPI POP JUMP JUMPDEST PUSH0 PUSH2 0x404B SWAP2 PUSH2 0x333F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND EQ PUSH2 0x45DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAE639329 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 DUP2 PUSH1 0x64 DUP2 DUP4 DUP1 SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP8 PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP10 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x356 JUMPI PUSH2 0x4799 JUMPI JUMPDEST POP DUP1 DUP6 SWAP2 EXTCODESIZE ISZERO PUSH2 0x4795 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x478A JUMPI PUSH2 0x4771 JUMPI JUMPDEST POP SWAP2 SWAP3 POP PUSH2 0x404B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47AE JUMP JUMPDEST PUSH2 0x477C DUP6 DUP1 SWAP3 PUSH2 0x333F JUMP JUMPDEST PUSH2 0x4786 JUMPI DUP4 PUSH2 0x475B JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH2 0x47A6 SWAP2 SWAP6 POP PUSH0 SWAP1 PUSH2 0x333F JUMP JUMPDEST PUSH0 SWAP4 PUSH0 PUSH2 0x4729 JUMP JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x47E7 JUMPI PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x47D0 PUSH2 0x432D JUMP JUMPDEST POP ISZERO PUSH2 0x47D8 JUMPI JUMP JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST POP SELFBALANCE PUSH4 0xCF479181 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST SWAP1 PUSH2 0x4813 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x47D8 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x4844 JUMPI JUMPDEST PUSH2 0x4824 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x481C JUMP INVALID SWAP12 PUSH24 0x9B17422D0DF92223018B32B4D1FA46E071723D6817E2486D STOP EXTCODESIZE 0xEC 0xC5 PUSH0 STOP LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SWAP14 0xA7 MCOPY CALLVALUE 0xF6 0xF DUP3 0xD2 SGT DUP5 0xE ISZERO 0xC0 0xF7 0x28 PUSH17 0xFD9669CDD5A0A4CC3BC5191D234B106473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"1019:39020:43:-:0;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;12993:5:34;-1:-1:-1;;;;;1019:39020:43;12971:10:34;:28;12967:79;;1019:39020:43;12967:79:34;13022:13;;;;;1019:39020:43;13022:13:34;;1019:39020:43;;;;;;;;;;;;;;;3161:11;1019:39020;3161:11;;;1019:39020;;;;;;;;;;;;;;;;;;;;38858:545;1019:39020;38858:545;;;1019:39020;;;;;;;;;;;;;;;;;;;;37767:527;1019:39020;37767:527;;;1019:39020;;;;;;;;;;33102:574;1019:39020;33102:574;;;1019:39020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20534:539;1019:39020;20534:539;;;1019:39020;;;;;;;;;;;;;;;21691:540;1019:39020;21691:540;;;1019:39020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:387;1019:39020;6017:387;;;1019:39020;;;;;;;;;;14599:403;1019:39020;14599:403;;;1019:39020;13463:404;1019:39020;13463:404;1019:39020;;;;;;:::i;:::-;350:67:40;;:::i;:::-;29696:11:43;;;;;:::i;:::-;29729:13;;;:::i;:::-;29774:19;;1019:39020;29774:19;;;;:::i;:::-;29874:11;;;;1019:39020;;;;;;;;29653:290;1019:39020;29913:15;1019:39020;29913:15;1019:39020;;29913:15;;;29620:333;29913:15;;;;:::i;:::-;1019:39020;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;29696:11;29653:290;;1019:39020;;;;:::i;:::-;;29653:290;;1019:39020;29828:22;1019:39020;;29653:290;;1019:39020;29874:11;29653:290;;;:::i;:::-;1019:39020;;;:::i;:::-;29653:290;;;1019:39020;;;;;;;;;;29620:333;;1019:39020;29620:333;;;:::i;:::-;;1019:39020;;29620:6;-1:-1:-1;;;;;1019:39020:43;29620:333;;;;;;1019:39020;;;;;29620:333;;;1019:39020;;;;;;;;;;;:::i;:::-;;;;29620:333;;;1019:39020;29620:333;;;;;;;1019:39020;29620:333;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;1019:39020;;;;;;;;;;;;;;;13379:506;13168:109;1019:39020;13379:506;1019:39020;;;:::i;:::-;13063:10;;;;;;;3353:19:36;13063:10:43;3353:19:36;:::i;:::-;13168:109:43;;;:::i;:::-;1019:39020;;;;;;;;:::i;:::-;13063:10;1019:39020;;;;;;;;13463:404;;;1019:39020;;13463:404;;1019:39020;13463:404;;;1019:39020;13713:41;13463:404;;;1019:39020;;;13463:404;;;1019:39020;13463:404;;;1019:39020;;;12217:497;;;;;;13463:404;13379:506;;;;;;;:::i;:::-;;2122:509;;13379:506;;;;;;:::i;:::-;1019:39020;;;;;;;;;13348:551;;13463:404;1019:39020;13348:551;;1019:39020;13379:506;1019:39020;;;;:::i;:::-;13348:551;1019:39020;;13348:6;-1:-1:-1;;;;;1019:39020:43;13348:551;;;;;;;13324:626;13968:22;13348:551;13463:404;13348:551;1019:39020;13348:551;;;1019:39020;;;;;;13324:626;;;;;;:::i;:::-;13968:22;;;;:::i;:::-;1019:39020;4036:82:36;;;1019:39020:43;;;;;;;4036:82:36;1019:39020:43;4458:12:36;3207:103:38;4036:82:36;;13348:551:43;;;;;;1019:39020;13348:551;;;;;;:::i;:::-;;;;;:::i;:::-;;;;1019:39020;;14364:65;1019:39020;14515:505;;1019:39020;;;:::i;:::-;14275:10;;3353:19:36;14275:10:43;;;;;3353:19:36;:::i;:::-;14364:65:43;;;:::i;:::-;1019:39020;;;;;;;:::i;:::-;14275:10;1019:39020;;;;;;;;14599:403;;;1019:39020;;14599:403;;1019:39020;14599:403;;;1019:39020;14847:42;14599:403;;;1019:39020;;;14599:403;;;1019:39020;14599:403;;;1019:39020;;;12217:497;;;;;;14599:403;14515:505;;;;;;;:::i;:::-;1019:39020;;;;;;;;;14484:550;;14599:403;1019:39020;14484:550;;1019:39020;14515:505;1019:39020;;;;:::i;:::-;14484:550;1019:39020;;14484:6;-1:-1:-1;;;;;1019:39020:43;14484:550;;;;;;;14599:403;14484:550;14460:625;14484:550;1019:39020;14484:550;;;1019:39020;;;;;;14460:625;;;;;;:::i;:::-;4036:82:36;;;;;1019:39020:43;;;;;;14484:550;;;;;;1019:39020;14484:550;;;;;;:::i;:::-;;;;1019:39020;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;1019:39020:43;;;;25692:649;1019:39020;;25692:649;1019:39020;3353:19:36;1019:39020:43;;;;;;;;:::i;:::-;3353:19:36;;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;26016:4;1019:39020;;;;;;;;;25778:545;;1019:39020;;25778:545;;1019:39020;25778:545;1019:39020;25778:545;;1019:39020;26187:27;1019:39020;25778:545;;1019:39020;25778:545;;;;1019:39020;25778:545;;;1019:39020;;;26961:675;;;;;;1019:39020;25692:649;;;1019:39020;25692:649;;;:::i;:::-;1019:39020;;;;;;;;;25662:693;;1019:39020;;25662:693;;1019:39020;;;;;;:::i;:::-;25662:693;1019:39020;;25662:6;-1:-1:-1;;;;;1019:39020:43;25662:693;;;;;;;1019:39020;25662:693;25638:768;25662:693;1019:39020;25662:693;;;1019:39020;;;;;;25638:768;;;;;;:::i;:::-;4036:82:36;;;;;;1019:39020:43;;;;;;25662:693;;;;;;1019:39020;25662:693;;;;;;:::i;:::-;;;;1019:39020;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;1019:39020:43;;;;34223:720;1019:39020;;34223:720;1019:39020;3353:19:36;1019:39020:43;;;;;;;;:::i;3353:19:36:-;1019:39020:43;;;;;;;:::i;:::-;34575:4;1019:39020;;;;;;;;;34320:601;;1019:39020;;34320:601;;1019:39020;;;;34320:601;;1019:39020;34774:26;1019:39020;34320:601;;1019:39020;34320:601;1019:39020;34320:601;;1019:39020;34320:601;;;1019:39020;;;30393:676;;;;;;1019:39020;34223:720;;;1019:39020;34223:720;;;:::i;1019:39020::-;34189:772;1019:39020;;34189:6;-1:-1:-1;;;;;1019:39020:43;34189:772;;;;;;;1019:39020;34189:772;34161:859;34189:772;1019:39020;34189:772;;;1019:39020;;;;;;34161:859;;;;;;:::i;:::-;4036:82:36;;;;;;1019:39020:43;;;;;;;;:::i;4036:82:36:-;1019:39020:43;4458:12:36;3207:103:38;4036:82:36;;34189:772:43;;;;;;1019:39020;34189:772;;;;;;:::i;:::-;;;;1019:39020;;5936:486;1019:39020;5936:486;1019:39020;;;:::i;:::-;5807:10;3353:19:36;5807:10:43;;;;;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;5807:10;1019:39020;;;;;;;;6017:387;;;1019:39020;;6017:387;;1019:39020;6017:387;;;1019:39020;6264:27;6017:387;;;1019:39020;;;6017:387;;;1019:39020;6017:387;;;1019:39020;;;8841:524;;;;;;6017:387;5936:486;;;;;;;:::i;1019:39020::-;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;7934:421;1019:39020;;7934:421;1019:39020;;;;;;;;;:::i;:::-;7885:10;3353:19:36;7885:10:43;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;7885:10;1019:39020;;;;;;;;;8007:334;;1019:39020;;8007:334;;1019:39020;8007:334;1019:39020;8007:334;;1019:39020;8215:25;1019:39020;8007:334;;1019:39020;8007:334;;;1019:39020;8007:334;;;1019:39020;;;8841:524;;;;;;1019:39020;7934:421;;;1019:39020;7934:421;;;:::i;:::-;1019:39020;;;;;;;;;7907:458;;1019:39020;;7907:458;;1019:39020;;;;;;:::i;:::-;7907:458;1019:39020;;7907:6;-1:-1:-1;;;;;1019:39020:43;7907:458;;;;;;;;1019:39020;4036:82:36;;;1019:39020:43;4036:82:36;1019:39020:43;4458:12:36;3207:103:38;1019:39020:43;7907:458;;;;;1019:39020;7907:458;;;;;;:::i;:::-;;;;;1019:39020;;;;;39979:17;1019:39020;;;:::i;:::-;1083:103:32;;:::i;:::-;350:67:40;;:::i;:::-;39979:17:43;:::i;:::-;3207:103:38;;1019:39020:43;-1:-1:-1;;;;;;;;;;;3207:103:38;1019:39020:43;;;;;;;;;;;;;:::i;:::-;350:67:40;;:::i;:::-;36230:11:43;;;;;:::i;:::-;36269:13;;;;:::i;:::-;36378:20;;1019:39020;36378:20;;;;:::i;:::-;36426:11;;;;;1019:39020;;;;;;;;36180:323;1019:39020;36469:15;1019:39020;36140:377;36469:15;1019:39020;36469:15;1019:39020;36469:15;;;;;;:::i;:::-;1019:39020;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;36230:11;36180:323;;1019:39020;36320:21;1019:39020;;36180:323;;1019:39020;;;;:::i;:::-;;36180:323;;1019:39020;36426:11;36180:323;;;:::i;1019:39020::-;36180:323;;;1019:39020;;;;;;;;;;36140:377;;1019:39020;36140:377;;;:::i;:::-;;1019:39020;;36140:6;-1:-1:-1;;;;;1019:39020:43;36140:377;;;;;;1019:39020;;;;;36140:377;;;1019:39020;;;;;;;;;;;:::i;36140:377::-;;;1019:39020;36140:377;;;;;;;1019:39020;36140:377;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1019:39020;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;;:::i;:::-;;;35299:96;;;;1019:39020;35299:96;;;1019:39020;;;;;;;35299:96;;1019:39020;35370:4;1019:39020;;;;;;;;;;;35299:96;;;;;;:::i;:::-;1019:39020;;;;;;;;;35265:148;;1019:39020;;35265:148;;1019:39020;;;;;;:::i;:::-;35265:148;1019:39020;;35265:6;-1:-1:-1;;;;;1019:39020:43;35265:148;;;;;;;1019:39020;35265:148;35237:219;35265:148;1019:39020;35265:148;;;1019:39020;;;;;;35237:219;;;;;;:::i;:::-;1019:39020;;;;;;;;;;;;;:::i;35265:148::-;;;;;;1019:39020;35265:148;;;;;;:::i;:::-;;;;1019:39020;;;-1:-1:-1;;1019:39020:43;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;7899:22:34;1019:39020:43;;;;;;;;:::i;:::-;7899:22:34;;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;;;;3353:19:36;1019:39020:43;;;:::i;:::-;3353:19:36;;;;:::i;:::-;1019:39020:43;;-1:-1:-1;;;11910:26:34;;-1:-1:-1;;;;;1019:39020:43;;;;11910:26:34;;1019:39020:43;;;;;;24577:6;1019:39020;;;;;-1:-1:-1;1019:39020:43;11910:26:34;1019:39020:43;;11910:26:34;;;;;;;1019:39020:43;11910:26:34;;;1019:39020:43;;;11965:24:34;;;:::i;:::-;12004:13;1019:39020:43;12019:13:34;;;;;;1019:39020:43;;;;;24607:674;;1019:39020;;;;;;;;;;:::i;:::-;24931:4;1019:39020;;;24693:570;;1019:39020;;24693:570;;1019:39020;;24693:570;;1019:39020;24693:570;;;;1019:39020;24693:570;;;;1019:39020;24693:570;;;1019:39020;;;26961:675;;;;;;1019:39020;24607:674;;;11910:26:34;24607:674:43;;;:::i;:::-;1019:39020;;;;;;;;;;;24577:718;;1019:39020;;24577:718;;1019:39020;11910:26:34;1019:39020:43;;;;:::i;:::-;24577:718;;;;;;;;;1019:39020;24577:718;24553:793;24577:718;1019:39020;24577:718;;;11999:91:34;1019:39020:43;;;;;24553:793;;;;;;:::i;:::-;4036:82:36;;;;;1019:39020:43;;;;;;;;;;;;;:::i;4036:82:36:-;1019:39020:43;4458:12:36;3207:103:38;4036:82:36;;24577:718:43;;;;;;1019:39020;24577:718;;;;;;:::i;:::-;;;;12034:3:34;1019:39020:43;;-1:-1:-1;;;;;12053:26:34;1019:39020:43;12053:26:34;;:::i;:::-;1019:39020:43;;12004:13:34;;11910:26;;;;;;1019:39020:43;11910:26:34;;;;;;:::i;:::-;;;;;:::i;:::-;;;;1019:39020:43;;;;21599:654;;1019:39020;;;:::i;:::-;21477:10;;;3353:19:36;21477:10:43;;;;;;;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;21477:10;1019:39020;;21801:18;21691:540;;;1574:17:36;-1:-1:-1;;;;;1019:39020:43;;;;21691:540;;1019:39020;;;;21691:540;;;1019:39020;;21691:540;;;1019:39020;;21691:540;;1019:39020;21691:540;;;1019:39020;;21691:540;;1019:39020;;;21691:540;;;1019:39020;;;;:::i;:::-;21691:540;;;1019:39020;;;-1:-1:-1;;;21691:540:43;21599:654;;;1019:39020;;;21599:654;;;;:::i;1019:39020::-;21564:707;1019:39020;;21564:6;-1:-1:-1;;;;;1019:39020:43;21564:707;;;;;;;1019:39020;21564:707;;;1019:39020;;;;;21536:776;;;;;;;;;;1019:39020;;;;21691:540;1019:39020;;4036:82:36;;;1019:39020:43;;;;;;21564:707;;;;;;;1019:39020;21564:707;;;;;;:::i;:::-;;;;;1019:39020;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;19337:77;1019:39020;;;;;;:::i;:::-;1083:103:32;;;:::i;:::-;350:67:40;;:::i;:::-;1019:39020:43;;-1:-1:-1;;;19337:77:43;;1019:39020;19337:6;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;19337:77;;1019:39020;19337:77;;;:::i;:::-;;;;;;;;;;;;1019:39020;19337:77;;;1019:39020;-1:-1:-1;1019:39020:43;;-1:-1:-1;;;19450:26:43;;-1:-1:-1;;;;;1019:39020:43;;;;19450:26;;1019:39020;-1:-1:-1;1019:39020:43;;;19450:26;;;;;;;;1019:39020;19450:26;;;1019:39020;19492:13;1019:39020;19526:3;1019:39020;;19507:17;;;;;19565:13;;;;:::i;:::-;1019:39020;19596:13;;19592:160;;19526:3;1019:39020;19526:3;;1019:39020;19492:13;;19592:160;-1:-1:-1;;;;;19708:9:43;;;;:::i;:::-;1019:39020;;19694:43;;;;;1019:39020;;;19694:43;1019:39020;;;;;;;;;;19694:43;;1019:39020;19694:43;;;:::i;:::-;;;;;;;;;;;;1019:39020;19694:43;;;19592:160;;;;19694:43;1019:39020;19694:43;;;:::i;:::-;;;;19507:17;1019:39020;19507:17;19783:6;19507:17;19783:6;:::i;:::-;1019:39020;-1:-1:-1;;;;;;;;;;;3207:103:38;1019:39020:43;;;;;;;;;;;;;:::i;19450:26::-;;;;;;1019:39020;19450:26;;;;;;:::i;:::-;;;;19337:77;;;;;;;1019:39020;19337:77;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1019:39020;;15593:533;1019:39020;15593:533;1019:39020;;;:::i;:::-;15393:10;;;;3353:19:36;15393:10:43;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;15393:10;1019:39020;;;;;;;;15685:419;;;1019:39020;;15685:419;;1019:39020;;15685:419;;1019:39020;15953:26;15685:419;;;1019:39020;;;15685:419;;;1019:39020;15685:419;;;1019:39020;;;12217:497;;;;;;15685:419;15593:533;;;;;;;:::i;1019:39020::-;;;;;;;:::i;:::-;1083:103:32;;:::i;:::-;350:67:40;;:::i;:::-;17396:6:43;-1:-1:-1;;;;;1019:39020:43;;;17478:11;;;;17396:6;17478:11;;;:::i;:::-;17513:13;;;;:::i;:::-;17614:20;1019:39020;17614:20;;;;:::i;:::-;17658:11;;;;;;1019:39020;;;;;;;;17396:341;17697:15;17432:295;1019:39020;17697:15;1019:39020;;17697:15;;;;;;;:::i;:::-;1019:39020;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;17478:11;17432:295;;1019:39020;;17560:21;;1019:39020;;17432:295;;1019:39020;;;;:::i;:::-;17432:295;;;1019:39020;;;;;;;;;;17396:341;;1019:39020;17396:341;;;:::i;:::-;;;;;;;;;;;1019:39020;;;;;17396:341;;;1019:39020;17873:11;;;;:::i;:::-;1019:39020;;-1:-1:-1;;;17852:33:43;;-1:-1:-1;;;;;1019:39020:43;;;;17852:33;;1019:39020;;-1:-1:-1;1019:39020:43;17852:33;1019:39020;17852:33;;;;;;;;1019:39020;17852:33;;;1019:39020;-1:-1:-1;17901:13:43;;17432:295;18180:16;;;-1:-1:-1;1019:39020:43;17935:3;1019:39020;;17916:17;;;;;17974:13;;;;:::i;:::-;1019:39020;18005:14;;;18001:61;;-1:-1:-1;;;;;18091:9:43;;;;:::i;:::-;1019:39020;;18180:16;;;:::i;:::-;:52;;;17935:3;18176:310;;;18296:13;18311:9;1019:39020;18296:13;;;;:::i;:::-;18252:5;;18311:9;:::i;:::-;1019:39020;17901:13;;18176:310;18446:13;;;:::i;:::-;18425:46;;;;;1019:39020;;18425:46;1019:39020;;;;;;;;;;18425:46;;1019:39020;18425:46;;;:::i;:::-;;;;;;;;;;;;1019:39020;18425:46;;;18176:310;;;;18425:46;1019:39020;18425:46;;;:::i;:::-;;;;18180:52;-1:-1:-1;18226:5:43;-1:-1:-1;;;;;1019:39020:43;18200:32;;18180:52;;18001:61;1019:39020;18039:8;;;;17916:17;;1019:39020;17916:17;18517:13;;17916:17;18517:13;:::i;:::-;;:::i;:::-;1019:39020;-1:-1:-1;;;;;;;;;;;3207:103:38;1019:39020:43;;;;;;;:::i;17852:33::-;;;;;;;1019:39020;17852:33;;;;;;:::i;:::-;;;;;17396:341;;;;17873:11;17396:341;;;;;;;1019:39020;17396:341;;;;;;:::i;:::-;;;;;;;;;;1019:39020;;;;20442:653;;1019:39020;;;:::i;:::-;20320:10;;;3353:19:36;20320:10:43;;;;;;;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;20320:10;1019:39020;;20534:539;;;1574:17:36;;;-1:-1:-1;;;;;1019:39020:43;;;;20534:539;;1019:39020;;;;20534:539;;;1019:39020;;20534:539;;;1019:39020;;20534:539;;1019:39020;20534:539;;;1019:39020;;20534:539;;1019:39020;;;20534:539;;;1019:39020;;;;:::i;:::-;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;7079:498;;1019:39020;;;;;;;;;;:::i;:::-;6871:107;3353:19:36;6768:10:43;3353:19:36;:::i;:::-;1019:39020:43;;;6871:107;;;:::i;:::-;1019:39020;;;;;;;;:::i;:::-;6768:10;1019:39020;;;;;;;;;7160:399;;1019:39020;;7160:399;;1019:39020;;;;7160:399;;1019:39020;7407:39;1019:39020;7160:399;;1019:39020;;;;7160:399;;1019:39020;;7160:399;;1019:39020;;;8841:524;;;;;;1019:39020;7079:498;;;1019:39020;7079:498;;;:::i;1019:39020::-;7048:543;1019:39020;;7048:6;-1:-1:-1;;;;;1019:39020:43;7048:543;;;;;;;7024:618;7660:21;7048:543;1019:39020;7048:543;1019:39020;7048:543;;;1019:39020;;;;;;7024:618;;;;;;:::i;:::-;7660:21;;;:::i;7048:543::-;;;;;;1019:39020;7048:543;;;;;;:::i;:::-;;;;1019:39020;;4996:488;1019:39020;4996:488;1019:39020;;;:::i;:::-;4864:10;3353:19:36;4864:10:43;;;;;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;4864:10;1019:39020;;;;;;;;5077:389;;;1019:39020;;5077:389;;1019:39020;;5077:389;;1019:39020;5077:389;;;;1019:39020;;;5077:389;;;1019:39020;5077:389;;;1019:39020;;;8841:524;;;;;;5077:389;4996:488;;;;;;;:::i;1019:39020::-;4965:533;1019:39020;;4965:6;-1:-1:-1;;;;;1019:39020:43;4965:533;;;;;;;1019:39020;4965:533;4941:608;4965:533;1019:39020;4965:533;;;1019:39020;5077:389;1019:39020;;;4941:608;;;;;;:::i;1019:39020::-;;;;;;;:::i;:::-;1083:103:32;;:::i;:::-;350:67:40;;:::i;:::-;22839:17:43;;;:::i;:::-;22884:14;;;;;;;:::i;:::-;22922:13;;;;:::i;:::-;22956:16;;;;;;;;:::i;:::-;10800:29:34;;;1019:39020:43;10796:487:34;;;10868:6;;23040:16:43;10868:6:34;10876:8;1019:39020:43;10868:6:34;;10845:5;10876:8;:::i;:::-;22997:13:43;;;:::i;:::-;23012:15;23040:16;23012:15;;;;;:::i;:::-;23040:16;;:::i;:::-;;;:::i;:::-;23083:5;-1:-1:-1;;;;;1019:39020:43;;;;;23072:16;23068:120;;10796:487:34;3207:103:38;1019:39020:43;-1:-1:-1;;;;;;;;;;;3207:103:38;1019:39020:43;;;;;;23068:120;23163:13;;;;:::i;:::-;23068:120;;;10796:487:34;10920:12;10916:357;;10796:487;;;1019:39020:43;10796:487:34;23040:16:43;10796:487:34;;;10916:357;1019:39020:43;;;11178:6:34;-1:-1:-1;;;;;1019:39020:43;11133:75:34;1019:39020:43;11187:20:34;1019:39020:43;11187:20:34;:::i;:::-;1019:39020:43;11133:75:34;1019:39020:43;;;;;;;;;;11133:75:34;;1019:39020:43;11133:75:34;;;:::i;:::-;;1019:39020:43;;-1:-1:-1;;;;;1019:39020:43;;11133:75:34;;;;;;;1019:39020:43;11133:75:34;;;11226:32;11133:75;;;10916:357;1019:39020:43;;;;;;;;;;;;11226:32:34;;;1019:39020:43;11226:32:34;;;:::i;:::-;;;;;;;;;;1019:39020:43;11226:32:34;23040:16:43;11226:32:34;;;10916:357;;;;;;;;11226:32;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;11133:75;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;10800:29;-1:-1:-1;;;;;;1019:39020:43;;;10824:5:34;1019:39020:43;;;10813:16:34;10800:29;;1019:39020:43;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;:::i;:::-;350:67:40;;:::i;:::-;1019:39020:43;;-1:-1:-1;;;37158:26:43;;-1:-1:-1;;;;;1019:39020:43;;;;37158:26;;1019:39020;;;;37158:6;1019:39020;-1:-1:-1;1019:39020:43;;;;37158:26;;;;;;;1019:39020;37144:48;37209:77;37158:26;;;;;;;1019:39020;;;37144:48;:::i;:::-;1019:39020;;-1:-1:-1;;;37209:77:43;;1019:39020;;;;;;;;;;;;37209:77;;;:::i;:::-;;;;;;;;;1019:39020;37209:77;1019:39020;37209:77;;;1019:39020;;;;;;;;;;;;;;;:::i;37209:77::-;;;;;;1019:39020;37209:77;;;;;;:::i;:::-;;;;37158:26;;;;;;;;;;;;;:::i;:::-;;;;1019:39020;;;;;;-1:-1:-1;;1019:39020:43;;;;;;-1:-1:-1;;;;;4458:12:36;2295:106:38;1019:39020:43;;;;;;;;;;;;;:::i;:::-;1083:103:32;;:::i;:::-;350:67:40;;:::i;:::-;10143:6:43;;10219:11;;;;-1:-1:-1;;;;;1019:39020:43;;10219:11;;;:::i;:::-;10252:13;;;;:::i;:::-;10297:19;1019:39020;10297:19;;;;:::i;:::-;10397:11;;;;;;1019:39020;;;;;;;;10143:333;10436:15;10176:290;1019:39020;10436:15;1019:39020;;10436:15;;;;;;;:::i;:::-;1019:39020;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;10219:11;10176:290;;1019:39020;;;;:::i;:::-;;10176:290;;1019:39020;;10351:22;;1019:39020;;10176:290;;1019:39020;10397:11;10176:290;;;:::i;1019:39020::-;10176:290;;;1019:39020;;;;;;;;;;10143:333;;1019:39020;10143:333;;;:::i;:::-;;;;;;;;;;;;1019:39020;;;;;10143:333;;;1019:39020;10611:11;;;;:::i;:::-;1019:39020;;-1:-1:-1;;;10590:33:43;;-1:-1:-1;;;;;1019:39020:43;;;;10590:33;;1019:39020;-1:-1:-1;1019:39020:43;10590:33;1019:39020;10590:33;;;;;;;;1019:39020;10590:33;;;1019:39020;-1:-1:-1;10639:13:43;;10176:290;10915:16;;;-1:-1:-1;1019:39020:43;10673:3;1019:39020;;10654:17;;;;;-1:-1:-1;;;;;10707:9:43;;;;:::i;:::-;1019:39020;;10749:12;;;;;:::i;:::-;1019:39020;10780:13;;;10776:60;;10915:16;;;:::i;:::-;:52;;;10673:3;10911:608;;;10987:5;11018:8;1019:39020;10987:5;;;11018:8;:::i;:::-;1019:39020;10639:13;;10911:608;11403:13;;;:::i;:::-;11435:20;10219:11;11435:20;;;;:::i;:::-;1019:39020;11376:80;1019:39020;;;;;;;;;;11376:80;;1019:39020;11376:80;;;:::i;:::-;;;1019:39020;11376:80;;;;;;;;11474:30;11376:80;10219:11;11376:80;;;10911:608;-1:-1:-1;1019:39020:43;;-1:-1:-1;;;11474:30:43;;1019:39020;;;;;;11474:30;;;:::i;:::-;;;1019:39020;11474:30;;;;;;;;1019:39020;11474:30;;;10911:608;;;;11474:30;;;10219:11;11474:30;;;;;;;;;:::i;:::-;;;;;11376:80;;;;;;;;;;;;;:::i;:::-;;;10915:52;-1:-1:-1;10961:5:43;-1:-1:-1;;;;;1019:39020:43;10935:32;;10915:52;;10776:60;10813:8;1019:39020;10813:8;;;;10654:17;;;1019:39020;10654:17;11593:13;;10654:17;11593:13;:::i;:::-;1019:39020;-1:-1:-1;;;;;;;;;;;3207:103:38;1019:39020:43;;;;;;;:::i;10590:33::-;;;;;;1019:39020;10590:33;;;;;;:::i;:::-;;;;10143:333;;;;;;;;10611:11;10143:333;;;;1019:39020;10143:333;;;;;;:::i;:::-;;;;;;;;;;1019:39020;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;-1:-1:-1;1019:39020:43;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;3353:19:36;1019:39020:43;33013:681;;32863:65;1019:39020;;;:::i;:::-;3353:19:36;;;;;;:::i;:::-;32863:65:43;;;:::i;:::-;1019:39020;;;;;;;:::i;:::-;33345:4;1019:39020;;;;;;;;33102:574;;;1019:39020;;33102:574;;1019:39020;;;;;;33102:574;;;1019:39020;33525:42;33102:574;;;1019:39020;33102:574;;;;1019:39020;33102:574;;;1019:39020;;;30393:676;;;;;;33102:574;33013:681;;;;;;;:::i;1019:39020::-;;12217:497;1019:39020;12217:497;1019:39020;;;:::i;:::-;12083:10;;;;3353:19:36;12083:10:43;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;12083:10;1019:39020;;;;;;;;12301:395;;;1019:39020;;12301:395;;1019:39020;;12301:395;;1019:39020;12301:395;;;;1019:39020;;;12301:395;;;1019:39020;12301:395;;;1019:39020;;;12217:497;;;;;;12301:395;12217:497;;;;;;;:::i;1019:39020::-;12186:542;1019:39020;;12186:6;-1:-1:-1;;;;;1019:39020:43;12186:542;;;;;;;1019:39020;12186:542;12162:617;12186:542;1019:39020;12186:542;;;1019:39020;12301:395;1019:39020;;;12162:617;;;;;;:::i;:::-;4036:82:36;;;;;;1019:39020:43;;;;;12301:395;1019:39020;;12301:395;1019:39020;;;;:::i;:::-;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;1019:39020:43;;;;28172:709;1019:39020;;28172:709;1019:39020;3353:19:36;1019:39020:43;;;;;;;;:::i;3353:19:36:-;1019:39020:43;;;;;;;:::i;:::-;28516:4;1019:39020;;;;;;;;;28266:593;;1019:39020;;28266:593;;1019:39020;;;;28266:593;;1019:39020;;;28266:593;;1019:39020;28266:593;1019:39020;28266:593;;1019:39020;28266:593;;;1019:39020;;;26961:675;;;;;;1019:39020;28172:709;;;1019:39020;28172:709;;;:::i;1019:39020::-;28138:761;1019:39020;;28138:6;-1:-1:-1;;;;;1019:39020:43;28138:761;;;;;;;1019:39020;28138:761;28110:848;28138:761;1019:39020;28138:761;;;1019:39020;;;;;28110:848;;;;;;:::i;:::-;4036:82:36;;;;;;1019:39020:43;;;;;;;;:::i;4036:82:36:-;1019:39020:43;4458:12:36;3207:103:38;4036:82:36;;1019:39020:43;;;;;3353:19:36;1019:39020:43;37681:635;;1019:39020;;;:::i;:::-;3353:19:36;;;;;;;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;37831:10;1019:39020;;37767:527;;;;1574:17:36;1019:39020:43;;;;;;;37767:527;;1019:39020;;;;;;;37767:527;;;1019:39020;;;;;;;37767:527;;;1019:39020;37767:527;;;1019:39020;37767:527;;;;1019:39020;;;;;;;37767:527;;1019:39020;37767:527;;;;1019:39020;37767:527;;;1019:39020;;;38772:653;;;;;;37767:527;37681:635;;;;;;;:::i;1019:39020::-;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1019:39020:43;;;;;3353:19:36;1019:39020:43;;;;;;:::i;:::-;3353:19:36;;:::i;:::-;1019:39020:43;;;-1:-1:-1;;;10461:52:34;;-1:-1:-1;;;;;1019:39020:43;;;;10461:52:34;;1019:39020:43;;;;;;;;;;10461:6:34;1019:39020:43;;;;31585:52;;1019:39020;;;10461:52:34;1019:39020:43;;10461:52:34;;;;;;;1019:39020:43;;;10461:52:34;;;1019:39020:43;10435:78:34;;31738:685:43;;1019:39020;10435:78:34;;1019:39020:43;10435:78:34;10538:24;10435:78;;10538:24;:::i;:::-;1019:39020:43;10572:38:34;;;;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;32070:4;1019:39020;;;31827:578;;1019:39020;;31827:578;;1019:39020;;;;31827:578;;1019:39020;;;31827:578;;1019:39020;31827:578;1019:39020;31827:578;;1019:39020;31827:578;;;1019:39020;;;30393:676;;;;;;1019:39020;31738:685;;;1019:39020;31738:685;;;:::i;:::-;1019:39020;;;;;;;;;;;31708:729;;1019:39020;;31708:729;;1019:39020;;;;;;:::i;:::-;31708:729;;;;;;;;;31684:804;32506:22;31708:729;1019:39020;31708:729;1019:39020;31708:729;;;1019:39020;;;;;31684:804;;;;;;:::i;10461:52:34:-;;;;1019:39020:43;10461:52:34;;1019:39020:43;10461:52:34;;;;;;1019:39020:43;10461:52:34;;;:::i;:::-;;;1019:39020:43;;;;;;;;;;;;31738:685;10461:52:34;;;;;-1:-1:-1;10461:52:34;;1019:39020:43;;;;3353:19:36;1019:39020:43;;;:::i;:::-;3353:19:36;;;;;;:::i;:::-;1019:39020:43;;;-1:-1:-1;;;10461:52:34;;-1:-1:-1;;;;;1019:39020:43;;;;10461:52:34;;1019:39020:43;;;;;;;;;;26754:107;;1019:39020;;10461:6:34;1019:39020:43;;;;10461:52:34;1019:39020:43;;10461:52:34;;;;;;;1019:39020:43;;;10461:52:34;;;1019:39020:43;10435:78:34;26961:675:43;1019:39020;10435:78:34;1019:39020:43;10435:78:34;;;;10538:24;26961:675:43;10435:78:34;10538:24;:::i;:::-;-1:-1:-1;;;;;10572:38:34;;;;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;27285:4;1019:39020;;;27047:571;;1019:39020;;27047:571;;1019:39020;27047:571;;;1019:39020;27470:39;27047:571;;;1019:39020;27047:571;;;;1019:39020;27047:571;;;1019:39020;;;26961:675;;;;;;1019:39020;26961:675;;;1019:39020;26961:675;;;:::i;1019:39020::-;26931:719;;;;;;;;;26907:794;27719:21;26931:719;1019:39020;26931:719;1019:39020;26931:719;;;1019:39020;;;;;26907:794;;;;;;:::i;10461:52:34:-;;;;;1019:39020:43;10461:52:34;;1019:39020:43;10461:52:34;;;;;;1019:39020:43;10461:52:34;;;:::i;:::-;;;1019:39020:43;;;;;;;;;;;;10461:52:34;;;26961:675:43;10461:52:34;;;;;-1:-1:-1;10461:52:34;;1019:39020:43;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1019:39020:43;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;1083:103:32;;;;;:::i;:::-;1500:6:31;;;1496:65;;1019:39020:43;5468:3:34;5444:22;;;;;;1019:39020:43;5512:19:34;;;;;:::i;1019:39020:43:-;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;8379:180:34;;;;1019:39020:43;;8379:180:34;;;;;;1019:39020:43;8379:180:34;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5716:338:34;;;;;;1019:39020:43;;5716:338:34;1019:39020:43;;;;;;;;;;;;;5716:338:34;;1019:39020:43;;;;;;;5716:338:34;;1019:39020:43;5829:4:34;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;5716:338:34;;;;;;5468:3;-1:-1:-1;5696:1089:34;;1019:39020:43;6181:604:34;;:::i;:::-;1019:39020:43;;;;;;-1:-1:-1;;;6454:75:34;;-1:-1:-1;;;;;1019:39020:43;;;;6454:75:34;;1019:39020:43;5829:4:34;1019:39020:43;;;;;;;;;;;;6454:75:34;;;;;;;1019:39020:43;6454:75:34;;;5696:1089;1019:39020:43;;6454:100:34;6429:342;;5696:1089;1019:39020:43;5696:1089:34;;1019:39020:43;5429:13:34;;6429:342;1019:39020:43;;1881:21:33;:17;;2008:160;;;1019:39020:43;2008:160:33;;1877:362;2205:23;;;1019:39020:43;2205:23:33;1019:39020:43;;2205:23:33;6454:75:34;;;;1019:39020:43;6454:75:34;;;;;;;;;1019:39020:43;6454:75:34;;;:::i;:::-;;;1019:39020:43;;;;;6454:75:34;;;;;;;-1:-1:-1;6454:75:34;;5696:1089;;;;1019:39020:43;5696:1089:34;;;5716:338;1019:39020:43;5716:338:34;;;:::i;:::-;;;;1019:39020:43;;;;;;;;;;;;5444:22:34;-1:-1:-1;1019:39020:43;;;;;-1:-1:-1;;1019:39020:43;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;3207:103:38;7899:22:34;3207:103:38;1019:39020:43;-1:-1:-1;;;;;;;;;;;3207:103:38;7899:22:34;:::i;1496:65:31:-;1529:21;;;1019:39020:43;1529:21:31;1019:39020:43;;1529:21:31;1019:39020:43;;;;;3353:19:36;1019:39020:43;38772:653;;1019:39020;;;:::i;3353:19:36:-;1019:39020:43;;;;;;;:::i;:::-;38922:10;1019:39020;;38968:18;38858:545;;;1574:17:36;1019:39020:43;;;;;;;38858:545;;1019:39020;;;;;;;38858:545;;;1019:39020;;;;;;;38858:545;;;1019:39020;38858:545;;;1019:39020;;;;;;38858:545;;;1019:39020;39265:17;;1019:39020;38858:545;;1019:39020;38858:545;;;;1019:39020;38858:545;;;1019:39020;;;38772:653;;;;;;38858:545;38772:653;;;;;;;:::i;1019:39020::-;;;;;;-1:-1:-1;;1019:39020:43;;;;;;3775:5:34;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;3353:19:36;1019:39020:43;;;:::i;:::-;3353:19:36;;;;;:::i;:::-;1019:39020:43;;-1:-1:-1;;;30276:26:43;;-1:-1:-1;;;;;1019:39020:43;;;;30276:26;;1019:39020;;;;;;;30276:6;1019:39020;;-1:-1:-1;1019:39020:43;30276:26;1019:39020;;30276:26;;;;;;1019:39020;30276:26;;;1019:39020;30276:26;30262:48;30393:676;30276:26;30393:676;30276:26;;;;;1019:39020;;30262:48;:::i;:::-;1019:39020;;;;;;:::i;:::-;30725:4;1019:39020;;;30482:569;;1019:39020;;30482:569;;1019:39020;;30482:569;;1019:39020;30482:569;;;;1019:39020;30482:569;;;;1019:39020;30482:569;;;1019:39020;;;30393:676;;;;;;1019:39020;30393:676;;;30276:26;30393:676;;;:::i;1019:39020::-;30363:720;;;;;;;;;1019:39020;30363:720;30339:795;30363:720;1019:39020;30363:720;;;1019:39020;;;;;30339:795;;;;;;:::i;30276:26::-;;;;;;;;;;;;;:::i;:::-;;;;1019:39020;;8841:524;1019:39020;8841:524;1019:39020;;;:::i;:::-;8641:10;3353:19:36;8641:10:43;;;;;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;8641:10;1019:39020;;;;;;;;8930:413;;;1019:39020;;8930:413;;1019:39020;;8930:413;;1019:39020;;8930:413;;;1019:39020;;;8930:413;;;1019:39020;8930:413;;;1019:39020;;;8841:524;;;;;;8930:413;8841:524;;;;;;;:::i;1019:39020::-;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;16512:103;1019:39020;;;;;;;;:::i;:::-;;;-1:-1:-1;;;1019:39020:43;16512:103;;;1019:39020;;;16512:103;;1019:39020;;;;16570:10;;16512:103;;;:::i;1019:39020::-;;;;;;;:::i;:::-;1083:103:32;;:::i;:::-;350:67:40;;:::i;:::-;3130:6:43;;-1:-1:-1;;;;;1019:39020:43;;3161:11;;;;;:::i;:::-;3186:13;;;;:::i;:::-;3213;1019:39020;3213:13;;;;;;;:::i;:::-;3240:21;;;;;;;;;:::i;:::-;3311:15;;;;;;;;:::i;:::-;1019:39020;;-1:-1:-1;;;3130:206:43;;-1:-1:-1;;;;;1019:39020:43;;;;3130:206;;1019:39020;;;;;;;;;3311:15;1019:39020;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;-1:-1:-1;;;1019:39020:43;;;-1:-1:-1;;1019:39020:43;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;3161:11;1019:39020;;;;;;;;;;;;;;;;;;;;3275:22;;;;1019:39020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2122:509;;1019:39020;;;;;3130:206;;;1019:39020;3130:206;;;;;;;;1019:39020;3130:206;;;1019:39020;-1:-1:-1;3352:13:43;;1019:39020;3654:16;;;;1019:39020;3393:3;3371:13;;;;:::i;:::-;3367:24;;;;;;;3427:16;;:13;;;;;:::i;:::-;:16;;:::i;:::-;;:::i;:::-;3476:21;:24;:21;;;;;:::i;:24::-;1019:39020;3519:13;;;3515:60;;3654:16;;;:::i;:::-;:52;;;3393:3;3650:669;;;3726:5;3757:8;1019:39020;3726:5;;;3757:8;:::i;:::-;1019:39020;3352:13;;3650:669;4203:13;;;:::i;:::-;4235:20;3161:11;4235:20;;;;:::i;:::-;1019:39020;4176:80;1019:39020;;;;;;;;;;4176:80;;1019:39020;4176:80;;;:::i;:::-;;1019:39020;;-1:-1:-1;;;;;1019:39020:43;;4176:80;;;;;;;4274:30;4176:80;3161:11;4176:80;;;-1:-1:-1;1019:39020:43;;-1:-1:-1;;;4274:30:43;;1019:39020;;;;;;4274:30;;;:::i;:::-;;;1019:39020;4274:30;;;;;;;;1019:39020;4274:30;;;3650:669;;;;4274:30;;;3161:11;4274:30;;;;;;;;;:::i;:::-;;;;;3654:52;-1:-1:-1;;;;;;1019:39020:43;;;3700:5;1019:39020;;;3674:32;3654:52;;3515:60;3552:8;1019:39020;3552:8;;;;3367:24;3161:11;3367:24;4378:13;;3367:24;4378:13;:::i;:::-;1019:39020;-1:-1:-1;;;;;;;;;;;3207:103:38;1019:39020:43;;;;;;3130:206;;;;3161:11;3130:206;;3161:11;3130:206;;;;;;1019:39020;3130:206;;;:::i;:::-;;;1019:39020;;;;;3130:206;;;;;;;-1:-1:-1;3130:206:43;;1019:39020;;;;3161:11;1019:39020;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;-1:-1:-1;;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;:::i;:::-;3353:19:36;1987:10:43;3353:19:36;:::i;:::-;1019:39020:43;;;;;;;:::i;:::-;1987:10;1019:39020;;;2209:400;;1019:39020;;;;;;;;;;2209:400;;1019:39020;;;;2209:400;;1019:39020;;;;2209:400;;1019:39020;;;;;;2209:400;;1019:39020;;;;;;2209:400;;1019:39020;;;;;2122:509;;;;1019:39020;2122:509;;;1019:39020;;2122:509;;1019:39020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2122:509;1019:39020;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;:::o;:::-;1574:17:36;1019:39020:43;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1019:39020:43;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;-1:-1:-1;;1019:39020:43;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1019:39020:43;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;-1:-1:-1;;1019:39020:43;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;-1:-1:-1;;1019:39020:43;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;1019:39020:43;;;;;;;:::o;:::-;;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1019:39020:43;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;1019:39020:43;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;-1:-1:-1;1019:39020:43;;;;;-1:-1:-1;1019:39020:43;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2122:509;1019:39020;2122:509;;1019:39020;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;2122:509;1019:39020;2122:509;;1019:39020;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;:::i;1574:17:36:-;;;;;;;;;:::o;:::-;;;;;;;;1019:39020:43;;;;;1574:17:36;;1019:39020:43;1574:17:36;;;1019:39020:43;1574:17:36;;;;;;;;;;:::i;:::-;1019:39020:43;;;;;1574:17:36;;;;1019:39020:43;1574:17:36;;;1019:39020:43;;;;;;1574:17:36;;;;1019:39020:43;1574:17:36;;;1019:39020:43;;;;;;1574:17:36;;;;1019:39020:43;1574:17:36;;;1019:39020:43;1574:17:36;;;;;;;1019:39020:43;1574:17:36;;;;;;;1019:39020:43;1574:17:36;;;;;;;1019:39020:43;1574:17:36;;;;1019:39020:43;;1574:17:36;;;1019:39020:43;1574:17:36;;;;;;;;;;;:::i;1019:39020:43:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2122:509;1019:39020;2122:509;;1019:39020;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;:::o;2798:591:34:-;;;2866:23;2878:10;2866:23;:::i;:::-;12214:26;;2910:105:38;;;2992:100:34;;3185:4;3207:103:38;;1019:39020:43;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1019:39020:43;;;:::i;:::-;;-1:-1:-1;1019:39020:43;;;;;;7982:13:34;;-1:-1:-1;7997:15:34;;;;;;3200:1;;;;-1:-1:-1;3375:6:34;3200:1;3207:103:38;;4458:12:36;2295:106:38;;4036:82:36;;;7977:132:34;3375:6;;:::i;:::-;2798:591::o;4036:82:36:-;-1:-1:-1;3207:103:38;;4036:82:36;;;8014:3:34;8090:7;4091:55:8;-1:-1:-1;8090:7:34;1019:39020:43;8090:7:34;3185:4;8090:7;;;;:::i;1019:39020:43:-;;4049:25:8;;;;8083:4:34;4049:25:8;;;;:::i;:::-;8083:4:34;;4091:55:8;:::i;:::-;8033:65:34;;;;:::i;:::-;;;;;;:::i;:::-;;1019:39020:43;7982:13:34;;1019:39020:43;;;;;;;;;;;;;2992:100:34;3051:30;;;-1:-1:-1;3051:30:34;;-1:-1:-1;3051:30:34;1019:39020:43;;;;;;;;;;;;;;;:::i;3448:351:36:-;1019:39020:43;;3448:351:36;4458:12;2295:106:38;;-1:-1:-1;;;;;1019:39020:43;3673:25:36;3669:124;;3448:351;;:::o;3669:124::-;3207:103:38;;;;;3778:4:36;3669:124;3448:351::o;1192:349:32:-;-1:-1:-1;;;;;;;;;;;2295:106:38;1316:93:32;;1529:4;-1:-1:-1;;;;;;;;;;;3207:103:38;1192:349:32:o;423:165:40:-;500:6;-1:-1:-1;;;;;1019:39020:43;478:10:40;:29;474:108;;423:165::o;474:108::-;530:41;;;;;478:10;530:41;1019:39020:43;;530:41:40;;7228:218:11;-1:-1:-1;;;;;7308:25:11;;7304:105;;-1:-1:-1;;;;;1019:39020:43;;7228:218:11:o;7304:105::-;7356:42;;;;;7387:3;7356:42;1019:39020:43;;;;7356:42:11;;772:448:35;871:21;;:38;867:93;;-1:-1:-1;;;;;1019:39020:43;;1004:39:35;;;;;1019:39020:43;;-1:-1:-1;;;1004:39:35;;;;1019:39020:43;1004:39:35;1019:39020:43;1004:39:35;1019:39020:43;1004:39:35;;;;;;;;;;772:448;1019:39020:43;;;;;;;;1380:43:7;1019:39020:43;;;1380:43:7;;;1019:39020:43;;;;1380:43:7;;;;;;1019:39020:43;;;;;;;1380:43:7;;;;;;:::i;:::-;7875:421;;;;;;;;;;;;8310:15;;8328:26;;;:31;8310:68;8306:146;;1019:39020:43;;1380:43:7;1019:39020:43;;;;;;;;;;;;1179:34:35;;1004:39;1179:34;;1019:39020:43;1380:43:7;1019:39020:43;;;1179:34:35;;;;;;;;;;772:448;:::o;1179:34::-;;;1380:43:7;1179:34:35;1380:43:7;1179:34:35;;;;;;;:::i;:::-;;772:448::o;1179:34::-;1019:39020:43;;;;;;;;;;8306:146:7;-1:-1:-1;;;8401:40:7;;1004:39:35;1019:39020:43;1380:43:7;8401:40;;8310:68;8377:1;8362:16;;8310:68;;7875:421;1019:39020:43;7875:421:7;;;;;;;;1004:39:35;;;;;;;;:::i;:::-;;;;;;867:93;932:17;;;;;;;;9338:584:34;9574:21;9609:11;;9605:48;;12214:26;2295:106:38;9803:69:34;;9908:6;;-1:-1:-1;;;;;1019:39020:43;9908:6:34;:::i;9803:69::-;9855:7;;:::o;1019:39020:43:-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1019:39020:43;;;;:::o;:::-;;;:::o;10202:415:34:-;1019:39020:43;;;-1:-1:-1;;;10461:52:34;;-1:-1:-1;;;;;1019:39020:43;;;10461:52:34;;;1019:39020:43;;;;;;;;10202:415:34;;1019:39020:43;;;;;10461:52:34;;1019:39020:43;;10461:6:34;1019:39020:43;10461:52:34;;;;;;;-1:-1:-1;;;10461:52:34;;;10202:415;10435:78;10572:38;10538:24;10435:78;10538:24;;:::i;:::-;10572:38;;;:::i;:::-;1019:39020:43;10202:415:34:o;10461:52::-;;;;;1019:39020:43;10461:52:34;;1019:39020:43;10461:52:34;;;;;;1019:39020:43;10461:52:34;;;:::i;:::-;;;1019:39020:43;;;;;;;;;;10461:52:34;;;;;;;-1:-1:-1;10461:52:34;;23234:818:43;23575:15;;;1019:39020;23557:15;:33;23553:85;;23755:11;;;1019:39020;;;;;;;;23828:14;23790:11;1019:39020;23790:11;;;;;:::i;:::-;23828:14;;;;;;:::i;:::-;23870:15;1019:39020;23870:15;;;;;:::i;:::-;24005;;;;;;:::i;:::-;1019:39020;;23790:11;1019:39020;;;;;:::i;:::-;1574:17:36;;23755:11:43;23715:320;;1019:39020;;;;;;;;;23790:11;23715:320;;1019:39020;;;;;;;;;23715:320;;;1019:39020;;;;;;;;;23870:15;23715:320;;23919:18;;;;1019:39020;;;23965:12;23919:18;23715:320;;23965:12;;1019:39020;;;;;;:::i;:::-;23715:320;23965:12;23715:320;;1019:39020;;;23790:11;1019:39020;;;;;;;;;23690:355;;23755:11;23690:355;;;1019:39020;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1019:39020:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23575:15;1019:39020;;;;;;;;;:::i;:::-;23690:355;1019:39020;-1:-1:-1;23690:6:43;-1:-1:-1;;;;;1019:39020:43;23690:355;;;;;;;-1:-1:-1;;;;;23690:355:43;;;23234:818;23648:397;;;23234:818;:::o;23690:355::-;;;;;23828:14;23690:355;;23828:14;23690:355;;;;;;23828:14;23690:355;;;:::i;:::-;;;1019:39020;;;;;;23790:11;23755;1019:39020;;;;;;23690:355;;;;;;;;;-1:-1:-1;23690:355:43;;23553:85;23613:14;;;-1:-1:-1;23613:14:43;;-1:-1:-1;23613:14:43;11295:489:34;;11409:14;;11405:51;;11539:30;;;11295:489;11535:243;;;11621:6;11637:9;11621:6;;11585:5;11637:9;:::i;11535:243::-;1019:39020:43;11725:6:34;-1:-1:-1;;;;;1019:39020:43;11725:42:34;;;;;;1019:39020:43;11422:1:34;1019:39020:43;;;;;;;;;;;;;;11725:42:34;;;;;;:::i;:::-;;;;;;;;;;;11535:243;11295:489::o;11725:42::-;11422:1;11725:42;;;:::i;11539:30::-;-1:-1:-1;;;;;;1019:39020:43;;;11564:5:34;1019:39020:43;;;11552:17:34;11539:30;;11405:51;11439:7;;;;:::o;1226:365:35:-;;;;;-1:-1:-1;;;;;1019:39020:43;1387:47:35;;;;;1019:39020:43;;;;;1387:47:35;;-1:-1:-1;1387:47:35;;;;;1019:39020:43;;;;;;;1387:47:35;;;;;1019:39020:43;1414:4:35;1019:39020:43;;;;;;;;;1387:47:35;;;;;;;;1226:365;1477:27;;;;;;;;1019:39020:43;;;;;;;;;;;;1477:27:35;;;1387:47;1477:27;;1019:39020:43;1477:27:35;;;;;;;;1226:365;-1:-1:-1;1019:39020:43;;-1:-1:-1;1571:12:35;;-1:-1:-1;;;;;1019:39020:43;1571:12:35;:::i;1477:27::-;;;;;;:::i;:::-;1019:39020:43;;1477:27:35;;;1019:39020:43;;;;1477:27:35;1019:39020:43;;;;;;;;;1477:27:35;1019:39020:43;;;1387:47:35;;;;;-1:-1:-1;1387:47:35;;:::i;:::-;-1:-1:-1;1387:47:35;;;;1290:349:8;1375:21;;:30;1371:125;;1525:33;;;;;;;;-1:-1:-1;;;;;1019:39020:43;1525:33:8;;;;:::i;:::-;;1572:8;1568:65;;1290:349::o;1568:65::-;1603:19;;;1525:33;1603:19;;1525:33;1603:19;1371:125;1455:21;;1428:57;;;;;;1019:39020:43;;;;1428:57:8;;4421:582;;4593:8;;-1:-1:-1;1019:39020:43;;5674:21:8;:17;;5799:158;;;;;;4589:408;1019:39020:43;;4841:22:8;:49;;;4589:408;4837:119;;4969:17;;:::o;4837:119::-;-1:-1:-1;;;4862:1:8;4917:24;;;-1:-1:-1;;;;;1019:39020:43;;;;4917:24:8;1019:39020:43;;;4917:24:8;4841:49;4867:18;;;:23;4841:49;"},"methodIdentifiers":{"addLiquidityCustom(address,uint256[],uint256,bool,bytes)":"0ca078ec","addLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))":"5b343791","addLiquidityProportional(address,uint256[],uint256,bool,bytes)":"724dba33","addLiquiditySingleTokenExactOut(address,address,uint256,uint256,bool,bytes)":"72657d17","addLiquidityUnbalanced(address,uint256[],uint256,bool,bytes)":"c08bc851","donate(address,uint256[],bool,bytes)":"bf6ee3fd","getPermit2()":"1bbf2e23","getSender()":"5e01eb5a","getWeth()":"107c279f","initialize(address,address[],uint256[],uint256,bool,bytes)":"026b3d95","initializeHook((address,address,address[],uint256[],uint256,bool,bytes))":"086fad66","multicall(bytes[])":"ac9650d8","permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])":"19c6989f","queryAddLiquidityCustom(address,uint256[],uint256,address,bytes)":"452db952","queryAddLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))":"efd85f14","queryAddLiquidityProportional(address,uint256,address,bytes)":"9de90518","queryAddLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)":"1d56798d","queryAddLiquidityUnbalanced(address,uint256[],address,bytes)":"da001f7d","queryRemoveLiquidityCustom(address,uint256,uint256[],address,bytes)":"c330c7be","queryRemoveLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))":"b24bd571","queryRemoveLiquidityProportional(address,uint256,address,bytes)":"0f710888","queryRemoveLiquidityRecovery(address,uint256)":"b037ed36","queryRemoveLiquidityRecoveryHook(address,address,uint256)":"5f9815ff","queryRemoveLiquiditySingleTokenExactIn(address,uint256,address,address,bytes)":"23b39241","queryRemoveLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)":"53d0bb98","querySwapHook((address,uint8,address,address,address,uint256,uint256,uint256,bool,bytes))":"be5ae841","querySwapSingleTokenExactIn(address,address,address,uint256,address,bytes)":"3ebc54e5","querySwapSingleTokenExactOut(address,address,address,uint256,address,bytes)":"175d4408","removeLiquidityCustom(address,uint256,uint256[],bool,bytes)":"82bf2b24","removeLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))":"7b03c7ba","removeLiquidityProportional(address,uint256,uint256[],bool,bytes)":"51682750","removeLiquidityRecovery(address,uint256,uint256[])":"08c04793","removeLiquidityRecoveryHook(address,address,uint256,uint256[])":"82cd54fb","removeLiquiditySingleTokenExactIn(address,uint256,address,uint256,bool,bytes)":"ecb2182c","removeLiquiditySingleTokenExactOut(address,uint256,address,uint256,bool,bytes)":"e7326def","swapSingleTokenExactIn(address,address,address,uint256,uint256,uint256,bool,bytes)":"750283bc","swapSingleTokenExactOut(address,address,address,uint256,uint256,uint256,bool,bytes)":"94e86ef8","swapSingleTokenHook((address,uint8,address,address,address,uint256,uint256,uint256,bool,bytes))":"68a24fe0","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IWETH\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"routerVersion\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorSelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EthTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderIsNotVault\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapDeadline\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouterCommon.AddLiquidityHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"addLiquidityHook\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"addLiquidityUnbalanced\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPermit2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouter.InitializeHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"initializeHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouterCommon.PermitApproval[]\",\"name\":\"permitBatch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"permitSignatures\",\"type\":\"bytes[]\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permit2Batch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"permit2Signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"multicallData\",\"type\":\"bytes[]\"}],\"name\":\"permitBatchAndCall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"enum AddLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouterCommon.AddLiquidityHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"queryAddLiquidityHook\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"exactAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryAddLiquidityUnbalanced\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouterCommon.RemoveLiquidityHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"queryRemoveLiquidityHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"}],\"name\":\"queryRemoveLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"}],\"name\":\"queryRemoveLiquidityRecoveryHook\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquiditySingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryRemoveLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGiven\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouter.SwapSingleTokenHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"querySwapHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"querySwapSingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculated\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"querySwapSingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCalculated\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquidityCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"enum RemoveLiquidityKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouterCommon.RemoveLiquidityHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"removeLiquidityHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquidityProportional\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"}],\"name\":\"removeLiquidityRecovery\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"}],\"name\":\"removeLiquidityRecoveryHook\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquiditySingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxBptAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"removeLiquiditySingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"swapSingleTokenExactIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exactAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"swapSingleTokenExactOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"enum SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountGiven\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wethIsEth\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IRouter.SwapSingleTokenHookParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"swapSingleTokenHook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"The external API functions unlock the Vault, which calls back into the corresponding hook functions. These interact with the Vault, transfer tokens, settle accounting, and handle wrapping and unwrapping ETH.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"SenderIsNotVault(address)\":[{\"params\":{\"sender\":\"The account attempting to call a permissioned function\"}}]},\"kind\":\"dev\",\"methods\":{\"addLiquidityCustom(address,uint256[],uint256,bool,bytes)\":{\"details\":\"The given maximum and minimum amounts given may be interpreted as exact depending on the pool type. In any case the caller can expect them to be hard boundaries for the request.\",\"params\":{\"maxAmountsIn\":\"Maximum amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsIn\":\"Actual amounts of tokens added, sorted in token registration order\",\"bptAmountOut\":\"Actual amount of pool tokens received\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"addLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"details\":\"Can only be called by the Vault.\",\"params\":{\"params\":\"Add liquidity parameters (see IRouter for struct definition)\"},\"returns\":{\"amountsIn\":\"Actual amounts in required for the join\",\"bptAmountOut\":\"BPT amount minted in exchange for the input tokens\",\"returnData\":\"Arbitrary data with encoded response from the pool\"}},\"addLiquidityProportional(address,uint256[],uint256,bool,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Exact amount of pool tokens to be received\",\"maxAmountsIn\":\"Maximum amounts of tokens to be added, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsIn\":\"Actual amounts of tokens added, sorted in token registration order\"}},\"addLiquiditySingleTokenExactOut(address,address,uint256,uint256,bool,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Exact amount of pool tokens to be received\",\"maxAmountIn\":\"Maximum amount of tokens to be added\",\"pool\":\"Address of the liquidity pool\",\"tokenIn\":\"Token used to add liquidity\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountIn\":\"Actual amount of tokens added\"}},\"addLiquidityUnbalanced(address,uint256[],uint256,bool,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to add liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"bptAmountOut\":\"Actual amount of pool tokens received\"}},\"donate(address,uint256[],bool,bytes)\":{\"details\":\"To support donation, the pool config `enableDonation` flag must be set to true.\",\"params\":{\"amountsIn\":\"Amounts of tokens to be donated, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to donate liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"}},\"getSender()\":{\"returns\":{\"_0\":\"The address of the sender\"}},\"initialize(address,address[],uint256[],uint256,bool,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Minimum amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"tokens\":\"Pool tokens, in token registration order\",\"userData\":\"Additional (optional) data sent with the request to add initial liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"bptAmountOut\":\"Actual amount of pool tokens minted in exchange for initial liquidity\"}},\"initializeHook((address,address,address[],uint256[],uint256,bool,bytes))\":{\"details\":\"Can only be called by the Vault.\",\"params\":{\"params\":\"Initialization parameters (see IRouter for struct definition)\"},\"returns\":{\"bptAmountOut\":\"BPT amount minted in exchange for the input tokens\"}},\"multicall(bytes[])\":{\"params\":{\"data\":\"Encoded function calls to be executed in the batch.\"},\"returns\":{\"results\":\"Array of bytes arrays, each representing the return data from each function call executed.\"}},\"permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])\":{\"params\":{\"multicallData\":\"An array of bytes arrays, each representing an encoded function call on this contract\",\"permit2Batch\":\"A batch of permit2 approvals\",\"permit2Signature\":\"A permit2 signature for the batch approval\",\"permitBatch\":\"An array of `PermitApproval` structs, each representing an ERC20 permit request\",\"permitSignatures\":\"An array of bytes, corresponding to the permit request signature in `permitBatch`\"},\"returns\":{\"results\":\"Array of bytes arrays, each representing the return data from each function call executed\"}},\"queryAddLiquidityCustom(address,uint256[],uint256,address,bytes)\":{\"params\":{\"maxAmountsIn\":\"Maximum amounts of tokens to be added, sorted in token registration order\",\"minBptAmountOut\":\"Expected minimum amount of pool tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsIn\":\"Expected amounts of tokens to add, sorted in token registration order\",\"bptAmountOut\":\"Expected amount of pool tokens to receive\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"queryAddLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"details\":\"Can only be called by the Vault.\",\"params\":{\"params\":\"Add liquidity parameters (see IRouter for struct definition)\"},\"returns\":{\"amountsIn\":\"Actual token amounts in required as inputs\",\"bptAmountOut\":\"Expected pool tokens to be minted\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"queryAddLiquidityProportional(address,uint256,address,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Exact amount of pool tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsIn\":\"Expected amounts of tokens to add, sorted in token registration order\"}},\"queryAddLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"params\":{\"exactBptAmountOut\":\"Expected exact amount of pool tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenIn\":\"Token used to add liquidity\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountIn\":\"Expected amount of tokens to add\"}},\"queryAddLiquidityUnbalanced(address,uint256[],address,bytes)\":{\"params\":{\"exactAmountsIn\":\"Exact amounts of tokens to be added, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"bptAmountOut\":\"Expected amount of pool tokens to receive\"}},\"queryRemoveLiquidityCustom(address,uint256,uint256[],address,bytes)\":{\"params\":{\"maxBptAmountIn\":\"Maximum amount of pool tokens provided\",\"minAmountsOut\":\"Expected minimum amounts of tokens to receive, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsOut\":\"Expected amounts of tokens to receive, sorted in token registration order\",\"bptAmountIn\":\"Expected amount of pool tokens to burn\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"queryRemoveLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"details\":\"Can only be called by the Vault.\",\"params\":{\"params\":\"Remove liquidity parameters (see IRouter for struct definition)\"},\"returns\":{\"amountsOut\":\"Expected token amounts to be transferred to the sender\",\"bptAmountIn\":\"Pool token amount to be burned for the output tokens\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"queryRemoveLiquidityProportional(address,uint256,address,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided for the query\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountsOut\":\"Expected amounts of tokens to receive, sorted in token registration order\"}},\"queryRemoveLiquidityRecovery(address,uint256)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided for the query\",\"pool\":\"Address of the liquidity pool\"},\"returns\":{\"amountsOut\":\"Expected amounts of tokens to receive, sorted in token registration order\"}},\"queryRemoveLiquidityRecoveryHook(address,address,uint256)\":{\"details\":\"Can only be called by the Vault.\",\"params\":{\"exactBptAmountIn\":\"Pool token amount to be burned for the output tokens\",\"pool\":\"The liquidity pool\",\"sender\":\"Account originating the remove liquidity operation\"},\"returns\":{\"amountsOut\":\"Expected token amounts to be transferred to the sender\"}},\"queryRemoveLiquiditySingleTokenExactIn(address,uint256,address,address,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided for the query\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountOut\":\"Expected amount of tokens to receive\"}},\"queryRemoveLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"params\":{\"exactAmountOut\":\"Expected exact amount of tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"bptAmountIn\":\"Expected amount of pool tokens to burn\"}},\"querySwapHook((address,uint8,address,address,address,uint256,uint256,uint256,bool,bytes))\":{\"details\":\"Can only be called by the Vault. Also handles native ETH.\",\"params\":{\"params\":\"Swap parameters (see IRouter for struct definition)\"},\"returns\":{\"_0\":\"amountCalculated Token amount calculated by the pool math (e.g., amountOut for an exact in swap)\"}},\"querySwapSingleTokenExactIn(address,address,address,uint256,address,bytes)\":{\"params\":{\"exactAmountIn\":\"Exact amounts of input tokens to send\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountCalculated\":\"Calculated amount of output tokens to be received in exchange for the given input tokens\"}},\"querySwapSingleTokenExactOut(address,address,address,uint256,address,bytes)\":{\"params\":{\"exactAmountOut\":\"Exact amounts of input tokens to receive\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"The sender passed to the operation. It can influence results (e.g., with user-dependent hooks)\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the query request\"},\"returns\":{\"amountCalculated\":\"Calculated amount of input tokens to be sent in exchange for the requested output tokens\"}},\"removeLiquidityCustom(address,uint256,uint256[],bool,bytes)\":{\"details\":\"The given maximum and minimum amounts given may be interpreted as exact depending on the pool type. In any case the caller can expect them to be hard boundaries for the request.\",\"params\":{\"maxBptAmountIn\":\"Maximum amount of pool tokens provided\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsOut\":\"Actual amounts of tokens received, sorted in token registration order\",\"bptAmountIn\":\"Actual amount of pool tokens burned\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"removeLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"details\":\"Can only be called by the Vault.\",\"params\":{\"params\":\"Remove liquidity parameters (see IRouter for struct definition)\"},\"returns\":{\"amountsOut\":\"Actual token amounts transferred in exchange for the BPT\",\"bptAmountIn\":\"BPT amount burned for the output tokens\",\"returnData\":\"Arbitrary (optional) data with an encoded response from the pool\"}},\"removeLiquidityProportional(address,uint256,uint256[],bool,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountsOut\":\"Actual amounts of tokens received, sorted in token registration order\"}},\"removeLiquidityRecovery(address,uint256,uint256[])\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\"},\"returns\":{\"amountsOut\":\"Actual amounts of tokens received, sorted in token registration order\"}},\"removeLiquidityRecoveryHook(address,address,uint256,uint256[])\":{\"details\":\"Can only be called by the Vault, when the pool is in Recovery Mode.\",\"params\":{\"exactBptAmountIn\":\"BPT amount burned for the output tokens\",\"minAmountsOut\":\"Minimum amounts of tokens to be received, sorted in token registration order\",\"pool\":\"Address of the liquidity pool\",\"sender\":\"Account originating the remove liquidity operation\"},\"returns\":{\"amountsOut\":\"Actual token amounts transferred in exchange for the BPT\"}},\"removeLiquiditySingleTokenExactIn(address,uint256,address,uint256,bool,bytes)\":{\"params\":{\"exactBptAmountIn\":\"Exact amount of pool tokens provided\",\"minAmountOut\":\"Minimum amount of tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"amountOut\":\"Actual amount of tokens received\"}},\"removeLiquiditySingleTokenExactOut(address,uint256,address,uint256,bool,bytes)\":{\"params\":{\"exactAmountOut\":\"Exact amount of tokens to be received\",\"maxBptAmountIn\":\"Maximum amount of pool tokens provided\",\"pool\":\"Address of the liquidity pool\",\"tokenOut\":\"Token used to remove liquidity\",\"userData\":\"Additional (optional) data sent with the request to remove liquidity\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"bptAmountIn\":\"Actual amount of pool tokens burned\"}},\"swapSingleTokenExactIn(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"params\":{\"deadline\":\"Deadline for the swap, after which it will revert\",\"exactAmountIn\":\"Exact amounts of input tokens to send\",\"minAmountOut\":\"Minimum amount of tokens to be received\",\"pool\":\"Address of the liquidity pool\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the swap request\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"_0\":\"Calculated amount of output tokens to be received in exchange for the given input tokens\"}},\"swapSingleTokenExactOut(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"params\":{\"deadline\":\"Deadline for the swap, after which it will revert\",\"exactAmountOut\":\"Exact amounts of input tokens to receive\",\"maxAmountIn\":\"Maximum amount of tokens to be sent\",\"pool\":\"Address of the liquidity pool\",\"tokenIn\":\"Token to be swapped from\",\"tokenOut\":\"Token to be swapped to\",\"userData\":\"Additional (optional) data sent with the swap request\",\"wethIsEth\":\"If true, incoming ETH will be wrapped to WETH and outgoing WETH will be unwrapped to ETH\"},\"returns\":{\"_0\":\"Calculated amount of input tokens to be sent in exchange for the requested output tokens\"}},\"swapSingleTokenHook((address,uint8,address,address,address,uint256,uint256,uint256,bool,bytes))\":{\"details\":\"Can only be called by the Vault. Also handles native ETH.\",\"params\":{\"params\":\"Swap parameters (see IRouter for struct definition)\"},\"returns\":{\"_0\":\"amountCalculated Token amount calculated by the pool math (e.g., amountOut for an exact in swap)\"}},\"version()\":{\"returns\":{\"_0\":\"version The stored contract version\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ErrorSelectorNotFound()\":[{\"notice\":\"Handle the \\\"reverted without a reason\\\" case (i.e., no return data).\"}],\"EthTransfer()\":[{\"notice\":\"Incoming ETH transfer from an address that is not WETH.\"}],\"InputLengthMismatch()\":[{\"notice\":\"Arrays passed to a function and intended to be parallel have different lengths.\"}],\"InsufficientEth()\":[{\"notice\":\"The amount of ETH paid is insufficient to complete this operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"notice\":\"Unauthorized reentrant call.\"}],\"SenderIsNotVault(address)\":[{\"notice\":\"Error indicating the sender is not the Vault (e.g., someone is trying to call a permissioned function).\"}],\"SwapDeadline()\":[{\"notice\":\"The swap transaction was not validated before the specified deadline timestamp.\"}]},\"kind\":\"user\",\"methods\":{\"addLiquidityCustom(address,uint256[],uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool with a custom request.\"},\"addLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"notice\":\"Hook for adding liquidity.\"},\"addLiquidityProportional(address,uint256[],uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool with proportional token amounts, receiving an exact amount of pool tokens.\"},\"addLiquiditySingleTokenExactOut(address,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool in a single token, receiving an exact amount of pool tokens.\"},\"addLiquidityUnbalanced(address,uint256[],uint256,bool,bytes)\":{\"notice\":\"Adds liquidity to a pool with arbitrary token amounts.\"},\"donate(address,uint256[],bool,bytes)\":{\"notice\":\"Adds liquidity to a pool by donating the amounts in (no BPT out).\"},\"getPermit2()\":{\"notice\":\"Returns Permit2 contract address.\"},\"getSender()\":{\"notice\":\"Get the first sender which initialized the call to Router.\"},\"getWeth()\":{\"notice\":\"Returns WETH contract address.\"},\"initialize(address,address[],uint256[],uint256,bool,bytes)\":{\"notice\":\"Initialize a liquidity pool.\"},\"initializeHook((address,address,address[],uint256[],uint256,bool,bytes))\":{\"notice\":\"Hook for initialization.\"},\"multicall(bytes[])\":{\"notice\":\"Executes a batch of function calls on this contract.\"},\"permitBatchAndCall((address,address,address,uint256,uint256,uint256)[],bytes[],((address,uint160,uint48,uint48)[],address,uint256),bytes,bytes[])\":{\"notice\":\"Permits multiple allowances and executes a batch of function calls on this contract.\"},\"queryAddLiquidityCustom(address,uint256[],uint256,address,bytes)\":{\"notice\":\"Queries an `addLiquidityCustom` operation without actually executing it.\"},\"queryAddLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"notice\":\"Hook for add liquidity queries.\"},\"queryAddLiquidityProportional(address,uint256,address,bytes)\":{\"notice\":\"Queries an `addLiquidityProportional` operation without actually executing it.\"},\"queryAddLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"notice\":\"Queries an `addLiquiditySingleTokenExactOut` operation without actually executing it.\"},\"queryAddLiquidityUnbalanced(address,uint256[],address,bytes)\":{\"notice\":\"Queries an `addLiquidityUnbalanced` operation without actually executing it.\"},\"queryRemoveLiquidityCustom(address,uint256,uint256[],address,bytes)\":{\"notice\":\"Queries a `removeLiquidityCustom` operation without actually executing it.\"},\"queryRemoveLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"notice\":\"Hook for remove liquidity queries.\"},\"queryRemoveLiquidityProportional(address,uint256,address,bytes)\":{\"notice\":\"Queries a `removeLiquidityProportional` operation without actually executing it.\"},\"queryRemoveLiquidityRecovery(address,uint256)\":{\"notice\":\"Queries a `removeLiquidityRecovery` operation without actually executing it.\"},\"queryRemoveLiquidityRecoveryHook(address,address,uint256)\":{\"notice\":\"Hook for remove liquidity queries.\"},\"queryRemoveLiquiditySingleTokenExactIn(address,uint256,address,address,bytes)\":{\"notice\":\"Queries a `removeLiquiditySingleTokenExactIn` operation without actually executing it.\"},\"queryRemoveLiquiditySingleTokenExactOut(address,address,uint256,address,bytes)\":{\"notice\":\"Queries a `removeLiquiditySingleTokenExactOut` operation without actually executing it.\"},\"querySwapHook((address,uint8,address,address,address,uint256,uint256,uint256,bool,bytes))\":{\"notice\":\"Hook for swap queries.\"},\"querySwapSingleTokenExactIn(address,address,address,uint256,address,bytes)\":{\"notice\":\"Queries a swap operation specifying an exact input token amount without actually executing it.\"},\"querySwapSingleTokenExactOut(address,address,address,uint256,address,bytes)\":{\"notice\":\"Queries a swap operation specifying an exact output token amount without actually executing it.\"},\"removeLiquidityCustom(address,uint256,uint256[],bool,bytes)\":{\"notice\":\"Removes liquidity from a pool with a custom request.\"},\"removeLiquidityHook((address,address,uint256[],uint256,uint8,bool,bytes))\":{\"notice\":\"Hook for removing liquidity.\"},\"removeLiquidityProportional(address,uint256,uint256[],bool,bytes)\":{\"notice\":\"Removes liquidity with proportional token amounts from a pool, burning an exact pool token amount.\"},\"removeLiquidityRecovery(address,uint256,uint256[])\":{\"notice\":\"Removes liquidity proportionally, burning an exact pool token amount. Only available in Recovery Mode.\"},\"removeLiquidityRecoveryHook(address,address,uint256,uint256[])\":{\"notice\":\"Hook for removing liquidity in Recovery Mode.\"},\"removeLiquiditySingleTokenExactIn(address,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Removes liquidity from a pool via a single token, burning an exact pool token amount.\"},\"removeLiquiditySingleTokenExactOut(address,uint256,address,uint256,bool,bytes)\":{\"notice\":\"Removes liquidity from a pool via a single token, specifying the exact amount of tokens to receive.\"},\"swapSingleTokenExactIn(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"notice\":\"Executes a swap operation specifying an exact input token amount.\"},\"swapSingleTokenExactOut(address,address,address,uint256,uint256,uint256,bool,bytes)\":{\"notice\":\"Executes a swap operation specifying an exact output token amount.\"},\"swapSingleTokenHook((address,uint8,address,address,address,uint256,uint256,uint256,bool,bytes))\":{\"notice\":\"Hook for swaps.\"},\"version()\":{\"notice\":\"Getter for the version.\"}},\"notice\":\"Entrypoint for swaps, liquidity operations, and corresponding queries.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/_Router.sol\":\"Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@uniswap/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"@uniswap/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/CastingHelpers.sol\":{\"keccak256\":\"0x8b468c356b40134c158695ad68193093444f1a7783966a03947d67c403c87635\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8d2696338f5f2f11663a2123cd5f7df1a2bfb434d49f93f2c0d1486e9d43d6f4\",\"dweb:/ipfs/QmQihSe7BEvWh4s1EPnqSf5RKNL6fLqEBuMETn6nHouweW\"]},\"contracts/IAuthentication.sol\":{\"keccak256\":\"0xa383f78ec04a4ebadbf64ce0fcef8c14f2487f02330acf2fbab80055c54a5d74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://077fdb9728fd22008ca58ca9f63cc7ea1b86f9cec778c5ff8943d9322b812f06\",\"dweb:/ipfs/QmVCYYCeuUZK1GqAHzTZBo59cjjh9iQhNYWQvAy2AYAVoN\"]},\"contracts/IAuthorizer.sol\":{\"keccak256\":\"0x288b9590b9fb743964d46f610c2b0d4eee8457bfe52b890e31be5e11661759e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11373e74f2bb6112ae47b709e0161c09b3a2e1a7659bd15fa4ab4bcf8eadcab0\",\"dweb:/ipfs/QmfELyCgCckJz6hPwCw9thNA5kvaoUcCw7gcoxRgWrjMg1\"]},\"contracts/IHooks.sol\":{\"keccak256\":\"0x51fabcdeaefc15a895a04c457968a7fc0ce4f4647d42a91d07a863170d812c28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://85822ed25a050521ec4b1af2e21d48e2b85cf48828cb9be5d7e5eb104d4ade6a\",\"dweb:/ipfs/QmU4QSNMfQCEacdgQizCxgNUzfnKxdmyqAndNJgLsCQ32t\"]},\"contracts/IProtocolFeeController.sol\":{\"keccak256\":\"0xa549105cdf64e06ab49473ab810b4ec2342e7e1593707a297f7965044d75fdb1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f641d0f440b2085580aa8b79cb3241bc0c3ea0af275fad953d727ec8f7482795\",\"dweb:/ipfs/QmPULYHXMhCGCztE5ccKzRhb99K3LJSAicbxpWm36gcFVg\"]},\"contracts/IRateProvider.sol\":{\"keccak256\":\"0x3a9a626d90cdf64042441895ce981bf570d9aa56e7c188b34f8603b1d629aae3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ac7096c0d5cd5e0c20dcc6681d24eb04ad7e14cbb61d0ebf136f96a2b9752c4\",\"dweb:/ipfs/QmWryZQqLxpxaCBwK6uEfSLKWKsGBsDL7xbdGqFMkW4Uxp\"]},\"contracts/IRouter.sol\":{\"keccak256\":\"0x39a5cd3ee5c0bab644f068ad8ba617a0cf71a91610693b1c93c9536464151ee3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a5f61af5cda44d8ef95e610c0b418f2cfb984e9c47a58fb1fa8c8bc949def75\",\"dweb:/ipfs/Qmby1D2D5Ym44jgBTTM8eTGnmNGCCKrb8ujpkhVPE6C6Cr\"]},\"contracts/IRouterCommon.sol\":{\"keccak256\":\"0x3f5f72378930991c88119acd2f4c36145f285d4347d4a29688648d55d83c0a99\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://191307c8d8cdca0a738b9a5633b2fb3f175ef72aaecfb96130e72386ebdfc123\",\"dweb:/ipfs/QmWs8jjfUDQHixjSL7GB7ZbynRbd1wbRKBEBbw5jSP4w5x\"]},\"contracts/ISenderGuard.sol\":{\"keccak256\":\"0x2ec1ecf5c578aab7502f6985a03fbb79998218bdef819845d70d28a6994cff5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a32637a45f19c29797db11eb25eb9bfda73302f280a64a9d9a4ab123db1b8e6f\",\"dweb:/ipfs/QmXGimviZ4Mr6kwgqkCwpHH5uGHVEjAcCRNvAwvoVYKi6f\"]},\"contracts/IVault.sol\":{\"keccak256\":\"0x842d6f58ca868369cb39284a3d1b4297d9325b72e7d186a3e6d151858a870ee0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6480259b258ee6aaff363fa42ec2a9e2bbec70a014378a852b79fc83daae607a\",\"dweb:/ipfs/QmTS5q5rhKNgSUvJjVpCCCA5j7YAYLxMtpcRrV9Lhaxhn3\"]},\"contracts/IVaultAdmin.sol\":{\"keccak256\":\"0x9a651c10b5b352386341d65a37b63c95fbd0c4d401d4539730f3dfb4825acc18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://26e398b4fc37c80a86327b9cbe14335e5378fa69b3fb222c2dc8cf33707c30fd\",\"dweb:/ipfs/QmY2E1b8DADLp3MStbVK93GACRJgJZxHYJpDrow1xzVhWB\"]},\"contracts/IVaultErrors.sol\":{\"keccak256\":\"0xb2c6deaa8701201af5d31ac270fbc30ebe6b66a1f9b6b12d1d17d807f7decb66\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://28d6751bc7e7c7221745742cfe906387e0d806ea0a0041b9377fb5a537146063\",\"dweb:/ipfs/QmcphjQ6ramZM6Qxv84jaJbtZ7d5FNFJ8xHWCHZwk7CdZ3\"]},\"contracts/IVaultEvents.sol\":{\"keccak256\":\"0x0ff416b358949bb5d9553118f7cbfd42aa9aa33fa6bbe4bf470159df07cf6989\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f033bb516eb8d85554aea408a0a750bf6ccd5655035abd307cc8388a533f1c40\",\"dweb:/ipfs/QmPCjG5jrXU4FrJWsputirF7JXZsNxhopetnHZTfRAFvMn\"]},\"contracts/IVaultExtension.sol\":{\"keccak256\":\"0xa547348926764942de6030bf7d303684ff675a4a08fab3320f98154450ca5bb8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c440d5d23034e35803f135d9336f256ece717370adb93d1f2fb992fa5ffd869\",\"dweb:/ipfs/QmbCaxRG3X9kUEbdrhRbm7JZZoK2nYp8FUXqh7Bn4wnFra\"]},\"contracts/IVaultMain.sol\":{\"keccak256\":\"0x7df60e55516bf9cfa5156a03afc22e222fb87edf1bb9af48586ff0ff1be71e92\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf5a2e16cdb139182df24e2d103f80c72b730be20a04b2486e751af16652ac9\",\"dweb:/ipfs/Qmd6kdQmUFxPRJT1YrRJVVsUYAmpohBRvCM2qdXzVGcv5d\"]},\"contracts/IVersion.sol\":{\"keccak256\":\"0x8993f223a501fbbe7c1a2f589a12961ea2fab1919dbc02a1eede973692d24e6e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acce7ad2eab8b257f65aa7e20b7814c71787c08d80e02335ccc7b04818ffcdc7\",\"dweb:/ipfs/QmQtDc6mwAijhvXLK5mbNfZ1JyQX7Q4nRsry5qDbcPpQVi\"]},\"contracts/IWETH.sol\":{\"keccak256\":\"0x75d5964b2f92dba9b9254e0052de28a9378e6759b1b28ccbb51db0bc80024176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec9c862929ccff2be994d0296c0a4de3ddc19bb5a7aae3d4df0887dc7b29c8e\",\"dweb:/ipfs/QmSNr2fkNM2VyAo3B1DG1cuRh41t4A6mJZqeUu6vvYb97G\"]},\"contracts/InputHelpers.sol\":{\"keccak256\":\"0xe820b139c5ab3a4a26eda124b6c31f755f3203ba80a9b1b187a53e2699c444ab\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://826e19b27c648604e06b5e68ce66ae6fecd3a0214738a7f67046103b12ab1148\",\"dweb:/ipfs/QmZfz3iFQVDMxkyYcAqfh4BJ21FXvSE58Bo1B8snjC92Wf\"]},\"contracts/ReentrancyGuardTransient.sol\":{\"keccak256\":\"0x0986ee17e49747c89956b4d46947b65b7c2942d5854fd39d764a7cb2735ff8af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38fedef8f551d12a155f54ab1c863db60fed1226a397a321ac729e9db65f4593\",\"dweb:/ipfs/QmaxBFc45J79aehsbSoLzNWVfBhqxkkWnKpunmKrbzV1pL\"]},\"contracts/RevertCodec.sol\":{\"keccak256\":\"0xb4ee9e1543d36bdf9eeb4a9d5ab41170723239a1e27a2272f2e31de4765c019b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3b70dd5e4fa496c2c1efb6bd20368587ba3c9c0d0afac9dc3631a29ff2628f99\",\"dweb:/ipfs/QmQigXUkpDuVK5VSX67RABrAC9bashPcHMasgPRNJb4k8Z\"]},\"contracts/RouterCommon.sol\":{\"keccak256\":\"0x33bee127a9673be74058d0948c11e26ef6cf5d842d9ba27272cd89e53c8ecbdc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://015a895300adc90a25c2f0acbf6442024ed4a1f2bdc320d167b72d23e0c7324b\",\"dweb:/ipfs/QmbuWJraKh5vp7Y5EGvchkpbPbWMceZm899xdpUJfBhdUD\"]},\"contracts/RouterWethLib.sol\":{\"keccak256\":\"0x506101ae6ac96f5cec2a7a2b0d3a0241aa1772b74c247bbbc30c84901343d0b2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://17bbe2bdc3a411c080ccfbcc1e9ae0460d714078bb9018368b04f20771b1db7f\",\"dweb:/ipfs/QmTUFUN5GXFNciLGV4ijdV7gMM5iNwJ6VamqgQD3qTJ7mk\"]},\"contracts/SenderGuard.sol\":{\"keccak256\":\"0xe63bbcd3cc394da0c3d97e919d95cba027e986ab84060a517536ab524e54ea39\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac91243d274e4f81f382a9c35b0012f351319509860b8f9a62e3c909fc9ceda4\",\"dweb:/ipfs/QmNevUKeaN2F9Lz3fLqUq2FavkqsVPQPVSxkbM6RxfdxSk\"]},\"contracts/SlotDerivation.sol\":{\"keccak256\":\"0xb5837350f4b921ad2b4f7a3863a3d5cfe64525f573ba04ee2232c498fb1005ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b641a078360ea67827036a4b2d4fdebb045519106d3888d9cbb4f9b7bf3362b2\",\"dweb:/ipfs/QmR3DQvqKzAojEMdHbYM3Pqc7WZe3YXRHTDSftMegrELQ5\"]},\"contracts/StorageSlotExtension.sol\":{\"keccak256\":\"0x9361678f213630a15039db1a6e204f55e6a11c122e3ef73b735726edfefddfbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf36bb2d8e3afd124dfff3658a90c8f04249579193be1cdab6c1ec4e2ca383b\",\"dweb:/ipfs/QmRaazJYHpt6HH1VTz2MgEtXATEtjMieYX1WC81yXuzYQD\"]},\"contracts/TransientStorageHelpers.sol\":{\"keccak256\":\"0x38745433e09a67cbacf3ad5b9bfa8e313421bf1273f4f282b846773c9e11fbcb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://323d867daf0abbbd277b0d01fc8d294759a1e7e364c674fcbfdaeeb7d37f836b\",\"dweb:/ipfs/QmYBPy3k5D7ULtxpnnDiAM6pDp4ij8qrFZD2WP2iJDF3cu\"]},\"contracts/VaultGuard.sol\":{\"keccak256\":\"0x8401db6ba7e14aba66f5f177f3714a007220fd6ebaf50ff91c80f8cc3db85035\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1d51ee35adb7a048baea6d6ca779e47223a9c0c01883f2c318efe8bd61a522ed\",\"dweb:/ipfs/QmYFaPDCNGT6GC5asEFmiGkFSoruFTkVYgZekRwPP29P7A\"]},\"contracts/VaultTypes.sol\":{\"keccak256\":\"0x0f0fedf5f313da55bcfd319ac7b7dac9eed05fc6b9882facf874bd8e523c5f25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e23366c301231acfb3a00fa2cafc5cb49a9b72b27ccba47e9c4491d0ed840bec\",\"dweb:/ipfs/QmPJYBo1RiroE3VFEfhQpGSMTZmC67HYBqvfSTyNBbqZRd\"]},\"contracts/Version.sol\":{\"keccak256\":\"0x2316ace9382abcc380e19931fcec5899821e55ac72fe70d2f73fd862728270a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9175c5448c160df7b8544e51dd6c53989dcbfcc11c2acaa7b377db3398181626\",\"dweb:/ipfs/Qmbi7gwrN6cNBPKXog3wxJJRiHyDAcai4ucUYmLBKS5mAV\"]},\"contracts/_Router.sol\":{\"keccak256\":\"0x793216d709a8ab8178f10087ad100991ee028874fe0ecb0c443201b8afeca250\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b66772acae0ae7869ef17fe3945cb3711b2209bc80092a7b8ed7da07bdf2f98\",\"dweb:/ipfs/QmeAzRPze4atZBaokQ4zV51HVTaZk1BegFKr392TtYg2uB\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8512,"contract":"contracts/_Router.sol:Router","label":"_version","offset":0,"slot":"0","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}}}}}